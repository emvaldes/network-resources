+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uYub7U0CgV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uYub7U0CgV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--MTc0ODk5ODUxNjM0MzQ4NjAwMAo--
++ divisor=--MTc0ODk5ODUxNjM0MzQ4NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ mktemp -d
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GwnBIe76os
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GwnBIe76os
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ export console_location=console
+ [[ 6 -eq 0 ]]
++ console_location=console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p console
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export divisor=--MTc0ODk5ODUxNjM2Mjc2MjAwMAo--
++ divisor=--MTc0ODk5ODUxNjM2Mjc2MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5UBFYi5gWH
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5UBFYi5gWH
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --platform=cisco
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ platform =~ ^(platform|p)$ ]]
++ console_location=console
+ local target_platform=cisco
++ mkdir -p console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local search_pattern=.cache/ips.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ local target_config=configs/cisco/branch-isr-02.cfg
'
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ script_helper=false
+ [[ config == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/ips.list ]]
+ for xitem in "${@}"
+ IFS==
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODk5ODUxNjM4MTI1ODAwMAo--
++ divisor=--MTc0ODk5ODUxNjM4MTI1ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ tr -d '\r'
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ [[ -z x ]]
++ grep -v '^#'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MOLnK0Wvir
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MOLnK0Wvir
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ echo
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ script_filename=network-extract
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ export network_extract__console=console/network-extract.console
+ [[ -z cisco ]]
++ [[ 5 -lt 4 ]]
+ network_extract__console=console/network-extract.console
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
+ touch console/network-extract.console
++ alias exit-error=exit_error
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias list-file=list_file
+ (( i++ ))
+ (( i < count ))
++ alias log-error=log_error
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ alias log-info=log_info
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias log-warn=log_warn
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --platform=cisco
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export console_location=console
++ console_location=console
+ [[ platform =~ ^(platform|p)$ ]]
++ mkdir -p console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -z true ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local export_objects=false
+ set -euo pipefail
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ export LC_ALL=C
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ LC_ALL=C
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODk5ODUxNjQwMzU1NzAwMAo--
++ divisor=--MTc0ODk5ODUxNjQwMzU1NzAwMAo--
++ mktemp -d
+ source ./scripts/devops-helpers.shell
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ tr -d '\r'
++ alias network-extract--helper=network_extract__helper
++ grep -v '^\s*$'
+ alias serialize-object=serialize_objects
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
+ mkdir -p logs/console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XADg9W5kkt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XADg9W5kkt
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --platform=cisco
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
++ alias list-file=list_file
+ local last_search_entry=203.0.113.25
++ alias log-error=log_error
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ alias log-info=log_info
+ [[ true == true ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ message 'Search Pattern: [ .cache/ips.list ]'
++ alias pause=pause
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
++ alias print-line=print
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ alias print-file=print_file
+ local count=17
+ ((  count == 0  ))
++ alias relative-configpath=relative_configpath
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
++ alias warning-message=warning
+ [[ true == true ]]
++ export LC_ALL=C
++ LC_ALL=C
++ which awk
++ export 'nl=\n'
++ nl='\n'
+ script_filename=network-extract.shell
++ export cache_location=.cache
+ newline
+ script_filename=network-extract
++ cache_location=.cache
+ local count=1
+ export network_extract__console=console/network-extract.console
++ export logs_location=logs
+ (( i = 0 ))
+ network_extract__console=console/network-extract.console
++ logs_location=logs
+ (( i < count ))
+ echo
+ touch console/network-extract.console
++ mkdir -p logs/jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
++ export actions_logfile=console/run.console
+ [[ cfg == \c\f\g ]]
++ actions_logfile=console/run.console
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
++ touch console/run.console
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ output_dir=.cache/resources/cisco
++ echo -e --verbose
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+++ date +%s%N
+ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+++ base64
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ print '{
+ dry_run=false
  "vendor": "cisco",
  "model": "",
+ [[ -z true ]]
  "version": "12.4",
  "domain": "",
+ [[ -z '' ]]
  "hostname": "access-sw1-west"
+ export console_output=false
}
+ console_output=false

version 12.4
+ [[ -z '' ]]
hostname access-sw1-west
+ local export_objects=false

interface Vlan1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ -z '' ]]
 description Management Interface
+ script_helper=false

interface Vlan100
+ [[ false == true ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

object-group network MGMT-ACCESS
+ [[ -z .cache/ips.list ]]
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ search_terms=()
 network-object host 10.10.10.10
+ declare -a search_terms

object-group network Mutant-WiFi
+ [[ -f .cache/ips.list ]]
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ .cache/ips.list != *,* ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ mapfile -t search_terms
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ config =~ ^(config|c)$ ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
}

+ [[ config =~ ^(console|o)$ ]]
version 12.4
hostname access-sw1-west
+ [[ config =~ ^(export|r)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ [[ config =~ ^(extract|x)$ ]]

interface Vlan100
+ local SCRIPT_DIR=./scripts
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
++ export divisor=--MTc0ODk5ODUxNjQyNTM3MDAwMAo--

+ [[ config =~ ^(logger|l)$ ]]
++ divisor=--MTc0ODk5ODUxNjQyNTM3MDAwMAo--
object-group network MGMT-ACCESS
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(platform|p)$ ]]
 description Management objects
+ source ./scripts/devops-helpers.shell
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ config =~ ^(search|s)$ ]]
 network-object host 10.10.10.10

+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config == \h\e\l\p ]]
object-group network Mutant-WiFi
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
 description Controlled guest devices
++ __DEVOPS_HELPERS_SOURCED=1
 network-object host 10.10.10.10'
+ [[ config == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^\s*$'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4czG8OFrzs
++ alias network-configs--helper=network_configs__helper
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4czG8OFrzs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ grep -v '^#'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ which awk
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
++ export 'nl=\n'
+ export logs_location=logs
++ nl='\n'
+ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
+ mkdir -p logs/console
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(platform|p)$ ]]
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ extract == \h\e\l\p ]]
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
+ script_filename=network-extract.shell
++ mkdir -p console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console --verbose
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console ]]
+ local target_platform=cisco
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ case "${target_file}" in
+ [[ platform =~ ^(search|s)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--access-sw1-west.cfg.console
++ echo -e --search=.cache/ips.list
+ [[ platform == \h\e\l\p ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
+ (( i = 0 ))
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uYub7U0CgV ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uYub7U0CgV
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
++ export divisor=--MTc0ODk5ODUxNjQ0NTY1NTAwMAo--
++ divisor=--MTc0ODk5ODUxNjQ0NTY1NTAwMAo--
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ echo -e --verbose
  "hostname": "branch-isr-02"
}

version 16.9
+ source ./scripts/devops-helpers.shell
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
++ dirname -- ./scripts/network-extract.shell

++ [[ -n '' ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
 description Dev VLAN

++ [[ 5 -lt 4 ]]
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT
++ sed -e '1s|^\(-\)\{1,\}||'

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0geJBB5oR2
object network Panther-Gateway
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0geJBB5oR2
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ alias serialize-object=serialize_objects
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ alias print-file=print_file
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ alias relative-configpath=relative_configpath
interface GigabitEthernet0/0/0
+ [[ config =~ ^(config|c)$ ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ local target_config=configs/cisco/perimeter-fw1.cfg

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ config =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
 description Dev VLAN
+ [[ config =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'

+ [[ config =~ ^(extract|x)$ ]]
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ [[ config =~ ^(logger|l)$ ]]
object-group network Hydra-Edge
 description Remote site uplink
+ [[ config =~ ^(platform|p)$ ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75

+ [[ config =~ ^(search|s)$ ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ [[ config == \h\e\l\p ]]

+ [[ config == \d\e\b\u\g ]]
object-group network Lantern-DMZ
+ [[ config == \d\r\y\-\r\u\n ]]
 description Protected but public-facing zone
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 172.18.1.20
++ alias validate-address=validate_address
+ for xitem in "${@}"
 network-object host 192.168.1.11'
+ IFS==
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -n {
++ export logs_location=logs
+ [[ -z x ]]
  "vendor": "cisco",
+ export logs_location=logs
++ logs_location=logs
+ logs_location=logs
  "model": "",
+ mkdir -p logs/console
  "version": "16.9",
++ mkdir -p logs/jobs
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local SCRIPT_DIR=./scripts
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ local script_filename=cisco-configs.awk
  "version": "16.9",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ verbose =~ ^(config|c)$ ]]
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ [[ verbose =~ ^(console|o)$ ]]

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
+ [[ verbose =~ ^(export|r)$ ]]
 host 172.16.1.6
+ [[ verbose =~ ^(extract|x)$ ]]
 description Branch router uplink NAT

object network Hydra-Link
+ [[ verbose =~ ^(logger|l)$ ]]
 host 198.51.100.75
 description Branch NAT egress

+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 198.51.100.75

object network Panther-Gateway
+ [[ verbose == \h\e\l\p ]]
 host 10.0.2.3
+ [[ verbose == \d\e\b\u\g ]]
 description Secure outbound concentrator
+ [[ verbose == \d\r\y\-\r\u\n ]]

+ [[ verbose == \v\e\r\b\o\s\e ]]
object-group network Lantern-DMZ
+ local verbose=true
 description Protected but public-facing zone
+ IFS=' 	
 network-object host 172.18.1.20
'
 network-object host 192.168.1.11'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export console_location=console
+ script_filename=network-extract.shell
++ console_location=console
+ script_filename=network-extract
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ export network_extract__console=console/network-extract.console
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
++ grep -v '^\s*$'
++ mkdir -p console
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ network_extract__console=console/network-extract.console
+ newline
+ local count=1
+ touch console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --platform=cisco
+ local first_search_entry=10.0.0.1
++ which awk
+ local last_search_entry=203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ oIFS=' 	
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
'
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console ]]
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local 'indent=            '
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ set -euo pipefail
+ export LC_ALL=C
+ [[ platform == \v\e\r\b\o\s\e ]]
+ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+++ date +%s%N
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console ]]
++ mktemp -d
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GwnBIe76os ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GwnBIe76os
++ export divisor=--MTc0ODk5ODUxNjQ2NTkxNDAwMAo--
++ divisor=--MTc0ODk5ODUxNjQ2NTkxNDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YvSheQPl7L
+ [[ logger =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YvSheQPl7L
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ [[ logger == \h\e\l\p ]]
+ nl='\n'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ alias serialize-object=serialize_objects
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ alias parse-cisco=main
++ echo -e --verbose
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ mkdir -p logs/console
  "version": "12.2",
  "domain": "",
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "campus-sw-access01"
}
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg

version 12.2
+ [[ config =~ ^(console|o)$ ]]
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ [[ config =~ ^(export|r)$ ]]
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ config =~ ^(logger|l)$ ]]
+ result=0
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ config =~ ^(search|s)$ ]]
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ config == \h\e\l\p ]]
}

+ [[ config == \d\e\b\u\g ]]
version 12.2
+ [[ config == \d\r\y\-\r\u\n ]]
hostname campus-sw-access01
+ [[ config == \v\e\r\b\o\s\e ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ for xitem in "${@}"
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ IFS==
 network-object host 192.168.0.100
+ read -r key value
 network-object host 10.10.10.10 ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ verbose =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ verbose =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(export|r)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ touch console/network-extract.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ newline
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ grep -v '^\s*$'
++ which awk
++ export actions_logfile=console/run.console
++ grep -v '^#'
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ false == true ]]
++ targets_logfile=.cache/targets.jobs
+ [[ false == true ]]
+ [[ true == true ]]
++ IFS=,
+ local first_search_entry=10.0.0.1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ local last_search_entry=203.0.113.25
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ declare -a execute__netwowrk_extract
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ which awk
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ set -euo pipefail
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--campus-sw-access01.cfg.console
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODk5ODUxNjQ4NTA2MDAwMAo--
++ divisor=--MTc0ODk5ODUxNjQ4NTA2MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ printf '%*s' 12 ''
++ mktemp -d
++ alias parse-listings--helper=parse_listings__helper
+ local 'indent=            '
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ alias serialize-object=serialize_objects
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ result=0
+ exit 0
++ echo -e --verbose
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5UBFYi5gWH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5UBFYi5gWH
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vMV6dFvTiY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vMV6dFvTiY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
++ alias exit-error=exit_error
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ output_dir=.cache/resources/cisco
++ alias relative-configpath=relative_configpath
+ [[ ! -d .cache/resources/cisco ]]
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
++ command -v -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ extract =~ ^(config|c)$ ]]
  "domain": "global.dmz.example.net",
+ [[ extract =~ ^(console|o)$ ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ extract =~ ^(export|r)$ ]]
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ [[ extract =~ ^(extract|x)$ ]]
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ extract =~ ^(logger|l)$ ]]

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface
+ [[ extract =~ ^(platform|p)$ ]]

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
+ [[ extract =~ ^(search|s)$ ]]
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10
+ [[ extract == \h\e\l\p ]]

+ [[ extract == \d\e\b\u\g ]]
object-group network Watchtower-DMZ
+ [[ extract == \d\r\y\-\r\u\n ]]
 description Global secure relay
+ [[ extract == \v\e\r\b\o\s\e ]]
 network-object host 192.0.2.50 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console --verbose
+ oIFS=' 	
++ tr -d '\r'
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
++ grep -v '^\s*$'
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
+ sed '1{/^[[:space:]]*$/d;}'
 description Global secure relay
 network-object host 192.0.2.50'
++ grep -v '^#'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

++ export console_location=console
interface GigabitEthernet0/1
++ console_location=console
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
++ mkdir -p console

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
++ echo -e --platform=fortinet
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(extract|x)$ ]]
++ actions_logfile=console/run.console
+ [[ platform =~ ^(logger|l)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline 2
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ IFS==
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ read -r key value
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ local count=2
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ local count=1
+ local search_pattern=.cache/ips.list
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ IFS==
+ read -r key value
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+++ date +%s%N
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+++ base64
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ local target_config=configs/fortinet/fg-testing-config.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(export|r)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--dmz-fw2-backup.cfg.console
++ export divisor=--MTc0ODk5ODUxNjUwOTU5MjAwMAo--
++ divisor=--MTc0ODk5ODUxNjUwOTU5MjAwMAo--
+ local 'indent=            '
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ newline
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local count=1
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3HHOmDEXxD
+ [[ verbose =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3HHOmDEXxD
+ [[ verbose =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ verbose =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ local verbose=true
+ [[ extract =~ ^(export|r)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS=' 	
'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ debug=false
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ dry_run=false
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ -z true ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ -z '' ]]
+ export console_output=false
+ [[ extract =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console ]]
++ alias list-file=list_file
+ [[ -z '' ]]
+ [[ extract == \h\e\l\p ]]
+ script_helper=false
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ export logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
++ alias log-info=log_info
+ for xitem in "${@}"
+ logs_location=logs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
+ [[ -z .cache/ips.list ]]
+ mkdir -p logs/console
++ alias print-message=message
+ search_terms=()
+ declare -a search_terms
++ alias print-newline=newline
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ result=0
++ export logs_location=logs
++ logs_location=logs
+ exit 0
++ mkdir -p logs/jobs
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MOLnK0Wvir ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MOLnK0Wvir
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ platform =~ ^(platform|p)$ ]]
  "hostname": "perimeter-fw1"
}
+ local target_platform=fortinet

+ [[ platform =~ ^(search|s)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ platform == \h\e\l\p ]]

+ [[ platform == \d\e\b\u\g ]]
interface GigabitEthernet0/0
+ [[ platform == \d\r\y\-\r\u\n ]]
 nameif outside
+ [[ platform == \v\e\r\b\o\s\e ]]
 security-level 0
+ for xitem in "${@}"
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ IFS==
interface GigabitEthernet0/1
+ read -r key value
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ local first_search_entry=10.0.0.1
object network Stark-Tower
 host 10.0.0.1
+ local last_search_entry=203.0.113.25
 description Core services gateway
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'

++ which awk
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ [[ true == true ]]
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ result=0
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ -n {
+ local 'message=Search Pattern: [ .cache/ips.list ]'
  "vendor": "cisco",
  "model": "ASA",
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ local count=17
domain-name edge.dc.example.com

+ ((  count == 0  ))
interface GigabitEthernet0/0
 nameif outside
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]

interface GigabitEthernet0/1
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
+ newline
 host 203.0.113.25
 description Internet-bound IP NAT

+ local count=1
object network Stark-Tower
 host 10.0.0.1
+ (( i = 0 ))
 description Core services gateway

object-group network Avengers-DMZ
+ (( i < count ))
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo
+ [[ 6 -eq 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console --verbose
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
'
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ IFS==
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ read -r key value
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
++ sed -e '1s|^\(-\)\{1,\}||'

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.2.0 255.255.255.0
++ export actions_logfile=console/run.console

++ actions_logfile=console/run.console
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
++ touch console/run.console
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+++ date +%s%N
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --config=configs/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ (( i++ ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ false == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ false == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ verbose =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console ]]
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ set -euo pipefail
+ [[ verbose =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODk5ODUxNjUzMjI1MzAwMAo--
+ export LC_ALL=C
++ divisor=--MTc0ODk5ODUxNjUzMjI1MzAwMAo--
+ LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ output_dir=.cache/resources/fortinet
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ echo
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ [[ 5 -lt 4 ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
++ command -v -- ./scripts/network-extract.shell
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ alias parse-cisco=main
++ tr -d '\r'
+ [[ -z x ]]
++ dirname -- ./scripts/network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --extract=.cache/resources/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--perimeter-fw1.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.luzCvXZoAG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.luzCvXZoAG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ local SCRIPT_DIR=./scripts
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local script_filename=fortinet-configs.awk
++ [[ 5 -lt 4 ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ script_filename=network-extract.shell
++ alias print-newline=newline
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias pause=pause
++ alias print-line=print
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ alias print-file=print_file
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ message 'Search Pattern: [ .cache/ips.list ]'
++ alias system-metrics=system_metrics
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract =~ ^(config|c)$ ]]
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ alias validate-address=validate_address
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ [[ extract =~ ^(console|o)$ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ alias warning-message=warning
+ [[ extract =~ ^(export|r)$ ]]
+ newline
++ export LC_ALL=C
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
++ LC_ALL=C
+ (( i = 0 ))
+ local extract_location=.cache/resources/misc/fw1.cfg
+ (( i < count ))
++ export 'nl=\n'
+ [[ extract =~ ^(logger|l)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ result=0
++ cache_location=.cache
++ which awk
+ exit 0
++ export logs_location=logs
++ logs_location=logs
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XADg9W5kkt ]]
++ mkdir -p logs/jobs
+ [[ extract =~ ^(platform|p)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XADg9W5kkt
+ echo
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ for xitem in "${@}"
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ [[ 6 -eq 0 ]]
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console --verbose
end'
++ echo -e --platform=cisco
+ result=0
+ [[ -n {
+ oIFS=' 	
  "vendor": "fortinet",
'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ for xitem in "${@}"
  "hostname": "fg-branch-vpn-01"
}
+ IFS==

+ read -r key value
#hostname="fg-branch-vpn-01"
++ sed -e '1s|^\(-\)\{1,\}||'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
++ echo -e --search=.cache/ips.list
  set subnet 192.168.2.12 255.255.255.255
++ IFS=,
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ sed '1{/^[[:space:]]*$/d;}'
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ declare -a execute__netwowrk_extract
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
+ [[ platform =~ ^(config|c)$ ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ [[ platform =~ ^(console|o)$ ]]
end'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ which awk
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ echo -e --config=configs/misc/fw3.cfg
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ output_dir=.cache/resources/fortinet
+ (( i = 0 ))
+ [[ ! -d .cache/resources/fortinet ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+++ date +%s%N
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+++ base64
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ false == true ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console ]]
++ echo -e --verbose
+ for xitem in "${@}"
+ case "${target_file}" in
+ IFS==
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODk5ODUxNjU1NTkwMDAwMAo--
++ divisor=--MTc0ODk5ODUxNjU1NTkwMDAwMAo--
+ source ./scripts/devops-helpers.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ alias serialize-object=serialize_objects
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z x ]]
+ [[ -z '' ]]
+ export logs_location=logs
+ debug=false
+ logs_location=logs
+ [[ -z '' ]]
++ which awk
+ [[ true == true ]]
+ mkdir -p logs/console
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ script_helper=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z .cache/ips.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-branch-vpn-01.cfg.console
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
++ tr -d '\r'

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ sed '1{/^[[:space:]]*$/d;}'
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

++ grep -v '^#'
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NCpz5Kco2l
  set comment "Wanda’s chaos relay"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NCpz5Kco2l
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract.shell
 next
+ export 'nl=\n'
end ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ nl='\n'
+ echo -en '{
  "vendor": "fortinet",
+ touch console/network-extract.console
  "model": "FortiGate-200F",
  "version": "",
+ source ./scripts/devops-resources.shell
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
++ [[ -n '' ]]
++ IFS=,
 next
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
++ [[ 5 -lt 4 ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
++ echo -e --platform=cisco
  set comment "Guest WiFi node"
++ alias detect-vendor=detect_vendor
 next
end

++ alias exit-error=exit_error
+ result=0
config firewall address
+ exit 0
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4czG8OFrzs ]]
 next
 edit "Hawkeye-Nest"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4czG8OFrzs
++ sed -e '1s|^\(-\)\{1,\}||'
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
++ alias list-file=list_file
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
end'
++ alias log-error=log_error
+ declare -a execute__netwowrk_extract
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ which awk
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ newline 2
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ local count=2
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ echo
+ [[ 6 -eq 0 ]]
+ newline
+ (( i++ ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console --verbose
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ oIFS=' 	
'
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ [[ -z configs/misc/fw1.cfg ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -z cisco ]]
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ ls -al --color=auto configs/misc/fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console ]]
+ local search_pattern=.cache/ips.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ [[ search == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw1.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-campus-core.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ date +%s%N
+ print '{
+ [[ config =~ ^(extract|x)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ config =~ ^(logger|l)$ ]]
  "hostname": "fg-branch-vpn-01"
}

+ [[ config =~ ^(platform|p)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ config =~ ^(search|s)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ config == \h\e\l\p ]]
  set srcintf "dmz"
  set dstintf "wan1"
+ [[ config == \d\e\b\u\g ]]
  set srcaddr "10.10.10.10"
+ [[ config == \d\r\y\-\r\u\n ]]
  set dstaddr "203.0.113.10"
+++ base64
+ [[ config == \v\e\r\b\o\s\e ]]
  set action accept
  set logtraffic all
 next
+ for xitem in "${@}"
end'
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+++ tr -dc a-zA-Z0-9
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ [[ verbose =~ ^(config|c)$ ]]
 edit 13
  set name "Remote NAT"
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
  set srcintf "dmz"
  set dstintf "wan1"
+ [[ verbose =~ ^(export|r)$ ]]
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
+ [[ verbose =~ ^(extract|x)$ ]]
  set logtraffic all
 next
end'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0geJBB5oR2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0geJBB5oR2
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ export divisor=--MTc0ODk5ODUxNjU3OTgzNTAwMAo--
++ divisor=--MTc0ODk5ODUxNjU3OTgzNTAwMAo--
++ grep -v '^\s*$'
+ source ./scripts/devops-helpers.shell
+ newline 2
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=2
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ alias network-extract--helper=network_extract__helper
+ local SCRIPT_DIR=./scripts
+ alias serialize-object=serialize_objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
++ which awk
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ echo -e --platform=cisco
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ declare -a execute__netwowrk_extract
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fg-testing-config.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ dirname .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'indent=            '
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ exit 0
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YvSheQPl7L ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YvSheQPl7L
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
++ tr -d '\r'
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ grep -v '^\s*$'
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
+ [[ config =~ ^(config|c)$ ]]
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
+ local target_config=configs/misc/switch3.conf

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ echo -e --extract=.cache/resources/misc/switch3.conf
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ for xitem in "${@}"
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ IFS==
+ read -r key value
+ newline
+ local count=1
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'indent=            '
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '                configs/misc/fw3.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ [[ conf == \c\o\n\f ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ final_output=.cache/resources/misc/switch1.conf
+ (( i < count ))
+ local target_platform=cisco
+ extract_location=.cache/resources/misc/switch1.conf
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/switch1.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw1.cfg.console
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
++ dirname -- ./scripts/network-extract.shell
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ echo -e --verbose
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vMV6dFvTiY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vMV6dFvTiY
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ [[ false == true ]]
+ local last_search_entry=203.0.113.25
+ [[ false == true ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ case "${target_file}" in
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--fw3.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3HHOmDEXxD ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3HHOmDEXxD
++ dirname .cache/resources/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ result=0
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ exit 0
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.luzCvXZoAG ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.luzCvXZoAG
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QlNf3oCeaW/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NCpz5Kco2l ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NCpz5Kco2l
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cFPJ9aVQr5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cFPJ9aVQr5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OTrh42ySDh
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OTrh42ySDh
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias exit-error=exit_error
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ alias list-file=list_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-warn=log_warn
++ alias exit-error=exit_error
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias list-file=list_file
++ alias print-line=print
++ alias log-error=log_error
++ alias print-file=print_file
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias system-metrics=system_metrics
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ alias validate-address=validate_address
++ logs_location=logs
++ mkdir -p logs/jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sZiA2yl5Nw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sZiA2yl5Nw
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export actions_logfile=console/run.console
++ export cache_location=.cache
++ cache_location=.cache
++ actions_logfile=console/run.console
++ export logs_location=logs
++ logs_location=logs
++ touch console/run.console
++ mkdir -p logs/jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CIa942Rgcn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CIa942Rgcn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ export targets_location=targets
+ nl='\n'
++ targets_location=targets
+ source ./scripts/devops-resources.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+++ date +%s%N
+++ base64
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
+++ base64
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--MTc0ODk5ODUxNzUxNzE1MDAwMAo--
++ divisor=--MTc0ODk5ODUxNzUxNzE1MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--MTc0ODk5ODUxNzUxOTE0NTAwMAo--
++ divisor=--MTc0ODk5ODUxNzUxOTE0NTAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+ alias serialize-object=serialize_objects
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9PJfOHowbf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9PJfOHowbf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ date +%s%N
++ alias list-file=list_file
++ alias log-error=log_error
+++ base64
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ set -euo pipefail
++ alias print-newline=newline
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias print-file=print_file
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RYNDKLdGSL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RYNDKLdGSL
+ network_extract__console=console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ touch console/network-extract.console
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias log-error=log_error
++ alias log-info=log_info
++ alias warning-message=warning
++ alias log-warn=log_warn
++ export LC_ALL=C
++ alias print-message=message
++ LC_ALL=C
++ mktemp -d
++ export 'nl=\n'
++ alias print-newline=newline
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ alias pause=pause
++ export targets_location=targets
++ targets_location=targets
++ alias print-line=print
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ set -euo pipefail
++ alias validate-address=validate_address
+ export LC_ALL=C
+ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ export divisor=--MTc0ODk5ODUxNzUzNDc5NDAwMAo--
++ divisor=--MTc0ODk5ODUxNzUzNDc5NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
+++ date +%s%N
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ 7 -eq 0 ]]
+++ base64
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lp26wdbpdf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z3e0jlfaez/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jYsEDWPkP6
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console --export --verbose
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jYsEDWPkP6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ [[ -n '' ]]
++ mkdir -p console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TgufsHH70L
++ cache_location=.cache
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TgufsHH70L
++ export logs_location=logs
++ logs_location=logs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ mkdir -p logs/jobs
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODk5ODUxNzU0NDA4ODAwMAo--
++ divisor=--MTc0ODk5ODUxNzU0NDA4ODAwMAo--
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-helpers.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ script_filename=network-extract.shell
++ alias relative-configpath=relative_configpath
+ script_filename=network-extract
++ alias parse-listings--helper=parse_listings__helper
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ search =~ ^(config|c)$ ]]
+ export logs_location=logs
+ [[ search =~ ^(config|c)$ ]]
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ [[ search =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BBjpLZN6X3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BBjpLZN6X3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export console_location=console
++ alias log-warn=log_warn
++ console_location=console
++ alias print-message=message
++ mkdir -p console
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ 7 -eq 0 ]]
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.blnl7hpozh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias system-metrics=system_metrics
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ alias validate-address=validate_address
++ export targets_logfile=.cache/targets.jobs
++ export console_location=console
++ targets_logfile=.cache/targets.jobs
++ alias warning-message=warning
++ console_location=console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ mkdir -p console
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f6rBAkDx0z
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f6rBAkDx0z
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+++ date +%s%N
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ base64
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ touch console/run.console
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ mktemp -d
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ export divisor=--MTc0ODk5ODUxNzU3MDI4NDAwMAo--
++ divisor=--MTc0ODk5ODUxNzU3MDI4NDAwMAo--
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5wGjs4adNm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5wGjs4adNm
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_location=targets
++ targets_location=targets
+ export 'nl=\n'
++ export divisor=--MTc0ODk5ODUxNzU3MzE2MzAwMAo--
+ source ./scripts/devops-helpers.shell
+ nl='\n'
++ mktemp -d
++ export targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-resources.shell
++ divisor=--MTc0ODk5ODUxNzU3MzE2MzAwMAo--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ export targets_location=targets
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ targets_logfile=.cache/targets.jobs
+ oIFS=' 	
++ alias exit-error=exit_error
'
++ targets_location=targets
++ export actions_logfile=console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ actions_logfile=console/run.console
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
++ touch console/run.console
++ targets_logfile=.cache/targets.jobs
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias parse-listings--helper=parse_listings__helper
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ [[ 5 -lt 4 ]]
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias system-metrics=system_metrics
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ alias serialize-object=serialize_objects
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ alias network-extract--helper=network_extract__helper
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ date +%s%N
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RAKGgb03J5
+ [[ extract =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RAKGgb03J5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
++ export targets_location=targets
++ targets_location=targets
+++ date +%s%N
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ logs_location=logs
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+++ base64
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NF3LKwcNlf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NF3LKwcNlf
+++ base64
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export console_location=console
++ console_location=console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ export 'nl=\n'
++ mkdir -p console
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ tr -dc a-zA-Z0-9
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+++ tr -dc a-zA-Z0-9
++ alias log-warn=log_warn
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias print-message=message
++ mktemp -d
++ alias print-newline=newline
+++ date +%s%N
++ alias pause=pause
++ alias print-line=print
++ alias log-warn=log_warn
+++ base64
++ alias print-message=message
++ alias print-file=print_file
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
+ export LC_ALL=C
+ for xitem in "${@}"
+ LC_ALL=C
++ alias pause=pause
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias system-metrics=system_metrics
+ [[ config =~ ^(console|o)$ ]]
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export divisor=--MTc0ODk5ODUxNzU4NjExNjAwMAo--
++ divisor=--MTc0ODk5ODUxNzU4NjExNjAwMAo--
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
+ set -euo pipefail
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
+ export LC_ALL=C
+ LC_ALL=C
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ export cache_location=.cache
++ export LC_ALL=C
++ cache_location=.cache
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
++ export 'nl=\n'
++ nl='\n'
++ mkdir -p logs/jobs
++ export cache_location=.cache
++ cache_location=.cache
+ script_filename=network-extract.shell
++ export logs_location=logs
+ script_filename=network-extract
++ logs_location=logs
++ [[ -n '' ]]
+ export network_extract__console=console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ mkdir -p logs/jobs
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODk5ODUxNzU4ODc1MDAwMAo--
++ divisor=--MTc0ODk5ODUxNzU4ODc1MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ export divisor=--MTc0ODk5ODUxNzU4ODY2NDAwMAo--
++ mktemp -d
++ export actions_logfile=console/run.console
++ divisor=--MTc0ODk5ODUxNzU4ODY2NDAwMAo--
+ network_extract__console=console/network-extract.console
++ actions_logfile=console/run.console
++ [[ -n '' ]]
++ touch console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
+ touch console/network-extract.console
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+ alias serialize-object=serialize_objects
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44Jih3Q3lY
+ [[ search =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44Jih3Q3lY
+ [[ search =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias network-configs--helper=network_configs__helper
++ alias exit-error=exit_error
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
++ alias log-info=log_info
+ script_filename=network-extract.shell
++ alias log-warn=log_warn
+ script_filename=network-extract
++ alias print-message=message
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias print-newline=newline
+ alias serialize-object=serialize_objects
+ touch console/network-extract.console
++ alias pause=pause
+ alias serialize-object=serialize_objects
++ alias print-line=print
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODk5ODUxNzU5MjY5NjAwMAo--
++ divisor=--MTc0ODk5ODUxNzU5MjY5NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ [[ -n '' ]]
+ alias parse-cisco=main
++ export LC_ALL=C
++ LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ alias parse-cisco=main
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ -z x ]]
+ export logs_location=logs
++ __DEVOPS_HELPERS_SOURCED=1
+ logs_location=logs
++ [[ 5 -lt 4 ]]
+ mkdir -p logs/console
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Hxm3v10Vy
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Hxm3v10Vy
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ [[ -n '' ]]
++ export targets_logfile=.cache/targets.jobs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ targets_logfile=.cache/targets.jobs
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8dRnUXbcj
++ alias log-error=log_error
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8dRnUXbcj
++ alias log-info=log_info
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-warn=log_warn
+ export 'nl=\n'
+ nl='\n'
++ alias print-message=message
+ source ./scripts/devops-resources.shell
++ alias print-newline=newline
++ [[ -n '' ]]
++ alias pause=pause
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias relative-configpath=relative_configpath
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias system-metrics=system_metrics
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias validate-address=validate_address
++ alias pause=pause
++ alias warning-message=warning
++ alias print-line=print
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ alias print-file=print_file
++ nl='\n'
+ [[ search =~ ^(extract|x)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ alias relative-configpath=relative_configpath
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2avjeeabap/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ platform =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ oIFS=' 	
'
++ alias warning-message=warning
++ export LC_ALL=C
+ for xitem in "${@}"
++ LC_ALL=C
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+++ date +%s%N
++ echo -e --platform=cisco
++ export console_location=console
++ console_location=console
+ script_filename=network-extract.shell
++ mkdir -p console
+ script_filename=network-extract
+ [[ 7 -eq 0 ]]
+ export network_extract__console=console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z3e0jlfaez/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ set -euo pipefail
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ export LC_ALL=C
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(search|s)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ export network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list
++ export console_location=console
++ console_location=console
++ mktemp -d
++ mkdir -p console
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
+ [[ config == \v\e\r\b\o\s\e ]]
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export divisor=--MTc0ODk5ODUxNzYwNzk0MjAwMAo--
++ export targets_location=targets
++ divisor=--MTc0ODk5ODUxNzYwNzk0MjAwMAo--
++ targets_location=targets
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lp26wdbpdf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
+ [[ search == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
++ targets_logfile=.cache/targets.jobs
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.she2RWHbzg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.she2RWHbzg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ alias serialize-object=serialize_objects
++ alias detect-vendor=detect_vendor
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgvptelclj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hw8OQUEKta
++ alias print-newline=newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hw8OQUEKta
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias pause=pause
+ export 'nl=\n'
++ alias print-line=print
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KqqIXq4QzL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KqqIXq4QzL
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias system-metrics=system_metrics
++ touch console/run.console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ source ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
+ [[ search =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
++ [[ 5 -lt 4 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search =~ ^(console|o)$ ]]
+ alias parse-cisco=main
++ alias log-error=log_error
++ alias warning-message=warning
+++ date +%s%N
++ export LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
++ LC_ALL=C
++ alias log-info=log_info
+ [[ search =~ ^(extract|x)$ ]]
++ export 'nl=\n'
++ alias log-warn=log_warn
+ [[ -z x ]]
+ [[ search =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ export logs_location=logs
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
++ nl='\n'
+ logs_location=logs
+ for xitem in "${@}"
++ alias print-message=message
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bo2fvwyldp/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export cache_location=.cache
+ [[ search =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
++ cache_location=.cache
++ alias print-newline=newline
++ export logs_location=logs
++ logs_location=logs
++ alias list-file=list_file
++ mkdir -p logs/jobs
++ alias pause=pause
++ alias log-error=log_error
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
++ alias log-info=log_info
++ alias print-line=print
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console --export --verbose
+ [[ search == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ 7 -eq 0 ]]
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
++ alias print-message=message
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ntfrwnksjs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ oIFS=' 	
'
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias system-metrics=system_metrics
++ alias print-line=print
++ alias print-file=print_file
+ oIFS=' 	
++ alias relative-configpath=relative_configpath
+ read -r key value
++ alias validate-address=validate_address
'
++ export targets_location=targets
++ alias system-metrics=system_metrics
++ targets_location=targets
+ for xitem in "${@}"
+++ base64
+ IFS==
++ alias warning-message=warning
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ targets_logfile=.cache/targets.jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+++ date +%s%N
++ alias validate-address=validate_address
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(config|c)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
++ mkdir -p console
++ export targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract.shell
++ targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
++ export divisor=--MTc0ODk5ODUxNzYyMDI1MzAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ divisor=--MTc0ODk5ODUxNzYyMDI1MzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ export console_location=console
++ console_location=console
++ alias network-configs--helper=network_configs__helper
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODk5ODUxNzYyMjEzNTAwMAo--
++ divisor=--MTc0ODk5ODUxNzYyMjEzNTAwMAo--
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list
+ [[ search == \d\e\b\u\g ]]
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ base64
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ IFS==
+ mkdir -p logs/console
+ read -r key value
+++ date +%s%N
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
+++ base64
+ export LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
+ LC_ALL=C
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ alias parse-cisco=main
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qlmhqagc6t/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ touch console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console --export --verbose
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
++ export divisor=--MTc0ODk5ODUxNzYyOTQzNzAwMAo--
+ [[ search == \d\e\b\u\g ]]
++ divisor=--MTc0ODk5ODUxNzYyOTQzNzAwMAo--
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ source ./scripts/devops-helpers.shell
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AD01IP2ceY
+ [[ config == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AD01IP2ceY
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ config == \d\e\b\u\g ]]
+ nl='\n'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODk5ODUxNzYzMTM3NjAwMAo--
+ for xitem in "${@}"
++ divisor=--MTc0ODk5ODUxNzYzMTM3NjAwMAo--
++ alias network-extract--helper=network_extract__helper
++ alias exit-error=exit_error
+ IFS==
+ source ./scripts/devops-helpers.shell
+ read -r key value
++ [[ -n '' ]]
++ alias list-file=list_file
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ export divisor=--MTc0ODk5ODUxNzYzMTcyNDAwMAo--
++ divisor=--MTc0ODk5ODUxNzYzMTcyNDAwMAo--
++ alias log-warn=log_warn
+ alias serialize-object=serialize_objects
++ export targets_location=targets
++ targets_location=targets
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-message=message
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ alias print-newline=newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
++ echo -e --config=.cache/resources/misc/switch1.conf
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias system-metrics=system_metrics
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias validate-address=validate_address
+ mkdir -p logs/console
++ alias warning-message=warning
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --config=.cache/resources/misc/switch1.conf
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WWVAC6t26y
++ export logs_location=logs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WWVAC6t26y
++ logs_location=logs
++ mkdir -p logs/jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ alias parse-cisco=main
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ export logs_location=logs
++ alias print-newline=newline
+++ date +%s%N
+ logs_location=logs
+ script_filename=network-extract
+ mkdir -p logs/console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias pause=pause
++ alias print-line=print
+ alias parse-cisco=main
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ 7 -eq 0 ]]
+ mkdir -p logs/console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.blnl7hpozh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console --export --verbose
++ alias system-metrics=system_metrics
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ alias validate-address=validate_address
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+++ base64
++ mkdir -p logs/jobs
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+++ date +%s%N
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
+++ date +%s%N
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ 7 -eq 0 ]]
+ touch console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bmehodvaba/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console --export --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ export divisor=--MTc0ODk5ODUxNzY0MzYzNDAwMAo--
+ network_extract__console=console/network-extract.console
++ divisor=--MTc0ODk5ODUxNzY0MzYzNDAwMAo--
+ source ./scripts/devops-helpers.shell
+ touch console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ alias parse-cisco=main
++ export divisor=--MTc0ODk5ODUxNzY0NjQ1NzAwMAo--
++ divisor=--MTc0ODk5ODUxNzY0NjQ1NzAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ [[ -n '' ]]
+ mkdir -p logs/console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(logger|l)$ ]]
++ export actions_logfile=console/run.console
+ [[ 7 -eq 0 ]]
++ actions_logfile=console/run.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ touch console/run.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODk5ODUxNzY0OTM5MTAwMAo--
++ divisor=--MTc0ODk5ODUxNzY0OTM5MTAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hanfix0tdd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console --export --verbose
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
+ alias parse-cisco=main
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ mkdir -p logs/console
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ieq23wrojb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ oIFS=' 	
'
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --platform=fortinet
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ config == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ -z x ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export logs_location=logs
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ 7 -eq 0 ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ntfrwnksjs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ oIFS=' 	
+ [[ search =~ ^(export|r)$ ]]
'
+ [[ config =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ export network_extract__console=console/network-extract.console
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local target_platform=cisco
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+++ base64
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nb02gpse4w/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+++ date +%s%N
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
+++ base64
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ 7 -eq 0 ]]
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dob7fsjib5/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console --export --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bde8onE2z4
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bde8onE2z4
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias list-file=list_file
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0ODk5ODUxNzY3MDI4NjAwMAo--
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias log-error=log_error
++ divisor=--MTc0ODk5ODUxNzY3MDI4NjAwMAo--
+ for xitem in "${@}"
+ IFS==
++ alias log-info=log_info
+ source ./scripts/devops-helpers.shell
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ [[ -n '' ]]
+ read -r key value
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ export divisor=--MTc0ODk5ODUxNzY3MTc1MzAwMAo--
++ alias warning-message=warning
++ divisor=--MTc0ODk5ODUxNzY3MTc1MzAwMAo--
++ export LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ LC_ALL=C
++ export 'nl=\n'
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ echo -e --platform=cisco
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --platform=cisco
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
++ export cache_location=.cache
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ cache_location=.cache
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
++ logs_location=logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mkdir -p logs/jobs
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
+ set -euo pipefail
+ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
+ LC_ALL=C
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z x ]]
+ IFS==
+ read -r key value
+ export logs_location=logs
++ mktemp -d
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ export console_location=console
++ console_location=console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ mkdir -p console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ logger =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eHwBbJMNro
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eHwBbJMNro
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ nl='\n'
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ source ./scripts/devops-resources.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
+ local target_platform=cisco
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ read -r key value
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
++ alias log-info=log_info
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
++ alias print-file=print_file
+ for xitem in "${@}"
+ read -r key value
+ script_filename=network-extract
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ local target_platform=cisco
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(search|s)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ platform == \h\e\l\p ]]
++ export cache_location=.cache
+ [[ platform == \d\e\b\u\g ]]
++ cache_location=.cache
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export logs_location=logs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ logs_location=logs
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
++ mkdir -p logs/jobs
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ read -r key value
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ mktemp -d
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
++ echo -e --export
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --export
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hv7lcgm0aj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WCK41uQKme
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console --export --verbose
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WCK41uQKme
+ oIFS=' 	
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jG5O2Rcl5Y
+ [[ logger =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jG5O2Rcl5Y
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ [[ platform =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
++ targets_location=targets
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(export|r)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ nl='\n'
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tuqhjjpjsv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ export 'nl=\n'
+ [[ config =~ ^(export|r)$ ]]
+ nl='\n'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ oIFS=' 	
+ [[ config =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
++ [[ -n '' ]]
++ alias exit-error=exit_error
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias list-file=list_file
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
++ alias log-info=log_info
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
++ alias print-message=message
++ alias list-file=list_file
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ local target_platform=cisco
++ alias log-error=log_error
+ [[ platform =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ logger =~ ^(config|c)$ ]]
++ alias log-info=log_info
++ alias print-line=print
+ [[ platform == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias print-file=print_file
++ alias print-message=message
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
++ alias relative-configpath=relative_configpath
+ [[ export == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias pause=pause
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
++ alias print-line=print
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ export == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias warning-message=warning
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
++ LC_ALL=C
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export 'nl=\n'
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ nl='\n'
+ [[ extract =~ ^(logger|l)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
++ logs_location=logs
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
++ mkdir -p logs/jobs
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
++ alias validate-address=validate_address
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
++ export actions_logfile=console/run.console
+ [[ platform == \h\e\l\p ]]
+ IFS==
++ actions_logfile=console/run.console
++ alias warning-message=warning
+ [[ platform == \d\e\b\u\g ]]
++ touch console/run.console
+++ date +%s%N
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
+ IFS==
+ read -r key value
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ read -r key value
++ LC_ALL=C
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
++ export logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list
++ logs_location=logs
+ [[ logger =~ ^(logger|l)$ ]]
++ mkdir -p logs/jobs
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+++ base64
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --export
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ export console_location=console
+ [[ platform =~ ^(extract|x)$ ]]
++ console_location=console
+ [[ platform =~ ^(logger|l)$ ]]
++ mkdir -p console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
++ export divisor=--MTc0ODk5ODUxNzcwNzgyNzAwMAo--
+ [[ platform == \d\e\b\u\g ]]
++ divisor=--MTc0ODk5ODUxNzcwNzgyNzAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
++ export console_location=console
+ [[ export =~ ^(config|c)$ ]]
++ console_location=console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(console|o)$ ]]
++ mkdir -p console
+ [[ search =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ local export_objects=true
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_platform=cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
++ echo -e --export
+++ date +%s%N
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --verbose
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --verbose
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ echo -e --platform=cisco
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODk5ODUxNzcxODY0NDAwMAo--
++ divisor=--MTc0ODk5ODUxNzcxODY0NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ script_filename=network-extract.shell
+ [[ platform =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ set -euo pipefail
+ [[ platform == \d\r\y\-\r\u\n ]]
+ network_extract__console=console/network-extract.console
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
+ alias parse-cisco=main
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ IFS==
+ read -r key value
+ touch console/network-extract.console
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ mktemp -d
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ date +%s%N
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
+++ date +%s%N
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+++ base64
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bmehodvaba/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console --export --verbose
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DwTQYQK6bb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DwTQYQK6bb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ tr -dc a-zA-Z0-9
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ echo -e --verbose
++ export divisor=--MTc0ODk5ODUxNzc0MDI5NjAwMAo--
++ mktemp -d
++ divisor=--MTc0ODk5ODUxNzc0MDI5NjAwMAo--
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
+ [[ logger =~ ^(config|c)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODk5ODUxNzc0MTk0MzAwMAo--
+ [[ logger =~ ^(export|r)$ ]]
++ divisor=--MTc0ODk5ODUxNzc0MTk0MzAwMAo--
+ [[ logger =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Y54JwqFVhN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Y54JwqFVhN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ alias parse-cisco=main
++ [[ -n '' ]]
++ mktemp -d
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z x ]]
++ [[ 5 -lt 4 ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hv7lcgm0aj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console --export --verbose
++ alias log-error=log_error
+ [[ verbose =~ ^(config|c)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(export|r)$ ]]
+ oIFS=' 	
'
++ alias print-newline=newline
+ [[ verbose =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ alias pause=pause
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ search =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ [[ search =~ ^(search|s)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ platform =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ echo -e --export
++ mkdir -p logs/jobs
+ [[ platform =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list
+ export console_output=false
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ [[ platform =~ ^(export|r)$ ]]
+ logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ mkdir -p logs/console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bjkekFN8zJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bjkekFN8zJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
++ alias exit-error=exit_error
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias list-file=list_file
+ [[ export =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ export =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ export =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ local export_objects=true
++ alias print-message=message
+ [[ export =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ export =~ ^(logger|l)$ ]]
++ alias pause=pause
+ [[ export =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ alias print-file=print_file
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
++ tr -d '\r'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^\s*$'
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^#'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
+ set -euo pipefail
++ alias validate-address=validate_address
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
++ alias warning-message=warning
+ export LC_ALL=C
+ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
+ set -euo pipefail
++ export 'nl=\n'
+ export LC_ALL=C
+ script_filename=network-extract.shell
++ nl='\n'
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
++ export cache_location=.cache
+ touch console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
++ cache_location=.cache
+ [[ search =~ ^(console|o)$ ]]
+++ date +%s%N
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export logs_location=logs
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ logs_location=logs
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ mkdir -p logs/jobs
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
+ for xitem in "${@}"
+ IFS==
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ for xitem in "${@}"
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ] ]]
++ mktemp -d
+++ base64
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ IFS==
++ mktemp -d
+ read -r key value
+ [[ 7 -eq 0 ]]
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kh9knovv8h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ local count=1
+ ((  count == 0  ))
++ echo -e --verbose
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ oIFS=' 	
'
++ mktemp -d
+ local count=1
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
+ echo
++ targets_location=targets
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZskihfOfyU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZskihfOfyU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ (( i++ ))
+ (( i < count ))
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --export
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ export LC_ALL=C
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ LC_ALL=C
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODk5ODUxNzc3Mjg4MjAwMAo--
++ divisor=--MTc0ODk5ODUxNzc3Mjg4MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wsdteFJmfI
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yJIHyACVAD
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SF034Q4B8E
++ [[ 5 -lt 4 ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yJIHyACVAD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wsdteFJmfI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SF034Q4B8E
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yky4xcpuD7
+ source ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yky4xcpuD7
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
+ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias parse-listings--helper=parse_listings__helper
+ nl='\n'
++ [[ -n '' ]]
+++ date +%s%N
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
+ newline
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias exit-error=exit_error
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias network-extract--helper=network_extract__helper
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ export console_location=console
++ alias pause=pause
++ alias list-file=list_file
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tuqhjjpjsv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ console_location=console
++ alias print-line=print
++ alias print-file=print_file
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias log-error=log_error
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias log-info=log_info
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ base64
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias log-warn=log_warn
+ alias serialize-object=serialize_objects
++ alias validate-address=validate_address
++ alias print-message=message
++ alias warning-message=warning
++ alias print-newline=newline
++ export LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list
++ LC_ALL=C
++ alias validate-address=validate_address
+ [[ verbose =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ export cache_location=.cache
++ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
++ cache_location=.cache
++ alias warning-message=warning
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console --export --verbose
++ alias pause=pause
++ export logs_location=logs
++ export 'nl=\n'
++ logs_location=logs
++ export LC_ALL=C
++ nl='\n'
++ LC_ALL=C
++ mkdir -p logs/jobs
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ export logs_location=logs
++ nl='\n'
++ logs_location=logs
+ oIFS=' 	
++ export cache_location=.cache
'
++ cache_location=.cache
++ mkdir -p logs/jobs
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ IFS==
++ mkdir -p logs/jobs
+ read -r key value
++ alias print-line=print
++ alias print-file=print_file
+ local count=1
++ alias relative-configpath=relative_configpath
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias system-metrics=system_metrics
++ mkdir -p console
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ alias parse-cisco=main
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ dry_run=false
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z true ]]
+ set -euo pipefail
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ export LC_ALL=C
+ LC_ALL=C
+ export console_output=false
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ console_output=false
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ script_helper=false
++ export divisor=--MTc0ODk5ODUxNzc4MTMyODAwMAo--
+ [[ false == true ]]
+ [[ config =~ ^(search|s)$ ]]
++ divisor=--MTc0ODk5ODUxNzc4MTMyODAwMAo--
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ search_terms=()
+ for xitem in "${@}"
+ declare -a search_terms
+ IFS==
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
++ [[ -n '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list != *,* ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export console_location=console
++ console_location=console
++ export console_location=console
++ [[ 5 -lt 4 ]]
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ console_location=console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ mkdir -p console
++ mkdir -p console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
+ [[ export =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list
+ [[ export =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ search == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias serialize-object=serialize_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export console_location=console
++ touch console/run.console
++ console_location=console
++ mkdir -p console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ alias parse-cisco=main
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LKChdwCTXl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LKChdwCTXl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export actions_logfile=console/run.console
+ [[ 7 -eq 0 ]]
++ actions_logfile=console/run.console
++ alias exit-error=exit_error
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2avjeeabap/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ touch console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console --export --verbose
++ alias list-file=list_file
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias log-error=log_error
++ export actions_logfile=console/run.console
+ IFS==
++ actions_logfile=console/run.console
+ read -r key value
++ alias log-info=log_info
++ touch console/run.console
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ grep -v '^#'
++ alias print-file=print_file
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias relative-configpath=relative_configpath
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
++ echo -e --platform=cisco
++ echo -e --verbose
++ export targets_location=targets
++ targets_location=targets
+++ date +%s%N
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias validate-address=validate_address
++ export targets_location=targets
++ targets_location=targets
++ alias warning-message=warning
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ LC_ALL=C
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ LC_ALL=C
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local first_search_entry=10.0.2.3
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local last_search_entry=10.0.2.3
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ mktemp -d
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ date +%s%N
++ mktemp -d
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ [[ config =~ ^(platform|p)$ ]]
+++ base64
+++ base64
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgvptelclj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ config =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ oIFS=' 	
'
+ for xitem in "${@}"
++ export console_location=console
++ console_location=console
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODk5ODUxNzgwMjM4NjAwMAo--
++ divisor=--MTc0ODk5ODUxNzgwMjM4NjAwMAo--
++ mkdir -p console
+ source ./scripts/devops-helpers.shell
+++ date +%s%N
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+++ base64
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBhXqQlPhB
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yMJkba02Q2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBhXqQlPhB
+ [[ search =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yMJkba02Q2
+ [[ search =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u6vHgkHMgo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u6vHgkHMgo
+ read -r key value
+ export 'nl=\n'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(export|r)$ ]]
+ nl='\n'
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ [[ search == \h\e\l\p ]]
+ nl='\n'
+ [[ search == \d\e\b\u\g ]]
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ [[ search == \d\r\y\-\r\u\n ]]
+ nl='\n'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
+++ tr -dc a-zA-Z0-9
+ alias parse-cisco=main
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ alias list-file=list_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z x ]]
++ alias log-error=log_error
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
+ export logs_location=logs
+ logs_location=logs
++ alias log-info=log_info
+ mkdir -p logs/console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ export divisor=--MTc0ODk5ODUxNzgwNjM4OTAwMAo--
++ divisor=--MTc0ODk5ODUxNzgwNjM4OTAwMAo--
+ set -euo pipefail
+ source ./scripts/devops-helpers.shell
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ alias log-warn=log_warn
++ export divisor=--MTc0ODk5ODUxNzgwNjkxOTAwMAo--
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ divisor=--MTc0ODk5ODUxNzgwNjkxOTAwMAo--
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
++ alias log-info=log_info
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-newline=newline
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-message=message
++ __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias parse-listings--helper=parse_listings__helper
++ alias print-message=message
++ alias print-newline=newline
++ export divisor=--MTc0ODk5ODUxNzgwNzE2MjAwMAo--
++ divisor=--MTc0ODk5ODUxNzgwNzE2MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ alias relative-configpath=relative_configpath
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ alias print-file=print_file
++ [[ 5 -lt 4 ]]
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
+ alias serialize-object=serialize_objects
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
++ mktemp -d
++ nl='\n'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ alias system-metrics=system_metrics
++ export cache_location=.cache
++ alias warning-message=warning
+ alias serialize-object=serialize_objects
++ cache_location=.cache
++ export LC_ALL=C
++ LC_ALL=C
++ export logs_location=logs
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ alias parse-cisco=main
+ mkdir -p logs/console
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ -z x ]]
++ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
++ mkdir -p logs/jobs
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ export actions_logfile=console/run.console
++ alias validate-address=validate_address
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
+ alias parse-cisco=main
++ export divisor=--MTc0ODk5ODUxNzgxMDM4OTAwMAo--
++ divisor=--MTc0ODk5ODUxNzgxMDM4OTAwMAo--
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ source ./scripts/devops-helpers.shell
+ [[ -z x ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export logs_location=logs
++ cache_location=.cache
+ logs_location=logs
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ mkdir -p logs/console
++ [[ -n '' ]]
++ export logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ logs_location=logs
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(search|s)$ ]]
++ mkdir -p logs/jobs
+ [[ extract == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\e\b\u\g ]]
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ] ]]
+ [[ platform =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ platform =~ ^(extract|x)$ ]]
+ output_dir=reports/10.0.0.1/cisco
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(export|r)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ touch console/network-extract.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
++ targets_location=targets
+ [[ verbose =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F5daZZuXk4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F5daZZuXk4
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ alias parse-cisco=main
+ nl='\n'
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ -z x ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ script_filename=network-extract.shell
+ export logs_location=logs
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ script_filename=network-extract
+ local target_platform=cisco
+ script_filename=network-extract
++ export targets_location=targets
++ alias log-error=log_error
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
++ export console_location=console
+ mkdir -p logs/console
+ export network_extract__console=console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
+ network_extract__console=console/network-extract.console
++ alias log-info=log_info
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
+ script_filename=network-extract
+ local count=1
+ network_extract__console=console/network-extract.console
+ [[ search == \h\e\l\p ]]
++ export console_location=console
++ alias log-warn=log_warn
++ console_location=console
+ touch console/network-extract.console
++ export console_location=console
++ alias print-message=message
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ targets_location=targets
++ console_location=console
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
++ alias print-newline=newline
++ export targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ search == \d\e\b\u\g ]]
++ console_location=console
++ mkdir -p console
++ targets_logfile=.cache/targets.jobs
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias pause=pause
++ mkdir -p console
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
++ alias print-line=print
+ touch console/network-extract.console
++ mkdir -p console
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
++ alias print-file=print_file
+ (( i = 0 ))
+ local verbose=true
+ [[ config =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ IFS=' 	
'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ debug=false
+ IFS==
+ IFS==
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ dry_run=false
+ read -r key value
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z true ]]
++ alias validate-address=validate_address
+ (( i++ ))
++ alias warning-message=warning
+ [[ -z '' ]]
++ export LC_ALL=C
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ export console_output=false
++ LC_ALL=C
+ console_output=false
++ export 'nl=\n'
+ [[ export =~ ^(config|c)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ [[ -z true ]]
+ [[ export =~ ^(console|o)$ ]]
++ cache_location=.cache
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qlmhqagc6t/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --platform=cisco
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ date +%s%N
+ IFS==
+ read -r key value
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ date +%s%N
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hanfix0tdd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ieq23wrojb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ script_filename=network-extract.shell
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ export actions_logfile=console/run.console
++ mkdir -p console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ [[ config =~ ^(platform|p)$ ]]
+ search_terms=()
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ declare -a search_terms
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODk5ODUxNzgzMDMwMDAwMAo--
++ divisor=--MTc0ODk5ODUxNzgzMDMwMDAwMAo--
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(config|c)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ [[ extract =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
+ IFS==
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ export divisor=--MTc0ODk5ODUxNzgyODM2NTAwMAo--
+ [[ search == \d\r\y\-\r\u\n ]]
++ divisor=--MTc0ODk5ODUxNzgyODM2NTAwMAo--
++ dirname -- ./scripts/network-extract.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
++ export targets_location=targets
++ targets_location=targets
++ export actions_logfile=console/run.console
++ export targets_logfile=.cache/targets.jobs
++ actions_logfile=console/run.console
++ targets_logfile=.cache/targets.jobs
++ touch console/run.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.blnl7hpozh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ [[ platform =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console --export --verbose
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ oIFS=' 	
+ set -euo pipefail
+ [[ platform == \h\e\l\p ]]
'
+ export LC_ALL=C
+ [[ platform == \d\e\b\u\g ]]
+ LC_ALL=C
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ (( i < count ))
+ echo
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ alias parse-cisco=main
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
+ export logs_location=logs
+ [[ logger =~ ^(logger|l)$ ]]
+ logs_location=logs
+ mkdir -p logs/console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ mktemp -d
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --platform=cisco
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
+ [[ search == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
+++ base64
++ grep -v '^\s*$'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
++ grep -v '^#'
+++ base64
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgcyCigejv
+ [[ logger =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4RsuJzmYAt
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C1iW1vVMVx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgcyCigejv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4RsuJzmYAt
+ [[ export =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C1iW1vVMVx
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(config|c)$ ]]
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias list-file=list_file
++ alias exit-error=exit_error
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ alias log-info=log_info
++ alias log-error=log_error
+ [[ export == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
++ alias list-file=list_file
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local export_objects=true
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ for xitem in "${@}"
++ alias print-message=message
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
++ alias print-message=message
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias print-newline=newline
++ alias log-warn=log_warn
+ [[ logger =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-message=message
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias pause=pause
+ local verbose=true
+ local verbose=true
++ alias pause=pause
+ [[ config =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias print-newline=newline
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ alias print-line=print
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias print-line=print
+ local verbose=true
+ [[ export =~ ^(platform|p)$ ]]
+ local export_objects=true
++ alias print-file=print_file
++ alias pause=pause
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
+ [[ export == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ alias print-file=print_file
+ IFS=' 	
++ alias system-metrics=system_metrics
+ IFS=' 	
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
'
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
++ export targets_location=targets
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ debug=false
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
++ targets_location=targets
++ alias validate-address=validate_address
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODk5ODUxNzg0NzIxNjAwMAo--
+ [[ -z '' ]]
+ [[ export == \d\e\b\u\g ]]
++ export divisor=--MTc0ODk5ODUxNzg0NDMyMjAwMAo--
+ [[ export == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ divisor=--MTc0ODk5ODUxNzg0NzIxNjAwMAo--
+ debug=false
+ local first_search_entry=10.10.10.10
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \d\e\b\u\g ]]
++ alias warning-message=warning
+ for xitem in "${@}"
+ IFS=' 	
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
++ export targets_logfile=.cache/targets.jobs
++ divisor=--MTc0ODk5ODUxNzg0NDMyMjAwMAo--
+ [[ -z '' ]]
++ export LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
++ LC_ALL=C
++ alias system-metrics=system_metrics
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ alias validate-address=validate_address
++ cache_location=.cache
+ [[ -z '' ]]
++ export logs_location=logs
+ dry_run=false
+ [[ export == \v\e\r\b\o\s\e ]]
++ logs_location=logs
++ alias warning-message=warning
+ for xitem in "${@}"
+ [[ -z true ]]
++ mkdir -p logs/jobs
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ IFS==
++ export LC_ALL=C
'
+ [[ logger =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
++ export divisor=--MTc0ODk5ODUxNzg0NTE0NjAwMAo--
+ read -r key value
++ LC_ALL=C
+ IFS==
+ export console_output=false
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ console_output=false
+ read -r key value
+ read -r key value
++ alias warning-message=warning
++ echo -e --export
+ [[ -z true ]]
++ export 'nl=\n'
+ [[ -z true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ nl='\n'
++ divisor=--MTc0ODk5ODUxNzg0NTE0NjAwMAo--
+ for xitem in "${@}"
+ debug=false
+ source ./scripts/devops-helpers.shell
++ export cache_location=.cache
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ IFS==
+ [[ -z '' ]]
++ export LC_ALL=C
+ read -r key value
+ IFS==
++ LC_ALL=C
+ [[ config =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ dry_run=false
++ targets_logfile=.cache/targets.jobs
++ export logs_location=logs
++ echo -e --export
+ export console_output=false
+ [[ -z true ]]
+ [[ logger == \h\e\l\p ]]
+ console_output=false
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
++ export 'nl=\n'
+ [[ logger == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
++ nl='\n'
+ [[ -z true ]]
+ export console_output=false
++ alias network-extract--helper=network_extract__helper
+ console_output=false
+ script_helper=false
+ source ./scripts/devops-helpers.shell
++ logs_location=logs
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
++ export cache_location=.cache
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local last_search_entry=10.10.10.10
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z true ]]
+ [[ false == true ]]
++ cache_location=.cache
+ for xitem in "${@}"
+ [[ -z '' ]]
++ mkdir -p logs/jobs
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ export logs_location=logs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
++ logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console ]]
+ search_terms=()
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
++ mkdir -p logs/jobs
+ declare -a search_terms
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]]
+ script_helper=false
+ for xitem in "${@}"
+ search_terms=()
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ mapfile -t search_terms
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]]
++ echo -e --verbose
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ __DEVOPS_HELPERS_SOURCED=1
+ alias serialize-object=serialize_objects
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --verbose
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ export console_location=console
++ mkdir -p console
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
++ tr -d '\r'
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ grep -v '^#'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export actions_logfile=console/run.console
+ [[ export == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ debug=false
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ set -euo pipefail
++ export actions_logfile=console/run.console
+ IFS==
+ export LC_ALL=C
++ export actions_logfile=console/run.console
+ [[ extract =~ ^(platform|p)$ ]]
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ LC_ALL=C
+ local first_search_entry=10.0.0.1
+ [[ export == \h\e\l\p ]]
++ touch console/run.console
++ touch console/run.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ dry_run=false
+ [[ verbose == \h\e\l\p ]]
+ local last_search_entry=10.0.0.1
+ IFS==
+ read -r key value
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS=' 	
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ local first_search_entry=172.16.0.5
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local last_search_entry=172.16.0.5
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ debug=false
+ export console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ local verbose=true
+ dry_run=false
+ local verbose=true
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ] ]]
+ IFS=' 	
+ [[ -z true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
++ [[ -n '' ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ] ]]
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -z '' ]]
+ IFS=' 	
+ [[ -z '' ]]
+ local verbose=true
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export console_output=false
++ alias parse-listings--helper=parse_listings__helper
+ IFS=' 	
+ console_output=false
+ script_helper=false
'
+ [[ -z '' ]]
'
+ debug=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ [[ true == true ]]
+ debug=false
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ dry_run=false
+ for xitem in "${@}"
+ [[ false == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ -z '' ]]
+ search_terms=()
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console ]]
+ dry_run=false
+ [[ -z '' ]]
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ local count=1
+ [[ -z true ]]
+ ((  count == 0  ))
+ [[ -z '' ]]
+ export console_output=false
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ console_output=false
+ IFS==
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ declare -a search_terms
+ [[ -z true ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -z '' ]]
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ newline
+ export console_output=false
+ [[ -z true ]]
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ mktemp -d
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ script_helper=false
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
+ [[ -z '' ]]
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console ]]
+ export console_output=false
+ [[ -z true ]]
+ console_output=false
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ false == true ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list != *,* ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]]
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ search_terms=()
+ [[ extract == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_helper=false
+ [[ false == true ]]
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]]
+ [[ false == true ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list != *,* ]]
+ local first_search_entry=192.168.0.1
+ mapfile -t search_terms
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]]
+ for xitem in "${@}"
+ search_terms=()
+++ date +%s%N
+ IFS==
+ echo
+ echo
+ declare -a search_terms
+ local last_search_entry=192.168.0.1
+ (( i++ ))
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
+ search_terms=()
+ (( i++ ))
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list != *,* ]]
+ search_terms=()
+ declare -a search_terms
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list != *,* ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ [[ -z fortinet ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list != *,* ]]
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ] ]]
++ echo -e --export
+ [[ true == true ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ mapfile -t search_terms
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ local SCRIPT_DIR=./scripts
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ newline
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ newline
+ ((  count == 0  ))
+ echo
+ local count=1
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ (( i < count ))
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ echo -e --verbose
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ export targets_location=targets
+ (( i < count ))
+ (( i++ ))
++ echo -e --export
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ targets_location=targets
++ echo -e --verbose
++ export targets_logfile=.cache/targets.jobs
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
++ targets_logfile=.cache/targets.jobs
+ (( i < count ))
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ export targets_location=targets
++ targets_location=targets
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
++ targets_location=targets
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
++ targets_logfile=.cache/targets.jobs
+ echo
+ (( i++ ))
++ echo -e --platform=fortinet
++ tr -d '\r'
+ (( i < count ))
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ tr -d '\r'
++ grep -v '^\s*$'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+++ date +%s%N
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ grep -v '^\s*$'
+++ date +%s%N
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+++ date +%s%N
+++ base64
++ grep -v '^\s*$'
++ grep -v '^#'
+++ base64
++ grep -v '^#'
+++ base64
++ grep -v '^#'
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PGn6d1TNAy
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PGn6d1TNAy
+ [[ verbose =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ nl='\n'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local first_search_entry=172.16.1.6
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local last_search_entry=172.16.1.6
+ [[ platform =~ ^(config|c)$ ]]
+ local first_search_entry=10.0.2.3
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ local last_search_entry=10.0.2.3
+ [[ verbose == \d\e\b\u\g ]]
+ local first_search_entry=192.0.2.50
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ export =~ ^(console|o)$ ]]
+ local last_search_entry=192.0.2.50
++ [[ -n '' ]]
+ local first_search_entry=172.18.1.20
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ local last_search_entry=172.18.1.20
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ [[ export =~ ^(export|r)$ ]]
+ export logs_location=logs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ local export_objects=true
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ IFS=' 	
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
'
+ local verbose=true
++ export divisor=--MTc0ODk5ODUxNzg4MTk0MTAwMAo--
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ [[ true == true ]]
++ divisor=--MTc0ODk5ODUxNzg4MTk0MTAwMAo--
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ] ]]
+ IFS=' 	
+ local export_objects=true
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ] ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local first_search_entry=172.31.255.254
+ IFS==
'
++ export divisor=--MTc0ODk5ODUxNzg4NDA4NDAwMAo--
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODk5ODUxNzg4NDUzMjAwMAo--
+ [[ -z '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ] ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
++ divisor=--MTc0ODk5ODUxNzg4NDUzMjAwMAo--
++ divisor=--MTc0ODk5ODUxNzg4NDA4NDAwMAo--
+ [[ verbose =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ] ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
+ debug=false
+ [[ export =~ ^(search|s)$ ]]
+ mkdir -p logs/console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ debug=false
+ [[ platform =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
+ source ./scripts/devops-helpers.shell
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
++ alias exit-error=exit_error
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ dry_run=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ local count=1
+ local count=1
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -z true ]]
++ [[ -n '' ]]
++ [[ -n '' ]]
+ local target_platform=cisco
+ local count=1
+ local verbose=true
+ ((  count == 0  ))
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ alias network-extract--helper=network_extract__helper
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ((  count == 0  ))
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ export console_output=false
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ local target_platform=fortinet
++ __DEVOPS_HELPERS_SOURCED=1
+ ((  count == 0  ))
+ [[ export == \d\e\b\u\g ]]
+ console_output=false
+ [[ platform =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ verbose == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z true ]]
++ alias list-file=list_file
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console ]]
++ alias log-error=log_error
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline
+ debug=false
++ [[ 5 -lt 4 ]]
+ export console_output=false
+ local last_search_entry=172.31.255.254
+ console_output=false
+ [[ -z '' ]]
+ [[ platform == \d\e\b\u\g ]]
+ dry_run=false
+ IFS==
+ for xitem in "${@}"
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ (( i = 0 ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ newline
+ local count=1
+ [[ -z true ]]
+ (( i < count ))
++ alias log-info=log_info
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ for xitem in "${@}"
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ echo
+ local count=1
++ alias log-warn=log_warn
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console ]]
+ [[ -z true ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
+ IFS==
++ alias print-message=message
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ alias parse-listings--helper=parse_listings__helper
+ local verbose=true
+ script_helper=false
++ alias print-newline=newline
+ [[ true == true ]]
+ script_helper=false
+ (( i++ ))
+ newline
+ [[ false == true ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ false == true ]]
+ export console_output=false
++ alias pause=pause
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ console_output=false
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ export divisor=--MTc0ODk5ODUxNzg3NDUyNDAwMAo--
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS=' 	
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ]'
'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
++ alias print-line=print
+ [[ -z cisco ]]
+ search_terms=()
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
++ alias network-configs--helper=network_configs__helper
++ divisor=--MTc0ODk5ODUxNzg3NDUyNDAwMAo--
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console ]]
+ declare -a search_terms
+ [[ -z '' ]]
+ search_terms=()
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ declare -a search_terms
+ (( i < count ))
+ debug=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
++ alias print-file=print_file
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]]
++ alias relative-configpath=relative_configpath
+ [[ -z cisco ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
+ dry_run=false
++ alias network-extract--helper=network_extract__helper
+ mapfile -t search_terms
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-configs--ips.list ]'
+ [[ -z true ]]
+ script_helper=false
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias system-metrics=system_metrics
+ (( i = 0 ))
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ [[ -z cisco ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list != *,* ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ alias serialize-object=serialize_objects
+ [[ -z '' ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ mapfile -t search_terms
+ ((  count == 0  ))
+ [[ true == true ]]
+ [[ -z cisco ]]
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]]
+ (( i++ ))
+ newline
+ alias parse-cisco=main
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list != *,* ]]
++ alias validate-address=validate_address
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ (( i < count ))
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ echo
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ [[ -z x ]]
++ export 'nl=\n'
+ (( i++ ))
++ nl='\n'
+ export logs_location=logs
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ console_output=false
+ mapfile -t search_terms
+ logs_location=logs
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ export cache_location=.cache
+ local count=1
+ mkdir -p logs/console
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ newline
++ cache_location=.cache
++ echo -e --export
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ [[ false == true ]]
+ newline
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ alias parse-cisco=main
+ alias parse-cisco=main
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local count=1
+ echo
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]]
+ [[ -z x ]]
+ search_terms=()
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ export logs_location=logs
++ export logs_location=logs
+ [[ -z x ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ export logs_location=logs
+ logs_location=logs
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ declare -a search_terms
+ logs_location=logs
+ mkdir -p logs/console
+ mkdir -p logs/console
++ logs_location=logs
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list != *,* ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ echo
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ mapfile -t search_terms
+ (( i++ ))
++ mkdir -p logs/jobs
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ cfg == \c\f\g ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ -z cisco ]]
++ echo -e --verbose
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ ((  count == 0  ))
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --verbose
++ alias network-extract--helper=network_extract__helper
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ tr -d '\r'
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ grep -v '^#'
++ grep -v '^#'
++ tr -d '\r'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract
++ grep -v '^\s*$'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ output_dir=reports/172.16.0.5/cisco
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ grep -v '^#'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ export console_location=console
+ [[ verbose == \h\e\l\p ]]
++ console_location=console
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ mkdir -p console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ debug=false
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ local first_search_entry=10.10.10.10
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local last_search_entry=10.10.10.10
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ -z true ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ -z '' ]]
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ export console_output=false
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ local verbose=true
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ IFS=' 	
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ local first_search_entry=10.0.1.2
+ [[ logger == \h\e\l\p ]]
'
+ [[ logger == \d\e\b\u\g ]]
+ console_output=false
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ alias parse-cisco=main
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.1.2
+ [[ -z true ]]
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -z '' ]]
+ debug=false
+ [[ true == true ]]
+ script_helper=false
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ -z '' ]]
+ export console_output=false
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local count=1
+ console_output=false
+ [[ logger =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ [[ -z true ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ for xitem in "${@}"
+ search_terms=()
+ IFS==
+ declare -a search_terms
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ false == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ] ]]
+ local first_search_entry=192.168.1.11
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local last_search_entry=192.168.1.11
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ search_terms=()
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ declare -a search_terms
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ echo
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
+ alias serialize-object=serialize_objects
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ echo
+ ((  count == 0  ))
+ [[ -z cisco ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ 7 -eq 0 ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ newline
+ local count=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console --export --verbose
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ieq23wrojb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qlmhqagc6t/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console --export --verbose
+ for xitem in "${@}"
+ IFS==
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
++ echo -e --verbose
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local first_search_entry=192.0.2.50
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i < count ))
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local last_search_entry=192.0.2.50
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ [[ -z cisco ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -z x ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ export logs_location=logs
+ logs_location=logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-configs--ips.list ]'
+ local count=1
+ mkdir -p logs/console
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/10.0.0.1/fortinet
+ echo
+ local count=1
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
++ dirname -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ true == true ]]
++ tr -d '\r'
++ echo -e --export
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ output_dir=reports/172.16.1.6/cisco
+ (( i < count ))
+ [[ ! -d reports/172.16.1.6/cisco ]]
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ output_dir=reports/172.18.1.20/cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
+ [[ ! -d reports/172.18.1.20/cisco ]]
++ grep -v '^\s*$'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/192.0.2.50/cisco
++ grep -v '^#'
++ dirname reports/172.31.255.254/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ output_dir=reports/172.31.255.254/misc
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -d reports/172.31.255.254/misc ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ search_terms=()
++ targets_logfile=.cache/targets.jobs
+ declare -a search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list != *,* ]]
+ local first_search_entry=192.168.2.12
+ mapfile -t search_terms
+ [[ search =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.2.12
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ [[ search =~ ^(export|r)$ ]]
+ local first_search_entry=203.0.113.25
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ local last_search_entry=203.0.113.25
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ conf == \c\o\n\f ]]
++ dirname -- ./scripts/network-extract.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ true == true ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
++ which awk
+ [[ cfg == \c\f\g ]]
+ IFS==
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ] ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ ((  count == 0  ))
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ alias parse-cisco=main
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ script_filename=network-extract
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ export network_extract__console=console/network-extract.console
+ [[ -z cisco ]]
+ network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ touch console/network-extract.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ newline
+ local script_filename=cisco-configs.awk
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --verbose
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ tr -d '\r'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ export logs_location=logs
+ local script_filename=fortinet-configs.awk
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+++ date +%s%N
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ logs_location=logs
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
++ echo -e --verbose
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ tr -dc a-zA-Z0-9
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ output_dir=reports/10.0.1.2/misc
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ ! -d reports/10.0.1.2/misc ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose == \h\e\l\p ]]
++ IFS=,
+ [[ verbose == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local verbose=true
++ echo 172.16.0.5
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ which awk
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_DIR=./scripts
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ config =~ ^(config|c)$ ]]
+ search_terms=()
+ local script_filename=cisco-configs.awk
+ declare -a execute__netwowrk_extract
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
++ which awk
+ declare -a search_terms
+ [[ config =~ ^(console|o)$ ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local first_search_entry=198.51.100.75
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ which awk
+ mapfile -t search_terms
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local last_search_entry=198.51.100.75
+ [[ config == \h\e\l\p ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ] ]]
++ export divisor=--MTc0ODk5ODUxNzkyOTAxNTAwMAo--
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
++ divisor=--MTc0ODk5ODUxNzkyOTAxNTAwMAo--
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ source ./scripts/devops-helpers.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ [[ -n '' ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ mkdir -p logs/console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(logger|l)$ ]]
++ which awk
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
++ which awk
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -z cisco ]]
++ which awk
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ verbose == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z3e0jlfaez/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console --export --verbose
'
++ mktemp -d
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local count=1
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ dry_run=false
++ alias network-extract--helper=network_extract__helper
+ oIFS=' 	
+ echo
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ alias parse-cisco=main
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]]
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list != *,* ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ mapfile -t search_terms
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
++ IFS=,
++ echo 192.168.0.1
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ alias parse-cisco=main
+ declare -a execute__netwowrk_extract
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+ output_dir=reports/192.0.2.50/cisco
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ tr -d '\r'
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
++ grep -v '^\s*$'
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
++ IFS=,
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.0.1
++ which awk
++ tr -d '\r'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ IFS=,
++ IFS=,
+ declare -a execute__netwowrk_extract
++ echo 10.0.2.3
++ echo 172.16.1.6
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ grep -v '^#'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^\s*$'
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
++ IFS=,
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
++ echo 192.0.2.50
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
++ IFS=,
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQE5QGYxKZ
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQE5QGYxKZ
++ echo 172.31.255.254
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ grep -v '^#'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ printf '%*s' 12 ''
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ [[ 5 -lt 4 ]]
+ declare -a execute__netwowrk_extract
+ output_dir=reports/192.168.2.12/cisco
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ extract =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'indent=            '
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ alias list-file=list_file
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias log-info=log_info
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias log-warn=log_warn
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ for xitem in "${@}"
++ alias print-message=message
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
++ alias print-newline=newline
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ [[ extract =~ ^(logger|l)$ ]]
++ which awk
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ for xitem in "${@}"
++ which awk
++ IFS=,
++ which awk
+ [[ true == true ]]
+ IFS==
+ read -r key value
++ which awk
++ echo 172.18.1.20
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
++ alias pause=pause
++ alias print-line=print
+ newline
++ alias print-file=print_file
+ local count=1
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.1.10
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local last_search_entry=192.168.1.10
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias system-metrics=system_metrics
+ alias serialize-object=serialize_objects
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ export logs_location=logs
'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ logs_location=logs
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ mkdir -p logs/console
++ which awk
+ IFS==
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
++ alias validate-address=validate_address
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ cfg == \c\f\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
++ alias warning-message=warning
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ] ]]
++ export LC_ALL=C
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
++ LC_ALL=C
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
++ export 'nl=\n'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ nl='\n'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ export cache_location=.cache
+ newline
++ cache_location=.cache
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export logs_location=logs
++ logs_location=logs
+ local count=1
+ (( i = 0 ))
++ mkdir -p logs/jobs
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ echo -e --platform=fortinet
++ echo -e --platform=fortinet
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local first_search_entry=192.168.0.100
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'indent=            '
+ local last_search_entry=192.168.0.100
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ local awk_bin=/usr/bin/awk
+ local SCRIPT_DIR=./scripts
+ local awk_bin=/usr/bin/awk
+ local script_filename=cisco-configs.awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local count=1
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ newline
+ (( i < count ))
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ local count=1
+ output_dir=reports/203.0.113.25/cisco
+ local awk_bin=/usr/bin/awk
+ echo
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ] ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ (( i++ ))
+ (( i = 0 ))
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ echo
+ ((  count == 0  ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ alias parse-cisco=main
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
++ IFS=,
+ newline
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
++ echo 192.168.1.11
++ IFS=,
+ (( i < count ))
++ echo 10.0.1.2
+ echo
++ IFS=,
++ which awk
+ (( i++ ))
+ (( i < count ))
++ echo 10.10.10.10
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local 'indent=            '
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
++ export console_location=console
++ console_location=console
+ local count=1
+ [[ 7 -eq 0 ]]
++ mkdir -p console
+ local target_platform=fortinet
+ (( i = 0 ))
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local count=1
++ printf '%*s' 12 ''
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dob7fsjib5/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ newline
+ read -r key value
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ (( i < count ))
+ local count=1
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ (( i++ ))
+ echo
'
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ IFS==
+ local 'indent=            '
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_platform=fortinet
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ output_dir=reports/198.51.100.75/cisco
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z x ]]
+ [[ platform =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ echo
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
++ which awk
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
++ which awk
+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ which awk
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ script_filename=network-extract.shell
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ script_filename=network-extract
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ export logs_location=logs
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ export network_extract__console=console/network-extract.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ dirname -- ./scripts/network-extract.shell
+ script_filename=network-extract
+ [[ cfg == \c\f\g ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ network_extract__console=console/network-extract.console
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local script_filename=cisco-configs.awk
+ logs_location=logs
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ mkdir -p logs/console
+ export network_extract__console=console/network-extract.console
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ network_extract__console=console/network-extract.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ touch console/network-extract.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i++ ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ which awk
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ newline
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=1
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 192.0.2.50
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message '                .cache/resources/misc/switch1.conf'
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'message=                .cache/resources/misc/switch1.conf'
++ export actions_logfile=console/run.console
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
++ actions_logfile=console/run.console
+ echo -e '                .cache/resources/misc/switch1.conf'
+ local SCRIPT_DIR=./scripts
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
++ touch console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ local 'extracted_configuration={
  "vendor": "cisco",
domain-name edge.dc.example.com
  "model": "",
  "version": "12.4",

  "domain": "",
+ newline
object-group network Panther-Edge
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
  "hostname": "access-sw1-west"
}
 description Internet-facing proxy systems
+ local count=1
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
 network-object host 203.0.113.25
+ (( i < count ))
+ touch console/network-extract.console
+ echo
 network-object host 172.16.0.5

+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ cfg == \c\f\g ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
version 12.4
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
hostname access-sw1-west

+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
 description Management objects
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
 network-object host 10.10.10.10'
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ -n {
++ dirname -- ./scripts/network-extract.shell
  "vendor": "cisco",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ printf '%*s' 12 ''
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ network_extract__console=console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ touch console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ IFS=,
+ [[ search =~ ^(logger|l)$ ]]
++ which awk
+ IFS==
++ echo 10.0.1.2
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ config == \d\r\y\-\r\u\n ]]
+ declare -a execute__netwowrk_extract
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --export
++ echo -e --platform=cisco
+ touch console/network-extract.console
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
+ output_dir=reports/10.10.10.10/cisco
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nb02gpse4w/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 10.0.0.1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ declare -a execute__netwowrk_extract
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
++ echo -e --export
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ oIFS=' 	
'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ which awk
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z3e0jlfaez/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console --export --verbose
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ 7 -eq 0 ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kh9knovv8h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console --export --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \v\e\r\b\o\s\e ]]
+ local script_filename=cisco-configs.awk
++ echo -e --export
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ read -r key value
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dob7fsjib5/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ [[ export =~ ^(export|r)$ ]]
'
+ [[ extract =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ which awk
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgvptelclj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console --export --verbose
++ printf '%*s' 12 ''
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ export =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ debug=false
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ export == \d\e\b\u\g ]]
+ dry_run=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ console_output=false
+ read -r key value
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list != *,* ]]
+ [[ extract =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ echo -e --verbose
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
++ IFS=,
++ echo 10.0.2.3
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ search =~ ^(logger|l)$ ]]
++ which awk
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ print '{
  "vendor": "fortinet",
++ tr -d '\r'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
+ [[ extract =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^#'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
  "model": "ASA",
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(logger|l)$ ]]
  "version": "9.14(3)",
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ verbose == \h\e\l\p ]]
}

+ [[ verbose == \d\e\b\u\g ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
domain-name edge.dc.example.com
+ local verbose=true
+ [[ verbose =~ ^(config|c)$ ]]

interface GigabitEthernet0/1
+ [[ verbose =~ ^(console|o)$ ]]
 nameif inside
 security-level 100
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
 ip address 10.0.0.1 255.255.255.0
+ [[ search == \h\e\l\p ]]
 description Internal Network Interface
+ [[ export =~ ^(console|o)$ ]]

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ result=0
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ [[ -n {
  "vendor": "cisco",
+ [[ export =~ ^(extract|x)$ ]]
+ local verbose=true
  "model": "ASA",
+ [[ export =~ ^(logger|l)$ ]]
  "version": "9.14(3)",
+ [[ search =~ ^(config|c)$ ]]
+ IFS=' 	
+ [[ export =~ ^(platform|p)$ ]]
+ newline 2
'
  "domain": "edge.dc.example.com",
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
  "hostname": "perimeter-fw1"
+ [[ -z '' ]]
}
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ debug=false

+ [[ export == \h\e\l\p ]]
ASA Version 9.14(3)
+ [[ search == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ set -euo pipefail
hostname perimeter-fw1
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=2
domain-name edge.dc.example.com
+ dry_run=false

+ IFS=' 	
interface GigabitEthernet0/1
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -z true ]]
+ (( i < count ))
 nameif inside
 security-level 100
+ [[ -z '' ]]
+ IFS==
 ip address 10.0.0.1 255.255.255.0
+ echo
+ read -r key value
+ export console_output=false
 description Internal Network Interface

+ (( i++ ))
object network Stark-Tower
+ (( i < count ))
 host 10.0.0.1
 description Core services gateway ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ search =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ search_terms=()
+ declare -a search_terms
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ printf '%*s' 12 ''
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
+ (( i < count ))
+ local first_search_entry=192.168.0.100
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=192.168.0.100
+ [[ platform =~ ^(config|c)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ platform =~ ^(console|o)$ ]]
+ local 'indent=            '
'
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ debug=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local target_platform=fortinet
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ dry_run=false
+ (( i = 0 ))
+ [[ -z true ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ] ]]
+ export console_output=false
+ (( i < count ))
++ echo -e --platform=fortinet
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ echo
+ console_output=false
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-configs--ips.list ]'
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ [[ search =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ local count=1
++ echo -e --platform=cisco
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ IFS=,
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ echo 10.10.10.10
+ print '{
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ local 'prompt_message=Enter configuration file to be parsed: '
  "hostname": "perimeter-fw1"
}

+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
ASA Version 9.14(3)
++ echo -e --config=.cache/resources/misc/switch3.conf
hostname perimeter-fw1
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
domain-name edge.dc.example.com
+ [[ config =~ ^(logger|l)$ ]]

interface GigabitEthernet0/1
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -z cisco ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
+ echo
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ (( i++ ))
  "hostname": "perimeter-fw1"
+ newline
}
+ (( i < count ))

+ local count=1
ASA Version 9.14(3)
hostname perimeter-fw1
+ (( i = 0 ))
domain-name edge.dc.example.com
+ (( i < count ))

+ echo
interface GigabitEthernet0/1
 nameif inside
 security-level 100
+ (( i++ ))
 ip address 10.0.0.1 255.255.255.0
+ (( i < count ))
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
 description Core services gateway ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ echo -en '{
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ mktemp -d
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]]
+ for xitem in "${@}"
++ echo -e --verbose
+ search_terms=()
+ IFS==
+ declare -a search_terms
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ newline 2
++ which awk
+ local count=2
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8EK3Szzamw
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8EK3Szzamw
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ grep -v '^\s*$'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ echo -e --config=.cache/resources/misc/switch3.conf
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=192.168.100.100
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ local last_search_entry=192.168.100.100
++ echo -e --platform=cisco
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list != *,* ]]
+ local 'extracted_configuration={
+ mapfile -t search_terms
  "vendor": "cisco",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ] ]]
}
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg

version 16.9
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
hostname branch-isr-02
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'

++ grep -v '^#'
interface GigabitEthernet0/0/2
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ local count=1
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ result=0
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ -n {
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ newline
  "hostname": "branch-isr-02"
}

+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
version 16.9
+ (( i = 0 ))
hostname branch-isr-02

+ (( i < count ))
interface GigabitEthernet0/0/2
+ [[ config == \d\r\y\-\r\u\n ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ for xitem in "${@}"
+ local parent_dir=reports/10.0.1.2/fortinet
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
++ tr -d '\r'
+ source ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ [[ -n '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ print '{
+ [[ logger == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ logger == \d\r\y\-\r\u\n ]]
  "model": "",
+ for xitem in "${@}"
  "version": "16.9",
+ IFS==
++ alias detect-vendor=detect_vendor
+ [[ logger == \v\e\r\b\o\s\e ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ config =~ ^(export|r)$ ]]
}

version 16.9
hostname branch-isr-02
+ read -r key value

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ grep -v '^\s*$'
+ for xitem in "${@}"
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias exit-error=exit_error
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ false == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ alias log-error=log_error
+ local target_platform=cisco
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ platform == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
++ grep -v '^#'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ output_dir=reports/192.168.0.100/cisco
+ read -r key value
+ local first_search_entry=172.18.1.20
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ alias print-message=message
+ local last_search_entry=172.18.1.20
+ set -euo pipefail
+ set -euo pipefail
++ alias print-newline=newline
+ export LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
+ read -r key value
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
++ mktemp -d
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-configs--ips.list ]'
+ local count=1
++ mktemp -d
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ local search_pattern
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ echo
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ local first_search_entry=192.168.1.10
+ (( i++ ))
+ (( i < count ))
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ echo -e --export
+ [[ true == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
++ alias validate-address=validate_address
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
++ alias warning-message=warning
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
++ export LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i++ ))
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ (( i < count ))
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local parent_dir=reports/10.0.0.1/cisco
++ LC_ALL=C
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ export 'nl=\n'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ nl='\n'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ export cache_location=.cache
+ [[ extract =~ ^(export|r)$ ]]
++ cache_location=.cache
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
++ export logs_location=logs
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
++ logs_location=logs
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p logs/jobs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ (( i < count ))
++ cut -d/ -f2
+ echo
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rYPTA0ZUWj
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zsDq72k1kE
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rYPTA0ZUWj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zsDq72k1kE
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ read -r key value
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ local script_filename=cisco-configs.awk
++ alias system-metrics=system_metrics
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias system-metrics=system_metrics
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ date +%s%N
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
++ mkdir -p logs/jobs
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+++ base64
+ [[ false == true ]]
+ [[ true == true ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ serialize_objects
++ which awk
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ export == \d\r\y\-\r\u\n ]]
+ local search_pattern
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ output_dir=reports/192.168.100.100/cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ echo -e --export
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ export console_location=console
++ console_location=console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
++ mkdir -p console
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
++ console_location=console
+ [[ extract =~ ^(search|s)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract == \h\e\l\p ]]
++ cut -d/ -f2
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ mkdir -p console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
++ IFS=,
++ echo 192.168.0.100
++ echo -e --verbose
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ local parent_dir=reports/10.0.2.3/cisco
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ echo -e --platform=fortinet
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --export
++ mktemp -d
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ awk -v divisor=--MTc0ODk5ODUxNzUxNzE1MDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
++ sed -e '1s|^\(-\)\{1,\}||'
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=10.0.0.1
++ which awk
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ grep -F 10.0.1.2
+ output_dir=reports/192.168.1.10/misc
+ local SCRIPT_DIR=./scripts
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ sed '/^[[:space:]]*$/d'
++ touch console/run.console
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ output_dir=reports/172.18.1.20/misc
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ [[ ! -d reports/172.18.1.20/misc ]]
+ [[ export =~ ^(config|c)$ ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ [[ export =~ ^(console|o)$ ]]
version 12.4
hostname access-sw1-west
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell

++ which awk
+ local export_objects=true
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fn7YuqDdka
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fn7YuqDdka
+ [[ export =~ ^(export|r)$ ]]
++ export targets_location=targets
+ local export_objects=true
++ targets_location=targets
+ [[ export =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
++ export targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
object-group network MGMT-ACCESS
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ [[ logger =~ ^(logger|l)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ logger == \d\e\b\u\g ]]
 description Management objects
+ [[ logger == \d\r\y\-\r\u\n ]]
 network-object host 192.168.0.1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ [[ verbose =~ ^(export|r)$ ]]

+ local target_platform=cisco
+ [[ platform =~ ^(extract|x)$ ]]
object-group network Mutant-WiFi
+ local export_objects=true
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
 description Controlled guest devices
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ echo -e --platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ verbose == \h\e\l\p ]]
+ console_output=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console ]]
 network-object host 10.10.10.10'
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
+ [[ false == true ]]
+ result=0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ platform =~ ^(platform|p)$ ]]
+ result=0
  "model": "",
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
++ printf '%*s' 12 ''
+ search_terms=()
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ declare -a search_terms
++ alias detect-vendor=detect_vendor
+ [[ platform == \h\e\l\p ]]
  "version": "12.4",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
+ local verbose=true
+ [[ 0 -ne 0 ]]
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ local target_platform=fortinet
+ [[ export == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
  "domain": "",
+ IFS=' 	
++ alias exit-error=exit_error
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'indent=            '
+ [[ platform == \d\e\b\u\g ]]
  "hostname": "access-sw1-west"
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ true == true ]]
'
}
+ IFS==

+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ export divisor=--MTc0ODk5ODUxODAzOTI2MTAwMAo--
version 12.4
+ read -r key value
+ for xitem in "${@}"
++ divisor=--MTc0ODk5ODUxODAzOTI2MTAwMAo--
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
hostname access-sw1-west
+ newline
++ alias list-file=list_file
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ cut -d/ -f2
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-error=log_error
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ debug=false
+ IFS==
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -z '' ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ alias log-info=log_info
+ [[ export == \v\e\r\b\o\s\e ]]

+++ date +%s%N
++ alias log-warn=log_warn
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ dry_run=false
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias pause=pause
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
++ alias print-line=print
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ case "${target_platform}" in
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ alias print-file=print_file
+ (( i < count ))
+ echo
+ awk -v divisor=--MTc0ODk5ODUxNzUxOTE0NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ (( i++ ))
                    blk = "";
+ (( i < count ))
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ base64
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ IFS=,
++ echo 192.168.100.100
+++ base64
+ [[ -z true ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
object-group network MGMT-ACCESS
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ grep -F 10.0.0.1
+++ tr -dc a-zA-Z0-9
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ [[ -z '' ]]
+ local SCRIPT_DIR=./scripts
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ local script_filename=cisco-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ cat -n
++ which awk
++ echo -e --export
+ search_pattern=10.0.2.3
+ mkdir -p reports/10.0.2.3/cisco/.objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ sed '/^[[:space:]]*$/d'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODk5ODUxODA2MjY2MTAwMAo--
+ [[ platform =~ ^(export|r)$ ]]
++ divisor=--MTc0ODk5ODUxODA2MjY2MTAwMAo--
 description Management objects
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ local target_platform=cisco

++ [[ -n '' ]]
+ script_helper=false
object-group network Mutant-WiFi
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ search_terms=()
+ [[ platform =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ declare -a search_terms
+ [[ platform =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODk5ODUxODA2MzA0NDAwMAo--
+ [[ platform =~ ^(export|r)$ ]]
++ divisor=--MTc0ODk5ODUxODA2MzA0NDAwMAo--
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
++ alias network-extract--helper=network_extract__helper
++ alias warning-message=warning
++ alias network-configs--helper=network_configs__helper
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ nl='\n'
 description Controlled guest devices
+ [[ platform == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
 network-object host 10.10.10.10 ]]
++ export cache_location=.cache
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list != *,* ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ alias serialize-object=serialize_objects
+ newline
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ (( i++ ))
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ return 0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ alias parse-cisco=main
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/jobs
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ mkdir -p logs/console
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ [[ verbose == \d\e\b\u\g ]]

++ grep -v '^\s*$'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
version 12.2
hostname campus-sw-access01
+ [[ verbose =~ ^(extract|x)$ ]]
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(logger|l)$ ]]
+++ date +%s%N

+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ verbose == \h\e\l\p ]]
 network-object host 192.168.0.100
+ result=0
 network-object host 10.10.10.10'
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ 0 -ne 0 ]]
+ read -r key value
+ result=0
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ export =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ [[ export =~ ^(console|o)$ ]]
+ local 'indent=            '

version 12.2
+ [[ export =~ ^(export|r)$ ]]
hostname campus-sw-access01

+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
object-group network Floor-Networks
+ local export_objects=true
 description End-user and service devices
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
 network-object host 10.10.10.10 ]]
+ set -euo pipefail
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+++ base64
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local verbose=true
++ echo -e --verbose
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z '' ]]
+ dry_run=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ console_output=false
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ export LC_ALL=C
+ [[ export =~ ^(logger|l)$ ]]
+ local verbose=true
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ IFS=,
++ echo 192.168.1.10
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ tr -d '\r'
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+++ tr -dc a-zA-Z0-9
version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
+ awk -v divisor=--MTc0ODk5ODUxNzUzNDc5NDAwMAo-- '
                  BEGIN {
 network-object host 192.168.0.1
                    in_json_header = 0;
 network-object host 192.168.0.100
                    blk = "";
 network-object host 10.10.10.10
                  }

                  /^[[:space:]]*$/ { next }
object-group network Mutant-WiFi
                  /^{$/ { in_json_header = 1; next }
 description Controlled guest devices
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^}$/ {
 network-object host 10.10.10.10 ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ newline
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -en '{
+ local count=1
                    blk = $0;
  "vendor": "cisco",
                    next;
  "model": "",
                  }
  "version": "12.4",
                  {
  "domain": "",
                    blk = blk divisor " " $0;
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
                  }
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description Management objects
                  }
 network-object host 192.168.0.1
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
++ grep -v '^\s*$'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

++ sed -e '1s|^\(-\)\{1,\}||'
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ grep -F 10.0.2.3
+ export network_extract__console=console/network-extract.console
++ grep -v '^#'
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
+ case "${target_file}" in
+ search_terms=()
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--fg-branch-vpn-01.cfg.console
+ declare -a search_terms
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list != *,* ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
++ export console_location=console
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ which awk
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ sed '/^[[:space:]]*$/d'
+ for xitem in "${@}"
+ cat -n
+ IFS==
+ read -r key value
++ console_location=console
+ LC_ALL=C
++ mkdir -p console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ export == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ debug=false
+ IFS==
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ newline 2
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tuqhjjpjsv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=2
+ result=0
+ [[ logger =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console --export --verbose
+ (( i = 0 ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console --export --verbose
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ oIFS=' 	
'
+ [[ logger =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
'
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ newline
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ IFS==
+ local first_search_entry=192.168.0.1
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ for xitem in "${@}"
+ local count=1
+ read -r key value
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ true == true ]]
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ result=0
+ (( i < count ))
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cFPJ9aVQr5 ]]
+ local count=1
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cFPJ9aVQr5
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ return 0
+ (( i < count ))
+ mapfile -t search_terms
+ echo
++ export divisor=--MTc0ODk5ODUxODA3NDc0NTAwMAo--
++ divisor=--MTc0ODk5ODUxODA3NDc0NTAwMAo--
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ true == true ]]
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console ]]
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(export|r)$ ]]
+ local first_search_entry=192.168.2.12
++ mktemp -d
+ local 'indent=            '
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console

+ newline
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ local last_search_entry=192.168.2.12
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
domain-name global.dmz.example.net

+ [[ logger =~ ^(extract|x)$ ]]
interface GigabitEthernet0/1
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

+ (( i < count ))
object-group network Sector-Wireless
+ echo
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
  "model": "ASA",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'

interface GigabitEthernet0/1
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
 nameif inside
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ alias network-configs--helper=network_configs__helper

+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
object-group network Sector-Wireless
 description Staff WiFi clients
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.100.100
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 10.10.10.10 ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ logger == \d\e\b\u\g ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local last_search_entry=192.168.0.1
+ (( i++ ))
+ (( i < count ))
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
++ echo -e --export
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ local count=1
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 10.10.10.10'
+ [[ -n {
++ grep -v '^\s*$'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ grep -v '^#'
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ platform == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ [[ 5 -lt 4 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Eksr1PCVbv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Eksr1PCVbv
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ export actions_logfile=console/run.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ actions_logfile=console/run.console
+ export 'nl=\n'
++ touch console/run.console
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ nl='\n'
}

+ source ./scripts/devops-resources.shell
version 12.4
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias detect-vendor=detect_vendor
+ set -euo pipefail
+ export LC_ALL=C
++ alias exit-error=exit_error
+ LC_ALL=C
++ printf '%*s' 12 ''
++ which awk
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --config=.cache/resources/misc/switch1.conf
++ IFS=,
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo 203.0.113.25
++ alias network-extract--helper=network_extract__helper
++ alias print-message=message
++ alias print-newline=newline
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local 'indent=            '
ASA Version 9.14(3)
hostname perimeter-fw1
++ alias pause=pause
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
++ alias print-line=print
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local 'indent=            '
++ alias print-file=print_file
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ alias serialize-object=serialize_objects
++ alias relative-configpath=relative_configpath
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
++ alias system-metrics=system_metrics
++ which awk
+ [[ true == true ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(config|c)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
++ logs_location=logs
++ echo -e --platform=fortinet
++ mkdir -p logs/jobs
+ [[ search =~ ^(export|r)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ [[ search =~ ^(extract|x)$ ]]
  "version": "",
+ local 'extracted_configuration={
+ local 'extracted_configuration={
++ mktemp -d
  "vendor": "cisco",
hostname access-sw1-west
+ alias parse-cisco=main
  "vendor": "cisco",
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(config|c)$ ]]

  "model": "",
+ [[ -z x ]]
+ export logs_location=logs
+ [[ logger =~ ^(config|c)$ ]]
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ which awk
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.2.12
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P2TcuUhTKA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P2TcuUhTKA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ export 'nl=\n'
+ nl='\n'
+ newline
+ source ./scripts/devops-resources.shell
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ [[ -n '' ]]
+ echo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo
+ [[ search =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
  "domain": "",
  "hostname": ""
}
+ [[ search =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
++ alias exit-error=exit_error
 network-object 192.168.2.0 255.255.255.0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
 network-object host 192.168.2.12

+ [[ search == \h\e\l\p ]]
object network Kent-Server
+ [[ search == \d\e\b\u\g ]]
 host 10.0.2.3
+ [[ search == \d\r\y\-\r\u\n ]]
 description Internal mail & identity services'
+ [[ search == \v\e\r\b\o\s\e ]]
  "model": "ASA",
  "version": "9.12(4)",
+ for xitem in "${@}"
+ result=0
+ [[ -n {
+ [[ logger =~ ^(console|o)$ ]]
++ alias list-file=list_file
  "vendor": "cisco",
+ [[ logger =~ ^(export|r)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ logger =~ ^(extract|x)$ ]]
interface Vlan1
  "version": "16.9",
++ alias log-error=log_error
 ip address 192.168.0.1 255.255.255.0
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
  "domain": "",
}
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ alias print-message=message
+ declare -a execute__netwowrk_extract
++ alias print-newline=newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias pause=pause
+ echo
++ alias print-line=print
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local awk_bin=/usr/bin/awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias print-file=print_file
+ local target_config=.cache/resources/misc/switch1.conf
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
+ IFS==
+ [[ config =~ ^(console|o)$ ]]

+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
  "hostname": "branch-isr-02"
+ read -r key value
+ output_dir=reports/192.168.0.100/cisco
 description Management Interface
++ alias relative-configpath=relative_configpath
ASA Version 9.12(4)
  "version": "",
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ export logs_location=logs
+ [[ logger == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mkdir -p logs/jobs
+ IFS==
+ print '{
+ read -r key value
  "vendor": "cisco",
}

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
version 16.9
  "model": "ASA",

+ local 'extracted_configuration={
hostname branch-isr-02
hostname dmz-fw2-backup
  "vendor": "fortinet",
object-group network MGMT-ACCESS
  "version": "9.14(3)",
  "domain": "",
  "domain": "edge.dc.example.com",
  "hostname": ""
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "perimeter-fw1"
}
+ output_dir=reports/192.168.1.10/fortinet
}
+ [[ platform =~ ^(config|c)$ ]]

++ IFS=,
ASA Version 9.14(3)
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
hostname perimeter-fw1

domain-name edge.dc.example.com
  "model": "FortiGate-60F",
+ [[ platform =~ ^(console|o)$ ]]
++ echo 198.51.100.75
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export console_location=console
  "version": "v7.2.5.F",
+ local awk_bin=/usr/bin/awk

+ ((  count == 0  ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
domain-name global.dmz.example.net
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.817qcCBpVk


object-group network Watchtower-DMZ
+ [[ ! -d reports/192.168.1.10/fortinet ]]
interface GigabitEthernet0/0/0
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.817qcCBpVk
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
 description Management objects
 ip address 172.16.1.6 255.255.255.0
 network-object host 192.168.0.1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 network-object host 192.168.0.100
 description ISP uplink
+ [[ platform =~ ^(export|r)$ ]]
 description Global secure relay
++ console_location=console
 network-object host 192.0.2.50'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 10.10.10.10 ]]
object-group network Panther-Edge
object-group network Metropolis-Internal
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
  "domain": "",

++ mkdir -p console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 description Internet-facing proxy systems
+ [[ platform =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
+ export 'nl=\n'
 description WAN firewall entry point'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
  "version": "9.14(3)",
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
  "domain": "edge.dc.example.com",
+ local target_platform=fortinet
  "hostname": "perimeter-fw1"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
}
+ script_filename=network-extract.shell

+ [[ platform =~ ^(search|s)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ script_filename=network-extract
domain-name edge.dc.example.com
++ IFS=,
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
++ printf '%*s' 12 ''
++ echo -e --export
+ export network_extract__console=console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ network_extract__console=console/network-extract.console
+ [[ platform == \d\r\y\-\r\u\n ]]

+ result=0
++ echo 172.18.1.20
+ touch console/network-extract.console
+ [[ platform == \v\e\r\b\o\s\e ]]
object-group network Panther-Edge
+ for xitem in "${@}"
 description Core internal LAN for application clusters
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
 description Internet-facing proxy systems
 network-object host 10.0.2.3
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
 network-object 192.168.2.0 255.255.255.0
  "hostname": "fg-branch-vpn-01"
++ alias detect-vendor=detect_vendor
 network-object host 203.0.113.25
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
}
object network BlackWidow-Core
 network-object host 172.16.0.5
++ alias exit-error=exit_error

object network Magneto-Core
+ [[ logger =~ ^(logger|l)$ ]]
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "ASA",
+ [[ logger == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
  "version": "9.14(3)",
+ [[ logger == \d\e\b\u\g ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ alias list-file=list_file
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'indent=            '
}
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'

+ [[ logger == \v\e\r\b\o\s\e ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
ASA Version 9.14(3)
++ alias log-error=log_error
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]

+ [[ -n {
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
object-group network Panther-Edge
++ alias log-info=log_info
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.2.12
+ IFS==
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
 description Internet-facing proxy systems
+ read -r key value
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ alias log-warn=log_warn

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ alias print-message=message
++ alias print-newline=newline
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'

object network Kent-Server
 host 10.0.2.3
++ alias pause=pause
++ printf '%*s' 12 ''

 description Internal mail & identity services ]]
++ alias print-line=print
#hostname="fg-branch-vpn-01"
 host 172.16.1.6
#model="FortiGate-60F"
 description Branch router uplink NAT'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ which awk
+ [[ true == true ]]
++ alias print-file=print_file
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++ export targets_location=targets
+ result=0
  "vendor": "cisco",
++ alias relative-configpath=relative_configpath
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "model": "ASA",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'indent=            '
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
++ alias system-metrics=system_metrics
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo

+ local count=1
config firewall address
+ (( i++ ))
+ [[ -n {
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
++ alias validate-address=validate_address
++ echo -e --export
  "vendor": "cisco",
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
  "model": "",
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ echo
++ export logs_location=logs
++ logs_location=logs
+ (( i++ ))
++ mkdir -p logs/jobs
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
 edit "IronMan-HQ"
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
 next
end'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ result=0
+ newline
  "version": "9.12(4)",
+ local count=1
++ targets_location=targets
+ message '                .cache/resources/misc/switch1.conf'
+ local count=1
+ (( i = 0 ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
  "domain": "global.dmz.example.net",
+ [[ -n {
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "fortinet",
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ export console_location=console
+ (( i < count ))
++ console_location=console
++ mkdir -p console
+ print '{
  "vendor": "cisco",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
  "version": "16.9",
+ [[ -n {
++ touch console/run.console
  "domain": "",
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ local 'extracted_configuration={
  "vendor": "cisco",
  "hostname": "access-sw1-west"
}

  "model": "",
version 12.4
hostname access-sw1-west

+ (( i = 0 ))
interface Vlan1
  "hostname": "dmz-fw2-backup"
}
+ local awk_bin=/usr/bin/awk
 ip address 192.168.0.1 255.255.255.0

 description Management Interface

+ (( i < count ))
object-group network MGMT-ACCESS
ASA Version 9.12(4)
 description Management objects
++ echo -e --export
+ echo -e '                .cache/resources/misc/switch1.conf'
 network-object host 192.168.0.1
++ export targets_logfile=.cache/targets.jobs
 network-object host 192.168.0.100
++ targets_logfile=.cache/targets.jobs
+ newline
  "model": "FortiGate-60F",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
 network-object host 10.10.10.10 ]]
+ (( i = 0 ))
  "version": "v7.2.5.F",
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "domain": "",
+ echo -en '{
  "hostname": "fg-branch-vpn-01"
  "vendor": "cisco",
  "model": "",
  "model": "",
  "hostname": "branch-isr-02"
}
  "version": "12.4",

  "domain": "",
version 16.9
  "hostname": "access-sw1-west"
hostname branch-isr-02
}

  "version": "",
+ [[ export =~ ^(config|c)$ ]]
+ print '{
  "domain": "",
+ echo
+ local awk_bin=/usr/bin/awk

interface GigabitEthernet0/0/0
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
version 12.4
+ newline 2
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(console|o)$ ]]
hostname access-sw1-west
  "vendor": "cisco",
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
  "model": "",
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ export =~ ^(export|r)$ ]]
  "version": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tuqhjjpjsv/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "domain": "",

  "hostname": ""
interface Vlan1
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
}
 ip address 192.168.0.1 255.255.255.0

}
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"

object-group network Metropolis-Internal
 description Management Interface

 description Core internal LAN for application clusters
object-group network MGMT-ACCESS
 network-object host 10.0.2.3
 description Management objects
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.0.1
 network-object host 192.168.2.12
 network-object host 192.168.0.100

 network-object host 10.10.10.10'
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ sed '1{/^[[:space:]]*$/d;}'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console --export --verbose
+ [[ -n {
  "vendor": "cisco",

  "model": "",
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "16.9",
  "domain": "",
 network-object 192.168.2.0 255.255.255.0
  "hostname": "branch-isr-02"
+ echo
}
 ip address 172.16.1.6 255.255.255.0
  "hostname": ""
+ message '                .cache/resources/cisco/branch-isr-02.cfg'

+ oIFS=' 	
+ (( i++ ))
'
version 16.9
 network-object host 192.168.2.12
 description ISP uplink
+ for xitem in "${@}"


+ IFS==
object-group network Watchtower-DMZ
+ local export_objects=true
object network BlackWidow-Core
++ dirname -- ./scripts/network-extract.shell
config firewall address
+ read -r key value
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
}

+ [[ extract =~ ^(config|c)$ ]]
interface Vlan1
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
hostname branch-isr-02
+ local 'indent=            '
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ date +%s%N
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console

object-group network Lantern-DMZ
++ touch console/run.console
+ newline
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ (( i < count ))
+ echo
++ export targets_location=targets
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ local count=2
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+++ base64
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_location=targets
 description Global secure relay
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
 host 172.16.1.6
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
 description Branch router uplink NAT ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local export_objects=true
 edit "IronMan-HQ"
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
 ip address 172.31.255.254 255.255.255.0'
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ result=0
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ [[ -n {
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
+ local SCRIPT_DIR=./scripts
  "version": "",
+ [[ export =~ ^(platform|p)$ ]]
  "domain": "",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": ""
+ [[ export =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
++ echo -e --platform=cisco
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ (( i = 0 ))
+ IFS==
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+++ tr -dc a-zA-Z0-9
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i++ ))
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
 description Protected but public-facing zone
+ local count=1
+ newline 2
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
 network-object host 192.0.2.50 ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local 'extracted_configuration={
 next
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ [[ true == true ]]
}
ASA Version 9.12(4)
+ [[ export == \h\e\l\p ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ export == \d\e\b\u\g ]]

+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ result=0
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
 network-object host 172.18.1.20
+ [[ export =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
 network-object host 192.168.1.11'
+ newline 2
+ [[ export =~ ^(export|r)$ ]]
+ local 'indent=            '
+++ date +%s%N
+ local export_objects=true
+ local script_filename=cisco-configs.awk
+ local count=2
+ [[ config == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
end ]]
interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ export actions_logfile=console/run.console
+ [[ export == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ local 'extracted_configuration={
  "vendor": "cisco",
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ touch console/run.console
  "model": "",
  "version": "12.2",
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
  "domain": "",
  "hostname": "campus-sw-access01"
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
}

+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --export
+ IFS==
+ newline
+ result=0
+ local count=1
+ [[ -n {
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ print '{
  "vendor": "cisco",
object network Sentinel-NAT
  "model": "",
++ echo -e --verbose
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+++ base64

 host 203.0.113.25
version 16.9
hostname branch-isr-02
+ print '{
 description Corporate NAT edge'
  "vendor": "cisco",
  "model": "ASA",

  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
  "hostname": "dmz-fw2-backup"
 description ISP uplink
}


object network BlackWidow-Core
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 host 172.16.1.6
+ [[ -n {
  "vendor": "cisco",
 network-object host 192.0.2.50'
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
 description Branch router uplink NAT'
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
++ sed -e '1s|^\(-\)\{1,\}||'
 host 203.0.113.25
+ [[ -n {
 description Corporate NAT edge ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ -n {
  "vendor": "cisco",
  "domain": "global.dmz.example.net",
  "model": "",
  "hostname": "dmz-fw2-backup"
  "version": "16.9",
+ echo -en '{
  "domain": "",
  "vendor": "cisco",
  "hostname": "branch-isr-02"
  "model": "ASA",
}
}

  "version": "9.12(4)",
version 16.9
  "domain": "global.dmz.example.net",
hostname branch-isr-02
  "hostname": "dmz-fw2-backup"

}
interface GigabitEthernet0/0/0

 ip address 172.16.1.6 255.255.255.0
ASA Version 9.12(4)
 description ISP uplink

hostname dmz-fw2-backup
  "vendor": "cisco",

+ [[ search =~ ^(config|c)$ ]]
ASA Version 9.12(4)
domain-name global.dmz.example.net
object network BlackWidow-Core
hostname dmz-fw2-backup
 host 172.16.1.6
++ export targets_location=targets
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
domain-name global.dmz.example.net
 description Branch router uplink NAT ]]
+ [[ export =~ ^(logger|l)$ ]]

++ targets_location=targets

+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
object-group network Watchtower-DMZ
+ echo -en '{
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
  "vendor": "cisco",
object network Sentinel-NAT
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
 host 203.0.113.25
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
version 12.2
  "model": "",
+ [[ search =~ ^(logger|l)$ ]]
++ targets_logfile=.cache/targets.jobs
 description Global secure relay
 description Corporate NAT edge'
hostname campus-sw-access01
+ [[ search =~ ^(platform|p)$ ]]
 network-object host 192.0.2.50 ]]
+ IFS==
  "version": "16.9",
+ [[ search =~ ^(search|s)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
hostname branch-isr-02

+ [[ search == \h\e\l\p ]]
interface GigabitEthernet0/0/0
+ read -r key value
+ echo -en '{
  "vendor": "cisco",
 ip address 172.16.1.6 255.255.255.0
+ [[ search == \d\e\b\u\g ]]
  "model": "ASA",
 description ISP uplink
  "version": "9.12(4)",

  "domain": "global.dmz.example.net",
object network BlackWidow-Core
  "hostname": "dmz-fw2-backup"
 host 172.16.1.6
}
 description Branch router uplink NAT'

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(platform|p)$ ]]
++ which awk
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
  "model": "",
  "version": "16.9",
  "domain": "",
++ export divisor=--MTc0ODk5ODUxODExOTE1NTAwMAo--
++ divisor=--MTc0ODk5ODUxODExOTE1NTAwMAo--
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ local count=2
+ echo
++ [[ -n '' ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))

object-group network Floor-Networks
+ newline
+ read -r key value
 description End-user and service devices
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ print '{
+ (( i < count ))
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}

interface Vlan1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'extracted_configuration={

+ local 'extracted_configuration={
object-group network Lantern-DMZ
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
 ip address 172.31.255.254 255.255.255.0'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n {
+ for xitem in "${@}"
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
++ export targets_location=targets
+ read -r key value
++ targets_location=targets
++ which awk
++ export targets_logfile=.cache/targets.jobs
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(config|c)$ ]]
 network-object host 10.10.10.10'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ result=0
+ local export_objects=true
+ [[ -n {
  "vendor": "cisco",
+ [[ export =~ ^(extract|x)$ ]]
  "model": "",
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ export =~ ^(search|s)$ ]]
  "vendor": "cisco",
 description Protected but public-facing zone
+ [[ export == \h\e\l\p ]]
  "model": "",
 network-object host 172.18.1.20
+ [[ export == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
 network-object host 192.168.1.11 ]]
  "model": "",
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "16.9",
+ [[ true == true ]]
++ export divisor=--MTc0ODk5ODUxODEyNDU4NTAwMAo--
  "domain": "",
+ [[ verbose =~ ^(console|o)$ ]]
++ divisor=--MTc0ODk5ODUxODEyNDU4NTAwMAo--
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
+ [[ verbose =~ ^(export|r)$ ]]
 description Branch NAT egress
+ [[ verbose =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(logger|l)$ ]]

object-group network Hydra-Edge
+ print '{
  "vendor": "fortinet",
 description Remote site uplink
++ echo -e --config=.cache/resources/misc/fw3.cfg
 network-object host 192.168.2.12
++ [[ -n '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 198.51.100.75'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ readonly __DEVOPS_HELPERS_SOURCED=1
  "domain": "",
++ __DEVOPS_HELPERS_SOURCED=1
  "hostname": "fg-branch-vpn-01"
+ result=0
}

++ [[ 5 -lt 4 ]]
+ [[ -n {
  "vendor": "cisco",
#hostname="fg-branch-vpn-01"
  "model": "",
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ alias parse-listings--helper=parse_listings__helper

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+++ base64
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
  "version": "16.9",
}
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ verbose == \h\e\l\p ]]

+ [[ verbose == \d\e\b\u\g ]]
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\r\y\-\r\u\n ]]
#model="FortiGate-60F"
+ [[ verbose == \v\e\r\b\o\s\e ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local verbose=true
++ alias parse-listings--helper=parse_listings__helper
config firewall address
version 16.9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
 edit "IronMan-HQ"
hostname branch-isr-02
  set subnet 10.0.0.1 255.255.255.255

  set comment "Main node at Stark Tower"
 next
object network Hydra-Link
end ]]
 host 198.51.100.75
+ IFS=' 	
 description Branch NAT egress
  "version": "12.2",
+ echo -en '{
'
  "vendor": "fortinet",
  "model": "FortiGate-60F",

  "domain": "",
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
object-group network Hydra-Edge
  "version": "v7.2.5.F",
  "domain": "",
 description Remote site uplink
+ [[ -z '' ]]
 network-object host 192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ debug=false
++ alias network-configs--helper=network_configs__helper
 network-object host 198.51.100.75 ]]
+ [[ -z '' ]]
  "version": "16.9",
  "hostname": "fg-branch-vpn-01"
+ dry_run=false
+ newline 2
+ [[ -z true ]]
}

+ [[ -z '' ]]
#hostname="fg-branch-vpn-01"
+ export console_output=false
#model="FortiGate-60F"
+ console_output=false
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ alias network-configs--helper=network_configs__helper
config firewall address
+ [[ -z true ]]
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console ]]
  set comment "Main node at Stark Tower"
+ local count=2
 next
end'
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]]
+ search_terms=()
+ (( i = 0 ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ (( i++ ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ echo
++ echo -e --verbose
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+++ base64
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list != *,* ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ mapfile -t search_terms
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
  "version": "",
  "domain": "",
+ [[ -z x ]]
++ alias network-extract--helper=network_extract__helper
+ export logs_location=logs
  "hostname": ""
+ logs_location=logs
}

interface Vlan10
+ mkdir -p logs/console
 ip address 10.0.1.2 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+++ tr -dc a-zA-Z0-9
version 16.9
hostname branch-isr-02

+ alias serialize-object=serialize_objects
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
object-group network Hydra-Edge
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
 description Remote site uplink
 network-object host 192.168.2.12
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
 network-object host 198.51.100.75'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ [[ -n {
  "vendor": "cisco",

  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ config =~ ^(config|c)$ ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ local target_config=.cache/resources/misc/fw3.cfg
hostname branch-isr-02
+ [[ config =~ ^(console|o)$ ]]

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress
+ [[ config =~ ^(export|r)$ ]]

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 198.51.100.75'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export divisor=--MTc0ODk5ODUxODEzMTgzOTAwMAo--
+ read -r key value
++ divisor=--MTc0ODk5ODUxODEzMTgzOTAwMAo--
+ sed '1{/^[[:space:]]*$/d;}'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ logger =~ ^(config|c)$ ]]
  "domain": "",
+ [[ logger =~ ^(console|o)$ ]]
+ newline
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --verbose
++ tr -d '\r'
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ print '{
  "vendor": "cisco",
++ echo -e --verbose
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ alias serialize-object=serialize_objects
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODk5ODUxODEzNTQ0OTAwMAo--
++ divisor=--MTc0ODk5ODUxODEzNTQ0OTAwMAo--
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ local verbose=true
  "hostname": "perimeter-fw1"
}
++ [[ -n '' ]]
+ newline 2

+ IFS=' 	
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ newline
'
+ newline 2
++ __DEVOPS_HELPERS_SOURCED=1
+ alias parse-cisco=main
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ [[ -z x ]]
+ debug=false
+ export logs_location=logs
+ [[ -z '' ]]
+ logs_location=logs
+ dry_run=false
+ mkdir -p logs/console
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ grep -v '^#'
+ [[ -z true ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console ]]
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ result=0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ search_terms=()
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
++ alias network-configs--helper=network_configs__helper
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list != *,* ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
object-group network Floor-Networks
 description End-user and service devices
+ [[ -n {
ASA Version 9.14(3)
  "vendor": "cisco",
hostname perimeter-fw1
+ newline 2
  "hostname": "branch-isr-02"
+ mapfile -t search_terms
  "model": "",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
domain-name edge.dc.example.com
 network-object host 192.168.0.1
+ local count=1
+ local count=1
 network-object host 192.168.0.100
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
 network-object host 10.10.10.10 ]]
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias serialize-object=serialize_objects
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ echo -e --export
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ (( i < count ))
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.0.100
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
}

+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ newline 2
  "version": "",
object-group network Avengers-DMZ
+ (( i < count ))

+ echo
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
 description Public access layer
  "hostname": ""
version 16.9
++ IFS=,
+ (( i < count ))
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo 192.168.1.10
+ [[ verbose =~ ^(extract|x)$ ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ [[ verbose =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ local first_search_entry=172.16.0.5
 network-object 192.168.2.0 255.255.255.0'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local last_search_entry=172.16.0.5
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ declare -a execute__netwowrk_extract
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
}

+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
interface Vlan10
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
hostname branch-isr-02
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ local count=2

+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ] ]]
+ echo
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-configs--ips.list ]'
+ (( i = 0 ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ local count=1
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ echo
+ touch console/network-extract.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ result=0
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ extract =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local verbose=true
+ script_filename=network-extract.shell
+ [[ -z cisco ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ true == true ]]
+ IFS=' 	
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract
 ip address 10.0.1.2 255.255.255.0 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
object-group network Lantern-DMZ
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ newline
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ [[ -n {
+ [[ extract == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dob7fsjib5/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ grep -v '^#'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console --export --verbose
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ newline
+ oIFS=' 	
'
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
'
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ export network_extract__console=console/network-extract.console
+ debug=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ network_extract__console=console/network-extract.console
+ dry_run=false
+ [[ export == \h\e\l\p ]]
+ touch console/network-extract.console
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ read -r key value
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n {
+ (( i < count ))
+ local parent_dir=reports/203.0.113.25/cisco
+ script_filename=network-extract.shell
  "vendor": "cisco",
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
  "domain": "edge.dc.example.com",
+ newline
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local count=1
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ newline 2
  "model": "",
  "version": "16.9",
+ [[ -z '' ]]
  "domain": "",
+ export console_output=false
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
  "hostname": "branch-isr-02"
+ console_output=false
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ serialize_objects
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ [[ verbose == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
  "hostname": "perimeter-fw1"
version 12.2
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ verbose == \v\e\r\b\o\s\e ]]
hostname campus-sw-access01
+ local verbose=true
+ (( i++ ))

object-group network Floor-Networks
+ IFS=' 	
 description End-user and service devices
'
+ local count=2
 network-object host 192.168.0.1
+ [[ -z '' ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ local count=2

version 12.2
hostname campus-sw-access01
+ (( i = 0 ))

object-group network Floor-Networks
 description End-user and service devices
++ echo -e --platform=cisco
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ which awk
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

}
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
+ [[ -z true ]]
+ [[ 7 -eq 0 ]]
version 16.9

interface Vlan10
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nb02gpse4w/network-configs--ips.list =~ ^-*(h|help)$ ]]
 ip address 10.0.1.2 255.255.255.0'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console --export --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ newline
}
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ (( i < count ))
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ [[ 7 -eq 0 ]]
+ local count=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gvfiktvw0o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i = 0 ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ (( i < count ))
+ for xitem in "${@}"
+ (( i++ ))
+ echo
+ IFS==
+ read -r key value
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ debug=false
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -z '' ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ dry_run=false
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z true ]]
+ local search_pattern
+ [[ -z '' ]]
++ echo -e --platform=fortinet
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
hostname branch-isr-02
+ echo


ASA Version 9.14(3)
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
hostname perimeter-fw1
object-group network Lantern-DMZ
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
 description Protected but public-facing zone
+ serialize_objects
++ which awk
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ local parent_dir=reports/198.51.100.75/cisco
+ echo
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ieq23wrojb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console --export --verbose
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export console_output=false
+ console_output=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ oIFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local target_platform=cisco
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
  "model": "",
+ [[ search =~ ^(config|c)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ script_helper=false
+ newline
+ [[ search =~ ^(export|r)$ ]]
domain-name edge.dc.example.com

+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 172.18.1.20
+ [[ -z '' ]]
+ (( i < count ))
 network-object host 192.168.1.11 ]]
+ echo
+ [[ false == true ]]
+ [[ false == true ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Avengers-DMZ
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
  "version": "16.9",
 description Public access layer
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
 network-object host 192.0.2.50
+ script_helper=false
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ true == true ]]
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ IFS==
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 203.0.113.25
+ [[ search =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ IFS==
+ newline
+ read -r key value
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list
+ search_terms=()
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ search == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
  "hostname": "branch-isr-02"
+ serialize_objects
+ [[ search == \d\e\b\u\g ]]
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local verbose=true
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ IFS=' 	
'
+ serialize_objects
+ [[ -z '' ]]
+ newline
+ debug=false
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ console_output=false
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
}

+ [[ false == true ]]
version 16.9
++ cut -d/ -f2
hostname branch-isr-02

+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value

object-group network Hydra-Edge
 description Remote site uplink
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ output_dir=reports/172.16.0.5/misc
 network-object host 192.168.2.12
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ ! -d reports/172.16.0.5/misc ]]
 network-object host 198.51.100.75'
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local search_pattern
+ newline 2
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline 2
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_platform=fortinet
+ (( i++ ))
+ [[ platform =~ ^(search|s)$ ]]
++ tr -d '\r'
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ local parent_dir=reports/172.16.0.5/cisco
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ result=0
+ serialize_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ local count=2
+ (( i = 0 ))
  "hostname": "branch-isr-02"
+ (( i < count ))
}

+ local 'indent=            '
+ echo
version 16.9
+ [[ true == true ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ search_pattern=203.0.113.25
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ local count=2
+ [[ search == \h\e\l\p ]]
+ newline
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ local count=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
++ tr -d '\r'
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ grep -v '^\s*$'
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ grep -v '^#'
++ grep -v '^\s*$'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw3.cfg
hostname branch-isr-02

+ echo
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ (( i++ ))
 description Workstation LAN
+ (( i < count ))

object-group network Hydra-Edge
+ newline
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ newline
+ output_dir=reports/172.16.1.6/fortinet
+ local first_search_entry=10.0.0.1
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ echo
+ local 'indent=            '
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i++ ))
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local script_filename=cisco-configs.awk
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ newline
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local parent_dir=reports/10.0.2.3/misc
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODk5ODUxNzY0NjQ1NzAwMAo-- '
                  BEGIN {
 description Remote site uplink
+ newline
                    in_json_header = 0;
 network-object host 192.168.2.12
+ local count=1
                    blk = "";
+ (( i = 0 ))
                  }
+ [[ true == true ]]
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
+ search_pattern=198.51.100.75
                  /^{$/ { in_json_header = 1; next }
+ echo
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
                  /^}$/ {
+ local parent_dir=reports/192.168.0.1/cisco
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ local target_config=.cache/resources/misc/fw1.cfg
+ (( i++ ))
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ (( i < count ))
                    if (in_json_header == 1) {
+ [[ config =~ ^(console|o)$ ]]
+ mkdir -p reports/198.51.100.75/cisco/.objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
+ serialize_objects
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ config =~ ^(export|r)$ ]]
                      in_json_header = 0;
                      next;
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
                    }
                  }
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
                  (in_json_header == 1) { next }
+ [[ config =~ ^(extract|x)$ ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
                    blk = $0;
                    next;
                  }
+ [[ config =~ ^(logger|l)$ ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ config =~ ^(platform|p)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ ls -al --color=auto .cache/resources/misc/switch1.conf
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ print '{
+ (( i++ ))
  "vendor": "cisco",
+ [[ config == \v\e\r\b\o\s\e ]]
  "model": "ASA",
+ (( i < count ))
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ for xitem in "${@}"
  "hostname": "perimeter-fw1"
+ IFS==
}
+ read -r key value

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
++ echo -e --export
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
+ local count=2
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
 network-object host 198.51.100.75 ]]
  "version": "9.14(3)",
+ grep -F 203.0.113.25
  "domain": "edge.dc.example.com",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local first_search_entry=10.10.10.10
+ (( i = 0 ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
+ (( i < count ))
  "hostname": "perimeter-fw1"
}

+ [[ search =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
domain-name edge.dc.example.com

object-group network Avengers-DMZ
+ [[ search =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 description Public access layer
++ which awk
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
 network-object host 192.0.2.50
+ [[ false == true ]]
 network-object host 203.0.113.25
+ local last_search_entry=10.10.10.10
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ true == true ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo -en '{
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ search =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ search == \d\e\b\u\g ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ echo
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ IFS==
+ read -r key value
+ local first_search_entry=192.168.0.1
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local last_search_entry=192.168.0.1
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
+ newline
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ dirname reports/172.31.255.254/misc/switch1.conf
++ basename reports/10.0.2.3/misc/fw1
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ local count=1
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local export_objects=true
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ IFS==
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ] ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local count=1
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ export == \h\e\l\p ]]
+ serialize_objects
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ export == \v\e\r\b\o\s\e ]]
+ serialize_objects
+ for xitem in "${@}"
+ local search_pattern
+ local SCRIPT_DIR=./scripts
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
+ local script_filename=fortinet-configs.awk
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
+ result=0
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ [[ 0 -ne 0 ]]

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'

+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
interface GigabitEthernet0/0/1
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 description Remote site uplink
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.2.12
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 198.51.100.75 ]]
+ newline
+ local count=1
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -en '{
+ (( i < count ))
+ (( i = 0 ))
+ local parent_dir=reports/172.16.1.6/cisco
  "vendor": "cisco",
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
  "model": "",
  "version": "16.9",
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
  "domain": "",
++ IFS=,
+ echo
  "hostname": "branch-isr-02"
+ local 'prompt_message=Enter configuration file to be parsed: '
}

version 16.9
hostname branch-isr-02

+ (( i++ ))
interface GigabitEthernet0/0/1
++ echo 172.16.0.5
+ (( i < count ))
 ip address 192.168.2.12 255.255.255.0
+ awk -v divisor=--MTc0ODk5ODUxNzY0OTM5MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
 description Workstation LAN
                    blk = "";

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
                  }
 network-object host 198.51.100.75'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ grep -F 198.51.100.75
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ newline
+ local count=1
++ which awk
+ (( i = 0 ))
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ true == true ]]
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z fortinet ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ which awk
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local parent_dir=reports/172.31.255.254/misc
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ sed '/^[[:space:]]*$/d'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat -n
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/10.0.0.1/misc/switch1.conf
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local search_pattern
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/192.0.2.50/cisco
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ result=0
+ [[ logger == \h\e\l\p ]]
+ [[ 0 -ne 0 ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
++ IFS=,
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
++ echo 172.16.1.6
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.0.0.1/misc
+ return 0
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ basename reports/172.31.255.254/misc/switch1
++ printf '%*s' 12 ''
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ local target_platform=cisco
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ for xitem in "${@}"
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console ]]
++ echo -e --platform=cisco
+ local 'indent=            '
+ [[ -z '' ]]
+ [[ true == true ]]
+ script_helper=false
+ [[ false == true ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ newline
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ (( i < count ))
+ newline 2
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list != *,* ]]
+ echo
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local parent_dir=reports/172.18.1.20/cisco
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ which awk
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ command -v -- ./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
++ cut -d/ -f2
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ local target_config=.cache/resources/misc/fw1.cfg
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local search_pattern
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ cat -n
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ result=0
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ [[ -n {
++ cut -d/ -f2
++ grep -v '^\s*$'
+ local awk_bin=/usr/bin/awk
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
}
+ [[ platform =~ ^(config|c)$ ]]

+ [[ platform =~ ^(config|c)$ ]]
#hostname="fg-branch-vpn-01"
+ local count=2
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/10.0.0.1/fortinet
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ newline
+ local target_platform=cisco
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
#model="FortiGate-60F"
+ [[ platform == \h\e\l\p ]]
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ IFS==
+ read -r key value
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ return 0
+ search_pattern=172.16.0.5
+ local search_pattern
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ newline
++ echo reports/10.0.2.3/misc/fw1.cfg
+ [[ true == true ]]
+ [[ false == true ]]
+ local count=1
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ [[ true == true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ echo
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console ]]
+ IFS==
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ config =~ ^(platform|p)$ ]]
+ local search_pattern
+ (( i < count ))
+ read -r key value
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ printf '%*s' 12 ''
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
++ cut -d/ -f2
+ local 'indent=            '
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'

+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
config firewall address
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ newline
+ echo
  set comment "Wakandan data store"
+ local count=1
 next
+ (( i++ ))
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ serialize_objects
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local 'extracted_configuration={
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ message '             -f ./scripts/extract/fortinet-configs.awk \'

version 12.4
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
hostname access-sw1-west

+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
interface Vlan100
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
 ip address 192.168.0.100 255.255.255.0
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ config == \d\e\b\u\g ]]
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
 description Guest VLAN Gateway
+ [[ config == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
object-group network MGMT-ACCESS
 description Management objects
+ local count=1
 network-object host 192.168.0.1
+ (( i++ ))
++ which awk
+ (( i < count ))
end ]]
+ echo
+ IFS==
+ (( i = 0 ))
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
+ [[ logger =~ ^(logger|l)$ ]]
  "model": "",
  "version": "",
  "domain": "",
+ search_pattern=192.168.0.1
+ [[ false == true ]]
  "hostname": ""
}
+ [[ true == true ]]

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
 network-object host 192.168.0.100
+ mkdir -p reports/192.168.0.1/cisco/.objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
object-group network Panther-Edge
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 172.16.0.5
+ [[ logger =~ ^(search|s)$ ]]

+ read -r key value
object network Edge-Terminal
+ [[ logger == \h\e\l\p ]]
 network-object host 10.10.10.10'
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ logger == \d\e\b\u\g ]]
++ cut -d/ -f2
+ [[ -n {
  "vendor": "cisco",
+ [[ logger == \d\r\y\-\r\u\n ]]
+ result=0
  "model": "",
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ IFS==
+ read -r key value
+ newline
+ local search_pattern
+ local count=1
+ [[ -n {
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ local first_search_entry=192.168.1.10
++ echo reports/172.31.255.254/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=192.168.1.10
+ (( i < count ))
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ newline
+ result=0
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hw8OQUEKta ]]
+ (( i < count ))
  "version": "12.4",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hw8OQUEKta
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ echo
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
  "hostname": "access-sw1-west"
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local count=1
}
+ ((  count == 0  ))
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local search_pattern
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ cut -d/ -f2
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ echo -e --export
#hostname="fg-branch-vpn-01"
+ local 'prompt_message=Enter configuration file to be parsed: '
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ search_pattern=10.0.2.3
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ mkdir -p reports/10.0.2.3/misc/.objects
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]

+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console ]]
+ serialize_objects
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--branch-isr-02.cfg.console
+ print '{
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
++ echo -e --export
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
+ IFS=' 	
'
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list != *,* ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ mapfile -t search_terms
+ IFS==
+ IFS==
++ echo -e --export
+ read -r key value
+ read -r key value
++ cut -d/ -f2
++ cut -d/ -f2
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger == \h\e\l\p ]]
+ newline 2
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ] ]]
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ (( i = 0 ))
+ local export_objects=true
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ [[ verbose =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ [[ export =~ ^(search|s)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local count=2
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local first_search_entry=10.10.10.10
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ IFS==
+ local last_search_entry=10.10.10.10
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ IFS=' 	
+ (( i++ ))
'
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ debug=false
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ dry_run=false
+ newline
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ local count=1
+ newline
+ IFS==
+ [[ true == true ]]
+ (( i = 0 ))
+ read -r key value
+ local count=1
+ [[ -z '' ]]
+ [[ true == true ]]
+ export console_output=false
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ tr -d '\r'
+ console_output=false
+ echo
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ false == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ which awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z fortinet ]]
+ alias parse-cisco=main
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
++ echo -e --export
++ grep -v '^\s*$'
++ echo -e --export
+ search_terms=()
+ declare -a search_terms
+ [[ -z x ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ [[ true == true ]]
+ export logs_location=logs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list != *,* ]]
+ logs_location=logs
++ tr -d '\r'
+ mkdir -p logs/console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ mapfile -t search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --export
+ [[ export =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local export_objects=true
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ export =~ ^(extract|x)$ ]]
+ newline
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ export =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ echo
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ IFS==
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--perimeter-fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ echo -e --verbose
+ serialize_objects
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ printf '%*s' 12 ''
++ echo -e --verbose
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(config|c)$ ]]
+ local export_objects=true
+ local first_search_entry=10.0.2.3
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.2.3
+ local first_search_entry=192.168.1.11
+ [[ export =~ ^(search|s)$ ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local last_search_entry=192.168.1.11
+ [[ true == true ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ script_filename=network-extract
+ [[ export == \d\r\y\-\r\u\n ]]
+ export network_extract__console=console/network-extract.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ network_extract__console=console/network-extract.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ] ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ] ]]
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
+ newline
+ IFS==
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-configs--ips.list ]'
+ [[ export =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local export_objects=true
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ export =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-configs--ips.list ]'
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ export == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ ((  count == 0  ))
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ echo -e --verbose
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ IFS==
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ debug=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ -z '' ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ dry_run=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z cisco ]]
+ [[ -z true ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ export console_output=false
+ [[ true == true ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ search =~ ^(logger|l)$ ]]
+ serialize_objects
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose == \d\e\b\u\g ]]
+ search_pattern=172.31.255.254
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list
+ newline
+ local verbose=true
+ newline
+ [[ cfg == \c\f\g ]]
+ newline
+ local count=1
+ [[ -z true ]]
+ local count=1
+ IFS=' 	
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console ]]
+ (( i = 0 ))
'
+ [[ -z '' ]]
+ (( i = 0 ))
+ script_helper=false
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ false == true ]]
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
+ debug=false
+ search_pattern=10.0.0.1
+ search_terms=()
+ (( i++ ))
+ [[ -z '' ]]
+ declare -a search_terms
+ dry_run=false
+ [[ -z true ]]
+ echo
+ [[ -z '' ]]
+ export console_output=false
+ (( i++ ))
+ console_output=false
+ local first_search_entry=203.0.113.25
+ (( i < count ))
+ (( i < count ))
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -z true ]]
+ local last_search_entry=203.0.113.25
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list != *,* ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ mapfile -t search_terms
+ [[ -z '' ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ script_helper=false
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ false == true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ case "${target_platform}" in
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ awk -v divisor=--MTc0ODk5ODUxNzU3MDI4NDAwMAo-- '
                  BEGIN {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ] ]]
                    in_json_header = 0;
+ local count=1
                    blk = "";
+ search_terms=()
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
                  }
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
                  /^{$/ { in_json_header = 1; next }
+ declare -a search_terms
                  /^}$/ {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list != *,* ]]
+ ((  count == 0  ))
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
                      next;
+ mapfile -t search_terms
                    }
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
                  }
                  (in_json_header == 1) { next }
+ local count=1
                  /^[^[:space:]]/ {
+ (( i = 0 ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
                    blk = $0;
+ (( i < count ))
                    next;
+ newline
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ local count=1
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ mkdir -p reports/172.31.255.254/misc/.objects
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local export_objects=true
+ echo
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ [[ export =~ ^(platform|p)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local 'prompt_message=Enter configuration file to be parsed: '
object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
++ echo -e --verbose
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ 7 -eq 0 ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nb02gpse4w/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ tr -d '\r'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ tr -d '\r'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -z '' ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export console_output=false
+ debug=false
+ [[ -z '' ]]
+ console_output=false
+ output_dir=reports/192.168.2.12/fortinet
+ dry_run=false
+ [[ -z true ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ oIFS=' 	
+ script_helper=false
+ [[ -z '' ]]
+ export console_output=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ grep -v '^#'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
++ grep -v '^#'
+ search_terms=()
+ [[ cfg == \c\f\g ]]
+ declare -a search_terms
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ output_dir=reports/192.168.0.1/cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
++ command -v -- ./scripts/network-extract.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ tr -d '\r'
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=172.16.1.6
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ local last_search_entry=172.16.1.6
  "model": "",
  "version": "",
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
  "domain": "",
  "hostname": ""
}
+ [[ true == true ]]

+ (( i < count ))
object-group network Fortress-Wireless
+ echo
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ (( i++ ))
++ tr -d '\r'
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ return 0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'
++ grep -v '^\s*$'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-configs--ips.list ]'
+ (( i++ ))
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ local count=1
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ -z fortinet ]]
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/switch3.conf ]]
 network-object host 192.168.1.10'
+ [[ -z cisco ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
+ output_dir=reports/192.168.1.11/fortinet
+ newline
  "model": "",
+ [[ ! -d reports/192.168.1.11/fortinet ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
+ local count=1
+ (( i = 0 ))
++ grep -v '^#'
 description Secure wireless access layer
+ (( i < count ))
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo
+ newline
+ (( i++ ))
+ echo -en '{
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "hostname": ""
}

+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local SCRIPT_DIR=./scripts
+ local search_pattern
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ local script_filename=fortinet-configs.awk
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list
+ local script_filename=cisco-configs.awk
+ [[ search == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search == \d\e\b\u\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local script_filename=cisco-configs.awk
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS==
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local first_search_entry=192.168.2.12
+ [[ search =~ ^(extract|x)$ ]]
+ local last_search_entry=192.168.2.12
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local first_search_entry=198.51.100.75
+ newline
+ local last_search_entry=198.51.100.75
+ local count=1
+ (( i = 0 ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
++ which awk
+ [[ true == true ]]
+ (( i < count ))
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
++ which awk
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo
+ (( i++ ))
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --verbose
++ cut -d/ -f2
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ newline 2
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local count=2
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/203.0.113.25/cisco
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
++ dirname -- ./scripts/network-extract.shell
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local parent_dir=reports/10.0.1.2/misc
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ echo
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ serialize_objects
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ (( i < count ))
+ case "${target_platform}" in
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ awk -v divisor=--MTc0ODk5ODUxNzYwNzk0MjAwMAo-- '
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
                  BEGIN {
+ ls -al --color=auto .cache/resources/misc/switch3.conf
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
                  }
                  (in_json_header == 1) { next }
+ [[ conf == \c\o\n\f ]]
                  /^[^[:space:]]/ {
+ final_output=reports/172.16.1.6/misc/switch3.conf
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ extract_location=reports/172.16.1.6/misc/switch3.conf
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
++ which awk
++ IFS=,
++ echo 192.168.0.1
++ IFS=,
++ echo 10.10.10.10
++ command -v -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ IFS=,
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo 192.168.2.12
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ result=0
+ [[ false == true ]]
+ exit 0
+ [[ true == true ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OTrh42ySDh ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OTrh42ySDh
+ local SCRIPT_DIR=./scripts
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
+ grep -F 172.16.0.5
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console ]]
+ [[ config =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ which awk
+ [[ config =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ which awk
+ read -r key value
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
++ which awk
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ which awk
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ newline
+ output_dir=reports/172.16.1.6/misc
+ local count=1
+ (( i = 0 ))
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 192.168.1.11
+ [[ ! -d reports/172.16.1.6/misc ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ false == true ]]
+ declare -a execute__netwowrk_extract
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ basename reports/10.0.1.2/misc/switch1
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local script_filename=cisco-configs.awk
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local awk_bin=/usr/bin/awk
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ serialize_objects
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ serialize_objects
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local awk_bin=/usr/bin/awk
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ extract_location=reports/10.0.0.1/misc/switch3.conf
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzU0NDA4ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
++ printf '%*s' 12 ''
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
++ which awk
+ (( i < count ))
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ grep -F 10.10.10.10
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.0.0.1/misc/switch3.conf
+ echo
+ local 'indent=            '
+ newline
+ output_dir=reports/192.168.2.12/fortinet
+ [[ true == true ]]
+ (( i++ ))
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ output_dir=reports/198.51.100.75/cisco
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ IFS=,
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo 10.0.2.3
+ set -euo pipefail
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local awk_bin=/usr/bin/awk
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ (( i = 0 ))
+ echo
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ local parent_dir=reports/172.18.1.20/misc
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ echo
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
+ grep -F 192.168.0.1
++ printf '%*s' 12 ''
++ which awk
+ local SCRIPT_DIR=./scripts
++ dirname -- ./scripts/network-extract.shell
+ script_helper=false
+ [[ false == true ]]
+ local script_filename=cisco-configs.awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ IFS=,
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
+ local 'indent=            '
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ search_terms=()
+ declare -a search_terms
++ echo 203.0.113.25
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/172.18.1.20/misc/fw1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ declare -a execute__netwowrk_extract
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ 0 -ne 0 ]]
++ which awk
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local search_pattern
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ local parent_dir=reports/192.168.2.12/cisco
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--MTc0ODk5ODUxNzU4ODY2NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ which awk
++ which awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ local count=2
+ (( i++ ))
++ echo -e --platform=fortinet
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local awk_bin=/usr/bin/awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ dirname -- ./scripts/network-extract.shell
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ local search_pattern
+ (( i < count ))
+ echo
+ [[ config == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ mapfile -t search_terms
+ [[ true == true ]]
+ cat -n
++ which awk
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ local awk_bin=/usr/bin/awk
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
 description End-user and service devices
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
++ IFS=,
+ local 'extracted_configuration={
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "model": "ASA",
++ echo 192.168.100.100
  "domain": "",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01


interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
ASA Version 9.12(4)
++ printf '%*s' 12 ''
 network-object host 192.168.0.1
hostname dmz-fw2-backup
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')

+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

object network Shield-WiFi-Alias
 host 10.10.10.10
+ newline
 description Guest NAT
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=1


config system interface
object-group network Sector-Wireless
+ (( i = 0 ))
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
 edit "Branch-Gateway"
++ printf '%*s' 12 ''
+ [[ platform =~ ^(platform|p)$ ]]
 description Staff WiFi clients
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
+ echo
++ IFS=,
 network-object host 192.168.100.100
++ echo reports/172.18.1.20/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
++ echo 172.16.1.6
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filename=cisco-configs.awk
+ local target_platform=fortinet
  set comment "Primary LAN gateway"
 next
 network-object host 10.10.10.10'
end'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ which awk
+ local 'indent=            '
+ result=0
+ [[ platform =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n {
  "vendor": "fortinet",
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ platform == \h\e\l\p ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
  "model": "FortiGate-60F",
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ result=0
+ declare -a execute__netwowrk_extract
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
  "version": "v7.2.5.F",
+ newline
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
  "domain": "",
+ local count=1
  "hostname": "fg-branch-vpn-01"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
}
+ for xitem in "${@}"
+ [[ -n {
+ (( i = 0 ))
+ IFS==
+ (( i < count ))

  "vendor": "cisco",
+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ read -r key value
#model="FortiGate-60F"
  "model": "ASA",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline

+ echo
config system interface
++ cut -d/ -f2
+ echo
  "version": "9.12(4)",
 edit "internal"
  "domain": "global.dmz.example.net",
  set ip 192.168.2.12 255.255.255.0
  "hostname": "dmz-fw2-backup"
  set alias "User LAN"
+ (( i++ ))
}
+ (( i < count ))
 next
+ print '{
+ (( i++ ))
+ local count=1
+ return 0

+ (( i < count ))
ASA Version 9.12(4)
+ (( i = 0 ))
end
  "vendor": "cisco",
hostname dmz-fw2-backup
  "model": "",
+ (( i < count ))

domain-name global.dmz.example.net
config firewall address
+ [[ true == true ]]
 edit "Branch-Gateway"
  "version": "12.2",
+ (( i = 0 ))
+ echo
  set subnet 192.168.2.12 255.255.255.255

+ local 'extracted_configuration={
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
  "domain": "",
+ (( i < count ))
  set comment "Primary LAN gateway"
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
 next
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console ]]
interface GigabitEthernet0/0
+ local parent_dir=reports/192.168.0.100/cisco
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i++ ))
  "vendor": "fortinet",
  "hostname": "campus-sw-access01"
end ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
  "model": "FortiGate-200F",
 nameif guest
}
  "version": "",
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console ]]

  "domain": "",
 ip address 10.10.10.10 255.255.255.0
  "hostname": "fg-campus-core"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
version 12.2

hostname campus-sw-access01
#hostname="fg-campus-core"
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
#model="FortiGate-200F"
+ case "${target_file}" in

 description Guest access interface
interface Vlan1

 ip address 192.168.0.1 255.255.255.0
config firewall address
 description Switch Mgmt
 edit "Cap-HQ"

  set subnet 192.168.1.11 255.255.255.255
object-group network Floor-Networks
  set comment "Captain America’s secure endpoint"
 description End-user and service devices
 network-object host 192.168.0.1
 next
 network-object host 192.168.0.100
end'
 network-object host 10.10.10.10'
++ mktemp -d
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "domain": "",
}
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]

+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "hostname": "fg-campus-core"

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ which awk
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
}

  "hostname": "campus-sw-access01"
#hostname="fg-campus-core"
}
#model="FortiGate-200F"


version 12.2
config firewall address
hostname campus-sw-access01
 edit "Cap-HQ"

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
  set subnet 192.168.1.11 255.255.255.255

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
  set comment "Captain America’s secure endpoint"
 next
end ]]
object network Shield-WiFi-Alias
 host 10.10.10.10
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
 description Guest NAT
++ IFS=,
++ which awk
++ echo 198.51.100.75
++ IFS=,
++ echo 192.168.2.12
++ echo reports/10.0.1.2/misc/switch1.conf
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ tr -d '\r'
+ declare -a execute__netwowrk_extract
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ declare -a execute__netwowrk_extract
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ local awk_bin=/usr/bin/awk
+ print '{
++ cut -d/ -f2
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
config firewall address
++ grep -v '^\s*$'
  "domain": "",
 edit "Cap-HQ"
  "hostname": "fg-branch-vpn-01"
  set subnet 192.168.1.11 255.255.255.255
}
  set comment "Captain America’s secure endpoint"

 next
#hostname="fg-branch-vpn-01"
++ sed -e '1s|^\(-\)\{1,\}||'
end'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ [[ -n {
  "vendor": "fortinet",

  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

object-group network Sector-Wireless
+ message '             -f ./scripts/extract/cisco-configs.awk \'
#hostname="fg-campus-core"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "domain": "",
 description Staff WiFi clients
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ search_pattern=172.18.1.20
#model="FortiGate-200F"
  "hostname": "fg-branch-vpn-01"

}
config firewall address

 edit "Cap-HQ"
+ mkdir -p reports/172.18.1.20/misc/.objects
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 next

 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
config system interface
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
 next
++ which awk
end
  "version": "",

  "domain": "",
  "hostname": "fg-campus-core"
config firewall address
}
 edit "Branch-Gateway"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"

 next
#hostname="fg-campus-core"
#model="FortiGate-200F"
end ]]

config firewall address
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ echo -en '{
  "vendor": "fortinet",
++ grep -v '^#'
  set comment "Captain America’s secure endpoint"
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
 next
end'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ newline
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ (( i++ ))
+ newline 2
+ (( i < count ))
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ local 'indent=            '
+ newline
+ [[ true == true ]]
+ local count=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ print '{
  "vendor": "cisco",
+ (( i++ ))
  "model": "ASA",
+ (( i++ ))
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
object network Shield-WiFi-Alias
 host 10.10.10.10
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
 description Guest NAT

+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 network-object host 10.10.10.10'
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ -n {
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
  "vendor": "cisco",
  "model": "ASA",
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ message '             -f ./scripts/extract/fortinet-configs.awk \'
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
domain-name global.dmz.example.net

+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
interface GigabitEthernet0/0
 nameif guest
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
 description Guest NAT

+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
object-group network Sector-Wireless
 description Staff WiFi clients
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -en '{
+ newline
  "vendor": "cisco",
  "model": "ASA",
+ local count=1
  "version": "9.12(4)",
+ (( i = 0 ))
  "domain": "global.dmz.example.net",
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
++ printf '%*s' 12 ''
+ echo
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i++ ))
domain-name global.dmz.example.net
+ (( i < count ))

++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ IFS=,
+ local awk_bin=/usr/bin/awk
+ local 'indent=            '
++ echo 10.0.0.1
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ search_pattern=10.0.1.2
+ [[ logger =~ ^(extract|x)$ ]]
  "model": "",
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
  "version": "",
+ [[ logger =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": ""
+ echo
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SSjaXkZAyv
}
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ declare -a execute__netwowrk_extract

+ mkdir -p reports/10.0.1.2/misc/.objects
+ newline 2
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
object-group network Wakanda-Core
+ local count=2
 description National Core Routing Zone
+ [[ logger == \h\e\l\p ]]
+ (( i = 0 ))
 network-object host 192.168.1.10
+ sed '/^[[:space:]]*$/d'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
 network-object host 10.0.2.3
+ echo
 network-object 10.0.0.0 255.255.255.0
+ [[ logger == \d\e\b\u\g ]]

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
object network Panther-Gateway
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
 host 10.0.2.3
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
 description Secure outbound concentrator'
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
+ grep -F 172.31.255.254
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
+ case "${target_platform}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ IFS==
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local first_search_entry=198.51.100.75
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ -n {
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
  "vendor": "cisco",
  "model": "",
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ awk -v divisor=--MTc0ODk5ODUxNzU3MzE2MzAwMAo-- '
+ read -r key value
  "version": "",
                    BEGIN {
                      blk = "";
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ newline
+ newline 2
  "domain": "",
+ local count=1
+ (( i < count ))
  "hostname": ""
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SSjaXkZAyv
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ (( i = 0 ))
                      in_json_header = 0;
}
                    }
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=2
                    # Skip blank lines

+ echo
+ (( i = 0 ))
++ printf '%*s' 12 ''
object-group network Wakanda-Core
                    /^[[:space:]]*$/ { next }
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'

+ (( i < count ))
 description National Core Routing Zone
+ echo
                    # Skip JSON preamble
+ (( i++ ))
                    /^{$/            { in_json_header = 1; next }
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/switch3.conf'

 network-object host 192.168.1.10
                    # Skip platform metadata
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ [[ true == true ]]
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
                    /^#(hostname|model|config-version)=/ { next }
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console

                    # Start of a new block
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console ]]
                    /^config / {
+ local 'message=                .cache/resources/misc/switch3.conf'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
object network Panther-Gateway
+ [[ config =~ ^(export|r)$ ]]
                      if (blk != "") print blk;
 host 10.0.2.3
+ echo -e '                .cache/resources/misc/switch3.conf'
+ echo
+ local 'indent=            '
                      blk = $0;
 description Secure outbound concentrator ]]
                      next;
                    }
+ local last_search_entry=198.51.100.75

++ which awk
+ (( i++ ))
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
++ printf '%*s' 12 ''
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ echo
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local count=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ echo
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i++ ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=2
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
+ serialize_objects
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
+ print '{
+ (( i < count ))
  "vendor": "cisco",
+ newline
+ echo
  "model": "",
+ local count=1
  "version": "",
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}
+ (( i++ ))
+ echo

object-group network Wakanda-Core
+ (( i++ ))
 description National Core Routing Zone
+ (( i < count ))
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ awk -v divisor=--MTc0ODk5ODUxNzcwNzgyNzAwMAo-- '
                  BEGIN {
  "hostname": ""
                    in_json_header = 0;
}
                    blk = "";

                  }
object-group network Wakanda-Core
                  /^[[:space:]]*$/ { next }
 description National Core Routing Zone
                  /^{$/ { in_json_header = 1; next }
 network-object host 192.168.1.10
                  /^}$/ {
 network-object host 10.0.2.3
                    if (in_json_header == 1) {
 network-object 10.0.0.0 255.255.255.0
                      in_json_header = 0;

                      next;
+ local 'extracted_configuration={
object network Panther-Gateway
                    }
 host 10.0.2.3
  "vendor": "cisco",
 description Secure outbound concentrator ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
                  }
+ echo -en '{
  "model": "ASA",
  "vendor": "cisco",
                  {
  "model": "",
                    blk = blk divisor " " $0;
  "version": "",
++ echo -e --export
                  }
  "domain": "",
                  END {
  "version": "9.14(3)",
  "hostname": ""
}
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "domain": "edge.dc.example.com",
+ (( i < count ))

  "hostname": "perimeter-fw1"
}
object-group network Wakanda-Core

                  }
ASA Version 9.14(3)
hostname perimeter-fw1
                ' reports/172.18.1.20/misc/fw1.cfg
domain-name edge.dc.example.com

 description National Core Routing Zone
interface GigabitEthernet0/0
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ local awk_bin=/usr/bin/awk
 description Internet-bound IP NAT
+ echo
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ grep -F 172.18.1.20
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console ]]
object-group network Avengers-DMZ
 description Public access layer
+ case "${target_file}" in
 network-object host 192.0.2.50
+ newline
 network-object host 203.0.113.25
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--branch-isr-02.cfg.console
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ local count=1
 description Internet-facing proxy systems
+ result=0
+ [[ config =~ ^(extract|x)$ ]]
+ exit 0
 network-object host 203.0.113.25
+ (( i = 0 ))
+ [[ true == true ]]
 network-object host 172.16.0.5 ]]
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ echo
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CIa942Rgcn ]]
+ (( i < count ))
+ local 'extracted_configuration={
+ [[ false == true ]]
  "vendor": "fortinet",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CIa942Rgcn
  "model": "FortiGate-200F",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
config system interface
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ serialize_objects
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ extract =~ ^(search|s)$ ]]
config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end
+ [[ extract == \h\e\l\p ]]

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ sed '/^[[:space:]]*$/d'
+ [[ extract == \d\e\b\u\g ]]
+ export 'nl=\n'
  set comment "Guest WiFi node"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ nl='\n'
 next
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
end
++ printf '%*s' 12 ''

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ local 'indent=            '
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ [[ true == true ]]

+ newline
object network NAT-Edge
 host 203.0.113.25
+ local count=1
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ newline
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ local count=1
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
}
+ (( i = 0 ))

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ (( i = 0 ))

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ (( i < count ))
object-group network Avengers-DMZ
+ echo
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ (( i < count ))

+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ (( i++ ))
object-group network Panther-Edge
+ (( i < count ))
  "vendor": "fortinet",
 description Internet-facing proxy systems
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ sed '1{/^[[:space:]]*$/d;}'
  "hostname": "fg-campus-core"
}

+ [[ false == true ]]
#hostname="fg-campus-core"
+ [[ export =~ ^(config|c)$ ]]
#model="FortiGate-200F"

+ newline 2
config system interface
+ [[ true == true ]]
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ [[ export =~ ^(console|o)$ ]]
  set alias "Wireless VLAN"
 next
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
 next
end

+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
config firewall address
 edit "Wanda-Field"
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  set subnet 192.168.100.100 255.255.255.255
+ newline
  set comment "Wanda’s chaos relay"
 next
+ local export_objects=true
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local count=2
end'
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-200F",
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
  "version": "",
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ message '                .cache/resources/misc/switch3.conf'
+ serialize_objects
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
  "domain": "",
+ (( i < count ))
  "hostname": "fg-campus-core"
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ echo
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ export == \h\e\l\p ]]
}
+ echo -e '                .cache/resources/misc/switch3.conf'
+ [[ export == \d\e\b\u\g ]]
+ echo
+ (( i++ ))
+ result=0

+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
#hostname="fg-campus-core"
  "model": "",
+ (( i < count ))
  "version": "",
#model="FortiGate-200F"

+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ [[ false == true ]]
  "hostname": ""
+ (( i = 0 ))
config system interface
}
+ [[ true == true ]]
+ [[ true == true ]]

+ for xitem in "${@}"
 edit "wifi"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ] ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
  set ip 192.168.100.100 255.255.255.0
+ (( i < count ))
interface Vlan2
  set alias "Wireless VLAN"
 ip address 172.16.1.6 255.255.255.0'
+ local search_pattern
 next
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo
end
+ result=0
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]

+ source ./scripts/devops-resources.shell
config firewall address
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ read -r key value
+ result=0
+ (( i < count ))
+ result=0
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
 edit "Titan-WLAN-Host"
+ [[ 0 -ne 0 ]]
  set subnet 192.168.100.100 255.255.255.255
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
  set comment "Guest WiFi node"
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
 next
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n {
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
  "vendor": "cisco",
end
  "model": "",
+ [[ 0 -ne 0 ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ 0 -ne 0 ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
  "version": "",
+ serialize_objects
+ [[ config =~ ^(platform|p)$ ]]

+ newline
+ local 'extracted_configuration={
  "domain": "",
config firewall address
 edit "Wanda-Field"
  "vendor": "fortinet",
+ [[ config =~ ^(search|s)$ ]]
  set subnet 192.168.100.100 255.255.255.255
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
  "model": "FortiGate-200F",
  "version": "",
  set comment "Wanda’s chaos relay"
  "domain": "",
 next
  "hostname": "fg-campus-core"
end ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local count=1
}
+ (( i = 0 ))

  "hostname": ""
}
+ (( i < count ))
+ [[ true == true ]]
++ basename reports/192.168.0.1/cisco/campus-sw-access01
#hostname="fg-campus-core"
+ echo -en '{

+ for xitem in "${@}"
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
interface Vlan2
  "vendor": "fortinet",
#model="FortiGate-200F"
+ echo
  "model": "FortiGate-200F",
+ grep -F 10.0.0.1

+ case "${target_file}" in
+ local 'extracted_configuration={
 ip address 172.16.1.6 255.255.255.0 ]]
++ [[ -n '' ]]
  "vendor": "cisco",
  "version": "",
  "model": "ASA",
config firewall address
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
  "domain": "",
  "hostname": "fg-campus-core"
  "version": "9.12(4)",
+ (( i++ ))
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
  "domain": "global.dmz.example.net",
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
  "hostname": "dmz-fw2-backup"
 edit "Vision-Link"
}
  set subnet 192.168.2.12 255.255.255.255
}
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
  set comment "Vision’s quantum channel"
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'


+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
 next
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.11/fortinet
+ newline
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ local count=1
end'
ASA Version 9.12(4)
#hostname="fg-campus-core"
hostname dmz-fw2-backup
#model="FortiGate-200F"
domain-name global.dmz.example.net
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'

+ (( i = 0 ))
config system interface

+ result=0
 edit "wifi"
interface GigabitEthernet0/2
 nameif outside
+ (( i < count ))
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
  set ip 192.168.100.100 255.255.255.0
+ [[ -n {
  set alias "Wireless VLAN"
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ result=0
 next
  "domain": "",
end

+ (( i++ ))
  "hostname": "fg-campus-core"
config firewall address
+ local count=1
+ (( i < count ))
 edit "Titan-WLAN-Host"
}
  set subnet 192.168.100.100 255.255.255.255

+ [[ config == \h\e\l\p ]]
#hostname="fg-campus-core"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
  set comment "Guest WiFi node"
#model="FortiGate-200F"
 next
+ [[ -n {
end
  "vendor": "cisco",

config firewall address

  "model": "ASA",
config firewall address
 edit "Wanda-Field"
  "version": "9.12(4)",
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
 edit "Vision-Link"
  "domain": "global.dmz.example.net",
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
  "hostname": "dmz-fw2-backup"
}
 next

end ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ cat -n
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ newline 2
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=2
  "domain": "",
  "hostname": ""
+ (( i = 0 ))
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
++ echo -e --verbose
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
++ cut -d/ -f2
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.12(4)",
+ local parent_dir=reports/192.168.2.12/fortinet
  "domain": "global.dmz.example.net",
+ [[ true == true ]]
  "hostname": "dmz-fw2-backup"
+ local search_pattern
}

ASA Version 9.12(4)
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
hostname dmz-fw2-backup
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
domain-name global.dmz.example.net

+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
interface GigabitEthernet0/2
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
 nameif outside
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "ASA",
+ local count=1
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
}

+ echo
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i++ ))
domain-name global.dmz.example.net
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ (( i = 0 ))
}
+ (( i < count ))

ASA Version 9.12(4)
+ echo
hostname dmz-fw2-backup
+ (( i++ ))
domain-name global.dmz.example.net

+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/cisco
interface GigabitEthernet0/2
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
 description Outbound Internet NAT interface'
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ newline
+ local search_pattern
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ false == true ]]
+ cat -n
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ serialize_objects
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ local count=1
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ echo
  "hostname": ""
}
+ (( i++ ))
+ [[ config == \d\e\b\u\g ]]

+ read -r key value
++ [[ 5 -lt 4 ]]
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
interface Vlan1
+ [[ verbose =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
 ip address 10.0.0.1 255.255.255.0

++ alias exit-error=exit_error
object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ verbose =~ ^(console|o)$ ]]
+ result=0
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ alias list-file=list_file
}
+ [[ verbose =~ ^(extract|x)$ ]]

+ [[ verbose =~ ^(logger|l)$ ]]
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 10.0.0.1
+ [[ verbose =~ ^(search|s)$ ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ verbose == \h\e\l\p ]]
+ newline 2
++ dirname reports/10.0.2.3/misc/fw3.cfg
++ cut -d/ -f2
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=2
++ alias log-error=log_error
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ IFS=' 	
+ echo
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -z true ]]
+ newline 2
+ [[ -z '' ]]
+ newline 2
+ export console_output=false
+ console_output=false
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -z true ]]
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ local count=2
+ [[ -z '' ]]
+ (( i = 0 ))
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo
+ (( i < count ))
+ [[ false == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ search_terms=()
+ [[ true == true ]]
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console ]]
+ declare -a search_terms
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ case "${target_file}" in
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ newline
+ local search_pattern
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list != *,* ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ mapfile -t search_terms
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ newline
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ result=0
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ (( i < count ))
+ echo
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ print '{
+ local search_pattern
+ newline
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo
+ newline
+ (( i++ ))
+ newline
+ local count=1
+ search_pattern=192.168.2.12
+ (( i < count ))
+ (( i = 0 ))
+ local count=1
++ alias log-info=log_info
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
  "vendor": "cisco",
+ (( i++ ))
+ (( i < count ))
  "model": "",
+ (( i = 0 ))
  "version": "",
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
  "domain": "",
+ echo
  "hostname": ""
+ cat -n reports/172.16.1.6/misc/switch3.conf
version 12.4
+ [[ false == true ]]
hostname access-sw1-west
}
+ mkdir -p reports/192.168.2.12/cisco/.objects


interface Vlan100
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
 ip address 192.168.0.100 255.255.255.0
+ search_pattern=172.16.1.6

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ [[ false == true ]]
+ mkdir -p reports/172.16.1.6/cisco/.objects
 description Guest VLAN Gateway
+ [[ true == true ]]
 network-object 192.168.12.0 255.255.255.0'

+ local parent_dir=reports/10.10.10.10/cisco
+ exit 0
+ search_pattern=192.0.2.50
+ search_pattern=172.18.1.20
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sZiA2yl5Nw ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
 network-object host 192.168.0.100
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ -n {
 network-object host 10.10.10.10 ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
  "vendor": "cisco",
+ case "${target_platform}" in
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
  "model": "",
  "version": "",
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
  "domain": "",
+ newline
  "hostname": ""
+ result=0
+ local count=1
+ serialize_objects
+ (( i = 0 ))
}
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ 0 -ne 0 ]]

interface Vlan1
+ (( i < count ))
 ip address 10.0.0.1 255.255.255.0
+ (( i < count ))
+ local count=1

+ (( i = 0 ))
object-group network Spider-Net
 description Web access switches
+ awk -v divisor=--MTc0ODk5ODUxNzU4NjExNjAwMAo-- '
+ (( i < count ))
+ for xitem in "${@}"
+ output_dir=reports/192.168.0.1/fortinet
 network-object host 10.0.0.1
+ local count=1
+ [[ ! -d reports/192.168.0.1/fortinet ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ newline 2
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sZiA2yl5Nw
+ echo -en '{
+ echo
+ [[ cfg == \c\f\g ]]
+ echo
+ newline
                  BEGIN {
  "vendor": "cisco",
+ [[ true == true ]]
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
  "model": "",
+ [[ extract =~ ^(config|c)$ ]]
                    in_json_header = 0;
+ (( i++ ))
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ (( i < count ))
+ [[ false == true ]]
                    blk = "";
+ (( i < count ))
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ (( i < count ))
                  }
+ echo
+ local count=1
  "version": "",
+ [[ extract =~ ^(export|r)$ ]]
                  /^[[:space:]]*$/ { next }
+ read -r key value
  "domain": "",
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
  "hostname": ""
                  /^{$/ { in_json_header = 1; next }
++ alias log-warn=log_warn
                  /^}$/ {
}
+ local count=2
+ [[ logger =~ ^(config|c)$ ]]

+ (( i = 0 ))
                    if (in_json_header == 1) {
interface Vlan1
                      in_json_header = 0;
+ (( i < count ))
                      next;
+ [[ true == true ]]
 ip address 10.0.0.1 255.255.255.0
                    }

object-group network Spider-Net
                  }
                  (in_json_header == 1) { next }
 description Web access switches
                  /^[^[:space:]]/ {
 network-object host 10.0.0.1
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object 192.168.12.0 255.255.255.0'
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ grep -F 10.0.1.2
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ cat -n reports/192.168.1.10/misc/fw1.cfg
++ echo -e --platform=cisco
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
++ basename reports/10.10.10.10/cisco/campus-sw-access01
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ return 0
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ print '{
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ true == true ]]

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
+ [[ extract =~ ^(logger|l)$ ]]
 description Management objects
 network-object host 192.168.0.1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
 network-object host 192.168.0.100
+ [[ extract =~ ^(search|s)$ ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
 network-object host 10.10.10.10'
+ [[ extract == \h\e\l\p ]]
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ [[ extract == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ search_pattern=192.168.0.100
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ sed '/^[[:space:]]*$/d'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
+ local parent_dir=reports/192.168.1.11/cisco
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local parent_dir=reports/192.0.2.50/cisco
+ local search_pattern
+ case "${target_platform}" in
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ awk -v divisor=--MTc0ODk5ODUxNzYyMDI1MzAwMAo-- '
                  BEGIN {
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ newline
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local count=1
                      next;
+ (( i = 0 ))
                    }
+ (( i < count ))
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ echo
                  {
                    blk = blk divisor " " $0;
+ (( i++ ))
                  }
+ (( i < count ))
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ case "${target_platform}" in
+ grep -F 10.0.2.3
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzYyMjEzNTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ awk -v divisor=--MTc0ODk5ODUxNzU5MjY5NjAwMAo-- '
                  BEGIN {
                    blk = "";
                    in_json_header = 0;
                  }
                    blk = "";
                  /^[[:space:]]*$/ { next }
                  }
                  /^{$/ { in_json_header = 1; next }
                  /^[[:space:]]*$/ { next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ case "${target_platform}" in
                      in_json_header = 0;
                  /^{$/ { in_json_header = 1; next }
                      next;
                    }
                  /^}$/ {
                  }
                    if (in_json_header == 1) {
                  (in_json_header == 1) { next }
                      in_json_header = 0;
                  /^[^[:space:]]/ {
                      next;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    }
                    blk = $0;
                  }
                    next;
                  (in_json_header == 1) { next }
                  }
                  /^[^[:space:]]/ {
                  {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
                    next;
+ awk -v divisor=--MTc0ODk5ODUxNzU4ODc1MDAwMAo-- '
                  }
                  BEGIN {
                  }
                    in_json_header = 0;
                  {
                    blk = "";
                    blk = blk divisor " " $0;
                  END {
                  }
++ basename reports/192.0.2.50/cisco/perimeter-fw1
                  }
                  /^[[:space:]]*$/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  END {
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^{$/ { in_json_header = 1; next }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
                  }
+ newline 2
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ sed '/^[[:space:]]*$/d'
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ grep -F 192.0.2.50
+ grep -F 172.18.1.20
+ grep -F 172.16.1.6
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ sed '/^[[:space:]]*$/d'
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
+ result=0
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ newline
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ local target_platform=cisco
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ search_pattern=10.10.10.10
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ result=0
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ 0 -ne 0 ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ true == true ]]
+ serialize_objects
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ cat -n
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ [[ 0 -ne 0 ]]
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ [[ true == true ]]
+ (( i < count ))
+ newline
+ [[ platform == \h\e\l\p ]]
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local count=1
++ cut -d/ -f2
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo
+ [[ extract == \h\e\l\p ]]
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ case "${target_file}" in
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ true == true ]]
+ newline
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ false == true ]]
+ local count=1
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ newline
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local count=1
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ awk -v divisor=--MTc0ODk5ODUxNzYzMTcyNDAwMAo-- '
+ (( i = 0 ))
                  BEGIN {
                    in_json_header = 0;
++ cut -d/ -f2
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ (( i < count ))
                    blk = "";
+ echo
                  }
+ serialize_objects
                  /^[[:space:]]*$/ { next }
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ (( i < count ))
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ platform == \d\e\b\u\g ]]
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ platform == \v\e\r\b\o\s\e ]]
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ for xitem in "${@}"
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ IFS==
+ read -r key value
+ cat -n
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ search_pattern=192.168.1.11
+ [[ platform == \v\e\r\b\o\s\e ]]
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ cat -n
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ cat -n
+ newline
+ search_pattern=192.0.2.50
+ local parent_dir=reports/192.168.100.100/cisco
+ [[ true == true ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ grep -F 192.168.2.12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ case "${target_platform}" in
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODk5ODUxNzYyOTQzNzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console ]]
+ local parent_dir=reports/192.168.0.100/cisco
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ grep -F 10.10.10.10
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ cat -n
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ return 0
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ return 0
+ echo
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console ]]
++ echo -e --platform=fortinet
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ local parent_dir=reports/192.168.1.10/misc
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ sed '/^[[:space:]]*$/d'
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzYzMTM3NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ case "${target_platform}" in
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ awk -v divisor=--MTc0ODk5ODUxNzY0MzYzNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ true == true ]]
+ local search_pattern
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 192.168.1.11
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ case "${target_platform}" in
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ case "${target_file}" in
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--branch-isr-02.cfg.console
+ awk -v divisor=--MTc0ODk5ODUxNzcxODY0NDAwMAo-- '
+ (( i++ ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.0.2.50
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ local script_filename=fortinet-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--branch-isr-02.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ basename reports/192.168.1.10/misc/fw1
+ return 0
+ [[ true == true ]]
++ which awk
+ [[ true == true ]]
+ serialize_objects
+ sed '/^[[:space:]]*$/d'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ (( i < count ))
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ return 0
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ local search_pattern
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RAKGgb03J5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RAKGgb03J5
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ grep -F 192.168.0.100
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jYsEDWPkP6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jYsEDWPkP6
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ logger =~ ^(config|c)$ ]]
+ local search_pattern
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ 0 -ne 0 ]]
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f6rBAkDx0z ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f6rBAkDx0z
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ exit 0
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9PJfOHowbf ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9PJfOHowbf
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ search_pattern=192.168.0.100
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
+ [[ logger =~ ^(console|o)$ ]]
+ result=0
+ exit 0
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NF3LKwcNlf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NF3LKwcNlf
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ cat -n
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ [[ logger == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ cut -d/ -f2
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 192.168.0.1
++ echo reports/192.168.1.10/misc/fw1.cfg
++ cut -d/ -f2
+ local parent_dir=reports/192.168.1.10/fortinet
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
++ echo -e --export
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
+ declare -a execute__netwowrk_extract
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ search_pattern=192.168.100.100
+ return 0
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console ]]
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
+ result=0
+ case "${target_file}" in
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
++ echo -e --export
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--access-sw1-west.cfg.console
+ [[ 0 -ne 0 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console ]]
+ awk -v divisor=--MTc0ODk5ODUxNzY3MDI4NjAwMAo-- '
                  BEGIN {
+ case "${target_file}" in
+ case "${target_file}" in
                    in_json_header = 0;
                    blk = "";
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bo2FvWYldp/network-extract--switch1.conf.console
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lp26wDBpdF/network-extract--switch1.conf.console
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ grep -F 192.168.0.100
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44Jih3Q3lY ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--branch-isr-02.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44Jih3Q3lY
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nTfrwNKSjs/network-extract--perimeter-fw1.cfg.console
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
+ result=0
+ newline
+ exit 0
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RYNDKLdGSL ]]
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ echo
+ local export_objects=true
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RYNDKLdGSL
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ export =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ export == \h\e\l\p ]]
+ local count=1
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ result=0
+ newline 2
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ case "${target_file}" in
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
  "vendor": "fortinet",
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ (( i = 0 ))
++ IFS=,
+ [[ logger =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo 10.10.10.10
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ case "${target_platform}" in
+ [[ logger == \d\r\y\-\r\u\n ]]
+ awk -v divisor=--MTc0ODk5ODUxNzc0MTk0MzAwMAo-- '
                  BEGIN {
++ IFS=,
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ echo 10.0.0.1
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ [[ true == true ]]
+ grep -F 192.168.100.100
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ echo
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ (( i++ ))
++ echo -e --verbose
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5wGjs4adNm ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BBjpLZN6X3 ]]
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ cut -d/ -f2
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BBjpLZN6X3
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ result=0
+ case "${target_file}" in
+ exit 0
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ which awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8dRnUXbcj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8dRnUXbcj
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5wGjs4adNm
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.she2RWHbzg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.she2RWHbzg
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ cat -n
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ logger =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(console|o)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ result=0
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(export|r)$ ]]
+ exit 0
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TgufsHH70L ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TgufsHH70L
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--MTc0ODk5ODUxNzc0MDI5NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ echo
                    next;
+ (( i++ ))
+ (( i < count ))
                  }
                  {
                    blk = blk divisor " " $0;
++ echo -e --export
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 192.168.1.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ case "${target_file}" in
+ local awk_bin=/usr/bin/awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ result=0
+ search_pattern=192.168.1.10
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ local verbose=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ return 0
+ IFS=' 	
'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ dry_run=false
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ local verbose=true
+ export console_output=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ [[ export =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console ]]
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ IFS=' 	
+ console_output=false
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ export =~ ^(console|o)$ ]]
'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z true ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console ]]
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ local export_objects=true
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console ]]
+ debug=false
+ [[ -z '' ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ script_helper=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ local count=1
+ [[ export =~ ^(logger|l)$ ]]
+ dry_run=false
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ local count=2
+ sed '/^[[:space:]]*$/d'
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ result=0
+ search_terms=()
+ exit 0
+ declare -a search_terms
+ [[ export =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]]
+ export console_output=false
++ alias print-message=message
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list != *,* ]]
+ console_output=false
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KqqIXq4QzL ]]
  "model": "FortiGate-200F",
+ (( i = 0 ))
+ mapfile -t search_terms
+ [[ -z true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
++ alias print-newline=newline
+ [[ true == true ]]
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ (( i++ ))
  "version": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KqqIXq4QzL
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
+ (( i++ ))
  "domain": "",
+ [[ export == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ [[ cfg == \c\f\g ]]
  "hostname": "fg-campus-core"
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
}
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ script_helper=false
++ alias print-line=print
+ for xitem in "${@}"
+ (( i++ ))

+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ logger =~ ^(search|s)$ ]]
+ echo
#hostname="fg-campus-core"
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
#model="FortiGate-200F"
+ [[ false == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(platform|p)$ ]]

+ (( i++ ))
++ alias print-file=print_file
+ [[ logger == \h\e\l\p ]]
++ printf '%*s' 12 ''
+ (( i < count ))
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
config firewall address
 edit "Hawkeye-Nest"
+ [[ export == \h\e\l\p ]]
+ search_terms=()
  set subnet 172.16.1.6 255.255.255.255
+ [[ export == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ local 'indent=            '
+ [[ logger == \d\e\b\u\g ]]
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
  set comment "Remote sniper node"
 next
+ [[ true == true ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
end'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ IFS==
+ read -r key value
+ newline
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local count=1
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ echo
+ case "${target_file}" in
+ read -r key value
+ (( i++ ))
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ newline
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ alias validate-address=validate_address
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n {
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ which awk
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
++ tr -d '\r'
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console ]]
++ cut -d/ -f2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
++ grep -v '^\s*$'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--access-sw1-west.cfg.console
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Hxm3v10Vy ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Hxm3v10Vy
+ cat -n
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
++ LC_ALL=C
++ export 'nl=\n'
+ [[ true == true ]]
++ nl='\n'
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ export cache_location=.cache
++ cache_location=.cache
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
++ export logs_location=logs
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console ]]
++ echo -e --verbose
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
++ grep -v '^\s*$'
+ (( i < count ))
++ tr -d '\r'
++ grep -v '^#'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HV7LcGM0Aj/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ grep -v '^\s*$'
  "domain": "",
  "version": "",
  "hostname": "fg-branch-vpn-01"
}

+ awk -v divisor=--MTc0ODk5ODUxNzY3MTc1MzAwMAo-- '
                    BEGIN {
#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                      blk = "";

                      in_json_header = 0;
config firewall address
                    }
 edit "Guardians-Relay"

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"

++ logs_location=logs
                    # Skip JSON preamble
 next
                    /^{$/            { in_json_header = 1; next }
end'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
++ mkdir -p logs/jobs
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ result=0
+ case "${target_file}" in
++ grep -v '^#'
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ (( i < count ))
 next
end ]]
+ echo
+ newline
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ return 0
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ true == true ]]
++ echo -e --export
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ grep -F 192.168.1.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ cat -n
  set comment "Remote sniper node"
 next
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
end ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ newline
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AD01IP2ceY ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AD01IP2ceY
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
+ [[ verbose =~ ^(console|o)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ verbose =~ ^(export|r)$ ]]
  "domain": "",
+ local first_search_entry=192.168.1.10
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ sed '/^[[:space:]]*$/d'
  "hostname": "fg-branch-vpn-01"
+ local last_search_entry=192.168.1.10
+ [[ verbose =~ ^(logger|l)$ ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
end'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose =~ ^(search|s)$ ]]

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ echo -e --export
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ true == true ]]
+ debug=false
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ] ]]
+ dry_run=false
+ result=0
+ [[ -z true ]]
+ local 'extracted_configuration={
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
+ exit 0
  "vendor": "fortinet",
+ local first_search_entry=192.168.2.12
+ [[ -z '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-configs--ips.list ]'
  "model": "FortiGate-200F",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eHwBbJMNro ]]
+ export console_output=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eHwBbJMNro
+ console_output=false
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console ]]
+ local count=1
+ ((  count == 0  ))
+ [[ -z '' ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ script_helper=false
  "version": "",
+ [[ false == true ]]
  "domain": "",
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
  "hostname": "fg-campus-core"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local last_search_entry=192.168.2.12
}
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]

+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
#hostname="fg-campus-core"
+ newline
#model="FortiGate-200F"
+ search_terms=()
+ local count=1

+ declare -a search_terms
+ (( i = 0 ))
config system interface
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
 edit "core"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ] ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ mapfile -t search_terms
+ newline
 next
++ printf '%*s' 12 ''
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
end
+ (( i < count ))

config firewall address
+ echo
 edit "Shield-WiFi"
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-configs--ips.list ]'
+ echo
+ (( i++ ))
  set subnet 10.10.10.10 255.255.255.255
+ (( i < count ))
  set comment "Wireless AP Gateway"
 next
+ (( i++ ))
end'
+ (( i < count ))
+ local count=1
+ return 0
+ ((  count == 0  ))
+ result=0
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n {
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ newline
+ local 'indent=            '
}
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ [[ true == true ]]

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console ]]
+ [[ -z cisco ]]
+ (( i < count ))
+ case "${target_file}" in
#hostname="fg-campus-core"
+ [[ true == true ]]
#model="FortiGate-200F"
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ newline

config system interface
+ local count=1
+ newline
+ (( i = 0 ))
+ echo
+ local count=1
+ (( i++ ))
 edit "core"
+ (( i < count ))
+ (( i = 0 ))
  set ip 10.10.10.10 255.255.255.0
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
  set alias "Campus Core Transit"
+ [[ export =~ ^(config|c)$ ]]
 next
+ echo
end

config firewall address
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
 edit "Shield-WiFi"
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
  set subnet 10.10.10.10 255.255.255.255
+ cat -n reports/172.16.0.5/misc/fw3.cfg
  set comment "Wireless AP Gateway"
+ [[ -z cisco ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
 next
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo
+ result=0
end ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ newline
+ [[ true == true ]]
+ local export_objects=true
+ local count=1
+ [[ 0 -ne 0 ]]
+ local first_search_entry=203.0.113.25
+ [[ export =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console ]]
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "",
  "domain": "",
+ (( i++ ))
+ local verbose=true
  "hostname": "fg-campus-core"
}
+ [[ export =~ ^(logger|l)$ ]]

+ (( i < count ))
#hostname="fg-campus-core"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS=' 	
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
'
#model="FortiGate-200F"
+ [[ -z '' ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export =~ ^(search|s)$ ]]

+ debug=false
config firewall address
+ local parent_dir=reports/10.0.2.3/misc
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \h\e\l\p ]]
end'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ -n {
  "vendor": "fortinet",
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "model": "FortiGate-200F",
  "version": "",
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ print '{
  "vendor": "fortinet",
 next
  "model": "FortiGate-200F",
end'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ dry_run=false

+ [[ -z true ]]
config system interface
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z '' ]]
++ tr -d '\r'
 edit "core"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ [[ export =~ ^(config|c)$ ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ [[ export =~ ^(console|o)$ ]]
end'
+ [[ export =~ ^(export|r)$ ]]
+ export console_output=false
+ console_output=false
+ local export_objects=true
+ [[ -z true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline 2
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ cut -d/ -f2
+ local count=1
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ export =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
++ export console_location=console
+ (( i = 0 ))
+ [[ false == true ]]
++ grep -v '^\s*$'
+ [[ export == \h\e\l\p ]]
+ echo
+ [[ export == \d\e\b\u\g ]]
++ console_location=console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\r\y\-\r\u\n ]]
+ output_dir=reports/192.168.1.10/misc
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ search_terms=()
+ [[ ! -d reports/192.168.1.10/misc ]]
++ mkdir -p console
+ for xitem in "${@}"
+ declare -a search_terms
+ echo
+ (( i < count ))
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
++ grep -v '^#'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ mapfile -t search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw1.cfg.console
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jG5O2Rcl5Y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jG5O2Rcl5Y
+ newline 2
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ newline 2
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ false == true ]]
+ local count=1
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ local first_search_entry=10.10.10.10
+ (( i < count ))
+ [[ true == true ]]
+ local last_search_entry=10.10.10.10
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ echo
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ return 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ newline 2
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=192.168.1.11
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ search_pattern=192.168.0.1
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ (( i < count ))
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ search_pattern=10.10.10.10
+ [[ true == true ]]
+ echo
+ local last_search_entry=203.0.113.25
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ ((  count == 0  ))
+ serialize_objects
+ search_pattern=192.168.2.12
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ case "${target_file}" in
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/10.0.2.3/misc/fw3
++ echo -e --verbose
++ touch console/run.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WCK41uQKme ]]
++ tr -d '\r'
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WCK41uQKme
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ newline
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ serialize_objects
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(export|r)$ ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ grep -v '^\s*$'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ output_dir=reports/192.168.2.12/misc
+ [[ ! -d reports/192.168.2.12/misc ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ output_dir=reports/198.51.100.75/fortinet
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
  "model": "",
  "version": "",
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local SCRIPT_DIR=./scripts
  "domain": "",
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
  "hostname": ""
}

+ local script_filename=cisco-configs.awk
object-group network Avengers-Office
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local script_filepath=./scripts/extract/cisco-configs.awk
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ serialize_objects
+ [[ ! -d reports/198.51.100.75/fortinet ]]
 network-object 192.168.12.0 255.255.255.0'
+ [[ verbose =~ ^(platform|p)$ ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ verbose =~ ^(config|c)$ ]]
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ verbose =~ ^(console|o)$ ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local parent_dir=reports/172.16.0.5/misc
+ [[ verbose == \h\e\l\p ]]
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local verbose=true
+ [[ -z '' ]]
+ case "${target_file}" in
+ IFS=' 	
+ local count=2
++ command -v -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fg-branch-vpn-01.cfg.console
+ mkdir -p reports/192.168.0.1/cisco/.objects
'
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ dry_run=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ debug=false
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ export console_output=false
+ export console_output=false
+ console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ print '{
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ mkdir -p reports/10.10.10.10/cisco/.objects
  "vendor": "cisco",
  "model": "",
  "version": "",
+ mkdir -p reports/192.168.2.12/fortinet/.objects
  "domain": "",
  "hostname": ""
}
+ local first_search_entry=198.51.100.75
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console

object-group network Avengers-Office
+ local last_search_entry=198.51.100.75
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console ]]
 description VLAN access layer
 network-object host 10.0.0.1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
 network-object 192.168.12.0 255.255.255.0'
+ [[ true == true ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console ]]
++ basename reports/172.16.0.5/misc/fw3
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ local search_pattern
+ [[ -n {
+ (( i < count ))
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ local parent_dir=reports/192.168.0.1/fortinet
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ] ]]
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
+ serialize_objects
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ ((  count == 0  ))
+ case "${target_file}" in
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMeHoDvAbA/network-extract--fw1.cfg.console
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ serialize_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ true == true ]]
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ] ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ [[ false == true ]]
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
++ tr -d '\r'
+++ date +%s%N
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+++ base64
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ grep -v '^#'
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WWVAC6t26y ]]
+ local search_pattern
+ local SCRIPT_DIR=./scripts
++ IFS=,
++ echo 192.168.1.10
+ newline 2
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local count=1
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ newline
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ local script_filename=fortinet-configs.awk
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ ((  count == 0  ))
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ serialize_objects
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ local count=1
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ serialize_objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ local first_search_entry=203.0.113.25
+ echo
+ local last_search_entry=203.0.113.25
+ (( i++ ))
+ case "${target_platform}" in
+ (( i < count ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ echo
++ export divisor=--MTc0ODk5ODUxODQ2NjY0ODAwMAo--
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODk5ODUxNzgwNzE2MjAwMAo-- '
                  BEGIN {
+ [[ true == true ]]
+ case "${target_platform}" in
                    in_json_header = 0;
++ divisor=--MTc0ODk5ODUxODQ2NjY0ODAwMAo--
                    blk = "";
                  }
+ local 'prompt_message=Enter configuration file to be parsed: '
                  /^[[:space:]]*$/ { next }
+ case "${target_platform}" in
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ awk -v divisor=--MTc0ODk5ODUxNzgwMjM4NjAwMAo-- '
+ local first_search_entry=10.10.10.10
                  (in_json_header == 1) { next }
                  BEGIN {
                  /^[^[:space:]]/ {
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
                    in_json_header = 0;
+ local last_search_entry=10.10.10.10
                    blk = "";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ awk -v divisor=--MTc0ODk5ODUxNzgwNjkxOTAwMAo-- '
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
                  /^[[:space:]]*$/ { next }
                    BEGIN {
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ cfg == \c\f\g ]]
                      blk = "";
                  /^{$/ { in_json_header = 1; next }
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
                    blk = $0;
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
                    next;
                  }
                      in_json_header = 0;
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
                  /^}$/ {
                  {
+ source ./scripts/devops-helpers.shell
                    blk = blk divisor " " $0;
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
                    }
                  }
                    if (in_json_header == 1) {
                  END {
                      in_json_header = 0;

                    if (blk != "" && !seen[blk]++) print blk "\n";
                      next;
                    # Skip blank lines
                  }
                    /^[[:space:]]*$/ { next }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                      blk = $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      next;
                    blk = $0;
                    }
                    next;

                  }
                    # Add edit line to current block
                  {
                    /^ edit / {
                    blk = blk divisor " " $0;
                      blk = blk divisor " " $0;
                  }
                      next;
                  END {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ which awk
                    # Add next to block
++ basename reports/203.0.113.25/cisco/perimeter-fw1
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }
++ which awk

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
++ dirname reports/172.16.1.6/misc/switch3.conf

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ echo reports/10.0.2.3/misc/fw3.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ echo reports/172.16.0.5/misc/fw3.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
++ cut -d/ -f2
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local count=1
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
++ cut -d/ -f2
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias network-configs--helper=network_configs__helper
+ local 'prompt_message=Enter configuration file to be parsed: '
+ result=0
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bde8onE2z4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bde8onE2z4
++ alias network-extract--helper=network_extract__helper
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -z cisco ]]
+ grep -F 192.168.0.1
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ alias serialize-object=serialize_objects
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ newline
+ local count=1
+ local parent_dir=reports/172.16.1.6/fortinet
+ (( i = 0 ))
+ local parent_dir=reports/192.168.100.100/fortinet
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ grep -F 192.168.2.12
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ grep -F 10.10.10.10
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local parent_dir=reports/172.16.1.6/misc
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local parent_dir=reports/192.168.2.12/fortinet
+ sed '/^[[:space:]]*$/d'
+ alias parse-cisco=main
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ [[ -z x ]]
+ (( i < count ))
+ export logs_location=logs
+ logs_location=logs
+ local count=1
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ mkdir -p logs/console
+ search_pattern=10.0.2.3
+ newline
+ mkdir -p reports/10.0.2.3/misc/.objects
+ search_pattern=172.16.0.5
+ mkdir -p reports/172.16.0.5/misc/.objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ sed '/^[[:space:]]*$/d'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ (( i < count ))
+ case "${target_platform}" in
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ local parent_dir=reports/198.51.100.75/cisco
+ local search_pattern
+ awk -v divisor=--MTc0ODk5ODUxNzgwNjM4OTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ [[ false == true ]]

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

+ [[ true == true ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ printf '%*s' 12 ''
++ basename reports/172.16.1.6/misc/switch3
++ basename reports/192.168.2.12/fortinet/fg-campus-core
++ IFS=,
++ echo 198.51.100.75
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ local 'indent=            '
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ true == true ]]
+ serialize_objects
+ grep -F 192.168.1.11
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ newline
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ result=0
+ (( i = 0 ))
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local count=1
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ (( i < count ))
+ local search_pattern
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/198.51.100.75/misc
+ [[ ! -d reports/198.51.100.75/misc ]]
+ result=0
+ [[ false == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ local search_pattern
+ echo
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
++ dirname reports/10.0.0.1/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ serialize_objects
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local search_pattern
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ newline
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
++ cut -d/ -f2
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local script_filename=cisco-configs.awk
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local search_pattern
+ local SCRIPT_DIR=./scripts
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzc3Mjg4MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local parent_dir=reports/10.0.0.1/misc
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_platform}" in
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ awk -v divisor=--MTc0ODk5ODUxNzgxMDM4OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
++ cut -d/ -f2
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo reports/172.16.1.6/misc/switch3.conf
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ [[ cfg == \c\f\g ]]
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ search_pattern=203.0.113.25
+ local awk_bin=/usr/bin/awk
+ final_output=reports/203.0.113.25/misc/fw1.cfg
++ cut -d/ -f2
++ dirname -- ./scripts/network-extract.shell
+ cat -n
+ grep -F 172.16.0.5
++ cut -d/ -f2
+ grep -F 10.0.2.3
++ basename reports/10.0.0.1/misc/switch3
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ cat -n
++ cut -d/ -f2
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local parent_dir=reports/10.0.0.1/misc
+ cat -n
+ search_pattern=192.168.100.100
+ output_dir=reports/203.0.113.25/fortinet
+ search_pattern=172.16.1.6
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ search_pattern=192.168.2.12
+ local SCRIPT_DIR=./scripts
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ search_pattern=172.16.1.6
+ sed '/^[[:space:]]*$/d'
+ local script_filename=cisco-configs.awk
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ mkdir -p reports/172.16.1.6/misc/.objects
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local search_pattern
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
+ newline
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i = 0 ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
+ mkdir -p reports/192.168.2.12/fortinet/.objects
}

object-group network Wakanda-Core
+ newline
+ echo
 description National Core Routing Zone
+ newline
+ local count=1
 network-object host 192.168.1.10
+ local search_pattern
+ local count=1
+ (( i++ ))
+ (( i < count ))
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WWVAC6t26y
+ (( i = 0 ))
+ return 0
+ local 'indent=            '
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ output_dir=reports/10.10.10.10/fortinet
+ echo
+ [[ true == true ]]
+ search_pattern=198.51.100.75
+ (( i++ ))
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ (( i < count ))
+ [[ -n {
+ (( i < count ))
+ mkdir -p reports/198.51.100.75/cisco/.objects
++ dirname reports/203.0.113.25/misc/fw1.cfg
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
+ echo
+ (( i++ ))
  "version": "",
+ return 0
  "domain": "",
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
object-group network Wakanda-Core
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console ]]
 description National Core Routing Zone
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
++ basename reports/10.0.0.1/misc/switch1
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ echo reports/10.0.0.1/misc/switch3.conf
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nb02gpse4w/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console --export --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/10.10.10.10/misc
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/misc ]]
+ return 0
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ true == true ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ oIFS=' 	
'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ for xitem in "${@}"
+ [[ 0 -ne 0 ]]
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ output_dir=reports/203.0.113.25/misc
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ read -r key value
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ newline
+ local count=1
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzg0NTE0NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ awk -v divisor=--MTc0ODk5ODUxNzg3NDUyNDAwMAo-- '
                  BEGIN {
                      next;
                    in_json_header = 0;
                    blk = "";
                    }
                  }
                  }
                  /^[[:space:]]*$/ { next }
                  (in_json_header == 1) { next }
                  /^{$/ { in_json_header = 1; next }
                  /^[^[:space:]]/ {
                  /^}$/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (in_json_header == 1) {
                    blk = $0;
                      in_json_header = 0;
                    next;
                      next;
                  }
                    }
                  {
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = blk divisor " " $0;
                  }
                    blk = $0;
                  END {
                    next;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  {
                  }
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
                  }
                ' reports/172.16.1.6/misc/switch3.conf
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxNzc4MTMyODAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
                      if (blk != "") print blk;
                      blk = $0;
++ command -v -- ./scripts/network-extract.shell
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
                      next;
                    }

+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
                    # Add next to block
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ case "${target_platform}" in
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
                      # No need for final print — all blocks end with end
                    }
+ awk -v divisor=--MTc0ODk5ODUxNzgzMDMwMDAwMAo-- '
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
++ echo reports/10.0.0.1/misc/switch1.conf
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ [[ true == true ]]
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ cut -d/ -f2
+ awk -v divisor=--MTc0ODk5ODUxNzg0NDMyMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ sed '1{/^[[:space:]]*$/d;}'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ grep -F 203.0.113.25
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/misc/.objects
+ grep -F 172.16.1.6
++ IFS=,
+ case "${target_platform}" in
++ echo 198.51.100.75
+ awk -v divisor=--MTc0ODk5ODUxNzg4NDA4NDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ local script_filename=fortinet-configs.awk
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console ]]
+ [[ search =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ search_pattern=10.0.0.1
config firewall address
+ [[ search =~ ^(export|r)$ ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ grep -F 192.168.100.100
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ search =~ ^(extract|x)$ ]]
  set comment "Branch NAT"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
+ newline 2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--dmz-fw2-backup.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ search =~ ^(logger|l)$ ]]
 next
+ [[ search =~ ^(platform|p)$ ]]
end'
+ sed '/^[[:space:]]*$/d'
+ [[ search =~ ^(search|s)$ ]]
+ result=0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list
+ [[ -n {
+ [[ search == \h\e\l\p ]]
  "vendor": "fortinet",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console ]]
  "model": "FortiGate-60F",
+ [[ search == \d\e\b\u\g ]]
+ case "${target_file}" in
+ grep -F 172.16.1.6
+ grep -F 198.51.100.75
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-branch-vpn-01.cfg.console
  "version": "v7.2.5.F",
++ which awk
+ [[ search == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ search == \v\e\r\b\o\s\e ]]
+ cat -n
  "hostname": "fg-branch-vpn-01"
+ local count=2
+ for xitem in "${@}"
}
+ (( i = 0 ))
+ IFS==

+ read -r key value
+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ grep -F 192.168.2.12
+ echo
#model="FortiGate-60F"
+ (( i++ ))
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ echo
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
+ (( i++ ))
end

+ (( i < count ))
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ sed '/^[[:space:]]*$/d'
+ cat -n
++ dirname -- ./scripts/network-extract.shell
++ which awk
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ result=0
+ newline
+ result=0
+ local awk_bin=/usr/bin/awk
+ local count=1
+ print '{
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ (( i = 0 ))
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
  "domain": "",
+ newline
+ echo
  "hostname": "fg-branch-vpn-01"
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ local count=1
+ [[ 0 -ne 0 ]]
+ [[ 0 -ne 0 ]]
}
+ (( i++ ))
+ [[ true == true ]]

+ local SCRIPT_DIR=./scripts
+ result=0
#hostname="fg-branch-vpn-01"
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ 0 -ne 0 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ result=0
+ [[ true == true ]]
#model="FortiGate-60F"
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local script_filename=cisco-configs.awk
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline
+ (( i < count ))
+ (( i = 0 ))
+ local count=1

+ (( i = 0 ))
+ exit 0
config system interface
+ (( i < count ))
+ (( i < count ))
 edit "wan1"
+ echo
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ echo
  set ip 198.51.100.75 255.255.255.0
+ result=0
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ return 0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZskihfOfyU ]]
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i++ ))
+ (( i++ ))
  set alias "Branch ISP"
+ (( i < count ))
+ result=0
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ 0 -ne 0 ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZskihfOfyU
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
 next
+ return 0
+ [[ true == true ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
end
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'

config firewall address
 edit "Branch-Public"
+ [[ true == true ]]
  set subnet 198.51.100.75 255.255.255.255
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
  set comment "Branch NAT"
 next
end'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
+ [[ true == true ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ cat -n reports/192.168.1.10/misc/fw3.cfg
 next
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --config=.cache/resources/misc/fw3.cfg
end

config firewall address
 edit "Branch-Public"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console ]]
  set subnet 198.51.100.75 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console ]]
  set comment "Branch NAT"
 next
+ awk -v divisor=--MTc0ODk5ODUxNzg0NzIxNjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
end ]]
+ case "${target_file}" in
                  /^[[:space:]]*$/ { next }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ echo -en '{
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "vendor": "fortinet",
  "model": "FortiGate-60F",
                    blk = $0;
  "version": "v7.2.5.F",
                    next;
  "domain": "",
                  }
  "hostname": "fg-branch-vpn-01"
                  {
}
                    blk = blk divisor " " $0;

                  }
#hostname="fg-branch-vpn-01"
                  END {
#model="FortiGate-60F"
                    if (blk != "" && !seen[blk]++) print blk "\n";
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                  }

                ' reports/10.0.0.1/misc/switch3.conf
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
end

+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
++ which awk
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
  set comment "Branch NAT"
 next
end'
+ newline
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ local count=1
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i < count ))
+ newline
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ local count=1
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo 203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--MTc0ODk5ODUxNzgyODM2NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ grep -F 10.0.0.1
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
                  }
+ declare -a execute__netwowrk_extract
                ' reports/10.0.0.1/misc/switch1.conf
+ local 'indent=            '
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ true == true ]]
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SF034Q4B8E ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SF034Q4B8E
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yJIHyACVAD ]]
+ [[ 0 -ne 0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yJIHyACVAD
+ [[ true == true ]]
+ newline
++ which awk
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ grep -F 10.0.0.1
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ cat -n
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ case "${target_file}" in
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HaNFIx0Tdd/network-extract--fg-campus-core.cfg.console
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
++ which awk
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local count=1
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.blnL7Hpozh/network-extract--fw3.cfg.console
+ newline
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ [[ false == true ]]
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2AvjEeaBAp/network-extract--fw3.cfg.console
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ cat -n
+ newline
+ serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
++ echo 10.10.10.10
+ (( i < count ))
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ return 0
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ true == true ]]
+ newline
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ cat -n
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local awk_bin=/usr/bin/awk
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
++ IFS=,
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo 203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console ]]
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ result=0
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ search_pattern=10.10.10.10
+ (( i++ ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ (( i++ ))
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ (( i < count ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ result=0
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ exit 0
+ return 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wsdteFJmfI ]]
+ local count=1
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wsdteFJmfI
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname reports/192.168.1.10/misc/fw3.cfg
++ which awk
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ result=0
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ [[ 0 -ne 0 ]]
+ echo
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ return 0
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local 'indent=            '
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ (( i < count ))
+ echo
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i = 0 ))
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ return 0
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
++ cut -d/ -f2
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yky4xcpuD7 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DwTQYQK6bb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yky4xcpuD7
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DwTQYQK6bb
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/192.168.1.10/misc
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ cat -n
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ newline
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i = 0 ))
+ newline
  "domain": "",
+ (( i < count ))
+ local count=1
+ echo
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ return 0
  "model": "",
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console ]]
  "version": "",
  "domain": "",
  "hostname": ""
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ cat -n
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
}
+ [[ extract =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
++ basename reports/192.168.1.10/misc/fw3
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGvPTeLClJ/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console ]]

object-group network Krypton-Cloud
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
 description Cloud-facing external nodes
+ case "${target_file}" in
 network-object host 198.51.100.75
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--perimeter-fw1.cfg.console
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console ]]
 network-object host 203.0.113.25
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ case "${target_file}" in

+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
object network External-Failover
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ serialize_objects
++ printf '%*s' 12 ''
+ [[ extract == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
++ IFS=,
++ echo 192.168.2.12
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ return 0
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print '{
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
  "version": "",
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 network-object host 198.51.100.75
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
 network-object host 203.0.113.25
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]

+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
object network External-Failover
 host 198.51.100.75
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 description Secondary outbound route for edge'
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--dmz-fw2-backup.cfg.console
  "model": "",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 203.0.113.25

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
object network External-Failover
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console ]]
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ echo -en '{
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
+ local search_pattern
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console ]]
  "hostname": ""
}

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 198.51.100.75
+ case "${target_file}" in
 network-object host 203.0.113.25

object network External-Failover
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
 host 198.51.100.75
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ newline
 description Secondary outbound route for edge'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ case "${target_file}" in
+ local count=1
+ message '                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kh9knoVv8H/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo
+ newline
+ (( i++ ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ newline
+ search_pattern=192.168.0.1
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ return 0
+ local count=1
+ (( i++ ))
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console ]]
++ echo -e --platform=cisco
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  "vendor": "fortinet",
+ result=0
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "FortiGate-60F",
+ exit 0
+ result=0
+ [[ true == true ]]
+ exit 0
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
  set comment "Public NAT exposure for Red Skull trap"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBhXqQlPhB ]]
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Y54JwqFVhN ]]
 next
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
end'
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBhXqQlPhB
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F5daZZuXk4 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fg-campus-core.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F5daZZuXk4
+ case "${target_platform}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Y54JwqFVhN
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ awk -v divisor=--MTc0ODk5ODUxNzg4NDUzMjAwMAo-- '
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ result=0
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ [[ -n {
  "vendor": "fortinet",
                      next;
  "model": "FortiGate-60F",
                    }
  "version": "v7.2.5.F",

  "domain": "",
                    # Add edit line to current block
  "hostname": "fg-branch-vpn-01"
                    /^ edit / {
}
                      blk = blk divisor " " $0;

                      next;
#hostname="fg-branch-vpn-01"
                    }
#model="FortiGate-60F"

#config-version=FGT_60F-v7.2.5.F-build1517-230421
                    # Add next to block

                    /^ next$/ {
config firewall address
                      blk = blk divisor " " $0;
 edit "Public-Test"
                      next;
  set subnet 203.0.113.25 255.255.255.255
                    }
  set comment "Public NAT exposure for Red Skull trap"

+ local parent_dir=reports/198.51.100.75/fortinet
 next
                    # Finalize block at end
++ echo reports/192.168.1.10/misc/fw3.cfg
end ]]
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ IFS=,
++ echo 192.168.1.10
+ newline 2
++ cut -d/ -f2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ result=0
+ print '{
  "vendor": "fortinet",
+ newline
+ exit 0
  "model": "FortiGate-60F",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ true == true ]]
  "version": "v7.2.5.F",
+ result=0
  "domain": "",
+ exit 0
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local count=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LKChdwCTXl ]]

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ (( i = 0 ))
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ -n {
  "vendor": "fortinet",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yMJkba02Q2 ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yMJkba02Q2

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
  "version": "v7.2.5.F",
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console ]]
  "hostname": "fg-branch-vpn-01"
}
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console

#hostname="fg-branch-vpn-01"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ case "${target_file}" in

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch1.conf.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LKChdwCTXl
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z3e0jlFAEz/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ IFS==
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4RsuJzmYAt ]]
+ read -r key value
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4RsuJzmYAt
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'extracted_configuration={
  "vendor": "cisco",
  "domain": "",
  "model": "",
  "hostname": ""
}
  "version": "",

  "domain": "",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "hostname": ""
}
object-group network Shield-WiFi
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 description Shield-controlled wireless network

 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75

object-group network Shield-WiFi
 network-object host 203.0.113.25
 description Shield-controlled wireless network
 network-object host 10.10.10.10

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ local search_pattern
+ grep -F 10.10.10.10
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
++ which awk
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ which awk
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--MTc0ODk5ODUxNzg4MTk0MTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
                      if (blk != "" && !seen[blk]++) print blk;
+ newline 2
                      blk = "";
                      next;
                    }
+ print '{
  "vendor": "cisco",

  "model": "",
                    # Accumulate middle lines
  "version": "",
+ local count=1
                    {
  "domain": "",
+ (( i = 0 ))
  "hostname": ""
}
+ (( i < count ))

object-group network Krypton-Cloud
+ echo
 description Cloud-facing external nodes
                      blk = blk divisor " " $0;
                    }
 network-object host 198.51.100.75

+ (( i++ ))
                    END {
 network-object host 203.0.113.25
                      # No need for final print — all blocks end with end
                    }

                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
+ [[ false == true ]]
 description Cloud-facing external nodes
+ local count=2
+ [[ true == true ]]
 network-object host 198.51.100.75
+ print '{
 network-object host 203.0.113.25
  "vendor": "cisco",

  "model": "",
object network Krypton-Gateway
  "version": "",
 host 203.0.113.25
+ (( i = 0 ))
  "domain": "",
 description Secure NAT boundary for cloud access ]]
+ (( i < count ))
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ echo
+ echo -en '{
 network-object host 10.10.10.10
  "vendor": "cisco",
 network-object 192.168.100.0 255.255.255.0
  "model": "",

  "version": "",
object-group network Shield-WiFi
  "domain": "",
 description Shield-controlled wireless network
  "hostname": ""
 network-object host 10.10.10.10
}
 network-object 192.168.100.0 255.255.255.0

+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'

object-group network Krypton-Cloud
object-group network Shield-WiFi
 description Cloud-facing external nodes
 description Shield-controlled wireless network
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 10.10.10.10
 network-object host 198.51.100.75
 network-object host 203.0.113.25
 network-object 192.168.100.0 255.255.255.0


object network Krypton-Gateway
object network Shield-WiFi-Alias
 host 203.0.113.25
 host 10.10.10.10
 description Secure NAT boundary for cloud access'
 description Guest NAT'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n {
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
  "version": "",
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ serialize_objects
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ result=0
 description Shield-controlled wireless network
+ exit 0
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bjkekFN8zJ ]]
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ sed '1{/^[[:space:]]*$/d;}'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bjkekFN8zJ
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
 network-object 192.168.100.0 255.255.255.0
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
 network-object 192.168.100.0 255.255.255.0

+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ newline
object network Shield-WiFi-Alias
+ local count=1
 host 10.10.10.10
+ (( i = 0 ))
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u6vHgkHMgo ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u6vHgkHMgo
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.0.1
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--MTc0ODk5ODUxODAzOTI2MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ grep -F 192.168.1.10
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline 2
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'indent=            '
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ search_pattern=198.51.100.75
+ echo
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i++ ))
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ (( i < count ))
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ local 'indent=            '
+ echo
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
++ IFS=,
+ result=0
+ [[ 0 -ne 0 ]]
++ echo 10.10.10.10
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ true == true ]]
+ local parent_dir=reports/198.51.100.75/misc
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ result=0
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ newline
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ message '                .cache/resources/misc/switch1.conf'
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ local 'message=                .cache/resources/misc/switch1.conf'
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ serialize_objects
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
++ basename reports/198.51.100.75/misc/fw1
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ echo -e --export
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ (( i = 0 ))
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ case "${target_file}" in
+ echo
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ (( i < count ))
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ serialize_objects
+ newline
+ local count=1
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local awk_bin=/usr/bin/awk
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ [[ false == true ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ case "${target_file}" in
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ awk -v divisor=--MTc0ODk5ODUxNzkyOTAxNTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
                    (in_json_header == 1) { next }

+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
                    /^config / {
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ serialize_objects

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ grep -F 198.51.100.75
+ cat -n
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ local parent_dir=reports/203.0.113.25/fortinet
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ sed '/^[[:space:]]*$/d'
+ [[ export == \v\e\r\b\o\s\e ]]
++ printf '%*s' 12 ''
++ echo reports/198.51.100.75/misc/fw1.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ (( i < count ))
+ echo
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'extracted_configuration={
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "vendor": "cisco",
  "model": "",
  "version": "",
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
  "domain": "",
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
  "hostname": ""
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console

+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console ]]
++ cut -d/ -f2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
interface Vlan20
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ case "${target_file}" in
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
 ip address 192.168.1.10 255.255.255.0'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ local 'extracted_configuration={
+ newline
+ result=0
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
+ echo
  "domain": "",
  "hostname": ""
+ (( i++ ))
}
+ (( i < count ))

interface Vlan20
  "vendor": "cisco",
  "model": "",
 ip address 192.168.1.10 255.255.255.0 ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ local parent_dir=reports/203.0.113.25/misc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
 ip address 192.168.1.10 255.255.255.0'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
 ip address 192.168.1.10 255.255.255.0 ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ result=0
++ echo -e --verbose
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ basename reports/203.0.113.25/misc/fw1
+ print '{
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
  "vendor": "cisco",
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
  "model": "",
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
  "version": "",
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ newline
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ local count=1
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/misc
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console ]]
++ basename reports/10.10.10.10/misc/fw3
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlMhqaGC6t/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ cat -n
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=2
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ newline 2
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=2
+ [[ false == true ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console ]]
+ echo
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ case "${target_file}" in
++ cut -d/ -f2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--fw3.cfg.console
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list != *,* ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local 'extracted_configuration={
+ mapfile -t search_terms
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ newline
  "version": "v7.2.5.F",
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local count=1
  "domain": "",
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
+ echo
}

+ (( i++ ))
#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ cat -n reports/192.168.1.10/misc/switch1.conf
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ result=0
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ newline
}
+ local count=1
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ (( i++ ))
config firewall policy
+ local search_pattern
+ (( i < count ))
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ cat -n reports/192.168.2.12/misc/fw1.cfg
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ echo reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgcyCigejv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgcyCigejv
+ case "${target_platform}" in
+ newline
+ local count=1
++ cut -d/ -f2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ awk -v divisor=--MTc0ODk5ODUxODEyNDU4NTAwMAo-- '
+ (( i < count ))
+ print '{
                  BEGIN {
  "vendor": "fortinet",
                    in_json_header = 0;
  "model": "FortiGate-60F",
                    blk = "";
  "version": "v7.2.5.F",
                  }
  "domain": "",
+ return 0
                  /^[[:space:]]*$/ { next }
+ result=0
                  /^{$/ { in_json_header = 1; next }
  "hostname": "fg-branch-vpn-01"
+ exit 0
}

                  /^}$/ {
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C1iW1vVMVx ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
#hostname="fg-branch-vpn-01"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C1iW1vVMVx
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                      next;
+ [[ true == true ]]

                    }
config firewall policy
 edit 13
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
  set name "Remote NAT"
                    if (blk != "" && !seen[blk]++) print blk "\n";
  set srcintf "dmz"
  set dstintf "wan1"
                    blk = $0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
  set srcaddr "10.10.10.10"
                    next;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console ]]
                  }
  set dstaddr "203.0.113.10"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
                  {
  set action accept
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console ]]
                    blk = blk divisor " " $0;
+ case "${target_file}" in
                  }
  set logtraffic all
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
                  END {
++ tr -d '\r'
                    if (blk != "" && !seen[blk]++) print blk "\n";
 next
                  }
end'
                ' reports/198.51.100.75/misc/fw1.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ search_pattern=203.0.113.25
config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ mkdir -p reports/203.0.113.25/fortinet/.objects
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo reports/10.10.10.10/misc/fw3.cfg
+ grep -F 198.51.100.75
++ grep -v '^\s*$'
++ cut -d/ -f2
+ result=0
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQE5QGYxKZ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQE5QGYxKZ
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ search_pattern=203.0.113.25
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ mkdir -p reports/203.0.113.25/misc/.objects
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ false == true ]]
+ [[ true == true ]]
+ serialize_objects
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ serialize_objects
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.1.10/misc/switch1.conf
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fg-branch-vpn-01.cfg.console
+ newline
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ search_pattern=10.10.10.10
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/10.10.10.10/misc/.objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ case "${target_platform}" in
+ local count=1
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODk5ODUxODA3NDc0NTAwMAo-- '
                    BEGIN {
+ (( i < count ))
+ echo
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ local 'prompt_message=Enter configuration file to be parsed: '
                    /^{$/            { in_json_header = 1; next }
+ (( i++ ))
+ [[ -z .cache/resources/misc/fw3.cfg ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ -z cisco ]]

+ [[ true == true ]]
+ (( i < count ))
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
+ newline
                    /^ edit / {
+ local count=1
                      blk = blk divisor " " $0;
+ (( i = 0 ))
                      next;
+ (( i < count ))
+ echo
                    }
+ (( i++ ))

                    # Add next to block
+ (( i < count ))
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
                      blk = "";
                      next;
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
                    }
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'

                    # Accumulate middle lines
                    {
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local parent_dir=reports/192.168.2.12/misc
+ local parent_dir=reports/192.168.1.10/misc
+ grep -F 203.0.113.25
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_platform}" in
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ awk -v divisor=--MTc0ODk5ODUxODEzMTgzOTAwMAo-- '
+ sed '/^[[:space:]]*$/d'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
++ basename reports/192.168.1.10/misc/switch1
++ basename reports/192.168.2.12/misc/fw1
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PGn6d1TNAy ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PGn6d1TNAy
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ grep -F 203.0.113.25
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ serialize_objects
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--MTc0ODk5ODUxODEzNTQ0OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ grep -F 10.10.10.10
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local search_pattern
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ local search_pattern
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/fortinet
++ echo reports/192.168.2.12/misc/fw1.cfg
++ echo reports/192.168.1.10/misc/switch1.conf
+ cat -n
++ dirname reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
++ cut -d/ -f2
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dOB7fSjIB5/network-extract--fw1.cfg.console
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ return 0
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ [[ true == true ]]
+ search_pattern=192.168.1.10
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=192.168.2.12
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ mkdir -p reports/192.168.2.12/misc/.objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local search_pattern
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
++ cut -d/ -f2
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Eksr1PCVbv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Eksr1PCVbv
+ return 0
+ case "${target_platform}" in
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODk5ODUxODA2MjY2MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console ]]
                      in_json_header = 0;
                      next;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
                    }
                  }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console ]]
+ case "${target_platform}" in
+ case "${target_file}" in
                  (in_json_header == 1) { next }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ awk -v divisor=--MTc0ODk5ODUxODExOTE1NTAwMAo-- '
                  BEGIN {
+ grep -F 192.168.1.10
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.2.12
+ search_pattern=10.10.10.10
+ local SCRIPT_DIR=./scripts
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw1.cfg.console
+ sed '/^[[:space:]]*$/d'
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8EK3Szzamw ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8EK3Szzamw
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fw3.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ result=0
+ local count=1
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P2TcuUhTKA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P2TcuUhTKA
+ case "${target_platform}" in
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ awk -v divisor=--MTc0ODk5ODUxODA2MzA0NDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
                    /^{$/            { in_json_header = 1; next }
++ IFS=,
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ case "${target_file}" in

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ cat reports/192.168.1.10/misc/.objects/switch1.list

                    # Start of a new block
++ echo 203.0.113.25
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
+ grep -F 10.10.10.10
+ cat -n
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

+ print_file reports/192.168.2.12/misc/.objects/fw1.list
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ declare -a execute__netwowrk_extract
+ case "${target_file}" in
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ sed '/^[[:space:]]*$/d'
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.817qcCBpVk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.817qcCBpVk
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ return 0
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ [[ true == true ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
++ printf '%*s' 12 ''
+ cat -n
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TuqHJjPJSV/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ieq23wRojb/network-extract--fw1.cfg.console
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zsDq72k1kE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zsDq72k1kE
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fn7YuqDdka ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fn7YuqDdka
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gVFIkTVW0O/network-extract--fg-testing-config.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
+ result=0
+ local count=2
+ exit 0
+ (( i = 0 ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rYPTA0ZUWj ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rYPTA0ZUWj
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk5ODUxODQ2NjY0ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ grep -F 203.0.113.25
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nB02GPse4w/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SSjaXkZAyv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SSjaXkZAyv
