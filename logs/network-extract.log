+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G26HMdmGV8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G26HMdmGV8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ly6eVdrnva
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ly6eVdrnva
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
+ source ./scripts/configs-objects.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias print-message=message
++ __CONFIGS_OBJECTS__=1
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias serialize-object=configs_objects
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ alias parse-cisco=main
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gEmTdFpZja
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gEmTdFpZja
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ff7SdCTHBU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ff7SdCTHBU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
+ source ./scripts/configs-objects.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias serialize-object=configs_objects
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
+ local target_config=configs/cisco/perimeter-fw1.cfg
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ config =~ ^(console|o)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ config =~ ^(export|r)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ config =~ ^(extract|x)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ [[ -z x ]]
++ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ export logs_location=logs
++ mkdir -p logs
+ logs_location=logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ mkdir -p logs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ export jobs_location=jobs
+ network_extract__console=console/network-extract.console
++ jobs_location=jobs
+ touch console/network-extract.console
++ mkdir -p jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
++ export console_location=console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ console_location=console
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --verbose
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XyG2VwFDh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XyG2VwFDh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ dirname -- ./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
++ alias log-info=log_info
+ source ./scripts/configs-objects.shell
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias serialize-object=configs_objects
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local script_filename=cisco-configs.awk
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ debug=false
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ echo -e --platform=fortinet
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
++ export console_location=console
+ [[ platform =~ ^(console|o)$ ]]
++ console_location=console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ mkdir -p console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ 6 -eq 0 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console --verbose
++ IFS=,
++ echo 10.0.0.1,203.0.113.25
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --search=.cache/ips.list
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
++ export targets_location=targets
++ targets_location=targets
+ [[ true == true ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ echo -e --config=configs/misc/fw1.cfg
+ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ mktemp -d
++++ basename ./scripts/devops-resources.shell
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
ASA Version 9.12(4)
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
hostname dmz-fw2-backup
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7fMn9tpnAL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7fMn9tpnAL
domain-name global.dmz.example.net
+ source ./scripts/devops-helpers.shell

+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ export 'nl=\n'
+ nl='\n'
++ [[ -n '' ]]
+ result=0
+ source ./scripts/devops-resources.shell
++ readonly __DEVOPS_HELPERS__=1
+ [[ -n {
++ __DEVOPS_HELPERS__=1
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++ [[ 5 -lt 4 ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ [[ -n '' ]]

object network Sentinel-NAT
 host 203.0.113.25
++ declare -gr __DEVOPS_RESOURCES__=1
 description Corporate NAT edge ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ command -v -- ./scripts/network-extract.shell
++ alias log-warn=log_warn
++ alias network-configs--helper=network_configs__helper
++ alias print-message=message
++ alias print-newline=newline
++ tr -d '\r'
++ alias pause=pause
++ alias print-line=print
++ alias network-extract--helper=network_extract__helper
++ alias print-file=print_file
++ grep -v '^\s*$'
+ source ./scripts/configs-objects.shell
++ alias relative-configpath=relative_configpath
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias system-metrics=system_metrics
+ print '{
++ grep -v '^#'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
++ alias validate-address=validate_address
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ alias serialize-object=configs_objects

++ alias warning-message=warning
object network Sentinel-NAT
 host 203.0.113.25
++ export LC_ALL=C
 description Corporate NAT edge'
++ LC_ALL=C
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ sed '1{/^[[:space:]]*$/d;}'
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ -n {
++ default_devices=devices.list
  "vendor": "cisco",
++ export default_matrix=matrix.json
  "model": "ASA",
++ default_matrix=matrix.json
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++ export cache_location=.cache
  "hostname": "dmz-fw2-backup"
++ cache_location=.cache
}

++ export logs_location=logs
ASA Version 9.12(4)
++ logs_location=logs
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ mkdir -p logs
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ dirname -- ./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local SCRIPT_DIR=./scripts
+ local first_search_entry=10.0.0.1
+ local script_filename=cisco-configs.awk
+ local last_search_entry=203.0.113.25
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ newline 2
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ local count=2
+ (( i = 0 ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
++ export jobs_location=jobs
+ (( i < count ))
+ local extract_location=.cache/resources/misc/fw1.cfg
++ jobs_location=jobs
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ echo
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ read -r key value
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z fortinet ]]
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ which awk
+ echo
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ newline
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ [[ false == true ]]
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
++ IFS=,
++ echo 10.0.0.1,203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ [[ platform =~ ^(console|o)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
++ touch console/run.console
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ local 'indent=            '
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
++ echo -e --config=configs/misc/fw3.cfg
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G26HMdmGV8 ]]
+ [[ -n '' ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G26HMdmGV8
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
++ mktemp -d
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mfMW7MvayH
domain-name edge.dc.example.com
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mfMW7MvayH

interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 ip address 203.0.113.25 255.255.255.0
+ [[ verbose =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ export 'nl=\n'
 description External Internet-facing Interface
+ nl='\n'

+ [[ verbose =~ ^(console|o)$ ]]
interface GigabitEthernet0/1
+ source ./scripts/devops-resources.shell
 nameif inside
 security-level 100
+ [[ verbose =~ ^(export|r)$ ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

+ [[ verbose =~ ^(extract|x)$ ]]
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ [[ verbose =~ ^(logger|l)$ ]]
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Avengers-DMZ
++ [[ -n '' ]]
 description Public access layer
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 192.0.2.50
++ declare -gr __DEVOPS_RESOURCES__=1
 network-object host 203.0.113.25
+ [[ verbose == \h\e\l\p ]]
 network-object 192.168.2.0 255.255.255.0
++ alias network-extract--helper=network_extract__helper
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]

+ [[ verbose == \v\e\r\b\o\s\e ]]
object-group network Panther-Edge
+ source ./scripts/configs-objects.shell
+ local verbose=true
 description Internet-facing proxy systems
++ alias detect-vendor=detect_vendor
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ IFS=' 	
++ alias exit-error=exit_error
+ result=0
++ [[ -n '' ]]
+ [[ -n {
'
++ readonly __CONFIGS_OBJECTS__=1
  "vendor": "cisco",
++ __CONFIGS_OBJECTS__=1
  "model": "ASA",
+ [[ -z '' ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ debug=false
  "hostname": "perimeter-fw1"
++ alias list-file=list_file
}
+ [[ -z '' ]]

+ dry_run=false
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ -z true ]]
domain-name edge.dc.example.com
++ alias log-error=log_error

+ [[ -z '' ]]
interface GigabitEthernet0/0
 nameif outside
+ export console_output=false
 security-level 0
++ alias log-info=log_info
+ console_output=false
 ip address 203.0.113.25 255.255.255.0
+ [[ -z '' ]]
 description External Internet-facing Interface
++ alias log-warn=log_warn

interface GigabitEthernet0/1
+ local export_objects=false
++ alias serialize-object=configs_objects
 nameif inside
++ alias print-message=message
 security-level 100
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ [[ -z '' ]]

+ script_helper=false
++ alias print-newline=newline
+ [[ false == true ]]
object network NAT-Edge
 host 203.0.113.25
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 description Internet-bound IP NAT

object network Stark-Tower
+ [[ -z .cache/ips.list ]]
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
+ search_terms=()
 description Public access layer
++ alias pause=pause
+ declare -a search_terms
 network-object host 192.0.2.50
+ [[ -f .cache/ips.list ]]
 network-object host 203.0.113.25
++ alias print-line=print
+ [[ .cache/ips.list != *,* ]]
 network-object 192.168.2.0 255.255.255.0
+ mapfile -t search_terms

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ alias parse-cisco=main
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ -z x ]]
++ nl='\n'
+ export logs_location=logs
++ export default_addresses=ips.list
+ logs_location=logs
++ default_addresses=ips.list
+ mkdir -p logs
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
+ [[ extract =~ ^(config|c)$ ]]
++ tr -d '\r'
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ extract =~ ^(console|o)$ ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ extract =~ ^(export|r)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -en '{
+ [[ extract =~ ^(search|s)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ extract == \h\e\l\p ]]
  "hostname": "perimeter-fw1"
+ [[ extract == \d\e\b\u\g ]]
}
+ [[ extract == \d\r\y\-\r\u\n ]]

++ grep -v '^\s*$'
+ [[ extract == \v\e\r\b\o\s\e ]]
ASA Version 9.14(3)
+ for xitem in "${@}"
hostname perimeter-fw1
domain-name edge.dc.example.com

+ IFS==
interface GigabitEthernet0/0
+ read -r key value
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
++ which awk
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ local first_search_entry=10.0.0.1
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ local last_search_entry=203.0.113.25
+ newline
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ export console_location=console
+ [[ platform =~ ^(export|r)$ ]]
++ console_location=console
+ [[ platform =~ ^(extract|x)$ ]]
++ mkdir -p console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console --verbose
+ local 'indent=            '
+ oIFS=' 	
'
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
++ echo -e --search=.cache/ips.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ extract_location=.cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ export targets_location=targets
+ local search_pattern=.cache/ips.list
++ targets_location=targets
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console
++ dirname .cache/resources/misc/fw1.cfg
++ echo -e --verbose
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
++ echo -e --config=configs/misc/switch1.conf
  set comment "Public NAT exposure for Red Skull trap"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ sed '1{/^[[:space:]]*$/d;}'
+ output_dir=.cache/resources/misc
 edit "Public-Test"
+ [[ ! -d .cache/resources/misc ]]
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ly6eVdrnva ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ly6eVdrnva
++ command -v -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_config=configs/misc/switch1.conf
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ search_terms=()
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ source ./scripts/devops-helpers.shell
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ newline 2
+ local count=2
++ alias serialize-object=configs_objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
++ grep -v '^\s*$'
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ alias parse-cisco=main
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z x ]]
+ export logs_location=logs
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ logs_location=logs
+ mkdir -p logs
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ script_filename=network-extract.shell
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ script_filename=network-extract
+ newline
+ export network_extract__console=console/network-extract.console
+ local count=1
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ touch console/network-extract.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ [[ false == true ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console --verbose
++ which awk
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
+ IFS==
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ read -r key value
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ dirname .cache/resources/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ search =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ exit 0
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gEmTdFpZja ]]
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gEmTdFpZja
+ [[ search =~ ^(extract|x)$ ]]
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ [[ search =~ ^(platform|p)$ ]]
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ local search_pattern=.cache/ips.list
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ echo
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ output_dir=.cache/resources/misc
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
+ [[ ! -d .cache/resources/misc ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
++ echo -e --extract=.cache/resources/misc/switch3.conf
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
++ which awk

++ sed -e '1s|^\(-\)\{1,\}||'
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ extract == \h\e\l\p ]]
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ extract == \d\e\b\u\g ]]
++ IFS=,
+ [[ extract == \d\r\y\-\r\u\n ]]
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
++ echo 10.0.0.1,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ false == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ output_dir=.cache/resources/misc
+ result=0
+ [[ ! -d .cache/resources/misc ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ff7SdCTHBU ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ff7SdCTHBU
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ command -v -- ./scripts/network-extract.shell
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline 2
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local count=2
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ local verbose=true
+ (( i < count ))
+ echo
+ IFS=' 	
'
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ dry_run=false
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ .cache/ips.list != *,* ]]
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ mapfile -t search_terms
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ tr -d '\r'
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ ((  count == 0  ))
++ IFS=,
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (2)'
++ echo 10.0.0.1,203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ result=0
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XyG2VwFDh ]]
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XyG2VwFDh
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ [[ false == true ]]
+ declare -a execute__netwowrk_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
++ which awk
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7fMn9tpnAL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7fMn9tpnAL
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mfMW7MvayH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mfMW7MvayH
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoTtBOIq1S
++ mktemp -d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoTtBOIq1S
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DnxzOEEXpr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DnxzOEEXpr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ export jobs_location=jobs
++ alias print-file=print_file
++ jobs_location=jobs
++ mkdir -p jobs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gjK6iokP5p
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gjK6iokP5p
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ export targets_location=targets
++ alias log-info=log_info
++ targets_location=targets
++ alias log-warn=log_warn
++ export targets_logfile=.cache/targets.jobs
++ alias print-message=message
++ targets_logfile=.cache/targets.jobs
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ echo -n devops-resources.shell
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ -n '' ]]
++ default_devices=devices.list
+ readonly __NETWORK_EXTRACT__=1
++ export default_matrix=matrix.json
+ __NETWORK_EXTRACT__=1
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ set -euo pipefail
++ export logs_location=logs
++ logs_location=logs
+ export LC_ALL=C
+ LC_ALL=C
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ base64
+ source ./scripts/devops-helpers.shell
++ mktemp -d
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UThb5kUskQ
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UThb5kUskQ
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias parse-listings--helper=parse_listings__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias network-configs--helper=network_configs__helper
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias network-extract--helper=network_extract__helper
++ alias pause=pause
+ source ./scripts/configs-objects.shell
++ alias print-line=print
++ [[ -n '' ]]
++ alias print-file=print_file
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export console_location=console
++ console_location=console
++ alias serialize-object=configs_objects
++ mkdir -p console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.g1ogmvx64p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ oIFS=' 	
'
+ script_filename=network-extract
+ for xitem in "${@}"
+ export network_extract__console=console/network-extract.console
+ IFS==
+ network_extract__console=console/network-extract.console
+ read -r key value
+ touch console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ export targets_location=targets
++ console_location=console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ mkdir -p console
++ targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xk0vwral47/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ -n '' ]]
+ oIFS=' 	
+ readonly __NETWORK_EXTRACT__=1
'
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ set -euo pipefail
+ IFS==
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+++ echo -n devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(extract|x)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS__=1
+ IFS==
++ __DEVOPS_HELPERS__=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oCrTAPOpal
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oCrTAPOpal
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_location=targets
+ export 'nl=\n'
++ targets_location=targets
+ nl='\n'
++ export targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-resources.shell
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
++ alias log-warn=log_warn
++ alias print-message=message
+ source ./scripts/configs-objects.shell
++ alias print-newline=newline
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias pause=pause
++ __CONFIGS_OBJECTS__=1
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias serialize-object=configs_objects
++ alias system-metrics=system_metrics
+ [[ config =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ config =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(extract|x)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ config =~ ^(logger|l)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ config =~ ^(platform|p)$ ]]
++ default_matrix=matrix.json
+ [[ config =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ [[ config == \h\e\l\p ]]
++ cache_location=.cache
+ [[ config == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ IFS==
+ read -r key value
++ mkdir -p logs
+ alias parse-cisco=main
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oPRsHOUwBu
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oPRsHOUwBu
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export jobs_location=jobs
++ export 'nl=\n'
++ nl='\n'
++ jobs_location=jobs
++ export default_addresses=ips.list
++ default_addresses=ips.list
+++ echo -n devops-resources.shell
++ mkdir -p jobs
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ touch console/network-extract.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ source ./scripts/configs-objects.shell
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
+ alias parse-cisco=main
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --platform=cisco
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.g1ogmvx64p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ export actions_logfile=console/run.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ touch console/run.console
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xk0vwral47/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+++ base64
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ config =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ echo -e --export
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++++ basename ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS__=1
+ IFS==
++ __DEVOPS_HELPERS__=1
+ read -r key value
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F4s17Sx8AV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F4s17Sx8AV
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
+ source ./scripts/configs-objects.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ -n '' ]]
++ alias log-warn=log_warn
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias print-message=message
++ alias print-newline=newline
++ alias serialize-object=configs_objects
++ alias pause=pause
++ alias print-line=print
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+++ echo -n devops-resources.shell
++ nl='\n'
+ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ export =~ ^(console|o)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ export =~ ^(export|r)$ ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
+ local export_objects=true
++ cache_location=.cache
+ [[ export =~ ^(extract|x)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7mzOF9X2
+ [[ extract =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7mzOF9X2
+ [[ extract =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --export
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ extract == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias network-extract--helper=network_extract__helper
++ alias log-error=log_error
+ source ./scripts/configs-objects.shell
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias print-message=message
++ __CONFIGS_OBJECTS__=1
++ echo -e --verbose
++ alias print-newline=newline
++ alias pause=pause
++ alias serialize-object=configs_objects
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ [[ config =~ ^(config|c)$ ]]
++ alias warning-message=warning
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ config =~ ^(export|r)$ ]]
++ LC_ALL=C
+ alias parse-cisco=main
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(platform|p)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ config =~ ^(search|s)$ ]]
++ export default_devices=devices.list
+ [[ config == \h\e\l\p ]]
++ default_devices=devices.list
+ [[ -z x ]]
+ [[ config == \d\e\b\u\g ]]
+ export logs_location=logs
++ export default_matrix=matrix.json
++ export jobs_location=jobs
+ logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
++ default_matrix=matrix.json
++ jobs_location=jobs
+ mkdir -p logs
++ export cache_location=.cache
+ script_filename=network-extract.shell
++ cache_location=.cache
+ [[ config == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
++ mkdir -p jobs
+ IFS==
++ mkdir -p logs
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ [[ verbose =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.g1ogmvx64p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract
+ [[ platform =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console --export --verbose
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ [[ platform =~ ^(logger|l)$ ]]
'
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local target_platform=fortinet
++ echo -e --verbose
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xk0vwral47/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
++ echo -e --platform=cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ grep -v '^\s*$'
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
++ export targets_location=targets
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
++ targets_location=targets
+ [[ true == true ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ export =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ [[ export =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ local export_objects=true
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+++ base64
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++++ basename ./scripts/devops-resources.shell
++ mktemp -d
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
+ [[ config =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ output_dir=reports/10.0.0.1/cisco
++ [[ 5 -lt 4 ]]
+ [[ ! -d reports/10.0.0.1/cisco ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pCtKMnzAn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pCtKMnzAn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
+ source ./scripts/configs-objects.shell
++ alias exit-error=exit_error
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
+ [[ extract =~ ^(config|c)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-info=log_info
++ command -v -- ./scripts/network-extract.shell
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias serialize-object=configs_objects
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
++ alias print-newline=newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
++ alias pause=pause
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias print-line=print
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local verbose=true
+ IFS=' 	
'
++ alias print-file=print_file
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
++ alias system-metrics=system_metrics
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias warning-message=warning
+ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ script_filename=network-extract.shell
++ export logs_location=logs
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ logs_location=logs
+ network_extract__console=console/network-extract.console
++ mkdir -p logs
+ touch console/network-extract.console
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.g1ogmvx64p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console --export --verbose
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ oIFS=' 	
'
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xk0vwral47/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list != *,* ]]
++ console_location=console
+ mapfile -t search_terms
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console --export --verbose
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ tr -d '\r'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --config=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ search =~ ^(config|c)$ ]]
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ [[ search =~ ^(console|o)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ] ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ [[ logger =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ [[ logger == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
++ IFS=,
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
++ echo 203.0.113.25
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export targets_location=targets
+ newline
++ targets_location=targets
+ local count=1
+ (( i = 0 ))
++ export targets_logfile=.cache/targets.jobs
+ local 'indent=            '
+ (( i < count ))
++ targets_logfile=.cache/targets.jobs
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local count=1
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ local target_config=.cache/resources/misc/switch3.conf
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ config == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+++ base64
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ output_dir=reports/10.0.0.1/fortinet
+ [[ ! -d reports/10.0.0.1/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+++ echo -n devops-resources.shell
+ local target_config=.cache/resources/misc/fw1.cfg
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ (( i < count ))
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
++ readonly __DEVOPS_HELPERS__=1
+ echo
++ __DEVOPS_HELPERS__=1
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ IFS==
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ alias network-configs--helper=network_configs__helper
domain-name edge.dc.example.com
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]

interface GigabitEthernet0/1
 nameif inside
 security-level 100
+ [[ cfg == \c\f\g ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg

object network Stark-Tower
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
 host 10.0.0.1
 description Core services gateway'
++ echo -e --verbose
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
  "version": "9.14(3)",
+ [[ verbose =~ ^(config|c)$ ]]
  "domain": "edge.dc.example.com",
++ alias network-extract--helper=network_extract__helper
  "hostname": "perimeter-fw1"
}
+ [[ verbose =~ ^(console|o)$ ]]

ASA Version 9.14(3)
hostname perimeter-fw1
+ source ./scripts/configs-objects.shell
domain-name edge.dc.example.com
+ [[ verbose =~ ^(export|r)$ ]]

++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
interface GigabitEthernet0/1
 nameif inside
+ [[ verbose =~ ^(logger|l)$ ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ [[ verbose =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
 description Internal Network Interface
++ readonly __CONFIGS_OBJECTS__=1

++ __CONFIGS_OBJECTS__=1
object network Stark-Tower
+ [[ verbose =~ ^(search|s)$ ]]
 host 10.0.0.1
 description Core services gateway ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias serialize-object=configs_objects
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_DIR=./scripts
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local script_filename=fortinet-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list != *,* ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ mapfile -t search_terms
++ echo -e --platform=cisco
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ alias parse-cisco=main

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ sed '1{/^[[:space:]]*$/d;}'
+ mkdir -p logs
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
++ which awk

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ output_dir=reports/203.0.113.25/cisco
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ local verbose=true
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ search_terms=()
+ [[ platform =~ ^(export|r)$ ]]
+ declare -a search_terms
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline 2
+ IFS==
+ read -r key value
+ local count=2
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ script_filename=network-extract.shell
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
+ touch console/network-extract.console
  "model": "ASA",
+ [[ true == true ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ local SCRIPT_PATH=./scripts/network-extract.shell
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ result=0
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ [[ -n {
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "ASA",
+ (( i < count ))
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ echo
  "hostname": "dmz-fw2-backup"
}
+ (( i++ ))

+ (( i < count ))
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
  "domain": "global.dmz.example.net",
++ grep -v '^\s*$'
+ local first_search_entry=10.0.0.1
+ declare -a execute__netwowrk_extract
  "hostname": "dmz-fw2-backup"
}

+ local last_search_entry=10.0.0.1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
ASA Version 9.12(4)
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ true == true ]]
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ grep -v '^#'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
  "domain": "global.dmz.example.net",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ] ]]
  "hostname": "dmz-fw2-backup"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
}
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'

+ sed '1{/^[[:space:]]*$/d;}'
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ local count=1

+ ((  count == 0  ))
object network Sentinel-NAT
 host 203.0.113.25
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
 description Corporate NAT edge ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
+ newline
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local count=1
}

+ (( i = 0 ))
ASA Version 9.12(4)
+ (( i < count ))
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xk0vwral47/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local first_search_entry=203.0.113.25
+ for xitem in "${@}"
+ IFS==
+ local last_search_entry=203.0.113.25
+ read -r key value
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ newline 2
+ [[ logger =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ] ]]
+ configs_objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=2
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
++ which awk
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i++ ))
+ IFS==
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ read -r key value
+ (( i < count ))
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
++ echo -e --export
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ conf == \c\o\n\f ]]
+ local parent_dir=reports/10.0.0.1/cisco
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ search =~ ^(export|r)$ ]]
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ IFS=,
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ configs_objects
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --export
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ command -v -- ./scripts/network-extract.shell
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ cut -d/ -f2
+ [[ config =~ ^(extract|x)$ ]]
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ [[ config =~ ^(logger|l)$ ]]
+ print '{
  "vendor": "fortinet",
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ export =~ ^(console|o)$ ]]

+ [[ config =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
+ [[ export =~ ^(export|r)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ config == \h\e\l\p ]]
config firewall address
+ [[ config == \d\e\b\u\g ]]
 edit "IronMan-HQ"
+ [[ config == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config == \v\e\r\b\o\s\e ]]
+ local export_objects=true
  set subnet 10.0.0.1 255.255.255.255
+ for xitem in "${@}"
  set comment "Main node at Stark Tower"
+ [[ export =~ ^(extract|x)$ ]]
 next
+ IFS==
end
+ read -r key value

+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
config firewall address
+ [[ export =~ ^(platform|p)$ ]]
 edit "IronMan-HQ"
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ [[ export == \h\e\l\p ]]
 next
++ printf '%*s' 12 ''
end'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
+ [[ verbose =~ ^(platform|p)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ verbose == \h\e\l\p ]]

+ [[ verbose == \d\e\b\u\g ]]
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\r\y\-\r\u\n ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose == \v\e\r\b\o\s\e ]]

config firewall address
+ local verbose=true
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ IFS=' 	
end
'

+ local 'indent=            '
+ [[ -z '' ]]
config firewall address
+ debug=false
 edit "IronMan-HQ"
+ [[ true == true ]]
+ [[ -z '' ]]
  set subnet 10.0.0.1 255.255.255.255
+ dry_run=false
  set comment "Main node at Stark Tower"
+ [[ -z true ]]
 next
end ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ echo -en '{
+ newline
+ [[ -z true ]]
  "vendor": "fortinet",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console ]]
  "model": "FortiGate-60F",
+ [[ -z '' ]]
+ local count=1
  "version": "v7.2.5.F",
+ (( i = 0 ))
+ script_helper=false
+ (( i < count ))
  "domain": "",
+ echo
  "hostname": "fg-branch-vpn-01"
}
+ [[ false == true ]]
+ (( i++ ))

+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
config firewall address
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 edit "IronMan-HQ"
+ search_terms=()
  set subnet 10.0.0.1 255.255.255.255
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ declare -a search_terms
  set comment "Main node at Stark Tower"
+ output_dir=reports/203.0.113.25/fortinet
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 next
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list != *,* ]]
end
+ mapfile -t search_terms
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ [[ ! -d reports/203.0.113.25/fortinet ]]
config firewall address
 edit "IronMan-HQ"
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
 next
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
end'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/cisco/.objects
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
+ newline 2
+ local count=2
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local SCRIPT_DIR=./scripts
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-configs--ips.list ]'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ local count=1
+ local 'extracted_configuration={
+ search_pattern=203.0.113.25
                    in_json_header = 0;
  "vendor": "cisco",
+ ((  count == 0  ))
  "model": "ASA",
                    blk = "";
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
                  }
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
  "version": "9.14(3)",
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
                  /^[[:space:]]*$/ { next }
  "domain": "edge.dc.example.com",
                  /^{$/ { in_json_header = 1; next }
  "hostname": "perimeter-fw1"
                  /^}$/ {
}

+ newline
ASA Version 9.14(3)
                    if (in_json_header == 1) {
++ echo -e --platform=cisco
                      in_json_header = 0;
+ local count=1
hostname perimeter-fw1
                      next;
domain-name edge.dc.example.com
                    }
+ (( i = 0 ))
                  }

+ (( i < count ))
interface GigabitEthernet0/0
                  (in_json_header == 1) { next }
 nameif outside
++ which awk
                  /^[^[:space:]]/ {
 security-level 0
                    if (blk != "" && !seen[blk]++) print blk "\n";
 ip address 203.0.113.25 255.255.255.0
+ grep -F 10.0.0.1
 description External Internet-facing Interface
                    blk = $0;

object network NAT-Edge
++ sed -e '1s|^\(-\)\{1,\}||'
                    next;
+ echo
+ newline
 host 203.0.113.25
+ (( i++ ))
                  }
+ (( i < count ))
                  {
                    blk = blk divisor " " $0;
+ local count=1
 description Internet-bound IP NAT
                  }

                  END {
+ (( i = 0 ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
                  }
+ echo
object-group network Avengers-DMZ
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ (( i++ ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ -z cisco ]]
 description Public access layer
 network-object host 192.0.2.50
++ tr -d '\r'
 network-object host 203.0.113.25
+ [[ false == true ]]
+ [[ true == true ]]
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ newline
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
  "vendor": "cisco",
+ local count=1
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
  "model": "ASA",
++ grep -v '^\s*$'
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
  "version": "9.14(3)",
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
  "domain": "edge.dc.example.com",
+ echo
  "hostname": "perimeter-fw1"
+ configs_objects
}
+ (( i++ ))

+ (( i < count ))
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'

+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
interface GigabitEthernet0/0
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
 nameif outside
++ grep -v '^#'
 security-level 0
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ ls -al --color=auto .cache/resources/misc/switch3.conf
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ IFS=,
++ echo 10.0.0.1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
++ which awk
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ [[ platform =~ ^(config|c)$ ]]
 description External Internet-facing Interface

object network NAT-Edge
+ [[ platform =~ ^(console|o)$ ]]
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
+ [[ platform =~ ^(export|r)$ ]]
 description Public access layer
+ [[ platform =~ ^(extract|x)$ ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ platform =~ ^(logger|l)$ ]]

object-group network Panther-Edge
+ [[ platform =~ ^(platform|p)$ ]]
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ local target_platform=cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ echo -en '{
+ [[ platform == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ platform == \d\r\y\-\r\u\n ]]
  "model": "ASA",
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ IFS==
  "hostname": "perimeter-fw1"
+ read -r key value
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ IFS=,
++ echo 203.0.113.25
+ case "${target_platform}" in
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ declare -a execute__netwowrk_extract
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ] ]]
                    blk = $0;
                    next;
                  }
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local count=1
+ grep -F 203.0.113.25
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ local parent_dir=reports/10.0.0.1/fortinet
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ cat -n
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ printf '%*s' 12 ''
+ local 'indent=            '
+ newline 2
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ [[ true == true ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ newline
+ local count=2
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ newline
+ local 'message=                .cache/resources/misc/switch1.conf'
+ local count=1
+ echo -e '                .cache/resources/misc/switch1.conf'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ result=0
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ logger == \h\e\l\p ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ for xitem in "${@}"
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ IFS==
+ read -r key value
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ echo
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ (( i++ ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ return 0
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ output_dir=reports/10.0.0.1/misc
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ ! -d reports/10.0.0.1/misc ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ configs_objects
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ search_pattern=10.0.0.1
++ dirname -- ./scripts/network-extract.shell
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ local export_objects=true
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ export =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--perimeter-fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ export =~ ^(platform|p)$ ]]
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ export =~ ^(search|s)$ ]]
+ result=0
+ [[ export == \h\e\l\p ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ export == \d\e\b\u\g ]]
  "model": "",
+ [[ export == \d\r\y\-\r\u\n ]]
  "version": "",
+ [[ export == \v\e\r\b\o\s\e ]]
  "domain": "",
+ for xitem in "${@}"
  "hostname": ""
}
+ IFS==

+ read -r key value
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ echo -en '{
  "model": "FortiGate-60F",
  "vendor": "cisco",
  "version": "v7.2.5.F",
  "model": "",
  "domain": "",
  "version": "",
  "hostname": "fg-branch-vpn-01"
  "domain": "",
}
  "hostname": ""

}
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"
object-group network Avengers-Office
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 description VLAN access layer

 network-object host 10.0.0.1
config firewall address
 network-object 192.168.12.0 255.255.255.0'
 edit "Public-Test"
++ command -v -- ./scripts/network-extract.shell
  set subnet 203.0.113.25 255.255.255.255
+ sed '1{/^[[:space:]]*$/d;}'
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ echo -e --verbose
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local parent_dir=reports/203.0.113.25/cisco
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
++ dirname -- ./scripts/network-extract.shell
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ basename reports/203.0.113.25/cisco/perimeter-fw1
 edit "Public-Test"
+ sed '1{/^[[:space:]]*$/d;}'
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ [[ true == true ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
config firewall address
 edit "Public-Test"
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console ]]
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ result=0
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console ]]
+ exit 0
end'
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoTtBOIq1S ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--dmz-fw2-backup.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoTtBOIq1S
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ grep -F 10.0.0.1
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=2
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ (( i++ ))
+ (( i < count ))
+ local search_pattern
+ search_terms=()
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ IFS=,
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ result=0
+ exit 0
++ echo 10.0.0.1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DnxzOEEXpr ]]
++ tr -d '\r'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DnxzOEEXpr
++ cut -d/ -f2
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ grep -v '^\s*$'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ which awk
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ cat -n
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ configs_objects
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
++ echo 203.0.113.25
+ (( i < count ))
+ echo
+ (( i++ ))
+ search_pattern=203.0.113.25
+ (( i < count ))
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
++ dirname reports/10.0.0.1/misc/switch1.conf
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-configs--ips.list ]'
+ local count=1
++ which awk
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local parent_dir=reports/10.0.0.1/misc
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ local parent_dir=reports/203.0.113.25/fortinet
+ local awk_bin=/usr/bin/awk
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
++ basename reports/10.0.0.1/misc/switch1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ grep -F 203.0.113.25
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local search_pattern
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ local search_pattern
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
++ echo reports/10.0.0.1/misc/switch1.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ cut -d/ -f2
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ print '{
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
  "vendor": "cisco",
  "model": "",
  "version": "",
+ cat -n
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
+ result=0
+ output_dir=reports/203.0.113.25/misc
+ exit 0
+ sed '1{/^[[:space:]]*$/d;}'
  "vendor": "cisco",
  "model": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gjK6iokP5p ]]
+ [[ ! -d reports/203.0.113.25/misc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gjK6iokP5p
  "version": "",
  "domain": "",
  "hostname": ""
+ local 'extracted_configuration={
}
  "vendor": "cisco",

  "model": "",
interface Vlan1
  "version": "",
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
  "domain": "",
  "hostname": ""
}
+ echo -en '{

  "vendor": "cisco",
object-group network Krypton-Cloud
  "model": "",
 description Cloud-facing external nodes
  "version": "",
 network-object host 198.51.100.75
 network-object host 203.0.113.25
  "domain": "",

  "hostname": ""
object network Krypton-Gateway
}
 host 203.0.113.25

 description Secure NAT boundary for cloud access'
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ result=0
 network-object 192.168.12.0 255.255.255.0'
+ search_pattern=10.0.0.1
+ [[ -n {
+ mkdir -p reports/10.0.0.1/misc/.objects
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/fortinet/.objects
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ newline 2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
+ newline 2
+ case "${target_platform}" in
+ local count=2
+ grep -F 10.0.0.1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i = 0 ))
                    BEGIN {
+ (( i < count ))
                      blk = "";
                      in_json_header = 0;
+ echo
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ (( i++ ))
                    # Skip JSON preamble
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
                    /^{$/            { in_json_header = 1; next }
+ echo
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ local script_filename=cisco-configs.awk
                    # Skip platform metadata
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
                    /^#(hostname|model|config-version)=/ { next }
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ grep -F 203.0.113.25

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ [[ true == true ]]
                      blk = $0;
                      next;
                    }
+ sed '/^[[:space:]]*$/d'

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
                      blk = "";
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
                      next;
                    }
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
+ newline
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ configs_objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/10.0.0.1/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ configs_objects
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ newline
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ local count=1
+ (( i = 0 ))
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ (( i++ ))
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ (( i < count ))
++ IFS=,
+ cat -n
++ echo 203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UThb5kUskQ ]]
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UThb5kUskQ
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ cat -n
+ local parent_dir=reports/10.0.0.1/misc
++ which awk
++ basename reports/10.0.0.1/misc/switch3
+ local parent_dir=reports/203.0.113.25/misc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ basename reports/203.0.113.25/misc/fw1
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local search_pattern
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/10.0.0.1/misc/switch3.conf
++ cut -d/ -f2
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch1.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/203.0.113.25/misc/fw1.cfg
++ cut -d/ -f2
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/misc/.objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oCrTAPOpal ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oCrTAPOpal
+ search_pattern=203.0.113.25
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ mkdir -p reports/203.0.113.25/misc/.objects
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oPRsHOUwBu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oPRsHOUwBu
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch3.conf
+ grep -F 10.0.0.1
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ grep -F 203.0.113.25
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat -n
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ false == true ]]
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ configs_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1oGMvx64p/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw1.cfg.console
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F4s17Sx8AV ]]
++ cut -d/ -f2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F4s17Sx8AV
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7mzOF9X2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7mzOF9X2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat -n
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XK0vwRal47/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pCtKMnzAn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pCtKMnzAn
