+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1dRxltbsqy
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1dRxltbsqy
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q3M9XeQrOC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q3M9XeQrOC
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
++ export targets_location=targets
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ targets_location=targets
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ export targets_logfile=.cache/targets.jobs
+ for xitem in "${@}"
++ targets_logfile=.cache/targets.jobs
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/access-sw1-west.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rCDHskPLL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rCDHskPLL
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
+ [[ extract =~ ^(config|c)$ ]]
++ mkdir -p console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5xqBN14GJJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5xqBN14GJJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+++ base64
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --verbose
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ [[ -n '' ]]
+ [[ -z '' ]]
+ dry_run=false
++ readonly __DEVOPS_HELPERS__=1
+ [[ -z true ]]
++ __DEVOPS_HELPERS__=1
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ jobs_location=jobs
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ mkdir -p jobs
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -n '' ]]
+ [[ cfg == \c\f\g ]]
+ readonly __NETWORK_EXTRACT__=1
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ __NETWORK_EXTRACT__=1
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(search|s)$ ]]
++ targets_location=targets
+ local search_pattern=.cache/ips.list
++ export targets_logfile=.cache/targets.jobs
+ [[ search == \h\e\l\p ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0wvaXGa1ak
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0wvaXGa1ak
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ dirname -- ./scripts/network-extract.shell
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias parse-listings--helper=parse_listings__helper
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
++ tr -d '\r'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ IFS=,
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
++ export console_location=console
++ console_location=console
+ declare -a execute__netwowrk_extract
++ mkdir -p console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ touch console/network-extract.console
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n '' ]]
+ local awk_bin=/usr/bin/awk
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ set -euo pipefail
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kYYoGhsagr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kYYoGhsagr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ search =~ ^(search|s)$ ]]
++ alias print-message=message
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
++ export targets_location=targets
+ read -r key value
++ targets_location=targets
+ [[ logger =~ ^(export|r)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias pause=pause
++ alias print-line=print
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias print-file=print_file
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
+++ tr -dc a-zA-Z0-9
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ echo -e --verbose
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
++++ basename ./scripts/devops-resources.shell
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ dirname -- ./scripts/network-extract.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ config =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ search_terms=()
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ local SCRIPT_DIR=./scripts
+ source ./scripts/configs-objects.shell
+ newline 2
+ local script_filename=cisco-configs.awk
++ [[ -n '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias serialize-object=configs_objects
+ [[ true == true ]]
++ tr -d '\r'
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ export console_location=console
++ console_location=console
++ grep -v '^\s*$'
++ mkdir -p console
++ which awk
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local count=1
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ local count=17
+ ((  count == 0  ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ script_filename=network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ case "${target_file}" in
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ script_filename=network-extract
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ newline
+ export network_extract__console=console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ network_extract__console=console/network-extract.console
+ (( i < count ))
++ echo -e --platform=cisco
+ touch console/network-extract.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ echo
+ __NETWORK_EXTRACT__=1
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ mktemp -d
++ which awk
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console --verbose
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lUf22de4GW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lUf22de4GW
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
++ alias pause=pause
+ [[ cfg == \c\f\g ]]
++ alias print-line=print
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ local 'indent=            '
++ alias print-file=print_file
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
++ alias system-metrics=system_metrics
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias validate-address=validate_address
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export 'nl=\n'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ nl='\n'
++ export default_addresses=ips.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ default_addresses=ips.list
++ export default_devices=devices.list
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export logs_location=logs
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ logs_location=logs
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ mkdir -p logs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1dRxltbsqy ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1dRxltbsqy
+++ base64
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
++ alias serialize-object=configs_objects
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ export console_location=console
+ [[ config =~ ^(config|c)$ ]]
++ console_location=console
++ mkdir -p console
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ logs_location=logs
+ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ [[ verbose =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ verbose =~ ^(console|o)$ ]]
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
+ [[ verbose =~ ^(export|r)$ ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ [[ verbose =~ ^(extract|x)$ ]]
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ verbose =~ ^(logger|l)$ ]]
 description Dev VLAN

object network BlackWidow-Core
+ [[ verbose =~ ^(platform|p)$ ]]
 host 172.16.1.6
 description Branch router uplink NAT

+ [[ verbose =~ ^(search|s)$ ]]
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ [[ verbose == \h\e\l\p ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 198.51.100.75

+ [[ verbose == \d\r\y\-\r\u\n ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ [[ verbose == \v\e\r\b\o\s\e ]]

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local verbose=true
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ -z '' ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ local export_objects=false
}

version 16.9
hostname branch-isr-02

+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ -z '' ]]
 description ISP uplink
+ script_helper=false

+ local SCRIPT_DIR=./scripts
+ [[ false == true ]]
interface GigabitEthernet0/0/1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
+ [[ -z .cache/ips.list ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT
+ search_terms=()

object network Hydra-Link
 host 198.51.100.75
+ declare -a search_terms
 description Branch NAT egress
+ local script_filename=cisco-configs.awk

+ [[ -f .cache/ips.list ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

+ [[ .cache/ips.list != *,* ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ mapfile -t search_terms

+ local script_filepath=./scripts/extract/cisco-configs.awk
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^\s*$'
+ script_filename=network-extract.shell
++ grep -v '^#'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ IFS=,
+ local first_search_entry=10.0.0.1
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ oIFS=' 	
'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ declare -a execute__netwowrk_extract
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ which awk
++ echo -e --search=.cache/ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hVW1Vydf7R
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hVW1Vydf7R
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ printf '%*s' 12 ''
+++ base64
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
+ local 'indent=            '
+ [[ true == true ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local search_pattern=.cache/ips.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--branch-isr-02.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q3M9XeQrOC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q3M9XeQrOC
++ echo -e --verbose
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
++ command -v -- ./scripts/network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ sed '1{/^[[:space:]]*$/d;}'

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
+ [[ verbose =~ ^(config|c)$ ]]
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ script_filename=network-extract.shell
++ export actions_logfile=console/run.console
+ script_filename=network-extract
++ actions_logfile=console/run.console
+ export network_extract__console=console/network-extract.console
++ touch console/run.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ which awk
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console --verbose
++ echo -e --platform=fortinet
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ mktemp -d
+ message 'Search Pattern: [ .cache/ips.list ]'
++ echo -e --search=.cache/ips.list
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
+ newline
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ (( i = 0 ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console ]]
++ export targets_location=targets
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
++ targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
++ which awk
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AaL7Um0hfT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AaL7Um0hfT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++++ basename ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ local awk_bin=/usr/bin/awk
++ alias log-error=log_error
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console ]]
++ alias system-metrics=system_metrics
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ printf '%*s' 12 ''
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'indent=            '
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
+++ echo -n devops-resources.shell
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(extract|x)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ for xitem in "${@}"
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ IFS==
+ read -r key value
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ result=0
++ [[ -n '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ exit 0
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rCDHskPLL ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rCDHskPLL
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ config =~ ^(platform|p)$ ]]
++ alias serialize-object=configs_objects
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export jobs_location=jobs
+ for xitem in "${@}"
++ jobs_location=jobs
+ IFS==
+ read -r key value
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ tr -d '\r'
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

++ echo -e --platform=fortinet
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ echo -e --search=.cache/ips.list
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ local count=17
+ [[ platform =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ [[ platform == \h\e\l\p ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline 2
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ echo
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i++ ))
+ [[ -n '' ]]
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ mktemp -d
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+++ base64
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEoRV0NYoH
+ [[ logger == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEoRV0NYoH
+ for xitem in "${@}"
+ IFS==
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ printf '%*s' 12 ''
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'indent=            '
++ alias list-file=list_file
+ [[ true == true ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ alias log-warn=log_warn
+ newline
+ [[ cfg == \c\f\g ]]
++ alias print-message=message
+ local count=1
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
++ alias print-newline=newline
+ echo
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias pause=pause
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-line=print
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias print-file=print_file
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias relative-configpath=relative_configpath
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
++ alias system-metrics=system_metrics
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ echo -n devops-resources.shell
++ echo -e --verbose
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--dmz-fw2-backup.cfg.console
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
+ output_dir=.cache/resources/fortinet
++ mkdir -p jobs
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ ! -d .cache/resources/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ verbose == \h\e\l\p ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
++ command -v -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5xqBN14GJJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5xqBN14GJJ
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
++ dirname -- ./scripts/network-extract.shell
 host 172.16.0.5
 description WAN firewall entry point ]]
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
++ export console_location=console
+ [[ extract =~ ^(console|o)$ ]]
++ console_location=console
+ [[ extract =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ script_filename=network-extract.shell

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ script_filename=network-extract
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
+ export network_extract__console=console/network-extract.console
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ network_extract__console=console/network-extract.console
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ touch console/network-extract.console
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --platform=fortinet
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
++ which awk
+ local last_search_entry=203.0.113.25
++ export actions_logfile=console/run.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ actions_logfile=console/run.console
+ [[ true == true ]]
++ touch console/run.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ local count=2
+ [[ -z fortinet ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n '' ]]
+ (( i++ ))
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ false == true ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export targets_location=targets
+ IFS==
++ targets_location=targets
+ read -r key value
++ mktemp -d
++ export targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+++ base64
++ echo -e --verbose
++ echo -e --config=configs/misc/fw1.cfg
++ printf '%*s' 12 ''
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++++ basename ./scripts/devops-resources.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--perimeter-fw1.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UZYNBqAnqF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UZYNBqAnqF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ output_dir=.cache/resources/fortinet
++ alias exit-error=exit_error
+ [[ ! -d .cache/resources/fortinet ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+++ echo -n devops-resources.shell
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export LC_ALL=C
+ [[ config == \h\e\l\p ]]
++ LC_ALL=C
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export 'nl=\n'
+ for xitem in "${@}"
++ nl='\n'
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
++ export default_addresses=ips.list
+ read -r key value
++ default_addresses=ips.list
+ [[ verbose == \h\e\l\p ]]
++ export default_devices=devices.list
+ [[ verbose == \d\e\b\u\g ]]
++ default_devices=devices.list
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export default_matrix=matrix.json
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ default_matrix=matrix.json
+ local verbose=true
++ export cache_location=.cache
++ cache_location=.cache
+ IFS=' 	
'
++ export logs_location=logs
++ logs_location=logs
+ [[ -z '' ]]
+ debug=false
++ mkdir -p logs
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_helper=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ source ./scripts/devops-helpers.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
++ [[ -n '' ]]
+ mapfile -t search_terms
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0wvaXGa1ak ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0wvaXGa1ak
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ tr -d '\r'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ extract =~ ^(search|s)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ extract == \h\e\l\p ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ extract == \d\e\b\u\g ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ extract == \d\r\y\-\r\u\n ]]
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ [[ extract == \v\e\r\b\o\s\e ]]
  set alias "Branch ISP"
 next
+ for xitem in "${@}"
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ IFS==
  set alias "User LAN"
+ read -r key value
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
++ which awk
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ print '{
+ [[ -z fortinet ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ true == true ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ newline
  set comment "Branch NAT"
 next
end

+ local count=1
config firewall address
 edit "IronMan-HQ"
+ (( i = 0 ))
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ (( i < count ))
 next
 edit "Spidey-Sandbox"
+ echo
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
+ (( i++ ))
  set subnet 192.168.1.10 255.255.255.255
+ (( i < count ))
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
  set comment "Backup uplink for Milano crew"
 next
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
end

++ echo -e --platform=cisco
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ sed '1{/^[[:space:]]*$/d;}'
config firewall address
 edit "IronMan-HQ"
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ sed -e '1s|^\(-\)\{1,\}||'

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
++ export console_location=console
  set alias "Branch ISP"
 next
 edit "internal"
++ console_location=console
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
++ mkdir -p console
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ newline 2
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=2
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export actions_logfile=console/run.console
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
++ actions_logfile=console/run.console
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
++ touch console/run.console
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ printf '%*s' 12 ''
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local 'indent=            '
+ set -euo pipefail
+ export LC_ALL=C
+ [[ true == true ]]
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ search =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local search_pattern=.cache/ips.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ false == true ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
++ mktemp -d
+ [[ logger =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
++ echo -e --config=configs/misc/fw3.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+++ base64
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+++ tr -dc a-zA-Z0-9
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-branch-vpn-01.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aNd5QZDrEC
++++ basename ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aNd5QZDrEC
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ dirname -- ./scripts/network-extract.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias print-file=print_file
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias system-metrics=system_metrics
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ echo -e --extract=.cache/resources/misc/fw3.cfg
+ local SCRIPT_DIR=./scripts
++ tr -d '\r'
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ grep -v '^\s*$'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
++ [[ -n '' ]]
  set alias "Campus Core Transit"
 next
 edit "wifi"
++ readonly __DEVOPS_HELPERS__=1
  set ip 192.168.100.100 255.255.255.0
++ __DEVOPS_HELPERS__=1
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
++ [[ 5 -lt 4 ]]
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
++ grep -v '^#'
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
+ result=0
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kYYoGhsagr ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kYYoGhsagr
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
++ alias parse-listings--helper=parse_listings__helper
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ which awk
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
++ export jobs_location=jobs
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
++ jobs_location=jobs
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ alias parse-cisco=main
++ mkdir -p jobs
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(logger|l)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
++ IFS=,
+ ls -al --color=auto configs/misc/fw1.cfg
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
+ newline 2
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ true == true ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(export|r)$ ]]
++ actions_logfile=console/run.console
+ [[ platform =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ cfg == \c\f\g ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ extract_location=.cache/resources/misc/fw1.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console ]]
+ [[ search =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ search =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/misc/switch1.conf
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
+ exit 0
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lUf22de4GW ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lUf22de4GW
  set action accept
  set logtraffic all
+ sed '1{/^[[:space:]]*$/d;}'
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ local export_objects=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ which awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ newline 2
++ tr -d '\r'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ grep -v '^\s*$'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ [[ 5 -lt 4 ]]
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ local first_search_entry=10.0.0.1
+ declare -a execute__netwowrk_extract
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
++ which awk
+ echo
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ IFS==
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ read -r key value
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fg-testing-config.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console --verbose
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/misc/fw3.cfg ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hVW1Vydf7R ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hVW1Vydf7R
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
+ local SCRIPT_PATH=./scripts/network-extract.shell

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ local verbose=true
+ newline 2
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=2
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ [[ -z .cache/ips.list ]]
+ (( i < count ))
+ echo
+ search_terms=()
+ declare -a search_terms
++ which awk
+ (( i++ ))
+ [[ -f .cache/ips.list ]]
+ (( i < count ))
+ echo
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ which awk
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
++ echo -e --platform=cisco
+ ls -al --color=auto configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw1.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AaL7Um0hfT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AaL7Um0hfT
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
++ dirname -- ./scripts/network-extract.shell
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ local SCRIPT_DIR=./scripts
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ local script_filename=cisco-configs.awk
+ script_helper=false
+ [[ false == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ which awk
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console ]]
+ local first_search_entry=10.0.0.1
+ case "${target_file}" in
+ local last_search_entry=203.0.113.25
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ which awk
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEoRV0NYoH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEoRV0NYoH
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

+ local SCRIPT_PATH=./scripts/network-extract.shell
interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
++ which awk
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
++ which awk
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UZYNBqAnqF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UZYNBqAnqF
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5oRoKyyleF/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aNd5QZDrEC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aNd5QZDrEC
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xWHREcrymH
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xWHREcrymH
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+ export LC_ALL=C
+ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXuW3QIBDi
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXuW3QIBDi
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OIs26f0mS2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OIs26f0mS2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export actions_logfile=console/run.console
++ alias print-message=message
++ actions_logfile=console/run.console
++ alias print-newline=newline
++ touch console/run.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ -n '' ]]
++ export cache_location=.cache
++ cache_location=.cache
+ readonly __NETWORK_EXTRACT__=1
++ export logs_location=logs
+ __NETWORK_EXTRACT__=1
++ logs_location=logs
++ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export project_status=run.done
++ project_status=run.done
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ touch run.done
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z9t4gQMejU
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cEDQ55nj1h
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z9t4gQMejU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cEDQ55nj1h
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTUp563bKx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTUp563bKx
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ export project_status=run.done
++ alias log-error=log_error
++ project_status=run.done
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-error=log_error
++ touch run.done
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias validate-address=validate_address
+ __NETWORK_EXTRACT__=1
++ alias validate-address=validate_address
++ alias validate-address=validate_address
+ set -euo pipefail
++ alias warning-message=warning
++ alias warning-message=warning
+ export LC_ALL=C
++ export LC_ALL=C
+ LC_ALL=C
++ LC_ALL=C
++ export LC_ALL=C
++ alias warning-message=warning
++ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export 'nl=\n'
++ default_addresses=ips.list
++ export default_addresses=ips.list
++ nl='\n'
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_addresses=ips.list
++ default_devices=devices.list
++ export default_devices=devices.list
++ default_addresses=ips.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export default_devices=devices.list
++ export default_matrix=matrix.json
++ default_devices=devices.list
++ export cache_location=.cache
++ default_matrix=matrix.json
++ cache_location=.cache
++ export default_matrix=matrix.json
++ export cache_location=.cache
++ export logs_location=logs
++ cache_location=.cache
++ logs_location=logs
++ default_matrix=matrix.json
++ export logs_location=logs
++ mkdir -p logs
++ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
++ mkdir -p logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ base64
++++ basename ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yc7f85XNHD
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yc7f85XNHD
+ export LC_ALL=C
+ LC_ALL=C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ mktemp -d
++ alias system-metrics=system_metrics
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias serialize-object=configs_objects
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ alias network-configs--helper=network_configs__helper
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ source ./scripts/configs-objects.shell
++ touch console/run.console
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ alias parse-cisco=main
++ export targets_location=targets
++ targets_location=targets
+ [[ -z x ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export logs_location=logs
+ logs_location=logs
++ alias serialize-object=configs_objects
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AQggVLc4l7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AQggVLc4l7
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export jobs_location=jobs
++ alias log-error=log_error
++ jobs_location=jobs
++ alias log-info=log_info
++ mkdir -p jobs
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+++ base64
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export project_status=run.done
++ project_status=run.done
++ export project_status=run.done
++ touch run.done
++ project_status=run.done
++ touch run.done
++++ basename ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ -n '' ]]
+ network_extract__console=console/network-extract.console
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ touch console/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+++ echo -n devops-resources.shell
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ export targets_location=targets
++ mkdir -p jobs
++ targets_location=targets
++ export console_location=console
++ export targets_logfile=.cache/targets.jobs
++ console_location=console
++ targets_logfile=.cache/targets.jobs
++ mkdir -p console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_location=targets
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ export targets_location=targets
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ targets_location=targets
++ [[ 5 -lt 4 ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ mktemp -d
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3kx5singe3/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.garxixg6dy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ base64
+++ base64
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list
++ export console_location=console
++ console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l3P0PW7cBg
++ mkdir -p console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l3P0PW7cBg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QCbVUcAYhp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QCbVUcAYhp
++ export actions_logfile=console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ nl='\n'
++ actions_logfile=console/run.console
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8m7jkpRlbG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8m7jkpRlbG
++ declare -gr __DEVOPS_RESOURCES__=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ nl='\n'
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias exit-error=exit_error
++ alias print-newline=newline
++ alias pause=pause
+++ echo -n devops-resources.shell
++ alias print-line=print
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
+ script_filename=network-extract.shell
++ alias log-info=log_info
++ alias print-file=print_file
+ script_filename=network-extract
++ alias log-warn=log_warn
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias print-message=message
++ alias relative-configpath=relative_configpath
+ touch console/network-extract.console
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias log-info=log_info
+++ echo -n devops-resources.shell
++ alias system-metrics=system_metrics
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias print-message=message
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
+++ echo -n devops-resources.shell
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias warning-message=warning
++ alias relative-configpath=relative_configpath
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ alias system-metrics=system_metrics
++ cache_location=.cache
++ alias validate-address=validate_address
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias validate-address=validate_address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export default_devices=devices.list
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ default_devices=devices.list
++ alias warning-message=warning
++ export default_matrix=matrix.json
+ source ./scripts/devops-helpers.shell
++ export LC_ALL=C
++ default_matrix=matrix.json
++ LC_ALL=C
++ export cache_location=.cache
++ export 'nl=\n'
++ cache_location=.cache
++ nl='\n'
++ [[ -n '' ]]
++ export default_addresses=ips.list
++ export logs_location=logs
++ default_addresses=ips.list
++ logs_location=logs
++ readonly __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ __DEVOPS_HELPERS__=1
++ export default_devices=devices.list
++ mkdir -p logs
++ default_devices=devices.list
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export default_matrix=matrix.json
++ [[ 5 -lt 4 ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
+ source ./scripts/devops-helpers.shell
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ [[ -n '' ]]
++ touch console/run.console
++ readonly __DEVOPS_HELPERS__=1
+ [[ search =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ search =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ search =~ ^(platform|p)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ search =~ ^(search|s)$ ]]
+ set -euo pipefail
+ [[ -n '' ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
+ LC_ALL=C
+ readonly __NETWORK_EXTRACT__=1
+ [[ search == \h\e\l\p ]]
+ __NETWORK_EXTRACT__=1
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ set -euo pipefail
+ IFS==
+ read -r key value
+ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias network-extract--helper=network_extract__helper
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ mktemp -d
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kphffqrhwe/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ export jobs_location=jobs
++ mkdir -p jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.foTIKPud7T
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J05nfoP2FJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.foTIKPud7T
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J05nfoP2FJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ export 'nl=\n'
+ nl='\n'
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ config =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias log-info=log_info
+ [[ config =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(export|r)$ ]]
++ alias list-file=list_file
++ alias print-message=message
++ alias log-error=log_error
++ alias print-newline=newline
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export targets_location=targets
++ alias print-message=message
++ targets_location=targets
+ [[ config =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ alias pause=pause
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-line=print
++ alias print-file=print_file
++ alias pause=pause
+ [[ config =~ ^(search|s)$ ]]
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
+ [[ config == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ export console_location=console
++ alias warning-message=warning
++ console_location=console
++ export LC_ALL=C
++ LC_ALL=C
++ mkdir -p console
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export console_location=console
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ console_location=console
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ mkdir -p console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+++ base64
+ [[ 7 -eq 0 ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9y8od4z4ky/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p logs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console --export --verbose
++++ basename ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ search =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3kx5singe3/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ oIFS=' 	
'
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console --export --verbose
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+++ base64
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list
+++ echo -n devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ actions_logfile=console/run.console
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ touch console/run.console
++ jobs_location=jobs
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
++ mkdir -p jobs
++ mkdir -p jobs
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+++ echo -n devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ source ./scripts/configs-objects.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ alias serialize-object=configs_objects
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(config|c)$ ]]
++ alias serialize-object=configs_objects
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ export project_status=run.done
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ project_status=run.done
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ touch run.done
+ alias parse-cisco=main
++ export project_status=run.done
++ export console_location=console
++ project_status=run.done
+ [[ search == \d\r\y\-\r\u\n ]]
++ console_location=console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mkdir -p console
+ IFS==
++ touch run.done
+ read -r key value
+ [[ -z x ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --platform=cisco
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --platform=fortinet
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hq40absjBW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hq40absjBW
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iFhMTVLtwt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iFhMTVLtwt
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --config=.cache/resources/misc/switch1.conf
++ export actions_logfile=console/run.console
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
++ actions_logfile=console/run.console
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ script_filename=network-extract
++ export targets_location=targets
+ export network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
++ targets_location=targets
++ [[ 5 -lt 4 ]]
+ network_extract__console=console/network-extract.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ touch console/network-extract.console
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ export targets_location=targets
++ targets_location=targets
++ alias log-warn=log_warn
++ alias log-info=log_info
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ alias print-message=message
++ targets_logfile=.cache/targets.jobs
++ alias log-warn=log_warn
++ targets_location=targets
++ alias print-newline=newline
++ alias print-message=message
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ cache_location=.cache
++ mkdir -p logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HdEXzN0VU8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HdEXzN0VU8
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++++ basename ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ export project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ project_status=run.done
++ declare -gr __DEVOPS_RESOURCES__=1
++ touch run.done
++ export project_status=run.done
++ project_status=run.done
++ [[ 5 -lt 4 ]]
++ touch run.done
++ alias detect-vendor=detect_vendor
+ [[ 7 -eq 0 ]]
++ alias exit-error=exit_error
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.garxixg6dy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fi1czjvmv7/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias log-error=log_error
++ alias log-info=log_info
+ oIFS=' 	
'
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ oIFS=' 	
++ alias print-message=message
'
+ IFS==
+ read -r key value
++ alias print-newline=newline
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ alias pause=pause
+ IFS==
+ read -r key value
++ alias print-line=print
++++ basename ./scripts/devops-resources.shell
++ alias print-file=print_file
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias validate-address=validate_address
+ [[ extract =~ ^(console|o)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ extract =~ ^(export|r)$ ]]
++ LC_ALL=C
+ [[ extract =~ ^(extract|x)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(logger|l)$ ]]
++ mkdir -p logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_platform=fortinet
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-helpers.shell
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
++ [[ -n '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
++ __DEVOPS_HELPERS__=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ targets_logfile=.cache/targets.jobs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ logger =~ ^(search|s)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ logger == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ logger == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ logger == \d\r\y\-\r\u\n ]]
++ __CONFIGS_OBJECTS__=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ readonly __CONFIGS_OBJECTS__=1
+ source ./scripts/devops-helpers.shell
++ __CONFIGS_OBJECTS__=1
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
++ alias network-extract--helper=network_extract__helper
+ mkdir -p logs
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -z x ]]
++ __CONFIGS_OBJECTS__=1
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias serialize-object=configs_objects
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
++ export console_location=console
+ IFS==
+ read -r key value
+ mkdir -p logs
++ console_location=console
++ mkdir -p console
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(logger|l)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ extract == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias serialize-object=configs_objects
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ export logs_location=logs
+ mkdir -p logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0dippmhgob/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kphffqrhwe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console --export --verbose
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console --export --verbose
++ touch console/run.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ oIFS=' 	
++ echo -e --platform=cisco
'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(export|r)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
+ [[ config =~ ^(logger|l)$ ]]
+ touch console/network-extract.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
+ [[ config =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export project_status=run.done
+ [[ config == \d\r\y\-\r\u\n ]]
++ project_status=run.done
+ [[ config == \v\e\r\b\o\s\e ]]
++ touch run.done
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7anoiz4qxy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console --export --verbose
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ oIFS=' 	
'
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ local target_platform=cisco
+ [[ -z '' ]]
+ dry_run=false
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ export console_output=false
+ [[ platform == \d\e\b\u\g ]]
+ console_output=false
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ IFS==
+ script_helper=false
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ [[ platform =~ ^(logger|l)$ ]]
+ search_terms=()
+ [[ export =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jlksjfqqaw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export targets_location=targets
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ tr -dc a-zA-Z0-9
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qyhdzsozjw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
+ [[ -n '' ]]
+++ base64
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
+++ base64
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
++ tr -d '\r'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ grep -v '^#'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ search =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
+ source ./scripts/configs-objects.shell
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(export|r)$ ]]
+ read -r key value
++ alias serialize-object=configs_objects
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ mktemp -d
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias serialize-object=configs_objects
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ read -r key value
+ alias parse-cisco=main
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ -z x ]]
+ IFS==
+ [[ -z x ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ export logs_location=logs
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(export|r)$ ]]
+ mkdir -p logs
+ logs_location=logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ console_output=false
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ platform =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ mkdir -p logs
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --platform=fortinet
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UVwB7HE2qY
+ local export_objects=true
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UVwB7HE2qY
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kzgio2RkWU
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kzgio2RkWU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ [[ -n '' ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ readonly __NETWORK_EXTRACT__=1
+ source ./scripts/devops-resources.shell
+ __NETWORK_EXTRACT__=1
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ local first_search_entry=10.0.0.1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ local last_search_entry=10.0.0.1
+ export LC_ALL=C
+ [[ -z '' ]]
+ LC_ALL=C
+ [[ export =~ ^(logger|l)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ script_helper=false
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ search_terms=()
+ [[ export == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]]
+ for xitem in "${@}"
+ IFS==
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ] ]]
++ alias print-line=print
++ alias print-line=print
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ read -r key value
++ alias print-file=print_file
++ alias print-file=print_file
+ local count=1
+ ((  count == 0  ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list != *,* ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ mapfile -t search_terms
++ alias relative-configpath=relative_configpath
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ alias relative-configpath=relative_configpath
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias system-metrics=system_metrics
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export 'nl=\n'
++ nl='\n'
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export default_devices=devices.list
++ default_devices=devices.list
++ export cache_location=.cache
++ cache_location=.cache
++ export default_matrix=matrix.json
++ export logs_location=logs
++ default_matrix=matrix.json
++ logs_location=logs
++ export cache_location=.cache
++ mkdir -p logs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3mc7rsgtz8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3mc7rsgtz8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ export 'nl=\n'
+ script_filename=network-extract
+ script_filename=network-extract
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ source ./scripts/devops-resources.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ export network_extract__console=console/network-extract.console
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
++ grep -v '^#'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ export jobs_location=jobs
+ [[ config =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ config =~ ^(export|r)$ ]]
++ mkdir -p jobs
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-error=log_error
++ export jobs_location=jobs
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ jobs_location=jobs
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias log-info=log_info
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local target_platform=fortinet
++ mkdir -p jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ev20GCNAt6
+ local target_config=.cache/resources/misc/switch1.conf
+ (( i < count ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ev20GCNAt6
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ echo
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ [[ config == \h\e\l\p ]]
+ nl='\n'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
++ alias pause=pause
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES__=1
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
++ alias print-line=print
++ [[ 5 -lt 4 ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
++ alias print-file=print_file
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ extract =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
++ alias validate-address=validate_address
++ alias print-message=message
+ [[ extract =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(extract|x)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ export 'nl=\n'
+ [[ extract =~ ^(logger|l)$ ]]
++ nl='\n'
++ export default_addresses=ips.list
+ [[ extract =~ ^(platform|p)$ ]]
++ default_addresses=ips.list
+ [[ logger =~ ^(config|c)$ ]]
++ alias pause=pause
++ export default_devices=devices.list
+ [[ extract =~ ^(search|s)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
++ default_matrix=matrix.json
++ alias print-line=print
+ [[ extract == \d\e\b\u\g ]]
++ export cache_location=.cache
+ [[ extract == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
++ mkdir -p logs
+ read -r key value
++ alias print-file=print_file
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.garxixg6dy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
+ [[ 7 -eq 0 ]]
++ console_location=console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9y8od4z4ky/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p console
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
++ console_location=console
++ echo -e --platform=cisco
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ oIFS=' 	
++ echo -e --export
'
+ [[ export =~ ^(export|r)$ ]]
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+ local export_objects=true
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ export jobs_location=jobs
+ [[ -z true ]]
++ jobs_location=jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
++ mkdir -p jobs
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ echo -e --verbose
++ touch console/run.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
++ export console_location=console
++ console_location=console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ mkdir -p console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --export
++ echo -e --platform=cisco
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
++ project_status=run.done
+ [[ search == \d\e\b\u\g ]]
++ export project_status=run.done
+ [[ search == \d\r\y\-\r\u\n ]]
++ touch run.done
++ project_status=run.done
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ touch run.done
+ IFS==
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ] ]]
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
++ echo -e --verbose
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ ((  count == 0  ))
+ [[ verbose == \h\e\l\p ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ IFS=' 	
'
+ local count=1
+ (( i = 0 ))
+ [[ -z '' ]]
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ IFS==
+ for xitem in "${@}"
+ read -r key value
++ actions_logfile=console/run.console
+ IFS==
+ read -r key value
++ touch console/run.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ [[ -z '' ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ export console_output=false
+ (( i++ ))
+ console_output=false
+ (( i < count ))
+ local export_objects=true
+ [[ logger =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ export =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
++ export targets_location=targets
+ [[ logger == \h\e\l\p ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ targets_location=targets
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ export targets_logfile=.cache/targets.jobs
+ [[ logger == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ IFS==
+ read -r key value
++ targets_location=targets
+ [[ export =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ search_terms=()
++ grep -v '^#'
+ declare -a search_terms
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ echo -e --export
+++ base64
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+++ tr -dc a-zA-Z0-9
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --export
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]]
++ grep -v '^\s*$'
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ grep -v '^#'
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ targets_location=targets
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ search_terms=()
+ declare -a search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias network-extract--helper=network_extract__helper
++ alias serialize-object=configs_objects
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --verbose
+ alias parse-cisco=main
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ -z x ]]
++ targets_logfile=.cache/targets.jobs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local first_search_entry=10.0.2.3
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ -n '' ]]
+ export logs_location=logs
+ logs_location=logs
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+++ base64
++++ basename ./scripts/devops-resources.shell
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ newline
++ mktemp -d
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+++ tr -dc a-zA-Z0-9
+ [[ -z '' ]]
+ script_helper=false
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+++ base64
++++ basename ./scripts/devops-resources.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ script_filename=network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]]
+ script_filename=network-extract
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ logger == \h\e\l\p ]]
+ IFS=' 	
'
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false
+ [[ -z true ]]
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ read -r key value
+ console_output=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ script_helper=false
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
+ read -r key value
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uhtl2hOPP0
+ [[ export =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uhtl2hOPP0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias network-extract--helper=network_extract__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ source ./scripts/configs-objects.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
+++ echo -n devops-resources.shell
++ readonly __CONFIGS_OBJECTS__=1
++ alias exit-error=exit_error
++ __CONFIGS_OBJECTS__=1
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias list-file=list_file
+ IFS==
++ alias log-error=log_error
+ read -r key value
++ alias log-info=log_info
+ [[ export =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
++ alias serialize-object=configs_objects
+ [[ export =~ ^(console|o)$ ]]
++ alias print-message=message
+ [[ export =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ local export_objects=true
+ output_dir=reports/10.0.0.1/cisco
+ [[ export =~ ^(extract|x)$ ]]
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ alias parse-cisco=main
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local first_search_entry=172.16.1.6
+ local last_search_entry=10.0.2.3
+ source ./scripts/devops-helpers.shell
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -z x ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ export logs_location=logs
+ logs_location=logs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ mkdir -p logs
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ 7 -eq 0 ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.oa5py5nga1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console --export --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ verbose == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
++ __CONFIGS_OBJECTS__=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4qnappen8v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ debug=false
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ dry_run=false
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console --export --verbose
+ for xitem in "${@}"
++ alias serialize-object=configs_objects
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ tr -d '\r'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ logger == \h\e\l\p ]]
+ __NETWORK_EXTRACT__=1
+ search_terms=()
+ [[ logger == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ alias parse-cisco=main
+ for xitem in "${@}"
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ tr -d '\r'
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list
++ grep -v '^#'
++ echo -e --platform=cisco
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract.shell
++ mktemp -d
+ script_filename=network-extract
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EOAazTuSd1
+ export network_extract__console=console/network-extract.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EOAazTuSd1
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list
++ alias detect-vendor=detect_vendor
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias print-message=message
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias pause=pause
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias print-line=print
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ tr -d '\r'
++ echo -e --export
++ echo -e --verbose
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ipLN8XAlXz
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ipLN8XAlXz
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nLgJwQZHsO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nLgJwQZHsO
+ export 'nl=\n'
++ export console_location=console
+ nl='\n'
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ mkdir -p console
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
+ [[ -n '' ]]
++ alias log-info=log_info
++ alias print-message=message
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
+ set -euo pipefail
+ export LC_ALL=C
++ alias print-newline=newline
+ LC_ALL=C
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qyhdzsozjw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ 7 -eq 0 ]]
++ alias validate-address=validate_address
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bjvvnsiyk1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ alias validate-address=validate_address
++ LC_ALL=C
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console --export --verbose
++ alias warning-message=warning
++ export LC_ALL=C
++ export 'nl=\n'
++ export jobs_location=jobs
++ LC_ALL=C
++ nl='\n'
++ jobs_location=jobs
++ export default_addresses=ips.list
++ export 'nl=\n'
++ default_addresses=ips.list
++ nl='\n'
++ export default_devices=devices.list
++ export default_addresses=ips.list
++ default_devices=devices.list
++ default_addresses=ips.list
++ export default_matrix=matrix.json
++ export default_devices=devices.list
++ default_matrix=matrix.json
++ default_devices=devices.list
++ export cache_location=.cache
++ export default_matrix=matrix.json
++ cache_location=.cache
++ default_matrix=matrix.json
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ export logs_location=logs
++ mkdir -p logs
++ logs_location=logs
++ mkdir -p jobs
++ mkdir -p logs
+ oIFS=' 	
'
+ for xitem in "${@}"
++ mktemp -d
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
++ export console_location=console
++ export jobs_location=jobs
++ export jobs_location=jobs
++ console_location=console
++ jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p console
++ mkdir -p jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local first_search_entry=10.0.1.2
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=10.0.1.2
+ local count=1
+ (( i = 0 ))
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ (( i < count ))
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o7hTgPeKbc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o7hTgPeKbc
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ] ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ echo
++ alias log-warn=log_warn
+ (( i++ ))
+ (( i < count ))
++ alias print-message=message
++ alias print-newline=newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ -z cisco ]]
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ export project_status=run.done
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ project_status=run.done
++ touch run.done
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export console_location=console
++ console_location=console
++ export console_location=console
++ export actions_logfile=console/run.console
++ mkdir -p console
++ console_location=console
++ actions_logfile=console/run.console
++ mkdir -p console
++ touch console/run.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo -e --verbose
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
+ [[ extract =~ ^(config|c)$ ]]
++ jobs_location=jobs
+ [[ cfg == \c\f\g ]]
++ mkdir -p jobs
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --export
++ echo -e --platform=cisco
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
+ [[ -n '' ]]
+++ base64
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++++ basename ./scripts/devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(extract|x)$ ]]
++ targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local first_search_entry=10.0.0.1
++ touch console/run.console
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n '' ]]
+ [[ platform =~ ^(export|r)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
+ [[ -n '' ]]
+ (( i++ ))
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ platform =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
+ local target_platform=cisco
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z fortinet ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local first_search_entry=172.16.0.5
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local last_search_entry=172.16.0.5
+ IFS==
+ read -r key value
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
++ alias network-configs--helper=network_configs__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ] ]]
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ platform == \v\e\r\b\o\s\e ]]
++ __CONFIGS_OBJECTS__=1
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9qgdQHA19
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9qgdQHA19
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias list-file=list_file
+ alias parse-cisco=main
++ alias log-error=log_error
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ tr -dc a-zA-Z0-9
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -n '' ]]
++ alias system-metrics=system_metrics
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+++ base64
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+++ base64
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Jj4AjPmJK4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Jj4AjPmJK4
++++ basename ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ tr -dc a-zA-Z0-9
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ export 'nl=\n'
++ alias validate-address=validate_address
++ nl='\n'
++ [[ -n '' ]]
++ alias warning-message=warning
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export LC_ALL=C
++ LC_ALL=C
++ [[ 5 -lt 4 ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ script_filename=network-extract.shell
++ export default_devices=devices.list
++ default_devices=devices.list
+ script_filename=network-extract
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ export network_extract__console=console/network-extract.console
++ export cache_location=.cache
+ network_extract__console=console/network-extract.console
++ cache_location=.cache
++ export default_addresses=ips.list
++ export logs_location=logs
++ default_addresses=ips.list
++ logs_location=logs
+ touch console/network-extract.console
++ export default_devices=devices.list
++ mkdir -p logs
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export targets_location=targets
++ mkdir -p logs
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMpTjnIu61
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMpTjnIu61
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
+++ echo -n devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ alias network-extract--helper=network_extract__helper
++ alias log-error=log_error
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ source ./scripts/configs-objects.shell
++ alias log-warn=log_warn
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-newline=newline
++ readonly __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(config|c)$ ]]
++ __CONFIGS_OBJECTS__=1
++ alias pause=pause
+++ echo -n devops-resources.shell
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias system-metrics=system_metrics
++ [[ 5 -lt 4 ]]
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ logger =~ ^(logger|l)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
++ export 'nl=\n'
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ nl='\n'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export default_addresses=ips.list
+ [[ logger =~ ^(search|s)$ ]]
++ default_addresses=ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
++ export default_devices=devices.list
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
++ default_devices=devices.list
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
++ export default_matrix=matrix.json
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
++ default_matrix=matrix.json
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export cache_location=.cache
+ for xitem in "${@}"
++ [[ -n '' ]]
++ cache_location=.cache
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
++ readonly __DEVOPS_HELPERS__=1
++ export logs_location=logs
++ __DEVOPS_HELPERS__=1
++ logs_location=logs
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
++ mkdir -p logs
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(search|s)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ readonly __CONFIGS_OBJECTS__=1
+ read -r key value
++ __CONFIGS_OBJECTS__=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2xdsOvGwCg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2xdsOvGwCg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias parse-cisco=main
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ alias serialize-object=configs_objects
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -z x ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export logs_location=logs
++ [[ 5 -lt 4 ]]
+ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ mkdir -p logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(export|r)$ ]]
++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias print-file=print_file
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ dry_run=false
+ alias parse-cisco=main
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias system-metrics=system_metrics
+ [[ -z x ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]]
+ export logs_location=logs
+ logs_location=logs
+ search_terms=()
+ declare -a search_terms
+ mkdir -p logs
+++ base64
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list != *,* ]]
++ export 'nl=\n'
+ mapfile -t search_terms
+ alias parse-cisco=main
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ export logs_location=logs
+ [[ export =~ ^(config|c)$ ]]
+ export logs_location=logs
++ logs_location=logs
+ logs_location=logs
+ [[ export =~ ^(config|c)$ ]]
++ mkdir -p logs
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p logs
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ export == \h\e\l\p ]]
+ IFS=' 	
'
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ dry_run=false
++ export jobs_location=jobs
+ [[ -z true ]]
++ jobs_location=jobs
+ [[ -z '' ]]
++ mkdir -p jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hztpj3bnwx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ export jobs_location=jobs
+ oIFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --export
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --export
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export console_output=false
+ console_output=false
+ IFS==
+ local count=1
+ read -r key value
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
++ echo -e --platform=cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ touch console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export console_location=console
+ touch console/network-extract.console
++ console_location=console
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p console
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(platform|p)$ ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ mkdir -p logs
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ -n '' ]]
+ IFS==
+ read -r key value
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local export_objects=true
+ set -euo pipefail
+ [[ export =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zst3ksize/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kphffqrhwe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fi1czjvmv7/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
++ console_location=console
++ export actions_logfile=console/run.console
++ mkdir -p console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console --export --verbose
++ actions_logfile=console/run.console
+ oIFS=' 	
'
++ touch console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ oIFS=' 	
+ IFS==
'
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ echo -e --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export actions_logfile=console/run.console
+ [[ cfg == \c\f\g ]]
++ actions_logfile=console/run.console
+ touch console/network-extract.console
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ touch console/run.console
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKqNYK9ByR
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKqNYK9ByR
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ alias print-newline=newline
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ alias print-line=print
++ touch run.done
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ alias validate-address=validate_address
++ grep -v '^\s*$'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export actions_logfile=console/run.console
++ mkdir -p logs
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^#'
++ grep -v '^#'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0dippmhgob/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ search =~ ^(platform|p)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
+ export LC_ALL=C
+ [[ search == \h\e\l\p ]]
+ LC_ALL=C
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export project_status=run.done
+ [[ verbose =~ ^(logger|l)$ ]]
++ project_status=run.done
+ [[ verbose =~ ^(platform|p)$ ]]
++ touch run.done
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ export targets_location=targets
+ IFS=' 	
++ targets_location=targets
'
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
+ debug=false
++ export targets_logfile=.cache/targets.jobs
+ [[ -z '' ]]
+ dry_run=false
++ targets_logfile=.cache/targets.jobs
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ mktemp -d
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ [[ -z true ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list != *,* ]]
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ search_terms=()
+ declare -a search_terms
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ echo -e --verbose
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ tr -d '\r'
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --export
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jil1mYE0i3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jil1mYE0i3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export console_location=console
++ grep -v '^\s*$'
++ console_location=console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ mkdir -p console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ search =~ ^(config|c)$ ]]
++ alias print-message=message
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --export
++ alias pause=pause
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list
++ alias print-line=print
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+++ echo -n devops-resources.shell
+++ base64
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ output_dir=reports/10.0.1.2/fortinet
++ default_devices=devices.list
++++ basename ./scripts/devops-resources.shell
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ ! -d reports/10.0.1.2/fortinet ]]
++ export cache_location=.cache
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
++ mkdir -p logs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mssmUX8Zma
+ (( i < count ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mssmUX8Zma
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ echo
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ [[ -n '' ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ declare -gr __DEVOPS_RESOURCES__=1
+ echo
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ newline
++ alias print-newline=newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias pause=pause
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ alias print-line=print
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export targets_location=targets
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
++ targets_location=targets
++ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export 'nl=\n'
+ [[ verbose =~ ^(logger|l)$ ]]
++ nl='\n'
+ [[ verbose =~ ^(platform|p)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ verbose =~ ^(search|s)$ ]]
++ export default_devices=devices.list
+ newline
++ default_devices=devices.list
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export default_matrix=matrix.json
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
++ default_matrix=matrix.json
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
++ export cache_location=.cache
++ cache_location=.cache
+ (( i++ ))
++ export logs_location=logs
+ (( i < count ))
++ logs_location=logs
++ mkdir -p logs
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local first_search_entry=172.18.1.20
++ dirname -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=172.18.1.20
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --verbose
+++ base64
++ echo -e --verbose
++++ basename ./scripts/devops-resources.shell
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
++ echo -e --export
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ source ./scripts/devops-helpers.shell
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local verbose=true
+ IFS=' 	
'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list != *,* ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ mapfile -t search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local SCRIPT_DIR=./scripts
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ which awk
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local script_filename=cisco-configs.awk
++ export console_location=console
++ console_location=console
++ alias parse-listings--helper=parse_listings__helper
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ mkdir -p console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias network-configs--helper=network_configs__helper
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
++ alias network-configs--helper=network_configs__helper
++++ basename ./scripts/devops-resources.shell
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ output_dir=reports/172.16.0.5/cisco
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ alias serialize-object=configs_objects
++ IFS=,
++ echo 10.0.1.2
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ [[ export =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ export =~ ^(logger|l)$ ]]
++ touch console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ command -v -- ./scripts/network-extract.shell
++ actions_logfile=console/run.console
++ touch console/run.console
++ which awk
++ grep -v '^#'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ which awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --verbose
++ grep -v '^\s*$'
++ mktemp -d
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
++ grep -v '^#'
++ export project_status=run.done
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(extract|x)$ ]]
++ project_status=run.done
+ local script_filename=cisco-configs.awk
+ [[ export =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ touch run.done
+ [[ export =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias serialize-object=configs_objects
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(console|o)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ printf '%*s' 12 ''
+ IFS=' 	
'
+ [[ -z '' ]]
+ local 'indent=            '
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]]
++ which awk
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ alias parse-cisco=main
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z x ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ [[ -n '' ]]
+ export logs_location=logs
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ logs_location=logs
++ readonly __DEVOPS_HELPERS__=1
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ __DEVOPS_HELPERS__=1
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ [[ 5 -lt 4 ]]
+ newline
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
+ [[ -z cisco ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ mkdir -p logs
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/172.16.1.6/cisco ]]
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n '' ]]
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ verbose =~ ^(search|s)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ LC_ALL=C
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ source ./scripts/devops-helpers.shell
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NTpPFl9YE2
+ [[ -z '' ]]
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NTpPFl9YE2
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console ]]
+ export 'nl=\n'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z '' ]]
+ script_helper=false
++ [[ -n '' ]]
+ [[ false == true ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ search_terms=()
++ [[ 5 -lt 4 ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
++ alias detect-vendor=detect_vendor
+ mapfile -t search_terms
+ [[ logger =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
++ alias list-file=list_file
+ [[ logger =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
++ alias log-info=log_info
+ [[ logger == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ alias log-warn=log_warn
+ [[ logger == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
++ alias print-message=message
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
++ alias print-newline=newline
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ output_dir=reports/10.0.2.3/cisco
+ extract_location=reports/10.0.1.2/misc/switch1.conf
++ export targets_location=targets
+ [[ ! -d reports/10.0.2.3/cisco ]]
++ targets_location=targets
++ alias pause=pause
++ alias parse-listings--helper=parse_listings__helper
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ alias validate-address=validate_address
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ mktemp -d
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ mktemp -d
++ grep -v '^\s*$'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ -z x ]]
++ default_devices=devices.list
+ export logs_location=logs
++ export default_matrix=matrix.json
+ logs_location=logs
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ mkdir -p logs
++ mkdir -p logs
+ newline
+ local count=1
+ local first_search_entry=10.0.2.3
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local last_search_entry=10.0.2.3
++ export project_status=run.done
+ (( i++ ))
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ project_status=run.done
+ (( i < count ))
+ [[ true == true ]]
++ touch run.done
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local first_search_entry=192.168.0.1
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ local last_search_entry=192.168.0.1
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ] ]]
+ newline
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ grep -v '^#'
+ echo
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
++ echo 172.16.0.5
++ tr -d '\r'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ IFS=,
+ declare -a execute__netwowrk_extract
++ echo 10.10.10.10
++ grep -v '^\s*$'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+++ base64
+ declare -a execute__netwowrk_extract
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++++ basename ./scripts/devops-resources.shell
++ grep -v '^#'
+++ base64
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ccaET3Xz5q
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ccaET3Xz5q
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ which awk
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ which awk
++ alias list-file=list_file
+++ tr -dc a-zA-Z0-9
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ alias pause=pause
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ alias system-metrics=system_metrics
+ result=0
+ [[ -n {
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQQWfwNwla
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQQWfwNwla
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
  set comment "QA node in Peter's Lab"
 next
end ]]
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias warning-message=warning
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ alias detect-vendor=detect_vendor
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ alias exit-error=exit_error
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
+ IFS==
++ cache_location=.cache
+ read -r key value
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ echo -n devops-resources.shell
++ dirname reports/10.0.1.2/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
++ [[ -n '' ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local awk_bin=/usr/bin/awk
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
++ [[ 5 -lt 4 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ alias validate-address=validate_address
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ alias warning-message=warning
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ export LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
config firewall address
++ LC_ALL=C
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ export 'nl=\n'
+ local awk_bin=/usr/bin/awk
++ nl='\n'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ export default_devices=devices.list
++ default_devices=devices.list
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ -n {
++ logs_location=logs
  "vendor": "fortinet",
+ local count=1
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ mkdir -p logs
  "domain": "",
+ ((  count == 0  ))
  "hostname": "fg-branch-vpn-01"
++ alias parse-listings--helper=parse_listings__helper
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en '{
  "vendor": "fortinet",
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ newline
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
+ local count=1
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
+ (( i = 0 ))
 next
end'
+ (( i < count ))
++ echo -e --verbose
+ echo
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export console_location=console
++ console_location=console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/devops-helpers.shell
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
++ mkdir -p console
+ [[ -z cisco ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/configs-objects.shell
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ script_filename=network-extract.shell
+ local first_search_entry=172.31.255.254
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ [[ -n '' ]]
+ script_filename=network-extract
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local last_search_entry=172.31.255.254
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ export network_extract__console=console/network-extract.console
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ sed '1{/^[[:space:]]*$/d;}'
++ alias serialize-object=configs_objects
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h2rs9DFzYg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h2rs9DFzYg
++ IFS=,
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ]'
++ printf '%*s' 12 ''
+ touch console/network-extract.console
+ export 'nl=\n'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ] ]]
+ nl='\n'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ]'
++ echo 10.0.0.1
+ source ./scripts/devops-resources.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-configs--ips.list ]'
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
+ local count=1
+ source ./scripts/configs-objects.shell
++ declare -gr __DEVOPS_RESOURCES__=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
++ [[ 5 -lt 4 ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
++ alias detect-vendor=detect_vendor
++ printf '%*s' 12 ''
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
++ alias list-file=list_file
+ (( i = 0 ))
+ alias parse-cisco=main
++ alias log-error=log_error
+ newline
+ local count=1
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
++ alias log-warn=log_warn
+ echo
+ source ./scripts/configs-objects.shell
+ (( i++ ))
++ alias print-message=message
+ [[ -z x ]]
+ (( i < count ))
+ export logs_location=logs
+ logs_location=logs
++ alias print-newline=newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ -n '' ]]
+ mkdir -p logs
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
++ export jobs_location=jobs
++ readonly __CONFIGS_OBJECTS__=1
++ jobs_location=jobs
++ tr -d '\r'
++ alias serialize-object=configs_objects
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ mkdir -p jobs
++ alias pause=pause
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-line=print
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-file=print_file
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ alias system-metrics=system_metrics
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
++ alias network-extract--helper=network_extract__helper
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ newline
+ [[ -n '' ]]
++ alias validate-address=validate_address
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ source ./scripts/configs-objects.shell
+ (( i++ ))
+ __NETWORK_EXTRACT__=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
++ alias warning-message=warning
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ export LC_ALL=C
+ set -euo pipefail
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ LC_ALL=C
+ export LC_ALL=C
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ LC_ALL=C
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ export 'nl=\n'
++ nl='\n'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ default_devices=devices.list
+ alias parse-cisco=main
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
+ echo
++ cache_location=.cache
++ export logs_location=logs
+ (( i++ ))
++ logs_location=logs
+ (( i < count ))
++ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ grep -v '^\s*$'
+ mkdir -p logs
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^#'
++ mktemp -d
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ newline 2
++ touch console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ dirname -- ./scripts/network-extract.shell
++ export console_location=console
++ console_location=console
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ mkdir -p console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
++ __CONFIGS_OBJECTS__=1
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ echo
+ output_dir=reports/10.0.1.2/misc
+ (( i++ ))
+ touch console/network-extract.console
+ (( i < count ))
+ [[ ! -d reports/10.0.1.2/misc ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ mkdir -p jobs
+ declare -a execute__netwowrk_extract
++ alias serialize-object=configs_objects
++ export targets_location=targets
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ targets_location=targets
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ script_filename=network-extract.shell
++ alias serialize-object=configs_objects
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ output_dir=reports/10.0.0.1/fortinet
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ script_filename=network-extract
+ [[ verbose == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YK84KSr7dA
+ [[ verbose == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YK84KSr7dA
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ network_extract__console=console/network-extract.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ touch console/network-extract.console
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local verbose=true
+ mkdir -p logs
++ [[ -n '' ]]
+ IFS=' 	
'
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ [[ 5 -lt 4 ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ alias detect-vendor=detect_vendor
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ alias exit-error=exit_error
+ [[ false == true ]]
++ echo -e --export
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export project_status=run.done
++ alias log-warn=log_warn
++ project_status=run.done
++ touch run.done
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ alias system-metrics=system_metrics
++ export console_location=console
++ alias validate-address=validate_address
++ console_location=console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ export LC_ALL=C

++ LC_ALL=C
version 12.4
hostname access-sw1-west

+ local 'extracted_configuration={
object-group network MGMT-ACCESS
  "vendor": "cisco",
 description Management objects
++ export 'nl=\n'
 network-object host 192.168.0.1
  "model": "ASA",
++ nl='\n'
 network-object host 192.168.0.100
++ export default_addresses=ips.list
  "version": "9.14(3)",
++ default_addresses=ips.list
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ export actions_logfile=console/run.console
}
++ export default_devices=devices.list
++ default_devices=devices.list
++ actions_logfile=console/run.console
 network-object host 10.10.10.10
++ export default_matrix=matrix.json

++ default_matrix=matrix.json
object-group network Mutant-WiFi
++ touch console/run.console
 description Controlled guest devices
++ export cache_location=.cache
 network-object host 10.10.10.10'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ result=0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ -n {

  "vendor": "cisco",
object network Magneto-Core
  "model": "",
 host 172.16.0.5
  "version": "12.4",
 description WAN firewall entry point'
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
+ result=0
 description Management objects
 network-object host 192.168.0.1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 network-object host 192.168.0.100
+ [[ -n {
 network-object host 10.10.10.10
  "vendor": "cisco",

  "model": "ASA",
object-group network Mutant-WiFi
  "version": "9.14(3)",
 description Controlled guest devices
  "domain": "edge.dc.example.com",
 network-object host 10.10.10.10 ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ alias parse-cisco=main
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
domain-name edge.dc.example.com
+ search_terms=()
+ declare -a search_terms

object-group network Panther-Edge
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
 description Internet-facing proxy systems
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list != *,* ]]
 network-object host 203.0.113.25
+ mapfile -t search_terms
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ newline
+ local first_search_entry=192.0.2.50
+ local last_search_entry=192.0.2.50
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ false == true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console --export --verbose
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ configs_objects
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ print '{
object-group network Panther-Edge
  "vendor": "cisco",
 description Internet-facing proxy systems
  "model": "",
 network-object host 203.0.113.25
  "version": "12.4",
 network-object host 172.16.0.5
  "domain": "",

  "hostname": "access-sw1-west"
object network Magneto-Core
}
 host 172.16.0.5

 description WAN firewall entry point'
version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n {

  "vendor": "cisco",
object-group network Panther-Edge
  "model": "",
 description Internet-facing proxy systems
  "version": "12.4",
 network-object host 203.0.113.25
  "domain": "",
 network-object host 172.16.0.5
  "hostname": "access-sw1-west"

}
object network Magneto-Core

 host 172.16.0.5
version 12.4
 description WAN firewall entry point ]]
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ echo -en '{
 description Controlled guest devices
  "vendor": "cisco",
 network-object host 10.10.10.10 ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ output_dir=reports/10.10.10.10/cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ 7 -eq 0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jlksjfqqaw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ true == true ]]
++ export project_status=run.done
++ project_status=run.done
++ export actions_logfile=console/run.console
++ export jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ actions_logfile=console/run.console
++ touch run.done
++ jobs_location=jobs
++ touch console/run.console
++ mkdir -p jobs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ] ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
+ mkdir -p logs
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local count=1
+ ((  count == 0  ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ base64
++ dirname -- ./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
+ newline 2
+ local parent_dir=reports/10.0.1.2/fortinet
+ newline 2
+ local count=2
+++ tr -dc a-zA-Z0-9
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ echo
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ echo
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ export targets_location=targets
+ newline
+++ tr -dc a-zA-Z0-9
++ targets_location=targets
+ local count=1
+ (( i = 0 ))
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
+ (( i < count ))
++ console_location=console
+ echo
+ (( i++ ))
++ mkdir -p console
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export project_status=run.done
++ project_status=run.done
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ touch run.done
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+++ echo -n devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ [[ -n '' ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ __NETWORK_EXTRACT__=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+ IFS==
+ read -r key value
+ set -euo pipefail
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ export LC_ALL=C
+ LC_ALL=C
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+++ echo -n devops-resources.shell
+ local SCRIPT_DIR=./scripts
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+++ base64
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
+ [[ export =~ ^(platform|p)$ ]]
++ which awk
+ [[ export =~ ^(search|s)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ export == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ export == \d\e\b\u\g ]]
++ actions_logfile=console/run.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ touch console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ alias parse-cisco=main
+++ tr -dc a-zA-Z0-9
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ export targets_location=targets
++ targets_location=targets
+ local count=1
+ (( i = 0 ))
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+++ echo -n devops-resources.shell
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ configs_objects
+ configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fi1czjvmv7/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ cfg == \c\f\g ]]
+ newline
+ script_filename=network-extract.shell
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=1
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ (( i = 0 ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console --export --verbose
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ echo
+ network_extract__console=console/network-extract.console
+ (( i++ ))
+ touch console/network-extract.console
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mCIOHKoDP7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mCIOHKoDP7
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ export 'nl=\n'
+ source ./scripts/devops-helpers.shell
+ nl='\n'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
+ IFS==
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias parse-listings--helper=parse_listings__helper
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export project_status=run.done
++ project_status=run.done
++ alias print-newline=newline
++ touch run.done
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
++ alias print-line=print
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ source ./scripts/configs-objects.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias system-metrics=system_metrics
+ network_extract__console=console/network-extract.console
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ touch console/network-extract.console
++ __CONFIGS_OBJECTS__=1
+++ base64
++ alias validate-address=validate_address
++ alias serialize-object=configs_objects
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++++ basename ./scripts/devops-resources.shell
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ tr -d '\r'
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+ [[ config =~ ^(config|c)$ ]]
++ cut -d/ -f2
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(logger|l)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ config =~ ^(platform|p)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n '' ]]
+ IFS==
+ read -r key value
+ readonly __NETWORK_EXTRACT__=1
++ IFS=,
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++++ basename ./scripts/devops-resources.shell
++ echo 10.10.10.10
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ grep -v '^\s*$'
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ config == \v\e\r\b\o\s\e ]]
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+++ echo -n devops-resources.shell
+ local parent_dir=reports/10.10.10.10/cisco
++ which awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local parent_dir=reports/172.16.0.5/cisco
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ search_pattern=10.0.1.2
++ [[ 5 -lt 4 ]]
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.oa5py5nga1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console --export --verbose
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ oIFS=' 	
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
'
++ export jobs_location=jobs
++ jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
++ mkdir -p jobs
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias network-configs--helper=network_configs__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
+ local awk_bin=/usr/bin/awk
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ source ./scripts/configs-objects.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ [[ -n '' ]]
++ alias parse-listings--helper=parse_listings__helper
+ network_extract__console=console/network-extract.console
++ readonly __CONFIGS_OBJECTS__=1
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ __CONFIGS_OBJECTS__=1
+ touch console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
++ which awk
++ alias serialize-object=configs_objects
++ basename reports/10.10.10.10/cisco/access-sw1-west
++ alias network-configs--helper=network_configs__helper
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ readonly __CONFIGS_OBJECTS__=1
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
++ __CONFIGS_OBJECTS__=1
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ alias serialize-object=configs_objects
+ local awk_bin=/usr/bin/awk
++ IFS=,
+++ base64
++ echo 10.0.2.3
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+++ tr -dc a-zA-Z0-9
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ echo -e --verbose
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3a07BRMVdO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3a07BRMVdO
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ [[ extract =~ ^(search|s)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ IFS==
+ read -r key value
+ local search_pattern
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ alias parse-cisco=main
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ia7wu3k0yr/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ -z x ]]
++ alias log-info=log_info
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias log-warn=log_warn
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias print-message=message
+ IFS==
+ read -r key value
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ printf '%*s' 12 ''
++ alias print-file=print_file
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
++ alias relative-configpath=relative_configpath

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias system-metrics=system_metrics
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ echo -n devops-resources.shell
+ [[ true == true ]]
++ alias validate-address=validate_address
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ extract =~ ^(config|c)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ search =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ search =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ search =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo -e --platform=fortinet
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export cache_location=.cache
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ cut -d/ -f2
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4qnappen8v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ oIFS=' 	
'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ for xitem in "${@}"
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ IFS==
+ read -r key value
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ search_pattern=10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.0.1.2
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jlksjfqqaw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ search_pattern=172.16.0.5
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ dirname -- ./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
+ mkdir -p reports/172.16.0.5/cisco/.objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ verbose == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local SCRIPT_DIR=./scripts
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]]
++ alias serialize-object=configs_objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ conf == \c\o\n\f ]]
+ local first_search_entry=10.0.0.1
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ (( i < count ))
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ declare -a execute__netwowrk_extract
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local last_search_entry=10.0.0.1
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n '' ]]
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ alias parse-cisco=main
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ newline
+ local count=1
+ (( i = 0 ))
+ set -euo pipefail
+ (( i < count ))
+ echo
+ export LC_ALL=C
+ LC_ALL=C
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ [[ -z x ]]
+ export logs_location=logs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ] ]]
+ output_dir=reports/172.18.1.20/cisco
+ logs_location=logs
+ mkdir -p logs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
+ [[ export =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ which awk
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local first_search_entry=192.168.1.11
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local last_search_entry=192.168.1.11
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ output_dir=reports/192.168.0.1/cisco
+ IFS==
++ export jobs_location=jobs
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ tr -d '\r'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ IFS=,
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ which awk
+ [[ -z cisco ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ echo 172.16.1.6
++ tr -d '\r'
+ read -r key value
++ jobs_location=jobs
+ [[ config =~ ^(search|s)$ ]]
++ mkdir -p jobs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^\s*$'
+ IFS==
+ read -r key value
++ dirname reports/172.31.255.254/misc/switch1.conf
++ grep -v '^\s*$'
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ script_filename=network-extract.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ script_filename=network-extract
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^#'
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ echo -e --verbose
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SoM1RfRjJn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SoM1RfRjJn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ IFS=,
+ export network_extract__console=console/network-extract.console
++ alias exit-error=exit_error
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
++ echo 10.0.1.2
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ alias pause=pause
++ alias print-line=print
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ echo
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
++ alias print-file=print_file
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias relative-configpath=relative_configpath
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ which awk
++ alias system-metrics=system_metrics
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
++ alias validate-address=validate_address
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ result=0
++ alias warning-message=warning
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
++ export LC_ALL=C
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
++ export default_devices=devices.list
+ [[ true == true ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-configs--ips.list ]'
++ IFS=,
+ local count=1
+ ((  count == 0  ))
++ echo 10.0.0.1
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/172.31.255.254/misc
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ newline
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
+ local count=1
 nameif inside
 security-level 100
+ (( i = 0 ))
+ (( i < count ))
 ip address 10.0.0.1 255.255.255.0
+ echo
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -en '{
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ ls -al --color=auto .cache/resources/misc/fw3.cfg

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ which awk
++ which awk
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.suu2mhqa1k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ IFS==
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
++ echo -e --platform=fortinet
++ export jobs_location=jobs
++ jobs_location=jobs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
++ mkdir -p jobs
+ [[ ! -d reports/172.31.255.254/misc ]]
++ IFS=,
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
++ echo 10.0.2.3
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ ((  count == 0  ))
+ [[ extract =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ debug=false
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ dry_run=false
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ -z true ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export console_output=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list
++ export console_location=console
++ console_location=console
++ which awk
+ echo
++ mkdir -p console
+ (( i++ ))
+ console_output=false
+ (( i < count ))
+ newline 2
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ script_helper=false
+ [[ true == true ]]
+ local count=2
+ [[ false == true ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]]
+ echo
+ search_terms=()
+ declare -a search_terms
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]]
+ echo
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'indent=            '
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ local 'indent=            '
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ echo
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ cfg == \c\f\g ]]
++ export console_location=console
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ mapfile -t search_terms
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ console_location=console
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ mkdir -p console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ extract == \h\e\l\p ]]
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+ export console_output=false
+ console_output=false
+ IFS==
+ newline
+ read -r key value
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ -z true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local target_platform=fortinet
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform == \h\e\l\p ]]
+ search_terms=()
+ [[ platform == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ platform == \d\r\y\-\r\u\n ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --platform=fortinet
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ local 'indent=            '
+ configs_objects
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export actions_logfile=console/run.console
+ (( i++ ))
+ (( i < count ))
++ actions_logfile=console/run.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ touch console/run.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ output_dir=reports/172.16.0.5/misc
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ ! -d reports/172.16.0.5/misc ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'indent=            '
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ [[ true == true ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ local 'indent=            '
+ [[ config =~ ^(config|c)$ ]]
++ export actions_logfile=console/run.console
+ [[ true == true ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ echo -e --platform=cisco
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ actions_logfile=console/run.console
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ touch console/run.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/10.0.0.1/misc/switch1.conf
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ local parent_dir=reports/10.0.0.1/cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ print '{
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ config == \h\e\l\p ]]
#hostname="fg-branch-vpn-01"
+ [[ platform =~ ^(logger|l)$ ]]
#model="FortiGate-60F"
+ [[ config == \d\e\b\u\g ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ config == \d\r\y\-\r\u\n ]]
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ platform =~ ^(platform|p)$ ]]
  set comment "Main node at Stark Tower"
+ [[ config == \v\e\r\b\o\s\e ]]
 next
end

+ for xitem in "${@}"
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ local target_platform=fortinet
+ IFS==
end'
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ config =~ ^(config|c)$ ]]
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local SCRIPT_DIR=./scripts
+ newline
+ local script_filename=cisco-configs.awk
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local target_platform=cisco
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.1.11/cisco
+ [[ logger =~ ^(console|o)$ ]]
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ local first_search_entry=192.168.0.100
+ [[ logger =~ ^(export|r)$ ]]
+ local last_search_entry=192.168.0.100
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
++ dirname reports/10.0.0.1/misc/switch1.conf
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ local SCRIPT_DIR=./scripts
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ local script_filename=cisco-configs.awk
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
object network Kent-Server
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 host 10.0.2.3
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Internal mail & identity services ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ grep -v '^\s*$'
++ which awk
++ echo -e --platform=cisco
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ grep -v '^#'
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern
+ newline 2
+ print '{
+ newline 2
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local count=2
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
+ (( i = 0 ))
 description Internal mail & identity services'
+ (( i < count ))
+ local count=2
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ (( i++ ))
+ echo
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "",
+ (( i++ ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
}
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ (( i++ ))

object network Kent-Server
++ which awk
 host 10.0.2.3
+ (( i < count ))
 description Internal mail & identity services ]]
+ [[ true == true ]]
+ output_dir=reports/10.0.0.1/misc
+ echo -en '{
+ [[ true == true ]]
  "vendor": "cisco",
+ [[ ! -d reports/10.0.0.1/misc ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ] ]]
+ (( i < count ))
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ base64
+ local SCRIPT_PATH=./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
++ cut -d/ -f2
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --export
+ [[ extract == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ IFS=,
+ newline
+ local count=1
++ echo 172.16.0.5
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
+ newline 2
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ local count=2
+ echo
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ (( i = 0 ))
+ newline
+ configs_objects
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ local target_platform=cisco
+ configs_objects
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ platform =~ ^(search|s)$ ]]
+ local first_search_entry=192.0.2.50
+ newline
+ local count=1
+ local last_search_entry=192.0.2.50
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ -n '' ]]
+ local count=1
+ (( i = 0 ))
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ for xitem in "${@}"
+ export LC_ALL=C
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ LC_ALL=C
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-configs--ips.list ]'
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+++ echo -n devops-resources.shell
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
++ IFS=,
++ echo 192.168.0.1
++ which awk
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --platform=cisco
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/cisco/.objects
++ mktemp -d
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+ read -r key value
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS__=1
+ (( i < count ))
++ __DEVOPS_HELPERS__=1
+ local SCRIPT_DIR=./scripts
++ [[ 5 -lt 4 ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export project_status=run.done
++ project_status=run.done
++ alias parse-listings--helper=parse_listings__helper
++ touch run.done
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ declare -a execute__netwowrk_extract
++ __CONFIGS_OBJECTS__=1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
++ alias serialize-object=configs_objects
 host 172.16.1.6
 description Branch router uplink NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ IFS=,
++ echo 172.31.255.254
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local parent_dir=reports/10.0.0.1/fortinet
+ IFS==
+ newline
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local parent_dir=reports/10.0.1.2/misc
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ configs_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ platform =~ ^(platform|p)$ ]]
++ which awk
+ local target_platform=cisco
++ echo 172.18.1.20
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/192.168.2.12/cisco
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XNeYuniOQD
++ printf '%*s' 12 ''
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XNeYuniOQD
++ basename reports/10.0.1.2/misc/switch1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ [[ export =~ ^(export|r)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ local export_objects=true
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(platform|p)$ ]]
++ alias exit-error=exit_error
+ local 'indent=            '
+ [[ export =~ ^(search|s)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ export == \h\e\l\p ]]
  "version": "16.9",
+ [[ true == true ]]
+ [[ export == \d\e\b\u\g ]]
++ which awk
+ [[ export == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
  "hostname": "branch-isr-02"
}

+ IFS==
version 16.9
+ read -r key value
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ alias list-file=list_file
+ newline
++ alias log-error=log_error
+ local count=1
+ (( i = 0 ))
++ alias log-info=log_info
++ alias log-warn=log_warn
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
++ alias print-message=message
+ echo
++ echo -e --export
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ (( i++ ))

version 16.9
++ alias print-newline=newline
+ (( i < count ))
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias pause=pause
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ alias print-line=print
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local SCRIPT_DIR=./scripts
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ alias print-file=print_file
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_platform}" in
++ alias validate-address=validate_address
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
++ alias warning-message=warning
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ export LC_ALL=C
                      in_json_header = 0;
++ LC_ALL=C
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ export 'nl=\n'
                  }
                  END {
++ nl='\n'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ dirname -- ./scripts/network-extract.shell
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --export
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local awk_bin=/usr/bin/awk
+ grep -F 10.0.0.1
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local parent_dir=reports/10.0.2.3/misc
+ declare -a execute__netwowrk_extract
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ mktemp -d
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ basename reports/10.0.2.3/misc/fw1
++ echo reports/10.0.1.2/misc/switch1.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ cut -d/ -f2
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "model": "",
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ cut -d/ -f2
+ [[ logger =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ia7wu3k0yr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ read -r key value
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ which awk
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ export =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
  "version": "16.9",
+ [[ export =~ ^(export|r)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ local export_objects=true
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ printf '%*s' 12 ''
+ [[ export == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ local search_pattern
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ cfg == \c\f\g ]]
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zGQfsHfZXb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zGQfsHfZXb
+ sed '1{/^[[:space:]]*$/d;}'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --export
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ export console_location=console
++ declare -gr __DEVOPS_RESOURCES__=1
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ search_pattern=10.0.0.1
++ alias exit-error=exit_error
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ search_pattern=10.0.1.2
++ alias list-file=list_file
+ mkdir -p reports/10.0.1.2/misc/.objects
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
++ alias system-metrics=system_metrics
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
++ alias validate-address=validate_address
+ local 'indent=            '
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
++ alias warning-message=warning
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ export LC_ALL=C

object-group network Panther-Edge
++ LC_ALL=C
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ export default_devices=devices.list
  "version": "",
++ default_devices=devices.list
  "domain": "",
  "hostname": ""
}

++ export default_matrix=matrix.json
object-group network Panther-Edge
++ default_matrix=matrix.json
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ export cache_location=.cache

++ cache_location=.cache
object network Edge-Terminal
 host 172.16.0.5
++ export logs_location=logs
 description Internet firewall handoff'
++ logs_location=logs
++ mkdir -p logs
++ IFS=,
++ which awk
++ echo 192.0.2.50
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo reports/10.0.2.3/misc/fw1.cfg
+ cat -n
+ sed '1{/^[[:space:]]*$/d;}'
++ cut -d/ -f2
+ local awk_bin=/usr/bin/awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

++ export actions_logfile=console/run.console
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ actions_logfile=console/run.console
++ touch console/run.console
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ newline 2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ return 0
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ case "${target_platform}" in
+++ base64
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console ]]
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console ]]
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
+ case "${target_file}" in
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
++++ basename ./scripts/devops-resources.shell
+ case "${target_platform}" in
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ echo
+ search_pattern=10.0.2.3
                    in_json_header = 0;
+ (( i++ ))
                    blk = "";
+ (( i < count ))
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ mkdir -p reports/10.0.2.3/misc/.objects
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ true == true ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ echo 192.168.1.11
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
+ grep -F 10.0.0.1
++ echo -e --verbose
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ grep -F 10.0.1.2
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--perimeter-fw1.cfg.console
+ declare -a execute__netwowrk_extract
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ sed '/^[[:space:]]*$/d'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ verbose =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ debug=false
+ local count=2
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ -z true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ export console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=2
+ [[ -z true ]]
++ IFS=,
+ [[ verbose == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console ]]
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
++ echo 10.0.0.1
+ echo
+ [[ config == \d\e\b\u\g ]]
+ local verbose=true
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]]
++ echo -e --verbose
+ search_terms=()
++ export targets_location=targets
+ declare -a search_terms
++ targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list != *,* ]]
++ targets_logfile=.cache/targets.jobs
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local 'indent=            '
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local awk_bin=/usr/bin/awk
+ source ./scripts/devops-helpers.shell
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
++ which awk
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ alias parse-listings--helper=parse_listings__helper
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_helper=false
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list != *,* ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ verbose =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ alias network-extract--helper=network_extract__helper
'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ (( i < count ))
++ __CONFIGS_OBJECTS__=1
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ [[ true == true ]]
+ local count=1
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ false == true ]]
++ alias serialize-object=configs_objects
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ 0 -ne 0 ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ true == true ]]
+ configs_objects
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ result=0
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ exit 0
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXuW3QIBDi ]]
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXuW3QIBDi
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ grep -F 10.0.2.3
+++ base64
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
++ grep -v '^\s*$'
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
++++ basename ./scripts/devops-resources.shell
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ (( i++ ))
+ (( i < count ))
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ sed '/^[[:space:]]*$/d'
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local parent_dir=reports/172.16.0.5/misc
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat -n
++ alias parse-listings--helper=parse_listings__helper
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias network-configs--helper=network_configs__helper
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
++ alias network-extract--helper=network_extract__helper
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ newline
+ newline
+ source ./scripts/configs-objects.shell
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
+ local first_search_entry=192.168.100.100
+ (( i < count ))
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
++ readonly __CONFIGS_OBJECTS__=1
+ local last_search_entry=192.168.100.100
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
++ __CONFIGS_OBJECTS__=1
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
++ alias serialize-object=configs_objects
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ alias parse-cisco=main
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ basename reports/172.16.0.5/misc/fw3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ which awk
+ alias parse-cisco=main
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ logger =~ ^(config|c)$ ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ [[ logger =~ ^(console|o)$ ]]
  "domain": "",
  "hostname": "access-sw1-west"
}

+ local count=1
version 12.4
+ [[ logger =~ ^(export|r)$ ]]
hostname access-sw1-west
+ (( i = 0 ))

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ (( i < count ))
 description Management Interface
+ [[ logger =~ ^(extract|x)$ ]]

+ echo
+ debug=false
object-group network MGMT-ACCESS
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
++ export targets_location=targets
+ (( i < count ))
++ targets_location=targets
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(search|s)$ ]]
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
++ printf '%*s' 12 ''
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ cat -n
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console --export --verbose
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ grep -v '^#'
++ printf '%*s' 12 ''
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+++ base64
++ echo -e --export
++++ basename ./scripts/devops-resources.shell
+ local 'indent=            '
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ newline
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.garxixg6dy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
 network-object host 10.10.10.10 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console --export --verbose
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ oIFS=' 	
'
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ export targets_logfile=.cache/targets.jobs
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_logfile=.cache/targets.jobs
+ [[ search == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ verbose =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'indent=            '
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ newline
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ (( i++ ))
+ (( i < count ))
+ local verbose=true
+ IFS=' 	
'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bjvvnsiyk1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z '' ]]
+ debug=false
+ local 'extracted_configuration={
+ [[ -z '' ]]
  "vendor": "cisco",
+ dry_run=false
  "model": "",
+ [[ platform =~ ^(console|o)$ ]]
  "version": "12.2",
+ [[ -z true ]]
  "domain": "",
  "hostname": "campus-sw-access01"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ -z '' ]]
}
+ export console_output=false

+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ script_filename=network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ script_filename=network-extract
+ oIFS=' 	
+ [[ 0 -ne 0 ]]
'
+ [[ true == true ]]
+ search_terms=()
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
version 12.2
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
hostname campus-sw-access01
+ [[ platform =~ ^(platform|p)$ ]]

+ [[ search == \h\e\l\p ]]
object-group network Floor-Networks
 description End-user and service devices
+ [[ search == \d\e\b\u\g ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local target_platform=fortinet
 network-object host 10.10.10.10'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ result=0
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n {
+++ echo -n devops-resources.shell
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "12.2",
  "domain": "",
+ IFS==
  "hostname": "campus-sw-access01"
+ read -r key value
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ local count=1
version 12.4
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
hostname access-sw1-west

+ newline
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
+ (( i = 0 ))
 description Management objects
 network-object host 192.168.0.1
+ local count=1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
+ (( i++ ))
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ declare -a search_terms
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local target_platform=fortinet
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ tr -d '\r'
+ [[ config =~ ^(export|r)$ ]]
++ echo -e --export
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+++ base64
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++++ basename ./scripts/devops-resources.shell
++ printf '%*s' 12 ''
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Q3nis7oT5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Q3nis7oT5
+++ echo -n devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ export 'nl=\n'
+ nl='\n'
++ echo -e --config=.cache/resources/misc/switch3.conf
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'extracted_configuration={
+ [[ config =~ ^(config|c)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
++ alias log-warn=log_warn
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
}
+ source ./scripts/devops-helpers.shell
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]

++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias print-newline=newline
+ [[ config =~ ^(console|o)$ ]]
++ tr -d '\r'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
+ newline
 network-object host 192.0.2.50'
+ [[ config =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ result=0
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
++ readonly __DEVOPS_HELPERS__=1
++ alias pause=pause
++ __DEVOPS_HELPERS__=1
+ [[ -n {
+ [[ config =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "ASA",
+ [[ export =~ ^(config|c)$ ]]
  "version": "9.12(4)",
++ alias print-line=print
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ export =~ ^(extract|x)$ ]]
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ export =~ ^(logger|l)$ ]]
++ alias print-file=print_file

object-group network Watchtower-DMZ
+ [[ export =~ ^(platform|p)$ ]]
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ case "${target_platform}" in
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ IFS=,
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ echo 192.168.2.12
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ case "${target_file}" in
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ export 'nl=\n'
+ declare -a execute__netwowrk_extract
++ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local SCRIPT_DIR=./scripts
++ mkdir -p logs
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ printf '%*s' 12 ''
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ which awk
++ echo -e --config=.cache/resources/misc/switch3.conf
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __CONFIGS_OBJECTS__=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias serialize-object=configs_objects
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "domain": "",
  "hostname": "branch-isr-02"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}

version 16.9
hostname branch-isr-02

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
 network-object host 192.168.1.11'
+ message '                .cache/resources/misc/switch1.conf'
+ result=0
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ configs_objects
+ [[ -n {
+ local 'message=                .cache/resources/misc/switch1.conf'
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ echo -e '                .cache/resources/misc/switch1.conf'
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ newline
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local count=1
+ echo
+ (( i = 0 ))
+ alias parse-cisco=main
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ false == true ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ [[ true == true ]]
+ newline 2
+ [[ 7 -eq 0 ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zst3ksize/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'indent=            '
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ local count=2
+ [[ true == true ]]
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console --export --verbose
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ local count=1
+ ((  count == 0  ))
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ oIFS=' 	
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ IFS==
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ read -r key value
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.1.10
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ newline
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local last_search_entry=192.168.1.10
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ [[ -z fortinet ]]
+ (( i < count ))
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ newline 2
+ [[ logger =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ which awk
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_platform}" in
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(search|s)$ ]]
+ configs_objects
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ which awk
+ message '                .cache/resources/misc/switch1.conf'
                  BEGIN {
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ grep -F 10.10.10.10
                    in_json_header = 0;
+ local 'message=                .cache/resources/misc/switch1.conf'
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ echo -e '                .cache/resources/misc/switch1.conf'
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ newline
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ local count=1
                  }
                  {
+ (( i = 0 ))
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo -e --verbose
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ echo -e --verbose
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ] ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ [[ -n '' ]]
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ echo
+ (( i++ ))
+ set -euo pipefail
+ (( i < count ))
+ export LC_ALL=C
+ LC_ALL=C
+ [[ false == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=2
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ configs_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ IFS=,
++ echo 192.168.0.100
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local parent_dir=reports/172.16.1.6/cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ verbose =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ [[ verbose =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --export
+ [[ verbose =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
++ echo -e --export
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
+ local verbose=true
+ IFS=' 	
'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export console_output=false
+ console_output=false
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ script_helper=false
+ IFS==
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]]
+ [[ 7 -eq 0 ]]
+ search_terms=()
+ declare -a search_terms
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ia7wu3k0yr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ read -r key value
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/192.0.2.50/cisco
+ [[ extract =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ platform =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.deB1pkZ1T3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.deB1pkZ1T3
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ [[ -n '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ grep -F 172.16.0.5
+ [[ config =~ ^(config|c)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ [[ config =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ [[ config == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
++ alias print-message=message
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ verbose =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ platform =~ ^(export|r)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ debug=false
+ local count=2
+ [[ -z '' ]]
+ dry_run=false
+ [[ platform =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ local target_platform=cisco
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ [[ platform =~ ^(search|s)$ ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
++ export default_matrix=matrix.json
+ [[ platform == \d\e\b\u\g ]]
++ default_matrix=matrix.json
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ platform =~ ^(platform|p)$ ]]
++ cache_location=.cache
+ local export_objects=true
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
++ logs_location=logs
+ for xitem in "${@}"
++ mkdir -p logs
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ newline
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export project_status=run.done
+ IFS==
+ for xitem in "${@}"
+ (( i++ ))
++ project_status=run.done
+ read -r key value
+ (( i < count ))
+ IFS==
+ sed '1{/^[[:space:]]*$/d;}'
+ read -r key value
++ touch run.done
+ return 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ true == true ]]
interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
++ IFS=,
++ echo 192.0.2.50
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ local 'extracted_configuration={
+ [[ platform == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "",
+ for xitem in "${@}"
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
}
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ export console_output=false
+ console_output=false
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ echo
+ local export_objects=true
+ (( i++ ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ script_helper=false
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ search_terms=()
+ [[ export == \d\e\b\u\g ]]
+ declare -a search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list != *,* ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ platform =~ ^(extract|x)$ ]]
++ basename reports/10.0.2.3/cisco/branch-isr-02
  "hostname": ""
}
+ [[ platform =~ ^(logger|l)$ ]]

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ export jobs_location=jobs
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ jobs_location=jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n {
+ [[ platform == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "",
+ for xitem in "${@}"
  "version": "",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
  "domain": "",
+ IFS==
++ mkdir -p jobs
+ read -r key value

+ newline
  "hostname": ""
}
+ declare -a execute__netwowrk_extract

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ [[ search =~ ^(config|c)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ export targets_location=targets
+ [[ search =~ ^(console|o)$ ]]
++ targets_location=targets
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ IFS==
+ read -r key value
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ extract =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --platform=fortinet
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ cut -d/ -f2
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ logger =~ ^(platform|p)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ logger =~ ^(search|s)$ ]]
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ logger == \v\e\r\b\o\s\e ]]
+++ base64
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ extract == \v\e\r\b\o\s\e ]]

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ for xitem in "${@}"
+ result=0
++ export console_location=console
 network-object host 172.18.1.20
+ [[ 0 -ne 0 ]]
++ console_location=console
+ [[ true == true ]]
+ IFS==
++ mkdir -p console
+ read -r key value
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++++ basename ./scripts/devops-resources.shell
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local search_pattern
+ IFS==
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ search_pattern=192.0.2.50
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ mkdir -p reports/192.0.2.50/cisco/.objects
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --export
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ echo -e --export
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.1.11 ]]
++ tr -d '\r'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ logger == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
++ echo -e --export
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ result=0
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ read -r key value
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ newline 2
++ alias network-configs--helper=network_configs__helper
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ echo -e --verbose
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
++ alias serialize-object=configs_objects
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ echo -e --platform=fortinet
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ case "${target_platform}" in
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ platform =~ ^(config|c)$ ]]
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ export =~ ^(export|r)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
+ local export_objects=true
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n {
+ [[ export == \d\e\b\u\g ]]
+ local last_search_entry=172.18.1.20
  "vendor": "cisco",
+ [[ export == \d\r\y\-\r\u\n ]]
  "model": "",
  "version": "",
+ [[ export == \v\e\r\b\o\s\e ]]
  "domain": "",
  "hostname": ""
}
+ for xitem in "${@}"

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
+ IFS==
  "model": "",
  "version": "",
+ read -r key value
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ grep -F 192.0.2.50
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ newline
+ local count=1
+ local count=1
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ (( i++ ))
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ configs_objects
+ newline
+ local count=1
+ local first_search_entry=203.0.113.25
+ (( i = 0 ))
+ (( i < count ))
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ local last_search_entry=203.0.113.25
+ echo
+ [[ true == true ]]
+ [[ false == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ true == true ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ output_dir=reports/172.16.1.6/fortinet
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
+ [[ verbose =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --verbose
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-configs--ips.list ]'
++ echo -e --verbose
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ IFS=' 	
+ newline
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
+ script_filename=network-extract.shell
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local 'prompt_message=Enter configuration file to be parsed: '
+ script_filename=network-extract
+ [[ export =~ ^(config|c)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ touch console/network-extract.console
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ export =~ ^(export|r)$ ]]

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ echo -e --verbose
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ export =~ ^(logger|l)$ ]]
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ case "${target_file}" in
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
++ cut -d/ -f2
+ for xitem in "${@}"
+ newline
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ IFS==
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ cut -d/ -f2
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ configs_objects
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ local verbose=true
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ IFS=' 	
+ [[ verbose == \h\e\l\p ]]
'
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ debug=false
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ local verbose=true
+ local verbose=true
+ dry_run=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ IFS=' 	
+ [[ -z '' ]]
'
+ export console_output=false
+ console_output=false
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -z '' ]]
+ [[ -z true ]]
+ debug=false
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ IFS=' 	
+ dry_run=false
'
+ [[ -z '' ]]
+ [[ -z true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -z '' ]]
+ script_helper=false
+ export console_output=false
+ console_output=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ debug=false
+ newline
+ [[ -z '' ]]
++ echo -e --export
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list != *,* ]]
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --verbose
+++ base64
++ echo -e --platform=cisco
+ mapfile -t search_terms
++++ basename ./scripts/devops-resources.shell
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ echo
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ search_terms=()
+ [[ verbose =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+++ tr -dc a-zA-Z0-9
+ case "${target_file}" in
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ newline 2
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ 7 -eq 0 ]]
+ [[ -z true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hztpj3bnwx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console --export --verbose
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ cat -n
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ cat -n

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ console_output=false
++ tr -d '\r'
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+++ echo -n devops-resources.shell
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'indent=            '
+ [[ true == true ]]
++ tr -d '\r'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^\s*$'
+ [[ verbose =~ ^(config|c)$ ]]
++ tr -d '\r'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
+ local verbose=true
+ IFS=' 	
'
+ source ./scripts/configs-objects.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ [[ -n '' ]]
+ dry_run=false
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -z true ]]
++ __CONFIGS_OBJECTS__=1
++ grep -v '^#'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ platform =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
++ alias serialize-object=configs_objects
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ grep -v '^#'
++ grep -v '^\s*$'
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ search_pattern=172.16.1.6
+ return 0
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^#'
++ grep -v '^#'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ output_dir=reports/192.168.1.10/fortinet
+ (( i++ ))
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ local parent_dir=reports/192.168.0.1/cisco
+ (( i < count ))
+ echo
+ (( i++ ))
+ search_pattern=10.0.2.3
+ (( i < count ))
+ result=0
+ exit 0
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xWHREcrymH ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xWHREcrymH
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ return 0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ cat -n
++ tr -d '\r'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local first_search_entry=172.16.1.6
+ [[ search =~ ^(platform|p)$ ]]
+ local last_search_entry=172.16.1.6
+ [[ search =~ ^(search|s)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ newline 2
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ search_terms=()
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ [[ export =~ ^(console|o)$ ]]
+ declare -a search_terms
+ local count=1
+ local SCRIPT_DIR=./scripts
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list != *,* ]]
+ local script_filename=fortinet-configs.awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-configs--ips.list ]'
+ mapfile -t search_terms
+ newline
+ (( i++ ))
+ newline 2
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local first_search_entry=10.10.10.10
+ ((  count == 0  ))
+ (( i < count ))
+ echo
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local last_search_entry=10.10.10.10
+ (( i++ ))
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ (( i < count ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ true == true ]]
+ read -r key value
+ newline
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local count=1
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ (( i < count ))
+ [[ false == true ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local first_search_entry=192.168.0.1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ local last_search_entry=192.168.0.1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ true == true ]]
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ ((  count == 0  ))
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local count=1
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ] ]]
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ echo
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ script_filename=network-extract.shell
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ script_filename=network-extract
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--dmz-fw2-backup.cfg.console
+ local count=2
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print '{
+ [[ export =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
version 16.9
+ local export_objects=true
hostname branch-isr-02

+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
interface GigabitEthernet0/0/1
+ [[ true == true ]]
 ip address 192.168.2.12 255.255.255.0
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
 description Workstation LAN

+ [[ export =~ ^(extract|x)$ ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ export =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ export =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n {
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ [[ export == \h\e\l\p ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ] ]]
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-configs--ips.list ]'
+ local count=2
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ configs_objects
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console --export --verbose
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local first_search_entry=10.10.10.10
+ local 'indent=            '
+ (( i++ ))
+ local last_search_entry=10.10.10.10
+ (( i < count ))
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ true == true ]]
+ echo
+ oIFS=' 	
'
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i++ ))
+ newline
+ local search_pattern
+ (( i < count ))
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
++ dirname -- ./scripts/network-extract.shell
+ local parent_dir=reports/10.10.10.10/cisco
+ newline
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ (( i = 0 ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
+ for xitem in "${@}"
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ IFS==
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ tr -d '\r'
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ newline
+ [[ logger =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ extract_location=reports/172.16.1.6/misc/switch3.conf
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J05nfoP2FJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J05nfoP2FJ
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
+ IFS==
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local count=1
+ ((  count == 0  ))
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local SCRIPT_DIR=./scripts
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ echo
++ dirname reports/172.16.1.6/misc/switch3.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ false == true ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ newline 2
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ [[ platform =~ ^(export|r)$ ]]
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local target_platform=cisco
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS==
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ case "${target_platform}" in
+ case "${target_platform}" in
+ newline
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ local count=1
                  /^}$/ {
++ basename reports/10.10.10.10/cisco/campus-sw-access01
                    if (in_json_header == 1) {
+ (( i = 0 ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
                      in_json_header = 0;
                  BEGIN {
+ [[ export =~ ^(config|c)$ ]]
+ echo
                      next;
                    in_json_header = 0;
+ (( i++ ))
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ (( i < count ))
                    }
+ [[ export =~ ^(console|o)$ ]]
                  }
+ [[ export =~ ^(config|c)$ ]]
                  (in_json_header == 1) { next }
                    blk = "";
                  /^[^[:space:]]/ {
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ export =~ ^(export|r)$ ]]
+ [[ conf == \c\o\n\f ]]
                    blk = $0;
                  /^[[:space:]]*$/ { next }
                    next;
+ final_output=reports/10.0.0.1/misc/switch3.conf
                  }
+ local export_objects=true
                  {
                    blk = blk divisor " " $0;
                  /^{$/ { in_json_header = 1; next }
                  }
                  END {
+ [[ export =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.0.1/misc/switch3.conf
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ export =~ ^(console|o)$ ]]
                      in_json_header = 0;
                  }
                      next;
+ local parent_dir=reports/172.18.1.20/cisco
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
                    }
                  }
                  (in_json_header == 1) { next }
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
                  /^[^[:space:]]/ {
+ [[ search =~ ^(config|c)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ local export_objects=true
                    next;
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ local count=1
+ local count=2
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
                  }
+ (( i = 0 ))
+ [[ search =~ ^(console|o)$ ]]
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console ]]
                  END {
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ configs_objects
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
                  }
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ case "${target_file}" in
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--perimeter-fw1.cfg.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ IFS==
+ read -r key value
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --export
+ local first_search_entry=192.168.0.1
+ local last_search_entry=192.168.0.1
++ echo -e --verbose
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
++ IFS=,
++ dirname reports/10.0.0.1/misc/switch3.conf
++ echo 172.16.1.6
+ grep -F 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ extract =~ ^(config|c)$ ]]
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ cut -d/ -f2
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local first_search_entry=10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local count=1
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ export =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z cisco ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ echo
++ alias network-extract--helper=network_extract__helper
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/configs-objects.shell
+ declare -a execute__netwowrk_extract
+ echo
+ (( i++ ))
+ [[ -n '' ]]
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ true == true ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ which awk
++ alias serialize-object=configs_objects
+ [[ platform =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ script_filename=network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ] ]]
+ script_filename=network-extract
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-configs--ips.list ]'
+ network_extract__console=console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ touch console/network-extract.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ output_dir=reports/172.18.1.20/misc
+ read -r key value
+ [[ ! -d reports/172.18.1.20/misc ]]
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ output_dir=reports/203.0.113.25/cisco
+ local search_pattern
+ [[ false == true ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ alias parse-cisco=main
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--access-sw1-west.cfg.console
+ [[ -z x ]]
+ export logs_location=logs
+ newline
+ logs_location=logs
+ newline
+ mkdir -p logs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
++ mktemp -d
+ echo
+ return 0
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local search_pattern
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ return 0
+ search_pattern=192.168.0.1
+ [[ true == true ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zst3ksize/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BblqIKSUvI
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BblqIKSUvI
+ [[ cfg == \c\f\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ export 'nl=\n'
+ nl='\n'
+ script_filename=network-extract.shell
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
++ alias detect-vendor=detect_vendor
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
++ alias exit-error=exit_error
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ configs_objects
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ script_filename=network-extract
++ alias list-file=list_file
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ export network_extract__console=console/network-extract.console
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ network_extract__console=console/network-extract.console
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
++ alias log-error=log_error
+ touch console/network-extract.console
++ alias log-info=log_info
++ alias log-warn=log_warn
+ grep -F 172.16.1.6
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ configs_objects
+ echo
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ dirname reports/10.0.2.3/misc/fw3.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/10.0.2.3/misc
++ echo -e --export
+ [[ ! -d reports/10.0.2.3/misc ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.suu2mhqa1k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
++ mktemp -d
++ dirname reports/172.31.255.254/misc/switch1.conf
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
++ mkdir -p console
+ local parent_dir=reports/172.31.255.254/misc
+ result=0
+ exit 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTUp563bKx ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTUp563bKx
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ [[ logger =~ ^(export|r)$ ]]
  "domain": "",
+ local awk_bin=/usr/bin/awk
  "hostname": "access-sw1-west"
}
+ [[ logger =~ ^(extract|x)$ ]]

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
+ [[ logger =~ ^(logger|l)$ ]]
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
 description Management objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ sed '/^[[:space:]]*$/d'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]]
+ search_terms=()
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list != *,* ]]
+ result=0
+ mapfile -t search_terms
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Baa3Phbd5v
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Baa3Phbd5v
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ [[ 5 -lt 4 ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname reports/10.0.0.1/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ grep -v '^\s*$'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ local target_platform=fortinet
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ platform == \h\e\l\p ]]
++ logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ mkdir -p logs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
++ which awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ grep -v '^#'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
+ IFS==
++ actions_logfile=console/run.console
+ read -r key value
++ touch console/run.console
++ echo reports/172.16.0.5/misc/fw3.cfg
+ output_dir=reports/192.168.100.100/cisco
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console ]]
+ [[ export =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local export_objects=true
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Kx5sinGE3/network-extract--switch1.conf.console
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ result=0
++ cut -d/ -f2
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cEDQ55nj1h ]]
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cEDQ55nj1h
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
 network-object host 192.168.0.1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ basename reports/172.31.255.254/misc/switch1
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
 network-object host 192.168.0.100
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
 network-object host 10.10.10.10'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BbpryHl5lw
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BbpryHl5lw
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ result=0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ local count=1
  "domain": "",
+ export 'nl=\n'
  "hostname": "access-sw1-west"
+ (( i = 0 ))
+ nl='\n'
}
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))

version 12.4
++ sed -e '1s|^\(-\)\{1,\}||'
hostname access-sw1-west
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ case "${target_platform}" in
++ alias print-newline=newline
++ alias pause=pause
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ alias print-line=print
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ print '{
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "vendor": "cisco",
++ alias print-file=print_file
                  }
  "model": "ASA",
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
  "version": "9.14(3)",
++ printf '%*s' 12 ''
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
++ alias relative-configpath=relative_configpath
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ alias system-metrics=system_metrics
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4qnappen8v/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export project_status=run.done
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
++ project_status=run.done
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
++ touch run.done
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ alias validate-address=validate_address
++ IFS=,
++ alias warning-message=warning
++ echo 10.0.2.3
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ local parent_dir=reports/10.0.0.1/misc
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ grep -v '^\s*$'
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract == \d\e\b\u\g ]]
+ search_pattern=10.10.10.10
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ config =~ ^(platform|p)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ config =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ search_pattern=172.16.0.5
+ mkdir -p reports/172.16.0.5/misc/.objects
+ local parent_dir=reports/192.168.1.11/cisco
+ newline
+ local 'indent=            '
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ false == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console --export --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
++ echo -e --platform=fortinet
hostname access-sw1-west

interface Vlan100
+ oIFS=' 	
 ip address 192.168.0.100 255.255.255.0
'
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
++ actions_logfile=console/run.console
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
++ touch console/run.console
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ [[ cfg == \c\f\g ]]

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.1
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local search_pattern
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ output_dir=reports/10.10.10.10/fortinet
++ printf '%*s' 12 ''
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ local first_search_entry=192.168.1.11
++ IFS=,
+ local last_search_entry=192.168.1.11
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ local 'indent=            '
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ [[ true == true ]]
+ local last_search_entry=198.51.100.75
++ echo 192.168.1.10
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ result=0
+ [[ true == true ]]
+ exit 0
++ command -v -- ./scripts/network-extract.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z9t4gQMejU ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z9t4gQMejU
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+++ base64
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
+ local SCRIPT_DIR=./scripts
++ mkdir -p console
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ tr -dc a-zA-Z0-9
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ newline
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ echo -e --export
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ configs_objects
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(config|c)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ extract =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ extract == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ grep -F 192.168.0.1
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias network-configs--helper=network_configs__helper
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ alias parse-cisco=main
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -z x ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local search_pattern
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console ]]
+ debug=false
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console ]]
+ export console_output=false
+ console_output=false
+ case "${target_file}" in
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw1.cfg.console
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-configs--ips.list ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ command -v -- ./scripts/network-extract.shell
++ basename reports/10.0.0.1/misc/switch1
++ which awk
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ ((  count == 0  ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ newline
+ (( i++ ))
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+++ base64
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ cut -d/ -f2
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ script_filename=network-extract.shell
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ logger =~ ^(console|o)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ logger == \d\r\y\-\r\u\n ]]
'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ debug=false
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat -n
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ newline 2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ logger =~ ^(console|o)$ ]]
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ logger =~ ^(export|r)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ local count=2
++ targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ newline 2
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+++ echo -n devops-resources.shell
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yc7f85XNHD ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yc7f85XNHD
++ echo -e --export
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
++ echo reports/172.31.255.254/misc/switch1.conf
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mb6kju4uwi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ (( i++ ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console --export --verbose
+ (( i < count ))
++ alias serialize-object=configs_objects
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
++ cut -d/ -f2
+ [[ export =~ ^(search|s)$ ]]
+ newline
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ local count=1
+ dry_run=false
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ console_output=false
+ (( i < count ))
+ (( i++ ))
+ for xitem in "${@}"
+ [[ -z true ]]
+ output_dir=reports/192.168.0.1/fortinet
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]]
+ [[ -z fortinet ]]
+ alias parse-cisco=main
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
++ which awk
+ local search_pattern
+++ base64
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++++ basename ./scripts/devops-resources.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uua9BRIUxQ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uua9BRIUxQ
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ search_pattern=172.18.1.20
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ true == true ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ mkdir -p reports/172.18.1.20/cisco/.objects
++ [[ -n '' ]]
++ tr -d '\r'
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ which awk
++ alias print-file=print_file
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ grep -v '^\s*$'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --export
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ grep -v '^#'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ configs_objects
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
+++ echo -n devops-resources.shell
+ newline
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local parent_dir=reports/192.168.2.12/cisco
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ return 0
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ IFS==
+ (( i = 0 ))
+ script_filename=network-extract.shell
+ read -r key value
+ (( i < count ))
+ echo
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ network_extract__console=console/network-extract.console
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ touch console/network-extract.console
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ true == true ]]
+ echo
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ (( i++ ))
++ __DEVOPS_HELPERS__=1
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ alias network-configs--helper=network_configs__helper
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local 'extracted_configuration={
+ [[ search =~ ^(config|c)$ ]]
  "vendor": "fortinet",
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
++ echo -e --export
+ logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ mkdir -p logs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ search_pattern=172.31.255.254
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p reports/172.31.255.254/misc/.objects
+ [[ export =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local script_filename=cisco-configs.awk
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS==
+ read -r key value
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/10.0.2.3/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ 7 -eq 0 ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hztpj3bnwx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console --export --verbose
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ local first_search_entry=192.168.2.12
}
+ local count=2
++ tr -d '\r'
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ search_pattern=192.168.1.11
+ local script_filename=fortinet-configs.awk
++ echo reports/10.0.0.1/misc/switch1.conf
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ grep -F 10.10.10.10
+ mkdir -p reports/192.168.1.11/cisco/.objects
++ IFS=,
++ echo 172.18.1.20
++ grep -v '^\s*$'
++ basename reports/10.0.2.3/misc/fw3
+ grep -F 172.16.0.5
++ cut -d/ -f2
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ echo -e --verbose
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ search_terms=()
+ [[ export =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'

#hostname="fg-campus-core"
+ [[ export =~ ^(extract|x)$ ]]
#model="FortiGate-200F"
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]

+ [[ export =~ ^(search|s)$ ]]
config firewall address
 edit "Hawkeye-Nest"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  set subnet 172.16.1.6 255.255.255.255
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
  set comment "Remote sniper node"
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
 next
+ [[ export == \h\e\l\p ]]
end'
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ local last_search_entry=192.168.2.12
+ local search_pattern
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ (( i = 0 ))
+ result=0
+ [[ export == \d\e\b\u\g ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ newline
+ (( i < count ))
+ [[ -n {
+ [[ true == true ]]
  "vendor": "fortinet",
+ local count=1
  "model": "FortiGate-200F",
  "version": "",
+ (( i = 0 ))
  "domain": "",
  "hostname": "fg-campus-core"
+ (( i < count ))
}

#hostname="fg-campus-core"
+ echo
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
+ (( i++ ))
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ (( i < count ))
 next
end ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ declare -a execute__netwowrk_extract
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ IFS=,
++ echo 203.0.113.25
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ which awk
+ [[ config =~ ^(export|r)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local search_pattern
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=10.0.0.1
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ mkdir -p reports/10.0.0.1/misc/.objects
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ result=0
+ exit 0
+ local first_search_entry=192.168.0.100
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8m7jkpRlbG ]]
+ local last_search_entry=192.168.0.100
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ true == true ]]
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8m7jkpRlbG
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ printf '%*s' 12 ''
++ tr -d '\r'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4qnappen8v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console --export --verbose
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ IFS==
++ echo reports/10.0.2.3/misc/fw3.cfg
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ read -r key value
+ ((  count == 0  ))
++ echo -e --verbose
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ print '{
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
++ grep -v '^\s*$'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ cut -d/ -f2
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ case "${target_platform}" in
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
++ which awk
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ sed '/^[[:space:]]*$/d'
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
++ grep -v '^#'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=10.0.2.3
+ newline
+ mkdir -p reports/10.0.2.3/misc/.objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list != *,* ]]
+ local first_search_entry=203.0.113.25
+ mapfile -t search_terms
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
+ local verbose=true
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ IFS=' 	
+ local count=1
'
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
+ debug=false
+ ((  count == 0  ))
+ [[ -z '' ]]
+ dry_run=false
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ [[ -z true ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export console_output=false
+ local count=1
+ console_output=false
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ search_terms=()
+ [[ extract =~ ^(export|r)$ ]]
+ declare -a search_terms
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ grep -F 172.31.255.254
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ extract =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ which awk
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ local script_filename=fortinet-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--branch-isr-02.cfg.console
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ case "${target_file}" in
+ [[ search =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--branch-isr-02.cfg.console
+ configs_objects
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ local target_config=.cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
+ result=0
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ cat -n
++ IFS=,
++ echo 10.10.10.10
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ result=0
+ dry_run=false
+ [[ 0 -ne 0 ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo -e --platform=cisco
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ grep -v '^#'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ cut -d/ -f2
++ IFS=,
++ echo 192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++++ basename ./scripts/devops-resources.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+++ tr -dc a-zA-Z0-9
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ newline
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local count=1
+ (( i = 0 ))
+ set -euo pipefail
+ (( i < count ))
++ mktemp -d
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ echo
+ __NETWORK_EXTRACT__=1
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ newline
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+++ echo -n devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 172.18.1.20
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ console_output=false
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ -z true ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ configs_objects
++ mktemp -d
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
++ mktemp -d
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ search_pattern=192.168.2.12
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ result=0
+ exit 0
+ sed '/^[[:space:]]*$/d'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OIs26f0mS2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OIs26f0mS2
+ local parent_dir=reports/192.168.0.100/cisco
+ grep -F 192.168.1.11
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AQggVLc4l7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AQggVLc4l7
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
++ command -v -- ./scripts/network-extract.shell
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_platform}" in
++ command -v -- ./scripts/network-extract.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ which awk
++ printf '%*s' 12 ''
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ tr -d '\r'
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+ cat -n
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BgVxEepMA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BgVxEepMA
++ grep -v '^#'
++ tr -d '\r'
++ grep -v '^\s*$'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CQmFNHpm2u
+ source ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CQmFNHpm2u
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My4Nxggdue
++ grep -v '^#'
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My4Nxggdue
++ [[ -n '' ]]
+ nl='\n'
++ declare -gr __DEVOPS_RESOURCES__=1
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
++ alias log-error=log_error
++ alias log-info=log_info
++ alias exit-error=exit_error
++ alias log-warn=log_warn
+ newline
++ alias print-message=message
++ alias list-file=list_file
+ local count=1
+ (( i = 0 ))
++ alias print-newline=newline
+ (( i < count ))
++ alias log-error=log_error
+ echo
++ alias log-info=log_info
++ alias list-file=list_file
++ alias log-warn=log_warn
+ (( i++ ))
+ (( i < count ))
++ alias print-message=message
++ alias pause=pause
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-error=log_error
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias log-info=log_info
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-warn=log_warn
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias print-file=print_file
++ alias print-message=message
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
++ alias pause=pause
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias print-line=print
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local 'indent=            '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
++ alias print-file=print_file
++ alias pause=pause
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ echo
++ alias print-line=print
++ alias system-metrics=system_metrics
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ return 0
+ local search_pattern
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
+ result=0
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ alias validate-address=validate_address
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias warning-message=warning
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export LC_ALL=C
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ LC_ALL=C
++ alias warning-message=warning
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ export LC_ALL=C
+ local SCRIPT_DIR=./scripts
++ LC_ALL=C
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export 'nl=\n'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ alias validate-address=validate_address
  "model": "FortiGate-60F",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "version": "v7.2.5.F",
++ nl='\n'
+ local script_filename=cisco-configs.awk
++ default_addresses=ips.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "",
++ export default_addresses=ips.list
  "hostname": "fg-branch-vpn-01"
++ default_addresses=ips.list
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ export default_devices=devices.list
}
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias warning-message=warning
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ default_devices=devices.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
++ export default_matrix=matrix.json
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ default_matrix=matrix.json
++ export default_matrix=matrix.json
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
++ default_matrix=matrix.json
++ export cache_location=.cache
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console ]]
++ export cache_location=.cache
++ export LC_ALL=C
++ cache_location=.cache
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
++ cache_location=.cache
++ export logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console ]]
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ LC_ALL=C
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p logs
++ mkdir -p logs
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ export logs_location=logs
++ logs_location=logs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message '                .cache/resources/misc/fw1.cfg'
++ mkdir -p logs
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline

+ local count=1
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
#model="FortiGate-60F"
+ echo
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local first_search_entry=203.0.113.25
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local last_search_entry=203.0.113.25
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]

+ [[ extract == \v\e\r\b\o\s\e ]]
config firewall address
 edit "Panther-Vault"
+ for xitem in "${@}"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ IFS==
end'
+ read -r key value
+ result=0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ newline
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ] ]]
+ local count=1
  "domain": "",
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ (( i = 0 ))
  "hostname": "fg-branch-vpn-01"
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console ]]
+ (( i < count ))
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console ]]
+ ((  count == 0  ))
++ dirname -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--access-sw1-west.cfg.console
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ cat -n
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ grep -F 10.0.0.1
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
++ cut -d/ -f2
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/192.0.2.50/cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ grep -F 192.168.2.12
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ result=0
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ 0 -ne 0 ]]
  "hostname": "fg-branch-vpn-01"
}
+ local script_filename=cisco-configs.awk

+ [[ true == true ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local SCRIPT_DIR=./scripts
+ result=0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ 0 -ne 0 ]]

config firewall address
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
+ local script_filepath=./scripts/extract/cisco-configs.awk
 next
end'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n {
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ newline
+ sed '/^[[:space:]]*$/d'
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ local count=1
+ local SCRIPT_DIR=./scripts
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ local script_filename=cisco-configs.awk
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console ]]
+ (( i < count ))
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=fortinet
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ (( i < count ))
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ result=0
+ search_pattern=192.168.0.100
+ exit 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.foTIKPud7T ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.foTIKPud7T
++ basename reports/192.0.2.50/cisco/perimeter-fw1
++ IFS=,
++ echo 192.168.0.1
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ which awk
+ cat -n
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ export console_location=console
++ export console_location=console
++ console_location=console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mkdir -p console
++ console_location=console
++ mkdir -p console
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9y8Od4z4kY/network-extract--fw3.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ platform =~ ^(config|c)$ ]]
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline 2
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=2
+ newline
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
+ echo
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
++ export actions_logfile=console/run.console
+ (( i++ ))
  "domain": "global.dmz.example.net",
++ actions_logfile=console/run.console
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
}
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
object network Sentinel-NAT
++ touch console/run.console
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
 host 203.0.113.25
+ local search_pattern
 description Corporate NAT edge'
+ result=0
+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local count=1
  "hostname": "dmz-fw2-backup"
}

+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ export actions_logfile=console/run.console
+ (( i < count ))
ASA Version 9.12(4)
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
++ actions_logfile=console/run.console
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ cfg == \c\f\g ]]
++ touch console/run.console
+ return 0
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
++ which awk
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
++ echo 10.10.10.10
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
+ newline
 description Backup inside NAT IP
+ [[ cfg == \c\f\g ]]

object-group network Sector-Wireless
 description Staff WiFi clients
+ local count=1
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat -n
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ declare -a execute__netwowrk_extract
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ cat -n
++ IFS=,
++ echo 10.0.0.1
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
++ IFS=,
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ echo 172.16.1.6
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export project_status=run.done
+ [[ true == true ]]
++ project_status=run.done
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
++ touch run.done
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iFhMTVLtwt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iFhMTVLtwt
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--campus-sw-access01.cfg.console
+ newline 2
+ newline
+ cat -n
+ local count=1
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ return 0
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ output_dir=reports/203.0.113.25/cisco
+ print '{
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ grep -F 192.168.0.100
+ [[ logger =~ ^(config|c)$ ]]
+ search_pattern=192.0.2.50
+ [[ -n {
+ [[ logger =~ ^(console|o)$ ]]
++ which awk
  "vendor": "cisco",
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ logger =~ ^(export|r)$ ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ newline
+ echo -en '{
  "vendor": "cisco",
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ local count=1

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i = 0 ))
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
 ip address 192.168.100.100 255.255.255.0
+ echo
 description Inside LAN segment

object network Titan-WLAN-Host
+ newline
 host 192.168.100.100
+ (( i++ ))
 description Backup inside NAT IP
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console ]]

+ (( i < count ))
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
 network-object host 10.10.10.10'
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ANoiz4QXy/network-extract--switch1.conf.console
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
+ output_dir=reports/198.51.100.75/cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
++ export targets_location=targets
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ which awk
++ export targets_location=targets
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ case "${target_file}" in
++ targets_logfile=.cache/targets.jobs
+ local awk_bin=/usr/bin/awk
+ newline 2
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ true == true ]]
++ export targets_logfile=.cache/targets.jobs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ targets_logfile=.cache/targets.jobs
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console ]]
+ configs_objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--branch-isr-02.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
+ case "${target_file}" in
++ targets_location=targets
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
++ printf '%*s' 12 ''
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+++ base64
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --export
+ newline
+ local count=1
+ (( i = 0 ))
+++ base64
+ (( i < count ))
+ echo
++++ basename ./scripts/devops-resources.shell
+ (( i++ ))
+ (( i < count ))
++++ basename ./scripts/devops-resources.shell
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ result=0
+++ tr -dc a-zA-Z0-9
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hq40absjBW ]]
++ printf '%*s' 12 ''
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hq40absjBW
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QCbVUcAYhp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QCbVUcAYhp
+ [[ false == true ]]
+ newline 2
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+++ echo -n devops-resources.shell
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ case "${target_file}" in
+++ echo -n devops-resources.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+++ echo -n devops-resources.shell
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ local 'indent=            '
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.10/fortinet
+ newline
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i++ ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ false == true ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ configs_objects
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
+ local count=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
+ echo
++ [[ -n '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS__=1
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
++ __DEVOPS_HELPERS__=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch1.conf.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ local script_filename=cisco-configs.awk
+ exit 0
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l3P0PW7cBg ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l3P0PW7cBg
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ configs_objects
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ export =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local export_objects=true
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(extract|x)$ ]]
++ alias network-configs--helper=network_configs__helper
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ export == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \d\e\b\u\g ]]
+ source ./scripts/configs-objects.shell
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __CONFIGS_OBJECTS__=1
+ IFS==
++ __CONFIGS_OBJECTS__=1
+ read -r key value
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias network-extract--helper=network_extract__helper
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ source ./scripts/configs-objects.shell
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
+ newline
++ [[ -n '' ]]
+ local count=1
++ readonly __CONFIGS_OBJECTS__=1
+ (( i = 0 ))
++ __CONFIGS_OBJECTS__=1
+ (( i < count ))
+ echo
++ printf '%*s' 12 ''
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias serialize-object=configs_objects
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ case "${target_platform}" in
+ alias parse-cisco=main
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -z x ]]
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ mkdir -p logs
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -z x ]]
+ export logs_location=logs
+ alias parse-cisco=main
+ logs_location=logs
+ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ local 'indent=            '
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HdEXzN0VU8 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HdEXzN0VU8
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
++ echo -e --verbose
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ newline
+ local parent_dir=reports/172.18.1.20/misc
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ script_filename=network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ script_filename=network-extract
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ export network_extract__console=console/network-extract.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ network_extract__console=console/network-extract.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ touch console/network-extract.console
+ [[ true == true ]]
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ message '                .cache/resources/misc/switch3.conf'
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local search_pattern
+ grep -F 192.0.2.50
+ local 'message=                .cache/resources/misc/switch3.conf'
+ script_filename=network-extract
+ echo -e '                .cache/resources/misc/switch3.conf'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ newline
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ touch console/network-extract.console
+ (( i < count ))
+ touch console/network-extract.console
+ echo

object-group network Floor-Networks
+ (( i++ ))
 description End-user and service devices
 network-object host 192.168.0.1
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.100
+ local parent_dir=reports/203.0.113.25/cisco
 network-object host 10.10.10.10 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console ]]
domain-name global.dmz.example.net
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in

+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--branch-isr-02.cfg.console
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ output_dir=reports/192.168.1.11/fortinet
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ [[ cfg == \c\f\g ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ basename reports/172.18.1.20/misc/fw1
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
 ip address 192.168.0.1 255.255.255.0
+ print '{
 description Switch Mgmt
  "vendor": "cisco",

  "model": "ASA",
object-group network Floor-Networks
  "version": "9.12(4)",
 description End-user and service devices
  "domain": "global.dmz.example.net",
 network-object host 192.168.0.1
  "hostname": "dmz-fw2-backup"
 network-object host 192.168.0.100
}
 network-object host 10.10.10.10'

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ -n {
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
  "vendor": "cisco",

  "model": "ASA",
object-group network Floor-Networks
  "version": "9.12(4)",
 description End-user and service devices
  "domain": "global.dmz.example.net",
 network-object host 192.168.0.1
  "hostname": "dmz-fw2-backup"
 network-object host 192.168.0.100
}
 network-object host 10.10.10.10 ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ newline
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
+ echo -en '{
 description Staff WiFi clients
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ (( i < count ))
+ echo
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ (( i++ ))
version 12.2
+ echo -en '{
hostname campus-sw-access01
  "vendor": "cisco",

  "model": "ASA",
interface Vlan1
  "version": "9.12(4)",
 ip address 192.168.0.1 255.255.255.0
  "domain": "global.dmz.example.net",
 description Switch Mgmt
  "hostname": "dmz-fw2-backup"

+ (( i < count ))
object-group network Floor-Networks
++ IFS=,
 description End-user and service devices
}
 network-object host 192.168.0.1

 network-object host 192.168.0.100
ASA Version 9.12(4)
hostname dmz-fw2-backup
 network-object host 10.10.10.10'
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ echo 203.0.113.25
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ 7 -eq 0 ]]
+ cat -n
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ia7wu3k0yr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console --export --verbose
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ cut -d/ -f2
+ [[ verbose =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zst3ksize/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console --export --verbose
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ oIFS=' 	
+ local search_pattern
'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ for xitem in "${@}"
+ declare -a execute__netwowrk_extract
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zst3ksize/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console --export --verbose
+ [[ verbose =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ oIFS=' 	
'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ configs_objects
+ IFS==
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console ]]
+ newline 2
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ exit 0
+ search_terms=()
+ declare -a search_terms
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UVwB7HE2qY ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list != *,* ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UVwB7HE2qY
+ mapfile -t search_terms
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ extract == \h\e\l\p ]]
+ result=0
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ exit 0
+ declare -a execute__netwowrk_extract
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kzgio2RkWU ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ read -r key value
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kzgio2RkWU
+ [[ 0 -ne 0 ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ which awk
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ output_dir=reports/198.51.100.75/cisco
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ which awk
++ IFS=,
++ echo 198.51.100.75
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
++ echo reports/172.18.1.20/misc/fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ cut -d/ -f2
++ tr -d '\r'
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ return 0
+ search_pattern=192.168.1.10
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ true == true ]]

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ result=0
+ newline 2
+ local count=2
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": ""
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console ]]
}
+ (( i++ ))

interface Vlan2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
 ip address 172.16.1.6 255.255.255.0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console ]]
+ echo
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
++ which awk
+ local awk_bin=/usr/bin/awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ cat -n
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ grep -v '^#'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local parent_dir=reports/192.168.100.100/cisco
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ export console_output=false
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ search_pattern=172.18.1.20
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ mkdir -p reports/172.18.1.20/misc/.objects
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ read -r key value
+ search_pattern=203.0.113.25
+ newline 2
+ [[ search == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ [[ -z true ]]
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ (( i = 0 ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ return 0
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
++ printf '%*s' 12 ''
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'indent=            '
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ local first_search_entry=192.168.2.12
+ (( i = 0 ))
+ (( i < count ))
+ local last_search_entry=192.168.2.12
+ echo
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ] ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ case "${target_file}" in
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--access-sw1-west.cfg.console
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i++ ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ printf '%*s' 12 ''
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local 'indent=            '
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ grep -F 192.168.1.10
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ false == true ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ configs_objects
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ local count=2
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ configs_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
++ which awk
+ sed '/^[[:space:]]*$/d'
+ newline
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
++ cut -d/ -f2
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ case "${target_platform}" in
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ config =~ ^(extract|x)$ ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ config =~ ^(logger|l)$ ]]
                    if (in_json_header == 1) {
+ [[ config =~ ^(config|c)$ ]]
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ config =~ ^(platform|p)$ ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ (( i < count ))
                  }
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
                  {
                    blk = blk divisor " " $0;
+ cat -n reports/172.16.1.6/misc/switch3.conf
                  }
                  END {
+ [[ config =~ ^(export|r)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ config == \h\e\l\p ]]
                ' reports/172.18.1.20/misc/fw1.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ echo
+ [[ config == \d\e\b\u\g ]]
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console ]]
+ result=0
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ exit 0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QYhDZsoZJw/network-extract--perimeter-fw1.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3mc7rsgtz8 ]]
+ configs_objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3mc7rsgtz8
+ local count=2
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ echo
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ (( i < count ))
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ grep -F 172.18.1.20
++ dirname reports/10.0.0.1/misc/switch3.conf
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local count=1
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ (( i = 0 ))
interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ (( i < count ))
 description External Internet-facing Interface
+ echo
+ (( i++ ))

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
+ (( i < count ))
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 203.0.113.25
+ local parent_dir=reports/10.10.10.10/cisco
+ local parent_dir=reports/192.168.0.1/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=192.168.100.100
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ local 'extracted_configuration={
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "ASA",
  "version": "9.12(4)",
+ [[ true == true ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ sed -e '1s|^\(-\)\{1,\}||'
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ result=0
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ cfg == \c\f\g ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
 description Outbound Internet NAT interface ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ output_dir=reports/192.168.2.12/fortinet
+ [[ true == true ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ sed '/^[[:space:]]*$/d'
++ command -v -- ./scripts/network-extract.shell
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ sed '/^[[:space:]]*$/d'
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ print '{
  "vendor": "cisco",
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ configs_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ local parent_dir=reports/10.0.0.1/misc
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ read -r key value
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ev20GCNAt6 ]]
+ [[ 0 -ne 0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ev20GCNAt6
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
++ basename reports/10.0.0.1/misc/switch3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+ local first_search_entry=192.168.100.100
++ command -v -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
+ [[ extract =~ ^(config|c)$ ]]
+ local last_search_entry=192.168.100.100
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
++ dirname -- ./scripts/network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ printf '%*s' 12 ''
++ IFS=,
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo 192.168.0.1
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ local 'indent=            '
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ [[ -n '' ]]
+ local count=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ echo
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-configs--ips.list ]'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ ((  count == 0  ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ platform =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ newline
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ dirname -- ./scripts/network-extract.shell
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ [[ platform =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
++ alias network-extract--helper=network_extract__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
++ grep -v '^#'
++ which awk
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ source ./scripts/configs-objects.shell
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ output_dir=reports/192.168.0.100/cisco
+ (( i < count ))
+ echo
++ alias serialize-object=configs_objects
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ configs_objects
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ for xitem in "${@}"
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ grep -F 10.0.2.3
++ which awk
+ local SCRIPT_DIR=./scripts
+ IFS==
+ local script_filename=fortinet-configs.awk
+ read -r key value
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ alias parse-cisco=main
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local search_pattern
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --platform=fortinet
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z fortinet ]]
+ for xitem in "${@}"
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ local search_pattern
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ sed '/^[[:space:]]*$/d'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
+ output_dir=reports/203.0.113.25/fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/203.0.113.25/fortinet ]]
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ local 'indent=            '
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ true == true ]]
+ output_dir=reports/192.168.2.12/fortinet
+ local search_pattern
+ newline
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ local count=1
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/172.16.1.6/fortinet
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/172.16.1.6/misc
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ newline
end'
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ (( i++ ))
  "hostname": "fg-campus-core"
}
+ (( i < count ))

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
++ IFS=,
+ (( i < count ))
+ script_filename=network-extract.shell
++ echo 198.51.100.75
+ script_filename=network-extract
++ IFS=,
++ command -v -- ./scripts/network-extract.shell
++ echo 192.168.1.11
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
++ basename reports/172.16.1.6/fortinet/fg-campus-core
++ echo -e --export
+ local script_filename=cisco-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ return 0
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ result=0
+ [[ platform =~ ^(search|s)$ ]]
+ print '{
+ [[ 0 -ne 0 ]]
+ [[ platform == \h\e\l\p ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ platform == \d\e\b\u\g ]]
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": "fg-campus-core"
+ [[ platform == \d\r\y\-\r\u\n ]]
}

#hostname="fg-campus-core"
+ [[ platform == \v\e\r\b\o\s\e ]]
#model="FortiGate-200F"

+ for xitem in "${@}"
config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ IFS==
 next
+ read -r key value
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ IFS=,
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ [[ logger =~ ^(console|o)$ ]]
}
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'

+ newline 2
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
config system interface
+ [[ logger =~ ^(export|r)$ ]]
 edit "core"
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
++ echo 192.168.2.12
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
  set ip 10.10.10.10 255.255.255.0
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
  set alias "Campus Core Transit"
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
 next
+ [[ logger =~ ^(platform|p)$ ]]
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ logger =~ ^(search|s)$ ]]
 next
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
end ]]
+ case "${target_file}" in
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

+ [[ logger == \h\e\l\p ]]
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ logger == \d\e\b\u\g ]]
 next
end'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ local count=2
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
++ command -v -- ./scripts/network-extract.shell
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local search_pattern
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --export
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ local export_objects=true
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
++ cut -d/ -f2
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ newline 2
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ local SCRIPT_DIR=./scripts
+ local count=2
+ (( i = 0 ))
+ [[ 7 -eq 0 ]]
+ local script_filename=fortinet-configs.awk
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hztpj3bnwx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ extract == \h\e\l\p ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console --export --verbose
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ oIFS=' 	
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console ]]
'
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ IFS==
+ read -r key value
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ read -r key value
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ IFS=,
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ echo 192.168.0.100
++ basename reports/172.16.1.6/misc/switch3
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'extracted_configuration={
++ printf '%*s' 12 ''
  "vendor": "fortinet",
++ printf '%*s' 12 ''
  "model": "FortiGate-60F",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local 'indent=            '
+ output_dir=reports/192.168.100.100/fortinet
config firewall address
 edit "Guardians-Relay"
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
  set subnet 192.168.0.1 255.255.255.255
+ [[ true == true ]]
  set comment "Backup uplink for Milano crew"
 next
+ [[ true == true ]]
end ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ cut -d/ -f2
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
++ echo -e --verbose
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ cut -d/ -f2
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i++ ))
  "version": "v7.2.5.F",
+ output_dir=reports/198.51.100.75/fortinet
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ (( i < count ))

+ [[ ! -d reports/198.51.100.75/fortinet ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
++ sed -e '1s|^\(-\)\{1,\}||'
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ search_pattern=172.16.1.6
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ cat -n
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ configs_objects
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ (( i++ ))
++ IFS=,
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -z true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ true == true ]]
++ echo 203.0.113.25
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
+ newline
+ local count=1
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ search_pattern=10.10.10.10
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ search_pattern=192.168.0.1
+ (( i < count ))
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ cat -n
+ cat -n
+ newline 2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
++ echo -e --export
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ grep -F 192.168.100.100
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo reports/10.0.0.1/misc/switch3.conf
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ newline
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local parent_dir=reports/10.10.10.10/fortinet
+ (( i++ ))
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
  "model": "",
+ (( i = 0 ))
  "version": "16.9",
  "domain": "",
+ (( i < count ))
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ echo
object network Hydra-Link
+ (( i++ ))
 host 198.51.100.75
+ (( i < count ))
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
++ cut -d/ -f2
++ echo -e --config=.cache/resources/misc/switch1.conf
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
++ echo -e --platform=cisco
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
                      blk = blk divisor " " $0;
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

                      next;
                    }
config firewall address

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
++ grep -v '^#'
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ local awk_bin=/usr/bin/awk
 network-object host 198.51.100.75 ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ which awk
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ grep -F 172.16.1.6
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ export =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ search_pattern=10.0.0.1
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ sed '1{/^[[:space:]]*$/d;}'
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ search_terms=()
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ declare -a search_terms

config system interface
+ [[ export == \d\r\y\-\r\u\n ]]
 edit "internal"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ [[ export == \v\e\r\b\o\s\e ]]
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ sed '/^[[:space:]]*$/d'
end'
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local first_search_entry=192.168.1.10
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ] ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ false == true ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local search_pattern
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z cisco ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ [[ config =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console ]]
+ echo
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kpHfFQRhwe/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline 2
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
  "domain": "",
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
++ IFS=,
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
  "hostname": "campus-sw-access01"
+ [[ true == true ]]
}
+ newline
++ echo 198.51.100.75

+ local count=1
version 12.2
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
hostname campus-sw-access01
+ (( i = 0 ))

object-group network Floor-Networks
+ (( i < count ))
 description End-user and service devices
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
 network-object host 192.168.0.1
+ echo
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ result=0
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ newline
+ [[ -n {
  "vendor": "cisco",
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "12.2",
+ (( i < count ))
  "domain": "",
+ newline
  "hostname": "campus-sw-access01"
+ echo
}
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg

+ local count=1
+ (( i++ ))
+ (( i = 0 ))
version 12.2
+ (( i < count ))
+ (( i < count ))
hostname campus-sw-access01
+ echo

object-group network Floor-Networks
++ tr -d '\r'
 description End-user and service devices
+ (( i++ ))
++ echo -e --verbose
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
 network-object host 192.168.0.1
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i < count ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ declare -a execute__netwowrk_extract
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo -e --export
+ newline 2
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=2
+ (( i = 0 ))
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
++ cut -d/ -f2
++ which awk
++ grep -v '^#'
++ echo reports/172.16.1.6/misc/switch3.conf
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ cut -d/ -f2
+ [[ true == true ]]
+ local parent_dir=reports/192.168.0.1/fortinet
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i = 0 ))
+ (( i < count ))
+ search_pattern=10.10.10.10
+ echo
+ (( i++ ))
+ (( i < count ))
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ result=0
+ exit 0
+ [[ false == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nLgJwQZHsO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nLgJwQZHsO
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ configs_objects
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local first_search_entry=10.10.10.10
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local last_search_entry=10.10.10.10
+ IFS=' 	
+ [[ export =~ ^(search|s)$ ]]
'
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -z '' ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ debug=false
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat -n
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ [[ -z '' ]]
+ read -r key value
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ dry_run=false
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ echo
+ console_output=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ search_terms=()
+ declare -a search_terms
+ [[ false == true ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo 192.168.100.100
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
  "version": "v7.2.5.F",
  "domain": "",
+ newline
  "hostname": "fg-branch-vpn-01"
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
}

+ echo
#hostname="fg-branch-vpn-01"
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))

+ local count=1
config firewall address
+ (( i < count ))
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ configs_objects
 next
++ printf '%*s' 12 ''
end'
+ [[ platform =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n {
+ [[ -z .cache/resources/misc/fw3.cfg ]]
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i < count ))
  "domain": "",
+ [[ -z cisco ]]
  "hostname": "fg-branch-vpn-01"
}
+ [[ platform =~ ^(export|r)$ ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ return 0

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ local SCRIPT_DIR=./scripts
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ return 0
+ local script_filename=fortinet-configs.awk
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ (( i < count ))
+ [[ true == true ]]
+ echo
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ search_pattern=172.16.1.6
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ mkdir -p reports/172.16.1.6/misc/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
++ which awk
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
++ echo -e --platform=cisco
+ newline
++ echo -e --verbose
+ newline 2
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local count=1
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ tr -d '\r'
+ newline
+ (( i++ ))
+ output_dir=reports/192.168.1.10/misc
+ (( i < count ))
+ local count=1
+ local count=2
+ (( i = 0 ))
+ local parent_dir=reports/198.51.100.75/cisco
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ return 0
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
++ grep -v '^\s*$'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console ]]
+ case "${target_platform}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                      next;
                  BEGIN {
                    }
                    in_json_header = 0;
+ sed '/^[[:space:]]*$/d'
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }
                    # Add edit line to current block
                  /^{$/ { in_json_header = 1; next }
                    /^ edit / {
                  /^}$/ {
                      blk = blk divisor " " $0;
+ case "${target_platform}" in
++ which awk
                      next;
                    if (in_json_header == 1) {
                    }
                      in_json_header = 0;

                      next;
                    # Add next to block
                    }
                    /^[[:space:]]*next$/ {
                  }
                      blk = blk divisor " " $0;
                  (in_json_header == 1) { next }
                      next;
                  /^[^[:space:]]/ {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                    blk = $0;
                    # Finalize block at end
                    next;
                    /^[[:space:]]*end$/ {
                  }
                      blk = blk divisor $0;
                  {
                      if (blk != "" && !seen[blk]++) print blk;
                    blk = blk divisor " " $0;
                      blk = "";
                  }
                      next;
                  END {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                  }
                    # Accumulate middle lines
                ' reports/10.0.0.1/misc/switch3.conf
                    {
                      blk = blk divisor " " $0;
                    }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '

                  BEGIN {
                    END {
                    in_json_header = 0;
                      # No need for final print — all blocks end with end
                    blk = "";
                    }
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ local parent_dir=reports/192.168.1.11/fortinet
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^#'
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ cut -d/ -f2
+ grep -F 10.10.10.10
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list

+ newline
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ local search_pattern
 edit "wan1"
+ [[ true == true ]]
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ local count=1
 next
end
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i = 0 ))

+ local awk_bin=/usr/bin/awk
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console ]]
+ newline 2
+ result=0
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
  "hostname": "fg-branch-vpn-01"
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
}
+ [[ false == true ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--fg-campus-core.cfg.console
+ local count=2
+ [[ verbose =~ ^(logger|l)$ ]]
config system interface
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
 edit "wan1"
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ echo
  set ip 198.51.100.75 255.255.255.0
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i++ ))
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ (( i < count ))
+ local first_search_entry=10.10.10.10
  set alias "Branch ISP"
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ local last_search_entry=10.10.10.10
 next
+ echo
end
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ newline
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'

+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ configs_objects
  set comment "Branch NAT"
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
 next
end ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ local target_platform=cisco
+ debug=false
+ local target_platform=cisco
+ [[ -z '' ]]
+ dry_run=false
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform == \h\e\l\p ]]
+ export console_output=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ console_output=false
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ] ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -z true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ script_helper=false
+ IFS==
+ newline
+ read -r key value
+ [[ false == true ]]
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ local count=1
+ (( i++ ))
+ search_terms=()
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ declare -a search_terms
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list != *,* ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ mapfile -t search_terms
+ local count=1
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ result=0
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ echo
+ case "${target_file}" in
+ [[ true == true ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ search_pattern=192.168.0.1
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ echo
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ configs_objects
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local count=1
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ configs_objects
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
++ printf '%*s' 12 ''
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ dirname reports/10.10.10.10/misc/fw3.cfg
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ local 'indent=            '
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
+ newline
  "vendor": "fortinet",
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
  "model": "FortiGate-60F",
                  BEGIN {
  "version": "v7.2.5.F",
                    in_json_header = 0;
  "domain": "",
                    blk = "";
  "hostname": "fg-branch-vpn-01"
                  }
                  /^[[:space:]]*$/ { next }
}
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local count=1
                      next;
                    }

                  }
#hostname="fg-branch-vpn-01"
                  (in_json_header == 1) { next }
#model="FortiGate-60F"
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                    blk = $0;
                    next;

                  }
config system interface
                  {
 edit "wan1"
                    blk = blk divisor " " $0;
  set ip 198.51.100.75 255.255.255.0
                  }
  set alias "Branch ISP"
                  END {
 next
                    if (blk != "" && !seen[blk]++) print blk "\n";
end
                  }

                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ (( i < count ))
+ echo
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ local search_pattern
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ grep -F 192.168.0.1
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ grep -F 10.0.0.1
++ IFS=,
++ echo 192.168.2.12
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ cut -d/ -f2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local parent_dir=reports/192.168.0.100/cisco
+ local search_pattern
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ result=0
+ exit 0
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ipLN8XAlXz ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ipLN8XAlXz
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^#'
++ cut -d/ -f2
++ which awk
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_platform}" in
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ configs_objects
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
                    BEGIN {
                      blk = "";
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
                      in_json_header = 0;
                    }

                    # Skip blank lines
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ newline
                      next;
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
                    }

+ local count=1
                    # Add edit line to current block
                    /^ edit / {
+ (( i = 0 ))
                      blk = blk divisor " " $0;
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
                      next;
+ (( i < count ))
                    }

                    # Add next to block
+ echo
                    /^[[:space:]]*next$/ {
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
                      blk = blk divisor " " $0;
                      next;
                    }
+ (( i++ ))
+ case "${target_file}" in

+ (( i < count ))
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
                      blk = "";
                      next;
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ command -v -- ./scripts/network-extract.shell
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 192.168.0.1
+ cat -n
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uhtl2hOPP0 ]]
++ cut -d/ -f2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uhtl2hOPP0
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ search_pattern=192.168.1.11
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
++ dirname -- ./scripts/network-extract.shell
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ local search_pattern
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ IFS=,
++ echo 192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ newline
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local count=1
++ echo -e --export
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ return 0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ search_pattern=192.168.2.12
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ] ]]
+ local parent_dir=reports/203.0.113.25/fortinet
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-configs--ips.list ]'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
+ local count=1
+ ((  count == 0  ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ case "${target_platform}" in
+ [[ -z cisco ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local count=1
                  BEGIN {
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
                  }
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^}$/ {
+ echo
                    if (in_json_header == 1) {
                      in_json_header = 0;
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local script_filename=cisco-configs.awk
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ grep -F 10.10.10.10
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ grep -F 198.51.100.75
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ which awk
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ which awk
++ which awk
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ local parent_dir=reports/198.51.100.75/fortinet
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=192.168.0.100
+ [[ true == true ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-campus-core.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ export =~ ^(config|c)$ ]]
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(console|o)$ ]]
+ local search_pattern
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ grep -F 192.168.1.11
+ [[ logger =~ ^(export|r)$ ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ result=0
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ [[ 0 -ne 0 ]]
end ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
++ dirname -- ./scripts/network-extract.shell
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
 next
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
end'
                    BEGIN {
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

+ newline
                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

+ local count=1
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ (( i = 0 ))
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
+ (( i < count ))
                    }

                    # Accumulate middle lines
+ echo
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
+ (( i++ ))
                      # No need for final print — all blocks end with end
                    }
+ (( i < count ))
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
+ sed '/^[[:space:]]*$/d'
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ local parent_dir=reports/198.51.100.75/cisco
+ newline
+ local count=1
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ grep -F 192.168.2.12
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
++ IFS=,
++ echo 10.10.10.10
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
++ echo -e --verbose
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ local search_pattern
+ [[ 0 -ne 0 ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jil1mYE0i3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jil1mYE0i3
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local SCRIPT_DIR=./scripts
+ cat -n
+ newline
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ newline 2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DIPPmhGOB/network-extract--fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--dmz-fw2-backup.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ case "${target_platform}" in
+ result=0
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ [[ 0 -ne 0 ]]
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ true == true ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ grep -F 172.16.1.6
++ which awk
+ grep -F 192.168.0.100
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ which awk
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ cat -n
+ search_pattern=203.0.113.25
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ output_dir=reports/192.168.2.12/misc
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ [[ ! -d reports/192.168.2.12/misc ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ newline
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ return 0
+ result=0
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ 0 -ne 0 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "domain": "",
  "hostname": ""
}
+ [[ true == true ]]

object-group network Fortress-Wireless
 description Secure wireless access layer
+ local awk_bin=/usr/bin/awk
 network-object host 172.18.1.20
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object host 192.168.1.10'
+ local verbose=true
+ result=0
+ IFS=' 	
'
+ [[ -n {
+ [[ -z '' ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ debug=false
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -z '' ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ search_terms=()
+ declare -a search_terms
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console ]]
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
++ printf '%*s' 12 ''
+ sed '/^[[:space:]]*$/d'
++ command -v -- ./scripts/network-extract.shell
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ result=0
 network-object host 192.168.1.10'
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ 0 -ne 0 ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ search_pattern=198.51.100.75
+ [[ true == true ]]
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ cat reports/10.0.0.1/misc/.objects/switch3.list
  "hostname": ""
}

object-group network Fortress-Wireless
+ mkdir -p reports/198.51.100.75/fortinet/.objects
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
 network-object host 192.168.1.10'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
++ tr -d '\r'
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo -e --export
+ local 'indent=            '
++ grep -v '^\s*$'
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ grep -v '^#'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ cat -n
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ result=0
+ for xitem in "${@}"
+ exit 0
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EOAazTuSd1 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o7hTgPeKbc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EOAazTuSd1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o7hTgPeKbc
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local search_pattern
+ local search_pattern
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ newline
+ local target_platform=cisco
+ local count=1
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ newline
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ return 0
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console ]]
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ cat -n
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ cat reports/172.16.1.6/misc/.objects/switch3.list
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.10.10.10
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
++ cut -d/ -f2
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ return 0
+ cat -n
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKqNYK9ByR ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKqNYK9ByR
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GaRxiXg6dy/network-extract--switch3.conf.console
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ local 'extracted_configuration={
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
  "vendor": "fortinet",
+ [[ logger =~ ^(console|o)$ ]]
  "model": "FortiGate-200F",
+ return 0
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ logger =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
config firewall address
 edit "Vision-Link"
+ [[ logger =~ ^(extract|x)$ ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ case "${target_file}" in
+ [[ logger =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ result=0
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
  "hostname": "fg-campus-core"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
}
+ [[ logger =~ ^(platform|p)$ ]]

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ logger =~ ^(search|s)$ ]]
config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
end ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ logger =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ logger == \h\e\l\p ]]
+ debug=false
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ search_terms=()
+ result=0
+ declare -a search_terms
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mssmUX8Zma ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mssmUX8Zma
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
+ local count=1
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ ((  count == 0  ))
end'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local count=1
++ echo -e --export
++ echo -e --export
++ echo -e --export
++ tr -d '\r'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i++ ))
+ result=0
+ newline
+ exit 0
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMpTjnIu61 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMpTjnIu61
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JLkSJfqqaW/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ which awk
++ grep -v '^\s*$'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console ]]
++ grep -v '^#'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fI1cZjvMV7/network-extract--switch3.conf.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ grep -F 203.0.113.25
+ newline 2
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local count=2
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ exit 0
+ local first_search_entry=192.168.1.10
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Jj4AjPmJK4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Jj4AjPmJK4
+ local last_search_entry=192.168.1.10
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ grep -F 198.51.100.75
+ [[ false == true ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-configs--ips.list ]'
+ local count=1
+ (( i < count ))
+ return 0
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ return 0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ result=0
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ exit 0
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9qgdQHA19 ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9qgdQHA19
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
+ result=0
+ exit 0
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2xdsOvGwCg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ echo -e --verbose
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2xdsOvGwCg
++ echo -e --verbose
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
++ echo -e --verbose
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ grep -F 203.0.113.25
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ printf '%*s' 12 ''
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ configs_objects
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ configs_objects
+ local 'indent=            '
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ cat -n
+ case "${target_file}" in
+ [[ verbose =~ ^(config|c)$ ]]
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ debug=false
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ export console_output=false
+ newline
+ console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ verbose == \h\e\l\p ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list != *,* ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ mapfile -t search_terms
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ newline 2
+ IFS=' 	
+ [[ -z '' ]]
'
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ -z '' ]]
+ [[ -z true ]]
+ debug=false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ export console_output=false
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ dry_run=false
+ console_output=false
+ [[ -z true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console ]]
+ export console_output=false
+ [[ -z '' ]]
+ console_output=false
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ script_helper=false
+ [[ -z true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ [[ false == true ]]
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]]
+ search_terms=()
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list != *,* ]]
+ declare -a search_terms
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]]
+ local count=2
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list != *,* ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ cat -n
+ grep -F 198.51.100.75
+ mapfile -t search_terms
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ case "${target_file}" in
+ newline
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ local count=1
+ (( i = 0 ))
++ tr -d '\r'
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ (( i = 0 ))
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ local parent_dir=reports/192.168.2.12/fortinet
+ local parent_dir=reports/192.168.100.100/fortinet
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ grep -v '^\s*$'
+ result=0
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ccaET3Xz5q ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console ]]
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ccaET3Xz5q
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oA5Py5nGa1/network-extract--fg-campus-core.cfg.console
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ newline
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
++ tr -d '\r'
++ grep -v '^#'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
++ tr -d '\r'
+ [[ true == true ]]
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
++ basename reports/192.168.2.12/fortinet/fg-campus-core
++ basename reports/192.168.100.100/fortinet/fg-campus-core
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
++ grep -v '^\s*$'
++ grep -v '^#'
++ grep -v '^#'
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local first_search_entry=203.0.113.25
+ local search_pattern
+ local last_search_entry=203.0.113.25
+ [[ true == true ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ case "${target_file}" in
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--perimeter-fw1.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ result=0
+ local count=1
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ exit 0
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h2rs9DFzYg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h2rs9DFzYg
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ exit 0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NTpPFl9YE2 ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NTpPFl9YE2
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.1.10/misc/switch1.conf
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ cat -n
+ local first_search_entry=198.51.100.75
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console ]]
+ local last_search_entry=198.51.100.75
+ case "${target_file}" in
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat -n
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ] ]]
+ [[ false == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ newline
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ local count=1
+ message '                .cache/resources/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ local first_search_entry=203.0.113.25
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ local last_search_entry=203.0.113.25
+ local 'extracted_configuration={
+ configs_objects
+ local script_filename=cisco-configs.awk
  "vendor": "fortinet",
+ local 'message=                .cache/resources/misc/fw3.cfg'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ true == true ]]
+ echo
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ result=0
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local count=1
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ (( i = 0 ))
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'prompt_message=Enter configuration file to be parsed: '

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
  set dstintf "wan1"
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
  set srcaddr "10.10.10.10"
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
  set dstaddr "203.0.113.10"
  set action accept
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ] ]]
+ (( i < count ))
  set logtraffic all
 next
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
end ]]
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ case "${target_file}" in
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ local count=1
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ cat -n
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ cut -d/ -f2
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ which awk
++ cut -d/ -f2
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ print '{
+ newline
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local count=1
config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ (( i = 0 ))
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ (( i < count ))
  set action accept
  set logtraffic all
 next
+ echo
end'
+ result=0
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YK84KSr7dA ]]
+ newline
+ return 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YK84KSr7dA
+ [[ -n {
  "vendor": "fortinet",
+ local count=1
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ true == true ]]
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ return 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mCIOHKoDP7 ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mCIOHKoDP7
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.100.100
+ return 0
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ [[ true == true ]]
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ basename reports/192.168.1.10/misc/fw1
++ IFS=,
++ echo 192.168.2.12
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ newline 2
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local count=2
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i < count ))
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fg-branch-vpn-01.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BjvvNSIyK1/network-extract--campus-sw-access01.cfg.console
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local search_pattern
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console ]]

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ case "${target_file}" in

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ output_dir=reports/203.0.113.25/misc
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ ! -d reports/203.0.113.25/misc ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
++ which awk

++ dirname reports/203.0.113.25/misc/fw1.cfg
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ IFS=,
+ sed '1{/^[[:space:]]*$/d;}'
++ echo 192.168.1.10
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
+ declare -a execute__netwowrk_extract
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ grep -F 192.168.2.12
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/198.51.100.75/misc
+ [[ ! -d reports/198.51.100.75/misc ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 192.168.100.100
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ result=0
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3a07BRMVdO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3a07BRMVdO
++ which awk
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ configs_objects
++ cut -d/ -f2
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
++ printf '%*s' 12 ''
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQQWfwNwla ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQQWfwNwla
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SoM1RfRjJn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SoM1RfRjJn
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local 'indent=            '
++ dirname -- ./scripts/network-extract.shell
++ IFS=,
++ echo 192.168.1.10
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local SCRIPT_DIR=./scripts
+ result=0
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local script_filename=cisco-configs.awk
+ [[ 0 -ne 0 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=2
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ echo
+ [[ 0 -ne 0 ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ search_pattern=192.168.1.10
+ echo
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i++ ))
+ (( i++ ))
+ (( i++ ))
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ mkdir -p reports/192.168.1.10/misc/.objects
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ which awk
++ printf '%*s' 12 ''
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filename=cisco-configs.awk
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ case "${target_file}" in
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ cat -n
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ which awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ basename reports/10.10.10.10/fortinet/fg-testing-config
++ IFS=,
++ which awk
+ newline
++ printf '%*s' 12 ''
++ echo 203.0.113.25
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ false == true ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ true == true ]]
                ' reports/192.168.1.10/misc/fw1.cfg
+ newline
+ local 'indent=            '
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i < count ))
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ return 0
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ newline
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ local count=1
+ (( i = 0 ))
+ configs_objects
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ grep -F 192.168.1.10
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
 network-object host 192.168.2.12 ]]
+ local search_pattern
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ which awk
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ sed '/^[[:space:]]*$/d'
++ IFS=,
++ echo 198.51.100.75
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
++ echo 203.0.113.25
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ which awk
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ local parent_dir=reports/10.10.10.10/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fg-campus-core.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ true == true ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ print '{
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.suU2mHqa1k/network-extract--fg-campus-core.cfg.console
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/10.10.10.10/misc/fw3
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ result=0
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n {
+ local awk_bin=/usr/bin/awk
  "vendor": "cisco",
+ newline 2
  "model": "",
  "version": "",
  "domain": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": ""
}

interface Vlan20
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 ip address 192.168.1.10 255.255.255.0 ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local count=2
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ echo
+ (( i++ ))
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ (( i < count ))
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
++ printf '%*s' 12 ''
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ local awk_bin=/usr/bin/awk
+ local search_pattern
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline 2
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'indent=            '
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ result=0
+ echo
+ result=0
+ exit 0
+ local count=1
+ exit 0
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XNeYuniOQD ]]
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zGQfsHfZXb ]]
+ echo
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XNeYuniOQD
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zGQfsHfZXb
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ newline
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw3.cfg
++ printf '%*s' 12 ''
++ echo reports/10.10.10.10/misc/fw3.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ cut -d/ -f2
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ return 0
+ [[ true == true ]]
+ newline 2
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ local count=2
+ configs_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ newline
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ echo
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }
+ (( i++ ))

                    # Skip blank lines
+ (( i < count ))
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
                    /^{$/            { in_json_header = 1; next }
+ cat -n reports/192.168.1.10/misc/switch1.conf
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ grep -F 10.10.10.10
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i++ ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ configs_objects
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/misc/.objects
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local parent_dir=reports/192.168.2.12/misc
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ local count=1
+ print '{
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console ]]
  "model": "",
  "version": "",
+ echo
+ case "${target_file}" in
  "domain": "",
  "hostname": ""
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw1.cfg.console
}
+ (( i++ ))

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ (( i < count ))
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'

object network External-Failover
 host 198.51.100.75
+ sed '1{/^[[:space:]]*$/d;}'
 description Secondary outbound route for edge'
+ configs_objects
++ basename reports/192.168.2.12/misc/fw1
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'extracted_configuration={
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
+ newline
 description Secure NAT boundary for cloud access'
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i++ ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ local parent_dir=reports/192.168.1.10/misc
++ dirname reports/192.168.1.10/misc/switch1.conf
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ case "${target_platform}" in
+ (( i < count ))
+ print '{
+ cat -n reports/203.0.113.25/misc/fw3.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ -n {
                  (in_json_header == 1) { next }
  "vendor": "cisco",
                  /^[^[:space:]]/ {
  "model": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "version": "",
                    blk = $0;
  "domain": "",
                    next;
  "hostname": ""
                  }
}
                  {

                    blk = blk divisor " " $0;
object-group network Krypton-Cloud
                  }
 description Cloud-facing external nodes
                  END {
 network-object host 198.51.100.75
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object host 203.0.113.25
                  }

++ basename reports/192.168.1.10/misc/fw3
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
                ' reports/10.10.10.10/misc/fw3.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ sed '1{/^[[:space:]]*$/d;}'
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local search_pattern
+ grep -F 10.10.10.10
+ newline 2
+ result=0
+ exit 0
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Q3nis7oT5 ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Q3nis7oT5
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ local parent_dir=reports/192.168.1.10/misc
++ echo reports/192.168.2.12/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ (( i < count ))
++ basename reports/192.168.1.10/misc/switch1
+ local search_pattern
+ return 0
+ [[ true == true ]]
++ cut -d/ -f2
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console ]]
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ configs_objects
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo reports/192.168.1.10/misc/fw3.cfg
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ cut -d/ -f2
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local search_pattern
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ search_pattern=192.168.2.12
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ case "${target_file}" in
+ mkdir -p reports/192.168.2.12/misc/.objects
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ configs_objects
+ cat -n
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ echo reports/192.168.1.10/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ case "${target_file}" in
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fg-testing-config.cfg.console
+ configs_objects
++ basename reports/203.0.113.25/misc/fw3
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ local parent_dir=reports/198.51.100.75/misc
+ grep -F 192.168.2.12
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ basename reports/198.51.100.75/misc/fw1
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.deB1pkZ1T3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.deB1pkZ1T3
+ local parent_dir=reports/203.0.113.25/misc
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
++ basename reports/203.0.113.25/misc/fw1
+ grep -F 192.168.1.10
++ echo reports/203.0.113.25/misc/fw3.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mb6kJU4uwI/network-extract--fw3.cfg.console
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ local search_pattern
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ grep -F 192.168.1.10
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ cat -n
++ echo reports/198.51.100.75/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ result=0
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ exit 0
+ newline
++ echo reports/203.0.113.25/misc/fw1.cfg
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BblqIKSUvI ]]
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BblqIKSUvI
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ search_pattern=198.51.100.75
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ cat -n
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4qNaPpEN8v/network-extract--fw1.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ newline
+ local count=1
+ grep -F 198.51.100.75
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
                    in_json_header = 0;
                    blk = "";
                  }
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ newline
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ local count=1
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ (( i = 0 ))
                ' reports/203.0.113.25/misc/fw1.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 203.0.113.25
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--fw3.cfg.console
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ sed '/^[[:space:]]*$/d'
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BbpryHl5lw ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BbpryHl5lw
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HZtPJ3BnWX/network-extract--switch1.conf.console
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ result=0
+ newline
+ exit 0
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Baa3Phbd5v ]]
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Baa3Phbd5v
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uua9BRIUxQ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uua9BRIUxQ
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ return 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iA7wu3k0yr/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CQmFNHpm2u ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CQmFNHpm2u
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zSt3KSiZE/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BgVxEepMA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BgVxEepMA
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My4Nxggdue ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My4Nxggdue
