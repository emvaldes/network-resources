+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xI1BSLxRDE
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xI1BSLxRDE
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GV5eb6dkMA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GV5eb6dkMA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6i8v2mlI1M
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6i8v2mlI1M
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+++ echo -n devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
+ alias parse-cisco=main
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ logger =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A87dIearon
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A87dIearon
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ [[ config =~ ^(config|c)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(export|r)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ config =~ ^(extract|x)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ config =~ ^(logger|l)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ config =~ ^(search|s)$ ]]
++ mkdir -p logs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ tr -d '\r'
++ alias serialize-object=configs_objects
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ export console_location=console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ console_location=console
+ [[ true == true ]]
++ mkdir -p console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ script_filename=network-extract.shell
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ newline
+ network_extract__console=console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ touch console/network-extract.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --platform=cisco
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
+ [[ 6 -eq 0 ]]
++ export actions_logfile=console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -n '' ]]
+ [[ cfg == \c\f\g ]]
+ readonly __NETWORK_EXTRACT__=1
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ __NETWORK_EXTRACT__=1
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --verbose
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bnWHR1bdCC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bnWHR1bdCC
++ command -v -- ./scripts/network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++++ basename ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ dirname -- ./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z .cache/ips.list ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(platform|p)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ [[ config == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ grep -v '^#'
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias serialize-object=configs_objects
++ which awk
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ export console_location=console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ IFS==
+ read -r key value
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
+ script_filename=network-extract.shell
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ touch console/network-extract.console
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export project_status=run.done
+ echo
++ project_status=run.done
+ (( i++ ))
++ touch run.done
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bEDte5kxfG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bEDte5kxfG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+++ base64
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++++ basename ./scripts/devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
+++ echo -n devops-resources.shell
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias parse-listings--helper=parse_listings__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ which awk
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ alias parse-cisco=main
++ grep -v '^\s*$'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local first_search_entry=10.0.0.1
+ touch console/network-extract.console
+ local last_search_entry=203.0.113.25
++ IFS=,
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ newline
+ local count=1
+ [[ -n '' ]]
+ (( i = 0 ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ which awk
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
++ export project_status=run.done
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console ]]
++ project_status=run.done
+ case "${target_file}" in
++ touch run.done
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ echo -e --search=.cache/ips.list
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTRPqh1Axm
++ export targets_logfile=.cache/targets.jobs
+ newline
++ targets_logfile=.cache/targets.jobs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTRPqh1Axm
+ local count=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ export 'nl=\n'
+ nl='\n'
+ (( i++ ))
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ -n '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ case "${target_file}" in
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ [[ 5 -lt 4 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--access-sw1-west.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias detect-vendor=detect_vendor
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
++ alias exit-error=exit_error
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias list-file=list_file
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+++ base64
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xI1BSLxRDE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xI1BSLxRDE
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ output_dir=.cache/resources/cisco
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(export|r)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export jobs_location=jobs
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ command -v -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
++ echo -e --verbose
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
++ dirname -- ./scripts/network-extract.shell

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ alias parse-cisco=main
++ export console_location=console
+ [[ config =~ ^(config|c)$ ]]
++ console_location=console
++ mkdir -p console
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ config =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.1.11'
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ tr -d '\r'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^\s*$'
+ newline 2
++ grep -v '^#'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ mktemp -d
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ which awk
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PQPxH03W42
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PQPxH03W42
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ export 'nl=\n'
+ nl='\n'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ source ./scripts/devops-resources.shell
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ false == true ]]
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console ]]
++ alias detect-vendor=detect_vendor
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
++ alias exit-error=exit_error
++ echo -e --search=.cache/ips.list
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
+ read -r key value
+++ base64
+ local 'indent=            '
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++++ basename ./scripts/devops-resources.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console ]]
+ [[ search =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--branch-isr-02.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ result=0
++ alias network-extract--helper=network_extract__helper
+ exit 0
+ source ./scripts/configs-objects.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GV5eb6dkMA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GV5eb6dkMA
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
+ [[ config =~ ^(console|o)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ config =~ ^(export|r)$ ]]
}

version 12.2
hostname campus-sw-access01

+ [[ config =~ ^(extract|x)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ [[ config =~ ^(logger|l)$ ]]
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ result=0
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n {
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ IFS==

+ read -r key value
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ echo -e --verbose
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=2
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ echo
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ extract =~ ^(search|s)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ extract == \h\e\l\p ]]
+ set -euo pipefail
+ [[ extract == \d\e\b\u\g ]]
+ [[ true == true ]]
+ export LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ LC_ALL=C
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^\s*$'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 6 -eq 0 ]]
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export project_status=run.done
++ project_status=run.done
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console --verbose
++ touch run.done
+ oIFS=' 	
++ grep -v '^#'
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ which awk
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ newline
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ local count=1
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ false == true ]]
+ newline
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_file}" in
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DJJHhqQoao
+ local count=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DJJHhqQoao
+ (( i = 0 ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i++ ))
+ export 'nl=\n'
+ (( i < count ))
+ nl='\n'
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ source ./scripts/devops-resources.shell
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(export|r)$ ]]
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+++ base64
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+++ tr -dc a-zA-Z0-9
++ alias print-message=message
++ which awk
++ alias print-newline=newline
++++ basename ./scripts/devops-resources.shell
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--campus-sw-access01.cfg.console
+++ echo -n devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ source ./scripts/configs-objects.shell
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
++ [[ -n '' ]]
+ local count=1
+ (( i = 0 ))
++ readonly __CONFIGS_OBJECTS__=1
+ (( i < count ))
++ __CONFIGS_OBJECTS__=1
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias serialize-object=configs_objects
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ result=0
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ exit 0
++ echo -e --verbose
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6i8v2mlI1M ]]
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6i8v2mlI1M
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ output_dir=.cache/resources/cisco
+ export network_extract__console=console/network-extract.console
+ [[ ! -d .cache/resources/cisco ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
+ IFS==
++ actions_logfile=console/run.console
+ read -r key value
++ touch console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ sed -e '1s|^\(-\)\{1,\}||'
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ tr -d '\r'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge
+ sed '1{/^[[:space:]]*$/d;}'

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10
++ grep -v '^\s*$'

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console --verbose

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
++ grep -v '^#'
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ oIFS=' 	
'
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
+ for xitem in "${@}"
 network-object host 192.0.2.50'
+ IFS==
+ read -r key value
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
++ which awk
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ newline 2
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ (( i = 0 ))
+ local count=17
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
++ mktemp -d
+ [[ true == true ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ [[ -z fortinet ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+++ base64
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ which awk
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0Gnn3xStK3
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0Gnn3xStK3
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ false == true ]]
+ source ./scripts/devops-resources.shell
+ [[ false == true ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console ]]
++ alias detect-vendor=detect_vendor
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
++ alias exit-error=exit_error
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+++ echo -n devops-resources.shell
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export 'nl=\n'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ source ./scripts/devops-helpers.shell
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ printf '%*s' 12 ''
+ alias parse-cisco=main
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console ]]
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ verbose =~ ^(export|r)$ ]]
++ mkdir -p jobs
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ grep -v '^\s*$'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^#'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A87dIearon ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A87dIearon
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --search=.cache/ips.list
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

+ sed '1{/^[[:space:]]*$/d;}'
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
++ export project_status=run.done
 description WAN firewall entry point'
++ project_status=run.done
++ touch run.done
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
+ newline 2
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n '' ]]
+ newline
+ readonly __NETWORK_EXTRACT__=1
+ local count=1
+ __NETWORK_EXTRACT__=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ set -euo pipefail
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ export LC_ALL=C
+ LC_ALL=C
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ which awk
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ config =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local count=1
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KYglHtS1yX
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KYglHtS1yX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export 'nl=\n'
++ [[ -n '' ]]
+ nl='\n'
++ readonly __DEVOPS_HELPERS__=1
+ source ./scripts/devops-resources.shell
++ __DEVOPS_HELPERS__=1
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ alias log-error=log_error
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ local verbose=true
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
+ IFS=' 	
'
++ alias print-message=message
+ [[ -z '' ]]
+ debug=false
++ alias print-newline=newline
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias pause=pause
+ [[ -z '' ]]
+ local export_objects=false
++ alias print-line=print
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias print-file=print_file
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -f .cache/ips.list ]]
++ alias relative-configpath=relative_configpath
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ alias serialize-object=configs_objects
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console ]]
+ [[ extract =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ extract =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local script_filename=fortinet-configs.awk
+ IFS==
+ read -r key value
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bnWHR1bdCC ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bnWHR1bdCC
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ print '{
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console --verbose
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ sed '1{/^[[:space:]]*$/d;}'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
++ which awk
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline 2
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ [[ logger == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n '' ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ set -euo pipefail
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ export project_status=run.done
+ (( i < count ))
+ echo
++ project_status=run.done
+ (( i++ ))
+ (( i < count ))
++ touch run.done
++ mktemp -d
++ echo -e --config=configs/misc/fw3.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.giXLLqm4P2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.giXLLqm4P2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ base64
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
++++ basename ./scripts/devops-resources.shell
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ tr -d '\r'
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
+ local SCRIPT_DIR=./scripts
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local script_filename=fortinet-configs.awk
++ mkdir -p logs
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^\s*$'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^#'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-branch-vpn-01.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
++ which awk
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+++ echo -n devops-resources.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
+ [[ extract =~ ^(config|c)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ [[ extract =~ ^(console|o)$ ]]
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ extract =~ ^(export|r)$ ]]
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

+ [[ extract =~ ^(extract|x)$ ]]
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ local extract_location=.cache/resources/misc/fw3.cfg
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ [[ extract =~ ^(logger|l)$ ]]
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ export jobs_location=jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ jobs_location=jobs
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ mkdir -p jobs
  "hostname": "fg-campus-core"
+ [[ extract =~ ^(search|s)$ ]]
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
+ source ./scripts/devops-helpers.shell
 edit "Shield-WiFi"
+ [[ extract == \h\e\l\p ]]
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ [[ extract == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
 next
+ [[ extract == \d\r\y\-\r\u\n ]]
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
+ for xitem in "${@}"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
++ readonly __DEVOPS_HELPERS__=1
 next
+ IFS==
end'
+ read -r key value
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
++ alias network-configs--helper=network_configs__helper
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ exit 0
+ echo
++ alias network-extract--helper=network_extract__helper
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bEDte5kxfG ]]
+ (( i++ ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bEDte5kxfG
+ source ./scripts/configs-objects.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
++ alias serialize-object=configs_objects
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ alias parse-cisco=main
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ -n .cache/resources/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
++ printf '%*s' 12 ''
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ newline
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ message '                configs/fortinet/fg-testing-config.cfg'
+ (( i < count ))
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ echo
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
++ dirname .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-campus-core.cfg.console
++ echo -e --verbose
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ search =~ ^(config|c)$ ]]
+ result=0
+ [[ -n {
+ [[ search =~ ^(console|o)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ search =~ ^(export|r)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ [[ search =~ ^(extract|x)$ ]]
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local SCRIPT_DIR=./scripts
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filename=cisco-configs.awk
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(config|c)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ verbose =~ ^(console|o)$ ]]
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ [[ verbose =~ ^(export|r)$ ]]
end ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -en '{
+ [[ verbose =~ ^(logger|l)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ verbose =~ ^(platform|p)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ [[ verbose =~ ^(search|s)$ ]]
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ [[ verbose == \h\e\l\p ]]
end'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ result=0
+ IFS=' 	
'
+ exit 0
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTRPqh1Axm ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTRPqh1Axm
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+++ echo -n devops-resources.shell
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline 2
+ local count=2
+ (( i = 0 ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ local target_config=configs/misc/switch1.conf
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ echo
+ [[ config =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ alias network-extract--helper=network_extract__helper
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ source ./scripts/configs-objects.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
++ IFS=,
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --platform=cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console ]]
+ [[ 6 -eq 0 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fg-testing-config.cfg.console
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ echo -e --search=.cache/ips.list
++ dirname .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PQPxH03W42 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PQPxH03W42
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local SCRIPT_PATH=./scripts/network-extract.shell
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ echo -e --config=configs/misc/switch3.conf
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ newline 2
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=2
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ which awk
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
++ tr -d '\r'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ declare -a execute__netwowrk_extract
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console ]]
++ grep -v '^\s*$'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ grep -v '^#'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ true == true ]]
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw1.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ result=0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DJJHhqQoao ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DJJHhqQoao
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/switch1.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline 2
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console ]]
++ which awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0Gnn3xStK3 ]]
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0Gnn3xStK3
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
++ dirname .cache/resources/misc/switch3.conf
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch1.conf.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KYglHtS1yX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KYglHtS1yX
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d1V93WCxeB/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.giXLLqm4P2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.giXLLqm4P2
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ mktemp -d
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kz1vTYXmGr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kz1vTYXmGr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7xEuzcTRsx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7xEuzcTRsx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ -n '' ]]
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ set -euo pipefail
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iWVJgfWxhj
++ export actions_logfile=console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iWVJgfWxhj
++ actions_logfile=console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.frSwXiPEiy
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.frSwXiPEiy
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias print-line=print
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias system-metrics=system_metrics
++ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ export actions_logfile=console/run.console
+ export LC_ALL=C
++ actions_logfile=console/run.console
+ LC_ALL=C
++ touch console/run.console
++ mktemp -d
++ mktemp -d
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m1IFFU9EtB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m1IFFU9EtB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KGopsGiCBc
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KGopsGiCBc
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ -n '' ]]
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
+ readonly __NETWORK_EXTRACT__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -n '' ]]
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ __NETWORK_EXTRACT__=1
++ [[ -n '' ]]
+ export LC_ALL=C
+ LC_ALL=C
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias detect-vendor=detect_vendor
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+ export LC_ALL=C
+ LC_ALL=C
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ export targets_location=targets
++ targets_location=targets
++ alias log-info=log_info
++ export targets_logfile=.cache/targets.jobs
++ alias list-file=list_file
++ targets_logfile=.cache/targets.jobs
++ alias log-warn=log_warn
++ alias print-message=message
++ alias log-error=log_error
++ alias print-newline=newline
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8xU2aar0t
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8xU2aar0t
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ export console_location=console
+ export 'nl=\n'
++ console_location=console
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
+ nl='\n'
++ LC_ALL=C
++ mkdir -p console
+ source ./scripts/devops-resources.shell
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ default_devices=devices.list
++ [[ -n '' ]]
++ export default_matrix=matrix.json
++ export default_matrix=matrix.json
++ mktemp -d
++ default_matrix=matrix.json
++ default_matrix=matrix.json
++ declare -gr __DEVOPS_RESOURCES__=1
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ [[ 5 -lt 4 ]]
++ mkdir -p logs
++ mkdir -p logs
++ mktemp -d
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export console_location=console
++ alias log-error=log_error
++ console_location=console
++ alias log-info=log_info
++ mkdir -p console
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vfw5R52eG4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vfw5R52eG4
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EQwMlNZMmX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EQwMlNZMmX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export actions_logfile=console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ actions_logfile=console/run.console
+ export 'nl=\n'
++ export actions_logfile=console/run.console
+ nl='\n'
+ export 'nl=\n'
++ touch console/run.console
+ nl='\n'
++ actions_logfile=console/run.console
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ touch console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ export jobs_location=jobs
++ declare -gr __DEVOPS_RESOURCES__=1
++ jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ mkdir -p jobs
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ export jobs_location=jobs
++ alias warning-message=warning
++ jobs_location=jobs
++ alias warning-message=warning
++ export LC_ALL=C
+++ echo -n devops-resources.shell
++ LC_ALL=C
++ export LC_ALL=C
++ mkdir -p jobs
++ LC_ALL=C
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+++ base64
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ alias parse-listings--helper=parse_listings__helper
++ export project_status=run.done
++ project_status=run.done
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ touch run.done
++ export jobs_location=jobs
++ jobs_location=jobs
++ export jobs_location=jobs
++ mkdir -p jobs
++ jobs_location=jobs
++ export console_location=console
++ export console_location=console
++ mkdir -p jobs
++ console_location=console
++ console_location=console
++ alias network-configs--helper=network_configs__helper
++ mkdir -p console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ mkdir -p logs
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ mkdir -p console
++ mkdir -p console
++ [[ -n '' ]]
++ export targets_location=targets
++ export targets_location=targets
++ readonly __CONFIGS_OBJECTS__=1
++ targets_location=targets
++ __CONFIGS_OBJECTS__=1
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ targets_logfile=.cache/targets.jobs
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ alias serialize-object=configs_objects
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOnaoqDmj0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOnaoqDmj0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ mktemp -d
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+++ base64
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
++ export project_status=run.done
+ script_filename=network-extract
++ project_status=run.done
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
++ touch run.done
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.phJ3a2WubN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.phJ3a2WubN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ echo -n devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+++ echo -n devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ set -euo pipefail
+ export LC_ALL=C
++ alias print-message=message
+ LC_ALL=C
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ -n '' ]]
++ alias relative-configpath=relative_configpath
++ export jobs_location=jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ readonly __NETWORK_EXTRACT__=1
++ jobs_location=jobs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ __NETWORK_EXTRACT__=1
++ mkdir -p jobs
+ set -euo pipefail
++ alias system-metrics=system_metrics
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias validate-address=validate_address
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS__=1
++ nl='\n'
++ __DEVOPS_HELPERS__=1
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ [[ 5 -lt 4 ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export project_status=run.done
++ export logs_location=logs
++ logs_location=logs
++ project_status=run.done
++ mkdir -p logs
++ touch run.done
++ alias parse-listings--helper=parse_listings__helper
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
+ source ./scripts/configs-objects.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pepaa8cgjh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ __CONFIGS_OBJECTS__=1
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
+ oIFS=' 	
'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias serialize-object=configs_objects
++ export targets_location=targets
++ targets_location=targets
+ [[ 7 -eq 0 ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e01pzkihvw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias serialize-object=configs_objects
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tFOIDc2mrk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tFOIDc2mrk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMEOa8mLRi
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMEOa8mLRi
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
++ alias exit-error=exit_error
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ alias log-error=log_error
++++ basename ./scripts/devops-resources.shell
+++ base64
++++ basename ./scripts/devops-resources.shell
++ alias log-info=log_info
++ alias log-warn=log_warn
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ alias print-message=message
++ alias print-newline=newline
++ alias list-file=list_file
++ alias pause=pause
+++ base64
++ export console_location=console
++ export actions_logfile=console/run.console
++ console_location=console
++ actions_logfile=console/run.console
++ mkdir -p console
++ touch console/run.console
+++ base64
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ alias log-error=log_error
++ alias print-line=print
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias print-message=message
+++ echo -n devops-resources.shell
++ alias relative-configpath=relative_configpath
++ alias print-newline=newline
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias pause=pause
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias print-line=print
++ alias system-metrics=system_metrics
+ touch console/network-extract.console
+ touch console/network-extract.console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(export|r)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias validate-address=validate_address
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias warning-message=warning
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ search =~ ^(search|s)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
++ export logs_location=logs
+ [[ search == \h\e\l\p ]]
++ logs_location=logs
+ [[ search == \d\e\b\u\g ]]
++ export LC_ALL=C
+ [[ search == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
++ LC_ALL=C
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export 'nl=\n'
++ nl='\n'
+ read -r key value
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ default_matrix=matrix.json
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ logs_location=logs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ -n '' ]]
++ alias network-configs--helper=network_configs__helper
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
++ alias network-configs--helper=network_configs__helper
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias serialize-object=configs_objects
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
++ mktemp -d
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs
+ export logs_location=logs
+ alias parse-cisco=main
+ logs_location=logs
+ mkdir -p logs
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ logs_location=logs
+ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r7e6e0whoz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ oIFS=' 	
'
+ [[ -n '' ]]
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ __NETWORK_EXTRACT__=1
+ IFS==
+ read -r key value
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ oIFS=' 	
'
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export jobs_location=jobs
+ mkdir -p logs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ mktemp -d
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export project_status=run.done
++ project_status=run.done
++ export targets_location=targets
++ targets_location=targets
++ touch run.done
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VbshXp1IqQ
+ script_filename=network-extract.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VbshXp1IqQ
+ script_filename=network-extract
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export 'nl=\n'
+ nl='\n'
+ touch console/network-extract.console
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ script_filename=network-extract
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias list-file=list_file
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ touch console/network-extract.console
++ alias log-error=log_error
+ [[ config =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ config =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PNw3WX4FvE
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hGi6C8zybi
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PNw3WX4FvE
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hGi6C8zybi
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ base64
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-info=log_info
++ alias log-error=log_error
++ mkdir -p logs
++ alias log-warn=log_warn
++ export targets_location=targets
++ alias log-info=log_info
++ export console_location=console
++ targets_location=targets
++ alias print-message=message
++ alias log-warn=log_warn
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-newline=newline
++ alias print-message=message
++ console_location=console
++ alias print-newline=newline
++ mkdir -p console
++++ basename ./scripts/devops-resources.shell
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(export|r)$ ]]
++ export 'nl=\n'
++ export default_addresses=ips.list
++ nl='\n'
++ default_addresses=ips.list
++ export default_addresses=ips.list
++ export default_devices=devices.list
+ [[ search =~ ^(extract|x)$ ]]
++ default_devices=devices.list
++ default_addresses=ips.list
++ export default_matrix=matrix.json
++ export default_devices=devices.list
++ default_matrix=matrix.json
++ default_devices=devices.list
++ export cache_location=.cache
++ export default_matrix=matrix.json
+++ tr -dc a-zA-Z0-9
++ cache_location=.cache
++ default_matrix=matrix.json
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ export logs_location=logs
++ mkdir -p logs
++ logs_location=logs
++ mkdir -p logs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.covspconyf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pepaa8cgjh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console --export --verbose
+++ echo -n devops-resources.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e01pzkihvw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yb83fioilx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console --export --verbose
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0plgpgcakd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ oIFS=' 	
'
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
+ IFS==
++ actions_logfile=console/run.console
+ read -r key value
+ IFS==
++++ basename ./scripts/devops-resources.shell
+ read -r key value
++ touch console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ mkdir -p jobs
++ [[ -n '' ]]
+ [[ extract =~ ^(console|o)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias serialize-object=configs_objects
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+++ echo -n devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export project_status=run.done
++ project_status=run.done
++ echo -e --platform=cisco
++ alias parse-listings--helper=parse_listings__helper
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ alias network-extract--helper=network_extract__helper
++ mkdir -p console
++ mkdir -p console
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias serialize-object=configs_objects
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list
+ export network_extract__console=console/network-extract.console
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ network_extract__console=console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ touch console/network-extract.console
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ -n '' ]]
+ IFS==
+ read -r key value
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ [[ platform =~ ^(config|c)$ ]]
+ LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch1.conf
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ [[ 7 -eq 0 ]]
+ network_extract__console=console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7ftk3o0lod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ touch console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.w3539wxh6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FpjGvD4Z4q
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FpjGvD4Z4q
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ oIFS=' 	
+ readonly __NETWORK_EXTRACT__=1
'
+ export 'nl=\n'
+ __NETWORK_EXTRACT__=1
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ set -euo pipefail
+ IFS==
+ read -r key value
+ export LC_ALL=C
++++ basename ./scripts/devops-resources.shell
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++++ basename ./scripts/devops-resources.shell
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(config|c)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias print-message=message
+ [[ config =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export project_status=run.done
++ alias pause=pause
+ [[ config =~ ^(platform|p)$ ]]
++ project_status=run.done
+++ tr -dc a-zA-Z0-9
++ touch run.done
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
++ alias print-line=print
++ echo -e --platform=cisco
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
+ for xitem in "${@}"
++ LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
++ export 'nl=\n'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ nl='\n'
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ for xitem in "${@}"
++ export default_devices=devices.list
++ default_devices=devices.list
+ IFS==
+ read -r key value
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ mkdir -p logs
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
+++ echo -n devops-resources.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ export targets_location=targets
++ mkdir -p jobs
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BEXHnjegTx
++ alias network-extract--helper=network_extract__helper
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BEXHnjegTx
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/configs-objects.shell
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias serialize-object=configs_objects
++ [[ 5 -lt 4 ]]
++ alias serialize-object=configs_objects
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++++ basename ./scripts/devops-resources.shell
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+++ base64
+ alias parse-cisco=main
++ alias log-info=log_info
++ alias log-warn=log_warn
+ alias parse-cisco=main
++ alias print-message=message
++ alias print-newline=newline
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias pause=pause
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias print-line=print
+ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export 'nl=\n'
+ local target_platform=cisco
++ nl='\n'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export default_addresses=ips.list
+ [[ extract =~ ^(console|o)$ ]]
++ default_addresses=ips.list
+ [[ extract =~ ^(console|o)$ ]]
++ export default_devices=devices.list
+ [[ extract =~ ^(export|r)$ ]]
++ default_devices=devices.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export default_matrix=matrix.json
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --export
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(search|s)$ ]]
++ export console_location=console
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
++ console_location=console
++ mkdir -p console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ search =~ ^(config|c)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list
+ readonly __NETWORK_EXTRACT__=1
+ [[ search == \h\e\l\p ]]
+ __NETWORK_EXTRACT__=1
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ set -euo pipefail
+ IFS==
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ local target_platform=cisco
++ readonly __DEVOPS_HELPERS__=1
+ [[ platform =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS__=1
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ source ./scripts/configs-objects.shell
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(search|s)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ extract =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
++ __CONFIGS_OBJECTS__=1
+ [[ export == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ script_filename=network-extract
+ [[ extract == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export network_extract__console=console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
+ read -r key value
+ touch console/network-extract.console
++ alias serialize-object=configs_objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
+ read -r key value
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ mktemp -d
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ echo -n devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ export jobs_location=jobs
++ __DEVOPS_HELPERS__=1
++ jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ export =~ ^(config|c)$ ]]
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ source ./scripts/configs-objects.shell
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo -e --platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias serialize-object=configs_objects
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O7zrKOe4W1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O7zrKOe4W1
+ alias parse-cisco=main
+ [[ 7 -eq 0 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r7e6e0whoz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ -z x ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ export logs_location=logs
+ logs_location=logs
+ IFS==
+ touch console/network-extract.console
+ read -r key value
++ alias exit-error=exit_error
+ mkdir -p logs
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ oIFS=' 	
+ export network_extract__console=console/network-extract.console
'
+ network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ touch console/network-extract.console
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export console_location=console
++ console_location=console
++ alias pause=pause
++ mkdir -p console
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export project_status=run.done
++ alias warning-message=warning
++ project_status=run.done
++ touch run.done
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
++ echo -e --platform=fortinet
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2xoodoa6k9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console --export --verbose
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0plgpgcakd/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console --export --verbose
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ oIFS=' 	
'
+ [[ platform =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ actions_logfile=console/run.console
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
++ touch console/run.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ logger == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ search =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v7vvos7tlf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console --export --verbose
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+++ base64
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++++ basename ./scripts/devops-resources.shell
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ export console_location=console
++ console_location=console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ echo -e --export
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ mktemp -d
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ platform == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ tr -d '\r'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l1CTg98fAI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l1CTg98fAI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
+ [[ config =~ ^(config|c)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ local target_config=.cache/resources/misc/fw1.cfg
++ alias log-warn=log_warn
+ [[ config =~ ^(console|o)$ ]]
++ alias print-message=message
+ [[ config =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config == \d\e\b\u\g ]]
++ alias print-line=print
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RRdtOlbKzN
++ grep -v '^#'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RRdtOlbKzN
++ alias warning-message=warning
+ [[ search =~ ^(platform|p)$ ]]
++ export LC_ALL=C
+ [[ logger =~ ^(search|s)$ ]]
++ LC_ALL=C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(search|s)$ ]]
++ export 'nl=\n'
+ export 'nl=\n'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list
++ nl='\n'
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ nl='\n'
++ export default_addresses=ips.list
+ [[ search == \d\e\b\u\g ]]
++ default_addresses=ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
++ export default_devices=devices.list
+ source ./scripts/devops-resources.shell
+ [[ search == \v\e\r\b\o\s\e ]]
++ default_devices=devices.list
+ for xitem in "${@}"
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ IFS==
+ read -r key value
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ [[ -n '' ]]
++ mkdir -p logs
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ extract =~ ^(extract|x)$ ]]
+ local export_objects=true
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ base64
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++++ basename ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ export project_status=run.done
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ project_status=run.done
++ export 'nl=\n'
++ nl='\n'
++ touch run.done
+++ tr -dc a-zA-Z0-9
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ touch console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ export jobs_location=jobs
+ [[ logger == \d\r\y\-\r\u\n ]]
++ jobs_location=jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
+++ echo -n devops-resources.shell
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ extract == \h\e\l\p ]]
+ export LC_ALL=C
+ [[ extract == \d\e\b\u\g ]]
+ LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ tr -d '\r'
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ export targets_location=targets
++ targets_location=targets
+ [[ logger =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ export targets_logfile=.cache/targets.jobs
+ local first_search_entry=10.0.0.1
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export jobs_location=jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
++ jobs_location=jobs
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ read -r key value
++ mkdir -p jobs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
++ grep -v '^#'
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ source ./scripts/configs-objects.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ] ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ local count=1
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ ((  count == 0  ))
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ 7 -eq 0 ]]
+ IFS==
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.covspconyf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console --export --verbose
+ echo
+ oIFS=' 	
'
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
+ local 'prompt_message=Enter configuration file to be parsed: '
++ console_location=console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ alias parse-cisco=main
++ mkdir -p console
+ [[ -z cisco ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(logger|l)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+++ base64
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
++++ basename ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uwMlbrjtjI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uwMlbrjtjI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
++ export console_location=console
+ source ./scripts/devops-resources.shell
++ console_location=console
++ mkdir -p console
++ echo -e --export
++ [[ -n '' ]]
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list
+ [[ extract =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --export
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias list-file=list_file
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias log-error=log_error
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++ alias log-info=log_info
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias pause=pause
++ touch console/run.console
++ alias print-line=print
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+++ echo -n devops-resources.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias validate-address=validate_address
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias warning-message=warning
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ LC_ALL=C
+ local count=1
++ export 'nl=\n'
+ ((  count == 0  ))
++ nl='\n'
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ [[ -n '' ]]
++ export default_addresses=ips.list
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
++ default_addresses=ips.list
++ readonly __DEVOPS_HELPERS__=1
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ __DEVOPS_HELPERS__=1
++ export default_devices=devices.list
++ default_devices=devices.list
++ [[ 5 -lt 4 ]]
+ [[ -n '' ]]
++ export default_matrix=matrix.json
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ default_matrix=matrix.json
+ newline
++ export cache_location=.cache
++ cache_location=.cache
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
++ export logs_location=logs
++ logs_location=logs
+ (( i = 0 ))
+ (( i < count ))
++ mkdir -p logs
++ echo -e --platform=cisco
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ mktemp -d
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list
+ local target_platform=cisco
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ mktemp -d
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ export project_status=run.done
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ project_status=run.done
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
++ touch run.done
+ [[ logger == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
++ echo -e --verbose
++ echo -e --verbose
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kuysybervp/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
++ export jobs_location=jobs
++ jobs_location=jobs
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
++ mkdir -p jobs
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBRLE2QXhC
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBRLE2QXhC
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4R9XxmZX6l
+ [[ platform =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4R9XxmZX6l
+ [[ logger == \h\e\l\p ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger == \d\e\b\u\g ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ for xitem in "${@}"
+ export 'nl=\n'
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ [[ -n '' ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ export targets_location=targets
++ alias detect-vendor=detect_vendor
++ targets_location=targets
++ alias print-newline=newline
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias exit-error=exit_error
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias list-file=list_file
+ [[ export =~ ^(config|c)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ export =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
++ alias system-metrics=system_metrics
++ alias print-message=message
++ alias print-newline=newline
++ alias validate-address=validate_address
++ alias pause=pause
++ alias warning-message=warning
++ alias print-line=print
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias print-file=print_file
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias relative-configpath=relative_configpath
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias system-metrics=system_metrics
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ export =~ ^(logger|l)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ export =~ ^(platform|p)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ export =~ ^(search|s)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ touch console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ local target_platform=cisco
+ local target_platform=cisco
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ export targets_location=targets
++ export console_location=console
+ [[ verbose =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ logger =~ ^(search|s)$ ]]
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ logger == \h\e\l\p ]]
++ mkdir -p console
++ targets_logfile=.cache/targets.jobs
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ platform =~ ^(config|c)$ ]]
+ IFS=' 	
+ [[ verbose =~ ^(export|r)$ ]]
'
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ export console_output=false
+ [[ platform =~ ^(extract|x)$ ]]
+ console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ script_helper=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
+ IFS=' 	
+ search_terms=()
'
+ declare -a search_terms
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ debug=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ dry_run=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ [[ -z '' ]]
+ export console_output=false
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ echo -e --verbose
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ export jobs_location=jobs
++ mkdir -p jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+++ base64
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.krrghcpebj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ echo -n devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ console_output=false
+ [[ -z true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ search =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ oIFS=' 	
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ [[ logger =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ [[ search == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ actions_logfile=console/run.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
++++ basename ./scripts/devops-resources.shell
++ touch console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ [[ export == \d\r\y\-\r\u\n ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+++ echo -n devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ local export_objects=true
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ local target_platform=cisco
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
+ [[ export =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
++ echo -e --export
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export project_status=run.done
+ [[ search =~ ^(config|c)$ ]]
++ project_status=run.done
+ [[ config =~ ^(config|c)$ ]]
++ touch run.done
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --verbose
+ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ touch console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
+ [[ export =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ mktemp -d
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local target_platform=cisco
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.w3539wxh6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export targets_location=targets
+ touch console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
++ targets_location=targets
+ [[ verbose =~ ^(config|c)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ export project_status=run.done
+ debug=false
++ export project_status=run.done
+ [[ -z '' ]]
++ project_status=run.done
+ dry_run=false
+ [[ verbose == \h\e\l\p ]]
+ [[ -z true ]]
++ project_status=run.done
++ touch run.done
+ [[ -z '' ]]
+ export console_output=false
++ touch run.done
+ console_output=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ script_helper=false
+ local verbose=true
+ [[ false == true ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS=' 	
'
+ local export_objects=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ export =~ ^(extract|x)$ ]]
+ debug=false
+ search_terms=()
+ [[ -z '' ]]
+ declare -a search_terms
+ dry_run=false
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ export console_output=false
+ [[ export =~ ^(platform|p)$ ]]
+ console_output=false
++ echo -e --verbose
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
++ echo -e --verbose
+ script_helper=false
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
+ [[ export =~ ^(export|r)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list != *,* ]]
++ mktemp -d
+ mapfile -t search_terms
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(extract|x)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CcIpahMv4F
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOq7IYJOk9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CcIpahMv4F
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOq7IYJOk9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
++ alias pause=pause
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-line=print
++ alias pause=pause
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ alias print-line=print
+++ base64
+ [[ extract =~ ^(logger|l)$ ]]
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++++ basename ./scripts/devops-resources.shell
++ tr -d '\r'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ echo -e --verbose
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export LC_ALL=C
++ default_devices=devices.list
++ LC_ALL=C
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ nl='\n'
++ export logs_location=logs
++ logs_location=logs
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ mkdir -p logs
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export targets_location=targets
++ grep -v '^\s*$'
++ targets_location=targets
+ [[ 7 -eq 0 ]]
+++ tr -dc a-zA-Z0-9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7ftk3o0lod/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ oIFS=' 	
'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ export targets_location=targets
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
++ targets_location=targets
+ IFS==
++ export targets_logfile=.cache/targets.jobs
+ set -euo pipefail
++ targets_logfile=.cache/targets.jobs
+ export LC_ALL=C
+ LC_ALL=C
+ read -r key value
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e7N28bkesX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e7N28bkesX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ grep -v '^#'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
+++ echo -n devops-resources.shell
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ logger =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(logger|l)$ ]]
++ alias print-message=message
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
++ mktemp -d
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-newline=newline
++ echo -e --platform=fortinet
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias pause=pause
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias print-line=print
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias warning-message=warning
+ [[ verbose =~ ^(logger|l)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ verbose =~ ^(export|r)$ ]]
++ LC_ALL=C
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(extract|x)$ ]]
++ export 'nl=\n'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ nl='\n'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export default_addresses=ips.list
+ [[ verbose =~ ^(search|s)$ ]]
++ default_addresses=ips.list
++ export jobs_location=jobs
++ export default_devices=devices.list
++ default_devices=devices.list
++ jobs_location=jobs
++ export jobs_location=jobs
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ verbose == \h\e\l\p ]]
++ jobs_location=jobs
++ mkdir -p jobs
++ export cache_location=.cache
+ [[ verbose == \d\e\b\u\g ]]
++ cache_location=.cache
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ mkdir -p jobs
++ export logs_location=logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ logs_location=logs
+ local verbose=true
++ mkdir -p logs
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ dry_run=false
++ [[ -n '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ verbose == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ console_output=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ -z true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console ]]
'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ debug=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ dry_run=false
+ [[ verbose == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list
+ local verbose=true
+ [[ -z '' ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
+ [[ -z '' ]]
+ export console_output=false
+ dry_run=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console ]]
+ console_output=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z '' ]]
+ [[ -z true ]]
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console ]]
+ [[ false == true ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_helper=false
+ [[ false == true ]]
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ declare -a search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local first_search_entry=10.10.10.10
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+++ base64
+ local first_search_entry=10.0.2.3
+++ base64
++ echo -e --export
++++ basename ./scripts/devops-resources.shell
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
++ tr -d '\r'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ grep -v '^\s*$'
++ export console_location=console
++ console_location=console
+++ echo -n devops-resources.shell
++ mkdir -p console
++ export console_location=console
++ export jobs_location=jobs
++ console_location=console
++ jobs_location=jobs
++ mkdir -p console
++ mkdir -p jobs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bU9NYlQTSm
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bU9NYlQTSm
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ] ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ logger == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ IFS==
++ grep -v '^#'
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ [[ 5 -lt 4 ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ alias detect-vendor=detect_vendor
+ newline
+ local count=1
+ (( i = 0 ))
++ alias exit-error=exit_error
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias list-file=list_file
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/devops-helpers.shell
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
++ alias log-error=log_error
++ [[ -n '' ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ readonly __DEVOPS_HELPERS__=1
++ alias print-newline=newline
+ newline
++ __DEVOPS_HELPERS__=1
+ local count=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias pause=pause
+ __NETWORK_EXTRACT__=1
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias print-line=print
+ set -euo pipefail
++ alias parse-listings--helper=parse_listings__helper
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-file=print_file
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ alias relative-configpath=relative_configpath
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias parse-listings--helper=parse_listings__helper
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias validate-address=validate_address
++ alias network-extract--helper=network_extract__helper
++ alias warning-message=warning
++ export LC_ALL=C
+ source ./scripts/configs-objects.shell
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ [[ -n '' ]]
++ export default_addresses=ips.list
++ readonly __CONFIGS_OBJECTS__=1
++ default_addresses=ips.list
++ __CONFIGS_OBJECTS__=1
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ source ./scripts/configs-objects.shell
++ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(console|o)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(platform|p)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ verbose =~ ^(search|s)$ ]]
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --export
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
++ echo -e --verbose
+ [[ export =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ local export_objects=true
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
++ export console_location=console
++ export actions_logfile=console/run.console
++ console_location=console
++ actions_logfile=console/run.console
++ mkdir -p console
+ output_dir=reports/10.0.0.1/cisco
+ local count=1
++ touch console/run.console
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ ((  count == 0  ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ -z x ]]
+ local verbose=true
+ (( i = 0 ))
+ export logs_location=logs
+ (( i < count ))
+ logs_location=logs
+ IFS=' 	
+ echo
'
+ mkdir -p logs
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -z true ]]
+ readonly __NETWORK_EXTRACT__=1
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ __NETWORK_EXTRACT__=1
+ [[ -z '' ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ export console_output=false
+ set -euo pipefail
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ export =~ ^(extract|x)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ export =~ ^(logger|l)$ ]]
+ dry_run=false
++ echo -e --export
+ [[ -z true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ export =~ ^(search|s)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mktemp -d
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKZBZJTUOR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKZBZJTUOR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ command -v -- ./scripts/network-extract.shell
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
++ alias exit-error=exit_error
+ [[ export =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ echo -e --verbose
+ [[ export =~ ^(console|o)$ ]]
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ touch console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias list-file=list_file
+ [[ export =~ ^(export|r)$ ]]
+ touch console/network-extract.console
+ local export_objects=true
++ alias log-error=log_error
+ [[ export =~ ^(extract|x)$ ]]
++ alias log-info=log_info
+ [[ export =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ export =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias pause=pause
+ IFS==
+ read -r key value
++ alias print-line=print
++ alias print-file=print_file
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias relative-configpath=relative_configpath
++ touch console/run.console
++ export project_status=run.done
++ alias system-metrics=system_metrics
++ project_status=run.done
++ touch run.done
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
++ export project_status=run.done
++ project_status=run.done
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
++ export LC_ALL=C
++ touch run.done
++ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
++ export 'nl=\n'
+ [[ verbose =~ ^(export|r)$ ]]
++ nl='\n'
++ export default_addresses=ips.list
+ [[ verbose =~ ^(extract|x)$ ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ verbose =~ ^(logger|l)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ verbose =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ echo -e --verbose
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ export console_location=console
++ console_location=console
++ grep -v '^\s*$'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1AiRAUdafH
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1AiRAUdafH
++ grep -v '^#'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mkdir -p console
++ [[ -n '' ]]
++ export targets_location=targets
++ targets_location=targets
++ declare -gr __DEVOPS_RESOURCES__=1
++ export project_status=run.done
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ project_status=run.done
++ touch run.done
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias list-file=list_file
++ export targets_location=targets
++ targets_location=targets
++ alias log-error=log_error
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ cfg == \c\f\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e01pzkihvw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ export =~ ^(console|o)$ ]]
++ alias pause=pause
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ export =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console --export --verbose
++ alias print-line=print
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
++ alias print-file=print_file
+ [[ export =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v7vvos7tlf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ search_terms=()
+ oIFS=' 	
+ [[ export == \h\e\l\p ]]
+ declare -a search_terms
+ [[ export == \d\e\b\u\g ]]
'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list != *,* ]]
+ IFS==
+ mapfile -t search_terms
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console --export --verbose
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ oIFS=' 	
'
+ output_dir=reports/10.0.2.3/cisco
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ for xitem in "${@}"
++ default_addresses=ips.list
++ export default_devices=devices.list
+ IFS==
++ default_devices=devices.list
+ read -r key value
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ ! -d reports/10.0.2.3/cisco ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
++ command -v -- ./scripts/network-extract.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+++ base64
++ echo -e --verbose
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
++ export console_location=console
++++ basename ./scripts/devops-resources.shell
++ export targets_location=targets
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]]
+ search_terms=()
+ [[ verbose =~ ^(search|s)$ ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list != *,* ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list != *,* ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ dirname -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
+ mapfile -t search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local verbose=true
+ [[ search =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z true ]]
++ tr -d '\r'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(console|o)$ ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
++ command -v -- ./scripts/network-extract.shell
+ source ./scripts/configs-objects.shell
+++ base64
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export project_status=run.done
++ project_status=run.done
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ IFS==
++ touch run.done
++ __CONFIGS_OBJECTS__=1
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(console|o)$ ]]
++ alias serialize-object=configs_objects
+ [[ search =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias serialize-object=configs_objects
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ tr -d '\r'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ local first_search_entry=172.16.1.6
+ [[ verbose =~ ^(export|r)$ ]]
+ local last_search_entry=172.16.1.6
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^#'
++ tr -d '\r'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+++ echo -n devops-resources.shell
+ export LC_ALL=C
+ LC_ALL=C
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/misc/switch1.conf
++ grep -v '^\s*$'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ debug=false
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ -z '' ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ [[ -z true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ] ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z '' ]]
+ script_helper=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ [[ false == true ]]
+ local first_search_entry=172.31.255.254
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ source ./scripts/devops-helpers.shell
+ local last_search_entry=172.31.255.254
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ [[ true == true ]]
+ ((  count == 0  ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ]'
++ export targets_location=targets
++ targets_location=targets
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias parse-listings--helper=parse_listings__helper
++ mktemp -d
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ network_extract__console=console/network-extract.console
+ local first_search_entry=172.18.1.20
+ script_filename=network-extract
+ touch console/network-extract.console
+ local last_search_entry=172.18.1.20
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ touch console/network-extract.console
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ alias network-extract--helper=network_extract__helper
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ source ./scripts/configs-objects.shell
+ newline
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ] ]]
++ [[ -n '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
++ readonly __CONFIGS_OBJECTS__=1
+ local script_filename=cisco-configs.awk
++ __CONFIGS_OBJECTS__=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias serialize-object=configs_objects
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local count=1
+ [[ -z cisco ]]
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ [[ true == true ]]
+ ((  count == 0  ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
+ [[ -z cisco ]]
++ targets_location=targets
+ (( i < count ))
+ [[ true == true ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ local first_search_entry=192.0.2.50
+ (( i < count ))
+ local last_search_entry=192.0.2.50
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ] ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ config == \h\e\l\p ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ config == \d\e\b\u\g ]]
+ alias parse-cisco=main
++ which awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ __NETWORK_EXTRACT__=1
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ set -euo pipefail
+ read -r key value
+ export LC_ALL=C
+ local script_filename=cisco-configs.awk
+ LC_ALL=C
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ ((  count == 0  ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ mkdir -p logs
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+++ base64
+ (( i = 0 ))
+ (( i < count ))
+ local first_search_entry=10.0.1.2
+ echo
+ local last_search_entry=10.0.1.2
++++ basename ./scripts/devops-resources.shell
+ (( i++ ))
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ 7 -eq 0 ]]
++ export project_status=run.done
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ykzd7pdvpj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ project_status=run.done
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j0KF4jwNWl
++ touch run.done
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j0KF4jwNWl
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2xoodoa6k9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console --export --verbose
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ oIFS=' 	
'
++ alias print-message=message
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ] ]]
+ for xitem in "${@}"
++ alias print-newline=newline
++ tr -d '\r'
+ IFS==
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
++ alias pause=pause
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-configs--ips.list ]'
++ alias print-line=print
+ local count=1
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ base64
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++++ basename ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ grep -v '^\s*$'
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.2.3
++ grep -v '^#'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+++ echo -n devops-resources.shell
++ targets_logfile=.cache/targets.jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m0UtoBiCZX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m0UtoBiCZX
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ touch console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ alias detect-vendor=detect_vendor
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
+ source ./scripts/configs-objects.shell
++ alias log-error=log_error
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ alias parse-listings--helper=parse_listings__helper
++ readonly __CONFIGS_OBJECTS__=1
++ alias log-info=log_info
++ __CONFIGS_OBJECTS__=1
++ alias log-warn=log_warn
+ [[ extract =~ ^(console|o)$ ]]
++ echo 10.10.10.10
++ alias print-message=message
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias serialize-object=configs_objects
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-line=print
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
++ [[ -n '' ]]
+ [[ cfg == \c\f\g ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias system-metrics=system_metrics
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias serialize-object=configs_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ local SCRIPT_DIR=./scripts
++ alias validate-address=validate_address
+ declare -a execute__netwowrk_extract
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -z x ]]
++ export logs_location=logs
++ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
++ mkdir -p logs
+ mkdir -p logs
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ which awk
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ local first_search_entry=172.16.0.5
+ alias parse-cisco=main
+ local count=1
+ local last_search_entry=172.16.0.5
+ [[ extract == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ extract == \d\e\b\u\g ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ echo
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ search =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ search =~ ^(logger|l)$ ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ echo
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
+ (( i++ ))
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ base64
+ read -r key value
++ jobs_location=jobs
++ mkdir -p jobs
++++ basename ./scripts/devops-resources.shell
++ which awk
+++ tr -dc a-zA-Z0-9
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.8v87kjnmwh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console --export --verbose
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
+ script_filename=network-extract.shell
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
++ jobs_location=jobs
+ script_filename=network-extract
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ mkdir -p jobs
+ oIFS=' 	
'
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+++ echo -n devops-resources.shell
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ output_dir=reports/172.18.1.20/cisco
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ ((  count == 0  ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ 7 -eq 0 ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r7e6e0whoz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ echo
+ local count=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console --export --verbose
+ (( i++ ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ export network_extract__console=console/network-extract.console
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ network_extract__console=console/network-extract.console
+ output_dir=reports/192.0.2.50/cisco
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ touch console/network-extract.console
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ oIFS=' 	
+ (( i = 0 ))
++ export console_location=console
+ (( i < count ))
'
++ console_location=console
++ mkdir -p console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ echo -e --platform=cisco
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias parse-listings--helper=parse_listings__helper
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ printf '%*s' 12 ''
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ printf '%*s' 12 ''
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ command -v -- ./scripts/network-extract.shell
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ alias serialize-object=configs_objects
+ local 'indent=            '
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ local 'indent=            '
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local target_platform=cisco
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^\s*$'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(platform|p)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ echo
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ IFS==
+ echo
+ read -r key value
+ [[ 7 -eq 0 ]]
++ export console_location=console
++ dirname -- ./scripts/network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0plgpgcakd/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ grep -v '^#'
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console --export --verbose
++ mkdir -p console
+ oIFS=' 	
'
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kuysybervp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(console|o)$ ]]
++ actions_logfile=console/run.console
+ [[ platform =~ ^(export|r)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ dirname -- ./scripts/network-extract.shell
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ local SCRIPT_DIR=./scripts
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ local script_filename=cisco-configs.awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
++ which awk
++ which awk
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
+ [[ extract =~ ^(config|c)$ ]]
++ project_status=run.done
++ touch run.done
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ logger =~ ^(logger|l)$ ]]
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ logger =~ ^(platform|p)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ -n {
+ [[ logger =~ ^(search|s)$ ]]
  "vendor": "cisco",
version 16.9
  "model": "",
hostname branch-isr-02
  "version": "12.4",

  "domain": "",
interface GigabitEthernet0/0/2
+ [[ logger == \h\e\l\p ]]
  "hostname": "access-sw1-west"
 ip address 10.0.2.3 255.255.255.0
}
+ [[ logger == \d\e\b\u\g ]]
 description Dev VLAN


+ [[ logger == \d\r\y\-\r\u\n ]]
version 12.4
object network Panther-Gateway
hostname access-sw1-west
 host 10.0.2.3
+ [[ logger == \v\e\r\b\o\s\e ]]

object-group network MGMT-ACCESS
+ for xitem in "${@}"
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ IFS==

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
 description Secure outbound concentrator'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.krrghcpebj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ result=0
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n {
+ oIFS=' 	
'
  "vendor": "cisco",
  "model": "",
+ [[ search =~ ^(extract|x)$ ]]
  "version": "16.9",
+ for xitem in "${@}"
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ search =~ ^(logger|l)$ ]]
version 16.9
+ IFS==
hostname branch-isr-02
+ read -r key value

+ [[ search =~ ^(platform|p)$ ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
+ [[ search =~ ^(search|s)$ ]]
 description Secure outbound concentrator ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
+ local count=1
 network-object host 10.10.10.10'
+ newline
+ ((  count == 0  ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
++ export project_status=run.done
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ project_status=run.done

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ touch run.done
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ sed '1{/^[[:space:]]*$/d;}'
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ logger =~ ^(logger|l)$ ]]
 description Dev VLAN

+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ logger == \h\e\l\p ]]
}

+ [[ logger == \d\e\b\u\g ]]
version 16.9
hostname branch-isr-02

+ [[ logger == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ logger == \v\e\r\b\o\s\e ]]

+ (( i++ ))
object network Panther-Gateway
 host 10.0.2.3
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ for xitem in "${@}"
 description Secure outbound concentrator'
+ (( i < count ))
++ echo -e --export
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 172.18.1.20
++ export targets_location=targets
++ targets_location=targets
++ mktemp -d
++ IFS=,
++ echo 192.0.2.50
+ sed '1{/^[[:space:]]*$/d;}'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ config =~ ^(platform|p)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ newline 2
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ which awk
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ [[ export =~ ^(config|c)$ ]]
+++ base64
+ echo
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ local export_objects=true
+ local count=2
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ (( i < count ))
+ local target_platform=cisco
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ IFS==
++++ basename ./scripts/devops-resources.shell
+ read -r key value
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local count=1
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xjGzAVVfIZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xjGzAVVfIZ
+ [[ search =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ export 'nl=\n'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ [[ search =~ ^(logger|l)$ ]]
+ nl='\n'
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ echo
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list
+ source ./scripts/devops-resources.shell
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
++ [[ -n '' ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ config =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
++ echo 10.0.1.2
+ [[ config == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ alias list-file=list_file
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ alias log-error=log_error
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias print-message=message
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local awk_bin=/usr/bin/awk
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
++ alias system-metrics=system_metrics
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+++ echo -n devops-resources.shell
+ [[ export =~ ^(config|c)$ ]]
++ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
++ echo -e --verbose
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
++ [[ -n '' ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ export == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS__=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ extract =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ newline
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ source ./scripts/configs-objects.shell
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ [[ -n '' ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ readonly __CONFIGS_OBJECTS__=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ __CONFIGS_OBJECTS__=1
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ [[ false == true ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ echo -n devops-resources.shell
+ (( i++ ))
+ [[ -n '' ]]
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ newline
+ set -euo pipefail
+ local count=1
+ export LC_ALL=C
+ (( i = 0 ))
+ LC_ALL=C
++ alias serialize-object=configs_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ configs_objects
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ local 'indent=            '
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ alias parse-cisco=main
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z x ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ export logs_location=logs
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ logs_location=logs
+ mkdir -p logs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS__=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ verbose =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias network-configs--helper=network_configs__helper
+ newline
+ IFS=' 	
'
+ local count=1
+ [[ -z '' ]]
+ debug=false
+ (( i = 0 ))
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i < count ))
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ dry_run=false
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z true ]]
++ export jobs_location=jobs
+ [[ -z '' ]]
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
++ jobs_location=jobs
+ export console_output=false
+ [[ config =~ ^(export|r)$ ]]
+ console_output=false
+ [[ cfg == \c\f\g ]]
++ mkdir -p jobs
+ [[ -z true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias network-extract--helper=network_extract__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ [[ extract =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ source ./scripts/configs-objects.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ search_terms=()
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ conf == \c\o\n\f ]]
+ [[ extract == \h\e\l\p ]]
+ declare -a search_terms
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
++ echo -e --verbose
+ [[ extract == \v\e\r\b\o\s\e ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list != *,* ]]
+ IFS==
+ read -r key value
+ mapfile -t search_terms
+ extract_location=reports/172.31.255.254/misc/switch1.conf
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list
+ alias parse-cisco=main
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
++ IFS=,
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.0.1
+ mkdir -p logs
++ echo -e --export
++ echo -e --export
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/10.10.10.10/cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ tr -d '\r'
+ export network_extract__console=console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oNAMPSwVhf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oNAMPSwVhf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ verbose =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ alias exit-error=exit_error

+ [[ verbose =~ ^(console|o)$ ]]
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 192.168.1.11'
+ [[ verbose =~ ^(extract|x)$ ]]
+ result=0
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
  "version": "16.9",
++ alias list-file=list_file
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ verbose == \h\e\l\p ]]
}

+ [[ verbose == \d\e\b\u\g ]]
version 16.9
hostname branch-isr-02

+ [[ verbose == \d\r\y\-\r\u\n ]]
object-group network Lantern-DMZ
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ grep -v '^#'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local 'extracted_configuration={
+ [[ -z '' ]]
  "vendor": "cisco",
  "model": "ASA",
+ export console_output=false
  "version": "9.12(4)",
+ console_output=false
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ [[ -z true ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ -z '' ]]
object-group network Watchtower-DMZ
++ alias validate-address=validate_address
+ script_helper=false
 description Global secure relay
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias warning-message=warning
+ script_filename=network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]]
++ export LC_ALL=C
++ LC_ALL=C
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ basename reports/10.10.10.10/cisco/access-sw1-west
++ export 'nl=\n'
+ network_extract__console=console/network-extract.console
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ touch console/network-extract.console
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
 network-object host 192.0.2.50 ]]
+ search_terms=()
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ print '{
  "vendor": "cisco",
+ [[ platform =~ ^(search|s)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ for xitem in "${@}"

+ [[ platform == \h\e\l\p ]]
version 16.9
hostname branch-isr-02
+ [[ extract =~ ^(config|c)$ ]]

+ IFS==
object-group network Lantern-DMZ
 description Protected but public-facing zone
+ read -r key value
 network-object host 172.18.1.20
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
 network-object host 192.168.1.11'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ extract =~ ^(logger|l)$ ]]
 network-object host 192.168.1.11 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ echo -en '{
+ read -r key value
  "vendor": "cisco",
  "model": "",
+ [[ extract =~ ^(platform|p)$ ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ [[ extract =~ ^(search|s)$ ]]
object-group network Lantern-DMZ
 description Protected but public-facing zone
+ declare -a search_terms
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ extract == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list != *,* ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ platform == \d\r\y\-\r\u\n ]]
'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local first_search_entry=10.0.0.1
+ output_dir=reports/172.16.0.5/cisco
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ dirname reports/172.31.255.254/misc/switch1.conf
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ which awk
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ which awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ local target_platform=fortinet
+ ((  count == 0  ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ platform == \d\e\b\u\g ]]
+ local export_objects=true
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ newline
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ config == \h\e\l\p ]]
+ IFS==
+ (( i = 0 ))
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.2.3
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
++ echo -e --verbose
++ echo -e --verbose
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ ((  count == 0  ))
+ [[ search =~ ^(extract|x)$ ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ search =~ ^(platform|p)$ ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list
+ newline
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ newline
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^\s*$'
++ echo -e --verbose
++ echo -e --platform=cisco
++ grep -v '^#'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -n '' ]]
+ local awk_bin=/usr/bin/awk
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ [[ config =~ ^(config|c)$ ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ output_dir=reports/172.16.1.6/cisco
+ [[ config =~ ^(platform|p)$ ]]
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
++ mktemp -d
++ printf '%*s' 12 ''
+ local first_search_entry=192.168.0.100
+ local last_search_entry=192.168.0.100
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ echo
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ newline
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local first_search_entry=192.168.0.1
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local last_search_entry=192.168.0.1
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ] ]]
+ local 'indent=            '
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local first_search_entry=172.16.1.6
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ local last_search_entry=172.16.1.6
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
++ export console_location=console
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ local count=1
+ local count=1
+ (( i < count ))
++ console_location=console
+ [[ extract =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ IFS==
++ mkdir -p console
+ read -r key value
+ local target_platform=cisco
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ] ]]
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ local verbose=true
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ IFS=' 	
+ local count=1
'
+ local target_config=.cache/resources/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ read -r key value
+ [[ -z '' ]]
+ ((  count == 0  ))
+ debug=false
+ echo
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ IFS==
+ console_output=false
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ [[ -z true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ config =~ ^(export|r)$ ]]
+ search_terms=()
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ config =~ ^(extract|x)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ declare -a search_terms
+ (( i = 0 ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
+ local count=1
+ [[ -z cisco ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ (( i++ ))
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B8yKoohQMq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B8yKoohQMq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --platform=cisco
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
++ echo -e --export
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ command -v -- ./scripts/network-extract.shell
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ tr -d '\r'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ grep -v '^#'
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ platform =~ ^(config|c)$ ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ platform =~ ^(console|o)$ ]]
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ [[ platform =~ ^(export|r)$ ]]
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n {
+ local target_platform=cisco
  "vendor": "cisco",
  "model": "ASA",
++ export jobs_location=jobs
+ [[ platform =~ ^(search|s)$ ]]
  "version": "9.14(3)",
++ jobs_location=jobs
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ platform == \h\e\l\p ]]
}

+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ platform == \d\e\b\u\g ]]

++ mkdir -p jobs
interface GigabitEthernet0/1
 nameif inside
+ [[ cfg == \c\f\g ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
 host 10.0.0.1
 description Core services gateway ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ read -r key value
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ export =~ ^(export|r)$ ]]
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local export_objects=true
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ export =~ ^(extract|x)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ export =~ ^(logger|l)$ ]]
config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
+ [[ logger =~ ^(export|r)$ ]]
 next
+ local SCRIPT_PATH=./scripts/network-extract.shell
end'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ result=0
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ export == \h\e\l\p ]]
+ [[ -n {
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
  "vendor": "fortinet",
+ [[ export == \d\r\y\-\r\u\n ]]
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ export == \v\e\r\b\o\s\e ]]
#hostname="fg-branch-vpn-01"
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ [[ logger =~ ^(search|s)$ ]]
  set comment "QA node in Peter's Lab"
 next
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
+ output_dir=reports/10.0.2.3/misc
++ command -v -- ./scripts/network-extract.shell
+ [[ ! -d reports/10.0.2.3/misc ]]
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=172.16.0.5
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
ASA Version 9.14(3)
hostname perimeter-fw1
+ local last_search_entry=172.16.0.5
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'

++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
object network Stark-Tower
 host 10.0.0.1
+ [[ true == true ]]
 description Core services gateway'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ] ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-configs--ips.list ]'
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ export project_status=run.done
config firewall address
 edit "Spidey-Sandbox"
+ local count=1
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ ((  count == 0  ))
++ project_status=run.done
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ touch run.done
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i < count ))
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.0.100/cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.16.1.6/fortinet
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ newline 2
++ targets_logfile=.cache/targets.jobs
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local export_objects=true
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=2
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
++ mktemp -d
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ local target_platform=cisco
+ [[ -z '' ]]
+ (( i++ ))
+ [[ platform =~ ^(search|s)$ ]]
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ [[ platform == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ for xitem in "${@}"
+ search_terms=()
+ [[ -n '' ]]
+ declare -a search_terms
+ readonly __NETWORK_EXTRACT__=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ __NETWORK_EXTRACT__=1
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list != *,* ]]
+ read -r key value
+ mapfile -t search_terms
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ print '{
  "vendor": "cisco",
+ export LC_ALL=C
  "model": "ASA",
+ LC_ALL=C
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ mktemp -d
++ echo -e --export
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+++ base64
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ echo -e --verbose
++ mktemp -d
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+++ tr -dc a-zA-Z0-9
++ tr -d '\r'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
++ grep -v '^#'
+++ echo -n devops-resources.shell
++ grep -v '^#'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MZFvidJrN9
+ local SCRIPT_DIR=./scripts
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.edDxIhaUqJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MZFvidJrN9
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.edDxIhaUqJ
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ echo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i++ ))
+ (( i < count ))
+ export 'nl=\n'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ [[ export =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.obx2kc4AxJ
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.obx2kc4AxJ
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ local SCRIPT_DIR=./scripts
+ local export_objects=true
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
+ newline
+ [[ export =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
++ targets_location=targets
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ nl='\n'
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ source ./scripts/devops-resources.shell
++ export targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ targets_logfile=.cache/targets.jobs
+ echo
++ alias detect-vendor=detect_vendor
+ (( i++ ))
++ [[ -n '' ]]
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ export == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
++ alias log-error=log_error
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias log-info=log_info
++ alias list-file=list_file
+ [[ logger =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ configs_objects
++ alias log-warn=log_warn
+ [[ logger =~ ^(console|o)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias print-message=message
+ [[ logger =~ ^(export|r)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-newline=newline
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ [[ verbose == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias print-line=print
+ [[ logger == \h\e\l\p ]]
++ alias pause=pause
+ IFS=' 	
+ [[ logger == \d\e\b\u\g ]]
'
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias pause=pause
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-line=print
+ for xitem in "${@}"
++ alias print-file=print_file
+ [[ -z '' ]]
++ alias print-line=print
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ IFS==
+ read -r key value
+ debug=false
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
++ alias relative-configpath=relative_configpath
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
++ alias print-file=print_file
+ configs_objects
++ alias relative-configpath=relative_configpath
++ which awk
++ alias system-metrics=system_metrics
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ alias print-file=print_file
+ [[ -z '' ]]
+ dry_run=false
++ alias network-configs--helper=network_configs__helper
+ [[ -z true ]]
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
++ alias relative-configpath=relative_configpath
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]]
++ alias validate-address=validate_address
+ search_terms=()
+ declare -a search_terms
++ alias system-metrics=system_metrics
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]]
++ IFS=,
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list != *,* ]]
++ alias warning-message=warning
++ alias validate-address=validate_address
+ mapfile -t search_terms
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export LC_ALL=C
++ echo 10.10.10.10
++ LC_ALL=C
++ export default_addresses=ips.list
++ alias network-extract--helper=network_extract__helper
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export 'nl=\n'
++ nl='\n'
++ export default_matrix=matrix.json
+ source ./scripts/configs-objects.shell
++ default_matrix=matrix.json
+ [[ extract == \h\e\l\p ]]
++ export cache_location=.cache
++ export default_addresses=ips.list
++ cache_location=.cache
+ [[ extract == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
++ mkdir -p logs
+ for xitem in "${@}"
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ IFS==
+ local first_search_entry=192.168.1.10
+ read -r key value
++ default_addresses=ips.list
+ local last_search_entry=192.168.1.10
++ export default_devices=devices.list
++ default_devices=devices.list
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ alias validate-address=validate_address
++ export default_matrix=matrix.json
+ [[ true == true ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ which awk
++ logs_location=logs
++ alias warning-message=warning
++ IFS=,
++ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ echo 10.0.2.3
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias serialize-object=configs_objects
++ export default_devices=devices.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ] ]]
++ default_matrix=matrix.json
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
++ export cache_location=.cache
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ cache_location=.cache
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
++ export logs_location=logs
++ logs_location=logs
+ declare -a execute__netwowrk_extract
++ mkdir -p logs
+ local count=1
+ ((  count == 0  ))
++ which awk
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ declare -a execute__netwowrk_extract
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --verbose
++ which awk
+++ base64
++ echo -e --export
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.16.0.5/misc
+ [[ ! -d reports/172.16.0.5/misc ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ which awk
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ grep -v '^\s*$'
+ local parent_dir=reports/10.0.0.1/cisco
+ local parent_dir=reports/10.0.1.2/fortinet
++ grep -v '^#'
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ IFS=,
++ echo 192.168.0.100
++ echo 172.16.1.6
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ local awk_bin=/usr/bin/awk
+++ echo -n devops-resources.shell
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ [[ verbose =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(console|o)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
++ IFS=,
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ -n '' ]]
+ dry_run=false
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z true ]]
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ [[ -z '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ echo 192.168.0.1
+ [[ export =~ ^(export|r)$ ]]
+ __NETWORK_EXTRACT__=1
+ export console_output=false
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local export_objects=true
++ export jobs_location=jobs
+ [[ export =~ ^(extract|x)$ ]]
++ jobs_location=jobs
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(logger|l)$ ]]
++ mkdir -p jobs
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ console_output=false
+ [[ -z true ]]
++ alias network-configs--helper=network_configs__helper
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ script_helper=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]]
+ declare -a execute__netwowrk_extract
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-extract--helper=network_extract__helper
++ which awk
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ network_extract__console=console/network-extract.console
++ printf '%*s' 12 ''
+ touch console/network-extract.console
++ alias serialize-object=configs_objects
++ export targets_location=targets
++ targets_location=targets
++ which awk
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ export console_location=console
+ (( i < count ))
++ console_location=console
+ echo
++ mkdir -p console
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ mktemp -d
+ alias parse-cisco=main
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ printf '%*s' 12 ''
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local first_search_entry=192.168.1.11
+ local last_search_entry=192.168.1.11
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ true == true ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ] ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ local 'indent=            '
+ [[ true == true ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local count=1
+ local search_pattern
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local search_pattern
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ echo
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ (( i < count ))
++ export console_location=console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ console_location=console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local awk_bin=/usr/bin/awk
++ mkdir -p console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local awk_bin=/usr/bin/awk
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -z cisco ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ cfg == \c\f\g ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.0.0.1/fortinet
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ which awk
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ which awk
+ local awk_bin=/usr/bin/awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GVmb9OMTS7
+ [[ 7 -eq 0 ]]
+ network_extract__console=console/network-extract.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GVmb9OMTS7
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e01pzkihvw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ touch console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ grep -v '^\s*$'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ printf '%*s' 12 ''
++ declare -gr __DEVOPS_RESOURCES__=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console --export --verbose
++ [[ 5 -lt 4 ]]
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ alias detect-vendor=detect_vendor
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ oIFS=' 	
'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ alias pause=pause
++ alias print-line=print
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ grep -v '^#'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ cut -d/ -f2
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ cut -d/ -f2
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ printf '%*s' 12 ''
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console ]]
+ newline
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ export actions_logfile=console/run.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ actions_logfile=console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]]
+ local count=1
++ touch console/run.console
+ (( i = 0 ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ echo
+ newline
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]]
+ (( i < count ))
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'indent=            '
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n '' ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ output_dir=reports/192.168.1.10/fortinet
+ readonly __NETWORK_EXTRACT__=1
+ [[ true == true ]]
+ __NETWORK_EXTRACT__=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ set -euo pipefail
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ newline
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local SCRIPT_DIR=./scripts
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export project_status=run.done
+ local count=1
+ local script_filename=cisco-configs.awk
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ project_status=run.done
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ touch run.done
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "12.2",
  "domain": "",
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
  "hostname": "campus-sw-access01"
}
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]

version 12.2
hostname campus-sw-access01
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline
+ result=0
+ [[ 7 -eq 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ -n {
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "12.2",
  "domain": "",
+ echo
  "hostname": "campus-sw-access01"
}

version 12.2
+ (( i++ ))
hostname campus-sw-access01

+ (( i < count ))
object-group network Floor-Networks
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console --export --verbose
 description End-user and service devices
+ oIFS=' 	
 network-object host 192.168.0.1
'
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ local first_search_entry=192.0.2.50
+ local last_search_entry=192.0.2.50
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
++ IFS=,
+ search_pattern=10.0.0.1
++ echo 172.16.0.5
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ] ]]
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ export jobs_location=jobs
++ jobs_location=jobs
+ newline
+ declare -a execute__netwowrk_extract
++ mkdir -p jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
+ local count=1
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ (( i = 0 ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ print '{

  "vendor": "cisco",
object-group network Metropolis-Internal
  "model": "",
 description Core internal LAN for application clusters
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
++ tr -d '\r'
}

 network-object host 10.0.2.3
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ search_pattern=10.0.1.2
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ [[ -z cisco ]]
+ [[ true == true ]]
 network-object 192.168.2.0 255.255.255.0
+ [[ -n {
 network-object host 192.168.2.12
  "vendor": "cisco",
  "model": "",

  "version": "12.2",
  "domain": "",
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
object network Kent-Server
+ newline
 host 10.0.2.3
 description Internal mail & identity services'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
+ result=0
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dGXm7ZLgI2
 description Internal mail & identity services'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dGXm7ZLgI2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
++ [[ -n '' ]]
 description Internal mail & identity services ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ [[ 5 -lt 4 ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias list-file=list_file
++ alias log-error=log_error
++ project_status=run.done
++ alias log-info=log_info
++ touch run.done
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
++ alias pause=pause
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ [[ search =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
++ export default_addresses=ips.list
+ [[ search =~ ^(search|s)$ ]]
++ export project_status=run.done
++ default_addresses=ips.list
++ project_status=run.done
++ export default_devices=devices.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list
++ default_devices=devices.list
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ search == \h\e\l\p ]]
++ export default_matrix=matrix.json
++ touch run.done
++ default_matrix=matrix.json
+ [[ search == \d\e\b\u\g ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local 'extracted_configuration={
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ mkdir -p logs
  "model": "FortiGate-200F",
  "version": "",
  "vendor": "cisco",
  "domain": "",
  "model": "",
  "hostname": "fg-campus-core"
  "version": "12.4",
}
  "domain": "",

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ search == \d\r\y\-\r\u\n ]]
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ search == \v\e\r\b\o\s\e ]]

config firewall address
 edit "Hawkeye-Nest"
hostname access-sw1-west
  set subnet 172.16.1.6 255.255.255.255

  set comment "Remote sniper node"
interface Vlan100
 next
 ip address 192.168.0.100 255.255.255.0
end'
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
+ result=0
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
+ for xitem in "${@}"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ IFS==
+ read -r key value
+ newline 2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
  "hostname": "access-sw1-west"
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
+ echo
+ (( i++ ))
  "model": "",
}
  "version": "12.4",

  "domain": "",
version 12.4
+ (( i < count ))
hostname access-sw1-west
+ local SCRIPT_DIR=./scripts

  "hostname": "access-sw1-west"
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
}

version 12.4
hostname access-sw1-west
 description Guest VLAN Gateway


interface Vlan1
object-group network MGMT-ACCESS
 ip address 192.168.0.1 255.255.255.0
+ local script_filename=fortinet-configs.awk
 description Management Interface
 description Management objects

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local script_filepath=./scripts/extract/fortinet-configs.awk
 network-object host 192.168.0.1
+ [[ true == true ]]
 network-object host 192.168.0.100
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 network-object host 10.10.10.10 ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ result=0
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n {
+ local first_search_entry=172.18.1.20
  "vendor": "cisco",
  "model": "",
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
  "version": "12.4",
+ [[ search =~ ^(export|r)$ ]]
+ local last_search_entry=172.18.1.20
  "domain": "",
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
  "hostname": "access-sw1-west"
+ [[ platform =~ ^(config|c)$ ]]
}
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'

+ [[ search =~ ^(extract|x)$ ]]
version 12.4
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ platform =~ ^(console|o)$ ]]
hostname access-sw1-west

interface Vlan1
+ [[ search =~ ^(logger|l)$ ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
 description Management Interface
+ read -r key value

++++ basename ./scripts/devops-resources.shell
object-group network MGMT-ACCESS
+ newline
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ IFS=,
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ] ]]
++ echo 172.16.0.5
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ printf '%*s' 12 ''
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n {
+ newline
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local count=1
  "hostname": "fg-campus-core"
}
+ (( i = 0 ))

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ (( i < count ))

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ -z cisco ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ true == true ]]
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --config=.cache/resources/misc/switch3.conf
+++ base64
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
++++ basename ./scripts/devops-resources.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.0.0.1
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
 description Management Interface
++ export jobs_location=jobs

object-group network MGMT-ACCESS
 description Management objects
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ mkdir -p jobs
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

+ grep -F 10.0.1.2
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+++ tr -dc a-zA-Z0-9
 network-object host 10.10.10.10'
++ export targets_location=targets
++ targets_location=targets
+ output_dir=reports/192.168.1.11/cisco
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ ! -d reports/192.168.1.11/cisco ]]
++ targets_logfile=.cache/targets.jobs
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ echo
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ export targets_location=targets
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_location=targets
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ -n '' ]]
++ export targets_logfile=.cache/targets.jobs
++ readonly __DEVOPS_HELPERS__=1
++ targets_logfile=.cache/targets.jobs
++ __DEVOPS_HELPERS__=1
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
++ [[ 5 -lt 4 ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local count=2
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias network-extract--helper=network_extract__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ source ./scripts/configs-objects.shell
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ [[ -n '' ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias serialize-object=configs_objects
+ sed '1{/^[[:space:]]*$/d;}'
+++ echo -n devops-resources.shell
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ sed '/^[[:space:]]*$/d'
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ config =~ ^(config|c)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ newline
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ [[ true == true ]]
++ IFS=,
+ local target_platform=cisco
++ export console_location=console
++ console_location=console
+ [[ platform =~ ^(search|s)$ ]]
++ echo 192.168.1.10
++ mkdir -p console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ IFS==
+ read -r key value
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
+ source ./scripts/devops-helpers.shell
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ configs_objects
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ newline 2
++ [[ 5 -lt 4 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local count=2
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+++ base64
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+++ base64
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
++++ basename ./scripts/devops-resources.shell
+ (( i < count ))
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ echo
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ which awk
++ touch console/run.console
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ result=0
+ newline 2
+ [[ 0 -ne 0 ]]
+ newline 2
+ [[ true == true ]]
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ newline
+++ echo -n devops-resources.shell
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ local count=2
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ (( i = 0 ))
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ echo
+ result=0
+ (( i < count ))
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ [[ true == true ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ local count=2
+ (( i = 0 ))
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ echo
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ newline
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ local count=1
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
+ configs_objects
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
++ [[ 5 -lt 4 ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
++ command -v -- ./scripts/network-extract.shell
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
++++ basename ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ extract == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ 7 -eq 0 ]]
+++ tr -dc a-zA-Z0-9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2xoodoa6k9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ alias network-extract--helper=network_extract__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ source ./scripts/configs-objects.shell
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
++ [[ -n '' ]]
+ case "${target_file}" in
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias parse-listings--helper=parse_listings__helper
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ extract =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ extract =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ alias serialize-object=configs_objects
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local parent_dir=reports/10.10.10.10/cisco
+ alias parse-cisco=main
+++ echo -n devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export LC_ALL=C
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ which awk
+ cat -n
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.18.1.20/misc
++ alias network-configs--helper=network_configs__helper
+ local parent_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/172.18.1.20/misc ]]
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ [[ false == true ]]
+ source ./scripts/configs-objects.shell
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ newline
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local count=1
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ (( i = 0 ))
++ alias serialize-object=configs_objects
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ configs_objects
+ [[ true == true ]]
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ alias parse-cisco=main
++ targets_logfile=.cache/targets.jobs
++ printf '%*s' 12 ''
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ newline
+ logs_location=logs
+ mkdir -p logs
+ local count=1
+ (( i = 0 ))
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ (( i++ ))
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ false == true ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ configs_objects
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'indent=            '
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
++ basename reports/10.0.2.3/misc/fw1
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ platform =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform =~ ^(extract|x)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local target_platform=fortinet
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline 2
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ return 0
+ echo
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(search|s)$ ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ script_filename=network-extract.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list
+ (( i < count ))
+ script_filename=network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ search == \d\e\b\u\g ]]
+ return 0
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ echo
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ true == true ]]
+ touch console/network-extract.console
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ case "${target_file}" in
+ local search_pattern
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias network-configs--helper=network_configs__helper
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ IFS=,
++ command -v -- ./scripts/network-extract.shell
++ echo 192.168.1.11
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+++ base64
+ declare -a execute__netwowrk_extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ which awk
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+++ tr -dc a-zA-Z0-9
++ alias serialize-object=configs_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DzuufkIhM5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DzuufkIhM5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ which awk
++ which awk
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ IFS=,
++ alias pause=pause
++ dirname -- ./scripts/network-extract.shell
++ echo 172.31.255.254
++ alias print-line=print
+ echo
++ alias print-file=print_file
+ alias parse-cisco=main
+ (( i++ ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ -z x ]]
+ [[ true == true ]]
+ export logs_location=logs
+ logs_location=logs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ mkdir -p logs
++ alias system-metrics=system_metrics
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ local first_search_entry=192.168.0.100
+ local last_search_entry=192.168.0.100
+ [[ logger =~ ^(console|o)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
++ alias validate-address=validate_address
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ logger == \h\e\l\p ]]
++ export LC_ALL=C
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ LC_ALL=C
+ [[ logger == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
+ local search_pattern
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cgjdfx7a1v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline 2
+ [[ logger =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ which awk
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --platform=fortinet
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ] ]]
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ local count=2
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local verbose=true
+ (( i = 0 ))
+ IFS=' 	
+ (( i < count ))
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ IFS=,
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-configs--ips.list ]'
+ script_helper=false
++ echo 172.16.1.6
++ cut -d/ -f2
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ declare -a execute__netwowrk_extract
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list != *,* ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ mapfile -t search_terms
++ printf '%*s' 12 ''
+ script_filename=network-extract.shell
++ IFS=,
++ echo 10.0.1.2
++ which awk
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local awk_bin=/usr/bin/awk
++ cut -d/ -f2
++ export jobs_location=jobs
+ declare -a execute__netwowrk_extract
+ export network_extract__console=console/network-extract.console
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
++ jobs_location=jobs
+ network_extract__console=console/network-extract.console
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ touch console/network-extract.console
++ mkdir -p jobs
++ echo -e --export
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list
+ newline
+ local count=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ (( i = 0 ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ tr -d '\r'
+ newline
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ local 'indent=            '
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ newline 2
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ mktemp -d
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
++ grep -v '^\s*$'
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ search_pattern=10.0.2.3
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ search =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ search_pattern=10.10.10.10
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^#'
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
++ IFS=,
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
++ echo 10.0.0.1
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local count=2
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ read -r key value
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ [[ logger == \h\e\l\p ]]
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ declare -a execute__netwowrk_extract
+ read -r key value
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
++ printf '%*s' 12 ''
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'indent=            '
+ [[ export =~ ^(export|r)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ local export_objects=true
+ (( i++ ))
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ false == true ]]
++ printf '%*s' 12 ''
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ IFS==
+ read -r key value
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
++ echo -e --export
+ configs_objects
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SthaqLmHFt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SthaqLmHFt
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ tr -d '\r'
++ alias exit-error=exit_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ local count=1
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ alias print-message=message
++ alias print-newline=newline
+ (( i = 0 ))
++ alias pause=pause
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ echo
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --export
++ alias system-metrics=system_metrics
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export cache_location=.cache
++ cache_location=.cache
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
  "version": "9.14(3)",
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
++ actions_logfile=console/run.console
+ [[ -n {
++ touch console/run.console
  "vendor": "cisco",
  "model": "ASA",
+ newline
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ local count=1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ grep -v '^#'
+ (( i = 0 ))

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=192.168.0.1
+ local last_search_entry=192.168.0.1
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ print '{
+ local 'indent=            '
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ true == true ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ newline
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ (( i < count ))
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ echo

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ search =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
object-group network Panther-Edge
+ (( i++ ))
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ search =~ ^(console|o)$ ]]
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ echo -e --verbose
+ [[ search =~ ^(export|r)$ ]]
+ echo -en '{
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ search =~ ^(logger|l)$ ]]
  "hostname": "perimeter-fw1"
}
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]

+ [[ search =~ ^(platform|p)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
domain-name edge.dc.example.com

object-group network Panther-Edge
+ [[ search =~ ^(search|s)$ ]]
 description Internet-facing proxy systems
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ search == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ export =~ ^(export|r)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local export_objects=true
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
+ [[ logger =~ ^(console|o)$ ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ export =~ ^(logger|l)$ ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ] ]]
+ result=0
+ output_dir=reports/10.0.0.1/misc
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n {
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "",
+ [[ ! -d reports/10.0.0.1/misc ]]
  "version": "16.9",
  "domain": "",
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
  "hostname": "branch-isr-02"
+ local first_search_entry=203.0.113.25
}
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export =~ ^(platform|p)$ ]]

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ [[ config =~ ^(console|o)$ ]]
version 16.9
+ [[ export =~ ^(config|c)$ ]]
hostname branch-isr-02

+ local last_search_entry=203.0.113.25
interface GigabitEthernet0/0/0
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console

object network BlackWidow-Core
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
 host 172.16.1.6
+ [[ logger =~ ^(platform|p)$ ]]
 description Branch router uplink NAT ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ] ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ [[ export =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ local export_objects=true
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ config =~ ^(platform|p)$ ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ export == \d\e\b\u\g ]]
+ newline
++ export project_status=run.done
+ local count=1
++ project_status=run.done
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ touch run.done
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i++ ))
+ readonly __NETWORK_EXTRACT__=1
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ __NETWORK_EXTRACT__=1
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ set -euo pipefail
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
                      in_json_header = 0;
                      next;
                    }
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ newline 2
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ local 'extracted_configuration={
                  }
  "vendor": "cisco",
                  END {
  "model": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "version": "",
                  }
  "domain": "",
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ newline
+ result=0
+ local count=2
+ local count=1
+ [[ -n {
  "vendor": "cisco",
+ (( i = 0 ))
+ (( i < count ))
  "model": "",
+ echo
  "version": "",
  "domain": "",
  "hostname": ""
}
+ (( i++ ))

+ (( i = 0 ))
+ (( i < count ))
interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ (( i < count ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ true == true ]]
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export console_location=console
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
++ console_location=console
+ (( i++ ))
+ (( i < count ))
++ mkdir -p console
+ cat -n reports/172.31.255.254/misc/switch1.conf
++ echo -e --export
++ echo -e --verbose
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ export targets_location=targets
  "version": "",
  "domain": "",
  "hostname": ""
++ targets_location=targets
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local verbose=true
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS=' 	
'
+ newline 2
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ local count=2
+ (( i = 0 ))
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ echo
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ search_terms=()
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ declare -a search_terms
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ local 'extracted_configuration={
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list != *,* ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ newline
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
+ local count=1
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ (( i = 0 ))
 next
end
+ (( i < count ))

config firewall address
 edit "IronMan-HQ"
+ echo
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ mapfile -t search_terms
+ local parent_dir=reports/172.18.1.20/cisco
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ touch console/run.console
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ grep -F 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ mktemp -d
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ newline
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ false == true ]]
config firewall address
+ local count=1
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
  set comment "Main node at Stark Tower"
+ echo
 next
end

+ (( i++ ))
config firewall address
 edit "IronMan-HQ"
+ (( i < count ))
  set subnet 10.0.0.1 255.255.255.255
+ [[ verbose =~ ^(config|c)$ ]]
  set comment "Main node at Stark Tower"
 next
end'
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ false == true ]]
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ -n {
  "vendor": "fortinet",
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
  "model": "FortiGate-60F",
+ output_dir=reports/192.168.0.100/cisco
  "version": "v7.2.5.F",
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ ! -d reports/192.168.0.100/cisco ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ configs_objects

+ configs_objects
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ dirname -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ configs_objects
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+++ base64
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ search_terms=()
+ declare -a search_terms
+ IFS=' 	
'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list != *,* ]]
+ dry_run=false
+ mapfile -t search_terms
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ export console_output=false
+ console_output=false
++++ basename ./scripts/devops-resources.shell
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ newline 2
++ tr -d '\r'
++ dirname reports/172.31.255.254/misc/switch1.conf
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ local count=2
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ echo -n devops-resources.shell
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ grep -v '^#'
+ [[ false == true ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ local parent_dir=reports/172.16.0.5/cisco
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ configs_objects
+ local count=2
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i++ ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ source ./scripts/devops-helpers.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list != *,* ]]
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ local count=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ local parent_dir=reports/172.31.255.254/misc
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local verbose=true
++ alias network-extract--helper=network_extract__helper
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ source ./scripts/configs-objects.shell
+ dry_run=false
+ grep -F 10.10.10.10
++ [[ -n '' ]]
+ [[ -z true ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -z '' ]]
++ __CONFIGS_OBJECTS__=1
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias serialize-object=configs_objects
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ alias parse-cisco=main
+ result=0
+ [[ 0 -ne 0 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D21mAvScgv
+ [[ -z x ]]
++ export targets_location=targets
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D21mAvScgv
+ [[ true == true ]]
+ export logs_location=logs
++ targets_location=targets
+ logs_location=logs
+ mkdir -p logs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ basename reports/172.31.255.254/misc/switch1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ [[ -n '' ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ declare -gr __DEVOPS_RESOURCES__=1
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
+ local first_search_entry=192.168.2.12
+ [[ extract =~ ^(logger|l)$ ]]
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
++ tr -d '\r'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ grep -v '^\s*$'
++ tr -d '\r'
+ local parent_dir=reports/172.16.1.6/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ echo
++ alias log-info=log_info
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ (( i < count ))
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ [[ false == true ]]
+ [[ true == true ]]
++ alias print-line=print
+ newline
++ alias print-file=print_file
+ local count=1
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
++ alias relative-configpath=relative_configpath
+ (( i = 0 ))
++ grep -v '^#'
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ echo
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ (( i++ ))
+ (( i < count ))
+ configs_objects
++ alias system-metrics=system_metrics
++ grep -v '^\s*$'
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ false == true ]]
+ local search_pattern
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+++ base64
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
++++ basename ./scripts/devops-resources.shell
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
++ dirname reports/10.0.1.2/misc/switch1.conf
+ script_filename=network-extract.shell
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local target_platform=fortinet
++ alias validate-address=validate_address
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export LC_ALL=C
++ LC_ALL=C
+ IFS==
+ read -r key value
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ newline
++ export 'nl=\n'
+ local count=1
++ nl='\n'
+ (( i = 0 ))
+ (( i < count ))
++ export default_addresses=ips.list
+ echo
++ default_addresses=ips.list
+ (( i++ ))
++ export default_devices=devices.list
+ (( i < count ))
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ cut -d/ -f2
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+++ echo -n devops-resources.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ local parent_dir=reports/192.0.2.50/cisco
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo reports/172.31.255.254/misc/switch1.conf
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --platform=cisco
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ dirname -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
++ cut -d/ -f2
+ source ./scripts/configs-objects.shell
+ local parent_dir=reports/10.0.1.2/misc
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ] ]]
++ echo -e --platform=cisco
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ local parent_dir=reports/10.0.0.1/fortinet
+ search_pattern=172.16.0.5
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-configs--ips.list ]'
+ [[ 7 -eq 0 ]]
+ mkdir -p reports/172.16.0.5/cisco/.objects
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.8v87kjnmwh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console --export --verbose
+ logs_location=logs
+ mkdir -p logs
+ local count=1
+ ((  count == 0  ))
+ oIFS=' 	
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local first_search_entry=192.168.1.10
+ local count=1
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.1.2/misc/switch1
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ grep -v '^#'
+ echo
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ cut -d/ -f2
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ search_pattern=172.31.255.254
+ mkdir -p reports/172.31.255.254/misc/.objects
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ local last_search_entry=192.168.1.10
+ [[ logger =~ ^(console|o)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ for xitem in "${@}"
+ local search_pattern
+ IFS==
+ read -r key value
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -n '' ]]
+ [[ -z cisco ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ true == true ]]
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ] ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ search_pattern=172.16.1.6
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ local SCRIPT_DIR=./scripts
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ touch console/network-extract.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ output_dir=reports/192.168.0.1/cisco
+ sed '/^[[:space:]]*$/d'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local search_pattern
+ IFS==
+ echo
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
++ export jobs_location=jobs
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
++ mkdir -p jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ local target_platform=cisco
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local verbose=true
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local first_search_entry=10.0.2.3
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ IFS=' 	
'
+ IFS==
+ local last_search_entry=10.0.2.3
+ read -r key value
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ true == true ]]
++ which awk
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ] ]]
+ [[ -z true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-configs--ips.list ]'
+ [[ -z '' ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ script_helper=false
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]]
+ newline
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list != *,* ]]
++ mktemp -d
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo reports/10.0.1.2/misc/switch1.conf
++ which awk
++ echo -e --export
++ cut -d/ -f2
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ mapfile -t search_terms
+ grep -F 172.16.0.5
++ cut -d/ -f2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kuysybervp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console --export --verbose
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ -n '' ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ readonly __NETWORK_EXTRACT__=1
                ' reports/172.31.255.254/misc/switch1.conf
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ search_pattern=10.0.1.2
+ newline
+ mkdir -p reports/10.0.1.2/misc/.objects
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(config|c)$ ]]
+ grep -F 172.31.255.254
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local export_objects=true
+ search_pattern=10.0.0.1
+ output_dir=reports/203.0.113.25/cisco
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ [[ export =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console ]]
+ local search_pattern
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ grep -F 172.16.1.6
+ [[ 0 -ne 0 ]]
+ search_pattern=172.18.1.20
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zRFnzcXqWd
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zRFnzcXqWd
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ IFS=,
+ sed '/^[[:space:]]*$/d'
++ echo 10.0.0.1
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
++ alias list-file=list_file
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
++ alias log-error=log_error
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --verbose
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
++ alias validate-address=validate_address
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ -n '' ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ readonly __NETWORK_EXTRACT__=1
++ export logs_location=logs
++ logs_location=logs
+ __NETWORK_EXTRACT__=1
++ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ search =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ cat -n
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ IFS=,
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo 192.168.0.100
+ [[ search == \d\e\b\u\g ]]
+ result=0
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ 0 -ne 0 ]]
+ for xitem in "${@}"
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ read -r key value
+ case "${target_platform}" in
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ config == \d\r\y\-\r\u\n ]]
                  BEGIN {
                    in_json_header = 0;
+ [[ config == \v\e\r\b\o\s\e ]]
                    blk = "";
                  }
+ case "${target_platform}" in
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ for xitem in "${@}"
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ logger =~ ^(extract|x)$ ]]
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ logger =~ ^(logger|l)$ ]]
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
++ dirname -- ./scripts/network-extract.shell
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ tr -d '\r'
++ cut -d/ -f2
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ grep -F 10.0.1.2
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ grep -F 10.0.0.1
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
++ grep -v '^\s*$'
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ logger == \d\e\b\u\g ]]
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ (( i = 0 ))
+ [[ -z '' ]]
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ debug=false
+ cat -n
+ echo
+ cat -n
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ return 0
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ IFS==
+ search_terms=()
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ read -r key value
+ mapfile -t search_terms
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ true == true ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ command -v -- ./scripts/network-extract.shell
+ declare -a execute__netwowrk_extract
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ result=0
+ [[ cfg == \c\f\g ]]
+ local first_search_entry=192.168.1.11
+ [[ 0 -ne 0 ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local last_search_entry=192.168.1.11
+ [[ config =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q8BZpr4Lof
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ config =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q8BZpr4Lof
++ mktemp -d
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ] ]]
+ [[ config =~ ^(search|s)$ ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ export 'nl=\n'
+ [[ config == \h\e\l\p ]]
+ nl='\n'
+ local count=1
+ [[ config == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-configs--ips.list ]'
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i < count ))
+ (( i < count ))
+ newline
+ read -r key value
+ ((  count == 0  ))
+ echo
+ local count=1
+ (( i++ ))
++ [[ -n '' ]]
+ (( i = 0 ))
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES__=1
+ echo
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i++ ))
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ (( i < count ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ return 0
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ return 0
++ which awk
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ [[ 0 -ne 0 ]]
+ search_pattern=192.0.2.50
+ [[ true == true ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console ]]
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--branch-isr-02.cfg.console
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ which awk
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
++ grep -v '^\s*$'
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
++ echo -e --export
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ extract =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ alias list-file=list_file
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ grep -v '^#'
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--perimeter-fw1.cfg.console
+ cat -n
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
++ alias log-error=log_error
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
++ alias log-info=log_info
+ local first_search_entry=10.10.10.10
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
++ alias log-warn=log_warn
+ local last_search_entry=10.10.10.10
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
++ alias print-message=message
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ output_dir=reports/192.168.2.12/cisco
++ alias print-newline=newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YB83fIOILX/network-extract--switch1.conf.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
++ alias pause=pause
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
++ alias print-line=print
+ local SCRIPT_DIR=./scripts
+ local count=1
++ alias print-file=print_file
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local script_filename=cisco-configs.awk
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ alias relative-configpath=relative_configpath
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ echo
+ output_dir=reports/192.168.1.10/misc
+ (( i++ ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ return 0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console ]]
++ alias validate-address=validate_address
+ echo
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EeV43u0V5J
+ (( i++ ))
++ echo -e --platform=fortinet
++ alias warning-message=warning
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
++ export LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EeV43u0V5J
++ LC_ALL=C
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ return 0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z fortinet ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ export 'nl=\n'
+ nl='\n'
++ nl='\n'
+ source ./scripts/devops-resources.shell
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ [[ -n '' ]]
++ export cache_location=.cache
++ dirname -- ./scripts/network-extract.shell
++ cache_location=.cache
++ declare -gr __DEVOPS_RESOURCES__=1
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(console|o)$ ]]
++ mkdir -p logs
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ echo
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ read -r key value
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ [[ 5 -lt 4 ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ cat -n
++ command -v -- ./scripts/network-extract.shell
++ alias list-file=list_file
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ alias log-error=log_error
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8xU2aar0t ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8xU2aar0t
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias pause=pause
+ local 'indent=            '
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ printf '%*s' 12 ''
++ echo -e --export
++ alias system-metrics=system_metrics
++ echo -e --platform=cisco
+ [[ true == true ]]
+ result=0
++ alias validate-address=validate_address
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KGopsGiCBc ]]
++ alias warning-message=warning
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KGopsGiCBc
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
++ default_devices=devices.list
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vfw5R52eG4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vfw5R52eG4
++ dirname reports/10.0.2.3/misc/fw3.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ case "${target_platform}" in
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ true == true ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ platform =~ ^(config|c)$ ]]
                    blk = blk divisor " " $0;
                  }
+ newline
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ platform =~ ^(console|o)$ ]]
++ export jobs_location=jobs
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
++ jobs_location=jobs
+ local SCRIPT_DIR=./scripts
++ mkdir -p jobs
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
++ export default_matrix=matrix.json
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ default_matrix=matrix.json
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console ]]
++ export logs_location=logs
++ logs_location=logs
+ case "${target_file}" in
++ mkdir -p logs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--switch1.conf.console
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iWVJgfWxhj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iWVJgfWxhj
+ output_dir=reports/172.16.1.6/misc
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
++ which awk
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ platform =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ script_filename=network-extract
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ return 0
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ IFS=,
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo 192.0.2.50
++ alias serialize-object=configs_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ alias parse-cisco=main
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ local parent_dir=reports/192.168.0.1/cisco
+ local search_pattern
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local parent_dir=reports/192.168.0.100/cisco
+ local parent_dir=reports/172.16.1.6/fortinet
++ which awk
+ case "${target_platform}" in
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ which awk
+ [[ true == true ]]
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local SCRIPT_DIR=./scripts
+ output_dir=reports/10.0.2.3/misc
+ local script_filename=cisco-configs.awk
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ grep -F 172.18.1.20
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.8v87kjnmwh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
++ jobs_location=jobs
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ykzd7pdvpj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console --export --verbose
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo reports/10.0.2.3/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ export console_location=console
++ console_location=console
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
++ mkdir -p console
+ touch console/network-extract.console
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
++ cut -d/ -f2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ false == true ]]
+ [[ true == true ]]
+ grep -F 192.0.2.50
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console ]]
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ case "${target_file}" in
end'
+ [[ 7 -eq 0 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--perimeter-fw1.cfg.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.k2xmqmqbst/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ search_pattern=10.10.10.10
+ local awk_bin=/usr/bin/awk
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console --export --verbose
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'indent=            '
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ read -r key value
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local search_pattern
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ -n {
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console ]]
++ which awk
++ IFS=,
++ echo 192.168.0.1
+ [[ 7 -eq 0 ]]
+ case "${target_file}" in
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kuysybervp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PePaa8cgjH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console --export --verbose
  "vendor": "fortinet",
+ [[ search =~ ^(config|c)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ search =~ ^(console|o)$ ]]
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ oIFS=' 	
'
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ search_pattern=10.0.2.3
+ read -r key value
++ export jobs_location=jobs
+ mkdir -p reports/10.0.2.3/misc/.objects
++ jobs_location=jobs
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
++ mkdir -p jobs
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ local search_pattern
+ local search_pattern
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ configs_objects
++ IFS=,
++ export console_location=console
++ console_location=console
+ result=0
++ mkdir -p console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ 0 -ne 0 ]]
++ echo 203.0.113.25
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
++ printf '%*s' 12 ''
+ [[ logger =~ ^(config|c)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ logger =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkqZ7z1M9d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkqZ7z1M9d
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --verbose
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ local 'indent=            '
++ alias exit-error=exit_error
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ logger =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
++ cut -d/ -f2
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ export =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export LC_ALL=C
++ LC_ALL=C
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ newline
++ default_addresses=ips.list
++ export default_devices=devices.list
+ local count=1
++ default_devices=devices.list
++ cut -d/ -f2
+ (( i = 0 ))
++ export default_matrix=matrix.json
+ (( i < count ))
++ default_matrix=matrix.json
+ echo
++ export cache_location=.cache
++ cache_location=.cache
+ (( i++ ))
++ export logs_location=logs
+ (( i < count ))
++ logs_location=logs
++ mkdir -p logs
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
++ dirname -- ./scripts/network-extract.shell
++ which awk
+ (( i = 0 ))
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
}

+ echo
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ echo -en '{
}
  "vendor": "fortinet",

++ export console_location=console
  "model": "FortiGate-60F",
ASA Version 9.14(3)
  "version": "v7.2.5.F",
hostname perimeter-fw1
  "domain": "",
domain-name edge.dc.example.com
  "hostname": "fg-branch-vpn-01"
++ console_location=console
+ result=0

}
+ exit 0
object-group network Avengers-DMZ
++ mkdir -p console
 description Public access layer
 network-object host 192.0.2.50

 network-object host 203.0.113.25
#hostname="fg-branch-vpn-01"
 network-object 192.168.2.0 255.255.255.0'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kz1vTYXmGr ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kz1vTYXmGr
  set comment "Wakandan data store"
+ result=0
 next
end'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ result=0
+ result=0
+ [[ search =~ ^(console|o)$ ]]
+ [[ 0 -ne 0 ]]
+ exit 0
++ which awk
+ [[ true == true ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7xEuzcTRsx ]]
+ [[ search =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7xEuzcTRsx
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ echo -e --verbose
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ verbose =~ ^(export|r)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ search =~ ^(config|c)$ ]]
  "model": "ASA",
+ [[ verbose =~ ^(platform|p)$ ]]
  "version": "9.14(3)",
+ [[ config =~ ^(export|r)$ ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ verbose == \h\e\l\p ]]
domain-name edge.dc.example.com

+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
object-group network Avengers-DMZ
+ local verbose=true
 description Public access layer
+ [[ config =~ ^(logger|l)$ ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ IFS=' 	
'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
+ export console_output=false
+ [[ search =~ ^(platform|p)$ ]]
+ console_output=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list
+ script_helper=false
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ search_pattern=192.168.0.1
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ mkdir -p reports/192.168.0.1/cisco/.objects
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo -e --export
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(config|c)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ search =~ ^(console|o)$ ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ true == true ]]
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ [[ search =~ ^(export|r)$ ]]
++ cut -d/ -f2
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ case "${target_platform}" in
++ IFS=,
+ search_pattern=172.16.1.6
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo 172.18.1.20
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ false == true ]]
+ local awk_bin=/usr/bin/awk
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ newline 2
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=2
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--access-sw1-west.cfg.console
+ local verbose=true
++ export console_location=console
++ console_location=console
+ IFS=' 	
'
++ mkdir -p console
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ [[ -z true ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ declare -a execute__netwowrk_extract
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
+ local parent_dir=reports/172.16.0.5/misc
+ local SCRIPT_DIR=./scripts
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
+ IFS==
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ read -r key value
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ search_terms=()
+ declare -a search_terms
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ local awk_bin=/usr/bin/awk
++ export project_status=run.done
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
++ project_status=run.done
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ touch run.done
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ cat -n
++ export actions_logfile=console/run.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ search_pattern=192.168.0.100
+ IFS==
+ read -r key value
++ actions_logfile=console/run.console
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
+ IFS==
+ read -r key value
+ newline 2
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ grep -F 10.0.2.3
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
+ [[ extract == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ IFS==
}
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ [[ config == \h\e\l\p ]]
 network-object host 172.18.1.20
+ [[ config == \d\e\b\u\g ]]
 network-object host 192.168.1.11'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ which awk
++ which awk
+ local count=2
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
++ printf '%*s' 12 ''
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ [[ true == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
++ basename reports/172.16.0.5/misc/fw3
+ grep -F 10.10.10.10
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ grep -v '^#'
++ tr -d '\r'
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
++ grep -v '^\s*$'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ local 'indent=            '
+ [[ true == true ]]
+ configs_objects
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ cat -n
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ newline
+ result=0
+ [[ 0 -ne 0 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
++ export targets_location=targets
++ targets_location=targets
+ newline
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ result=0
+ exit 0
+ newline
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.frSwXiPEiy ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.frSwXiPEiy
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local first_search_entry=10.0.0.1
++ export project_status=run.done
++ project_status=run.done
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
++ touch run.done
+ local last_search_entry=10.0.0.1
+ local search_pattern
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n '' ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ] ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ set -euo pipefail
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-configs--ips.list ]'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ [[ platform =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ ((  count == 0  ))
+ [[ platform =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ newline
+ local target_platform=fortinet
+ (( i = 0 ))
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ echo
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ return 0
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ newline
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=fortinet
+ newline
+ [[ config =~ ^(logger|l)$ ]]
++ IFS=,
+ local count=1
++ mktemp -d
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 10.0.2.3
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ return 0
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ [[ config =~ ^(search|s)$ ]]
+ local parent_dir=reports/192.0.2.50/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ [[ config == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ IFS==
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ local first_search_entry=10.10.10.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
+ grep -F 192.168.0.1
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/172.16.0.5/misc/fw3.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ local 'indent=            '
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ true == true ]]
                  (in_json_header == 1) { next }
++ cut -d/ -f2
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ [[ -n {

  "vendor": "cisco",
                    # Add next to block
  "model": "",
                    /^[[:space:]]*next$/ {
  "version": "16.9",
                      blk = blk divisor " " $0;
  "domain": "",
                      next;
  "hostname": "branch-isr-02"
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
}
                    }

version 16.9

hostname branch-isr-02
                    END {

                      # No need for final print — all blocks end with end
object-group network Lantern-DMZ
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
+ sed '/^[[:space:]]*$/d'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.odm2VBh0mS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.odm2VBh0mS
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ alias print-message=message
++ alias print-newline=newline
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
++ alias pause=pause
++ alias print-line=print
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
++ alias print-file=print_file
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias relative-configpath=relative_configpath
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ search_pattern=172.16.0.5
+ mkdir -p reports/172.16.0.5/misc/.objects
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias validate-address=validate_address
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias warning-message=warning
++ export LC_ALL=C
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ logger =~ ^(console|o)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ export cache_location=.cache
++ cache_location=.cache
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ export logs_location=logs
++ logs_location=logs
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
++ mkdir -p logs
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ conf == \c\o\n\f ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
++ export project_status=run.done
+ [[ verbose =~ ^(export|r)$ ]]
++ project_status=run.done
+ [[ verbose =~ ^(extract|x)$ ]]
++ touch run.done
+ [[ true == true ]]
++ export targets_location=targets
+ [[ verbose =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
++ targets_location=targets
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
++ export targets_logfile=.cache/targets.jobs
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ (( i++ ))
++ targets_logfile=.cache/targets.jobs
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
  "domain": "global.dmz.example.net",
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ 0 -ne 0 ]]
+ configs_objects
+ [[ true == true ]]
+ local target_platform=fortinet
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ local verbose=true
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ echo
+ IFS=' 	
'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ debug=false
+ [[ -z '' ]]
+ case "${target_file}" in
+ dry_run=false
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ extract =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
+ grep -F 172.16.1.6
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ case "${target_file}" in
+ [[ extract =~ ^(logger|l)$ ]]
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ which awk
+ [[ extract == \d\r\y\-\r\u\n ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"

object network Sentinel-NAT
 host 203.0.113.25
+ [[ platform == \v\e\r\b\o\s\e ]]
 description Corporate NAT edge'
+ IFS==
+ for xitem in "${@}"
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ read -r key value
+ IFS==
+ read -r key value
+ result=0
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -n {
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
  "vendor": "cisco",
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
  "model": "ASA",
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ grep -F 192.168.0.100
+++ base64
+ sed '/^[[:space:]]*$/d'
+ cat -n
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+++ base64
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ cut -d/ -f2
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++++ basename ./scripts/devops-resources.shell
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
+++ tr -dc a-zA-Z0-9
+++ echo -n devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ search_pattern=192.0.2.50
+ return 0
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--branch-isr-02.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ sed '/^[[:space:]]*$/d'
+ [[ export =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ local 'extracted_configuration={
+ [[ logger =~ ^(extract|x)$ ]]
  "vendor": "cisco",
+ newline 2
+ [[ extract =~ ^(extract|x)$ ]]
  "model": "",
++ alias network-extract--helper=network_extract__helper
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local awk_bin=/usr/bin/awk
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ source ./scripts/configs-objects.shell
+ local parent_dir=reports/192.168.1.10/fortinet
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ extract =~ ^(platform|p)$ ]]
+ result=0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ extract == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ __CONFIGS_OBJECTS__=1
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ [[ -n '' ]]
++ mkdir -p console
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias serialize-object=configs_objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ case "${target_file}" in
+ local 'extracted_configuration={
  "version": "12.2",
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
  "domain": "",
  "model": "",
  "hostname": "campus-sw-access01"
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
}

version 12.2
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ result=0
 description Switch Mgmt
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ -n {
 network-object host 192.168.0.100
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
 network-object host 10.10.10.10'
  "vendor": "cisco",
+ case "${target_file}" in
+ result=0
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

++ alias parse-listings--helper=parse_listings__helper
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ source ./scripts/configs-objects.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ dirname -- ./scripts/network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ source ./scripts/devops-helpers.shell
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ alias serialize-object=configs_objects
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ local count=2
+ echo -en '{
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
}
+ (( i < count ))

ASA Version 9.12(4)
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
hostname dmz-fw2-backup
+ echo
domain-name global.dmz.example.net

+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ newline
+ [[ -n '' ]]
+ local count=1
+ (( i = 0 ))
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --platform=cisco
++ grep -v '^\s*$'
+ source ./scripts/configs-objects.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ sed '1{/^[[:space:]]*$/d;}'
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ result=0
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ exit 0
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.phJ3a2WubN ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local SCRIPT_DIR=./scripts
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.phJ3a2WubN
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ cat -n
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ grep -F 192.0.2.50
++ which awk
++ echo -e --platform=cisco
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local export_objects=true
+ IFS=' 	
+ [[ export =~ ^(extract|x)$ ]]
'
+ [[ -z '' ]]
+ debug=false
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ result=0
+ export console_output=false
+ [[ export =~ ^(search|s)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ export == \h\e\l\p ]]
+ mkdir -p logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ export == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
++ [[ -n '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ for xitem in "${@}"
++ readonly __CONFIGS_OBJECTS__=1
+ newline 2
++ __CONFIGS_OBJECTS__=1
+ IFS==
+ [[ false == true ]]
+ read -r key value
++ targets_location=targets
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias serialize-object=configs_objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOnaoqDmj0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOnaoqDmj0
++ export project_status=run.done
++ project_status=run.done
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ touch run.done
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console ]]
+ [[ logger =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ [[ logger =~ ^(platform|p)$ ]]
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ platform =~ ^(export|r)$ ]]
+ local first_search_entry=10.10.10.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw1.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ 0 -ne 0 ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ [[ true == true ]]
+ (( i = 0 ))
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
+ (( i < count ))
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ local search_pattern
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
+ echo
+ (( i++ ))
+ local target_platform=cisco
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export logs_location=logs
+ logs_location=logs
+ IFS==
+ read -r key value
+ mkdir -p logs
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ local last_search_entry=10.10.10.10
+ cat -n
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
+ print '{
  "vendor": "cisco",
+ local count=1
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
  "model": "",
+ (( i < count ))
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
  "version": "12.2",
+ echo
+ local 'indent=            '
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ cat -n
  "hostname": "campus-sw-access01"
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
}
+ [[ true == true ]]

+ (( i++ ))
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
  "domain": "",
+ grep -F 172.16.0.5
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ result=0
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ 7 -eq 0 ]]
+ [[ 0 -ne 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.k2xmqmqbst/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console --export --verbose
+ echo
+ newline
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ echo 10.0.0.1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo
++ echo -e --verbose
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
++ tr -d '\r'
+ (( i++ ))
+ oIFS=' 	
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ IFS==
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i++ ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ platform =~ ^(console|o)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ platform =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
object-group network Fortress-Wireless
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 description Secure wireless access layer
 network-object host 172.18.1.20
+ (( i < count ))
 network-object host 192.168.1.10'
+ local target_platform=cisco
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ sed '/^[[:space:]]*$/d'
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ export targets_location=targets
++ targets_location=targets
++ grep -v '^#'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --export
++ which awk
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ touch console/network-extract.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5fV3VGE2Uh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5fV3VGE2Uh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local first_search_entry=192.168.2.12
+ echo
+ echo
+ local last_search_entry=192.168.2.12
+ (( i++ ))
++ [[ -n '' ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+++ echo -n devops-resources.shell
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ] ]]
+++ base64
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ return 0
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ result=0
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ exit 0
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tFOIDc2mrk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tFOIDc2mrk
++++ basename ./scripts/devops-resources.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ newline
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ echo
+ output_dir=reports/10.10.10.10/cisco
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ result=0
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ 0 -ne 0 ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
++ [[ 5 -lt 4 ]]
+ newline 2
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ IFS==
+ read -r key value
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ configs_objects
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
++ printf '%*s' 12 ''
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ local 'indent=            '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console ]]
++ cut -d/ -f2
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo
+++ echo -n devops-resources.shell
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ script_filename=network-extract
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ grep -v '^\s*$'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ touch console/network-extract.console
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ local count=2
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ newline
+ (( i = 0 ))
++ alias exit-error=exit_error
+ echo
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias list-file=list_file
+ [[ logger =~ ^(config|c)$ ]]
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ newline
+ source ./scripts/devops-helpers.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ true == true ]]
++ [[ 5 -lt 4 ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ export =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ grep -v '^#'
+ source ./scripts/devops-helpers.shell
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ alias network-configs--helper=network_configs__helper
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ export == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ export == \d\e\b\u\g ]]
+ configs_objects
+ source ./scripts/configs-objects.shell
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
++ [[ -n '' ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console ]]
++ alias network-configs--helper=network_configs__helper
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w3539WxH6c/network-extract--perimeter-fw1.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ alias log-warn=log_warn
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias print-message=message
+ [[ -z x ]]
++ alias print-newline=newline
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
++ alias serialize-object=configs_objects
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ newline 2
++ alias system-metrics=system_metrics
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ cat -n
++ alias validate-address=validate_address
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console ]]
++ nl='\n'
++ export default_addresses=ips.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ case "${target_file}" in
++ default_matrix=matrix.json
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ 7 -eq 0 ]]
++ export cache_location=.cache
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--campus-sw-access01.cfg.console
++ cache_location=.cache
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ cfg == \c\f\g ]]
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ alias parse-cisco=main
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ cfg == \c\f\g ]]
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local first_search_entry=192.168.1.10
+ [[ logger =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ local last_search_entry=192.168.1.10
+ [[ logger =~ ^(export|r)$ ]]
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -z x ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ export logs_location=logs
+ local 'extracted_configuration={
+ logs_location=logs
  "vendor": "cisco",
  "model": "",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
  "version": "",
  "domain": "",
  "hostname": ""
+ mkdir -p logs
}

object-group network Wakanda-Core
+ [[ logger =~ ^(platform|p)$ ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
+ local count=2
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
 description Secure outbound concentrator'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.k2xmqmqbst/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ echo
+ result=0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
  "version": "",
  "domain": "",
+ (( i++ ))
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
  "hostname": ""
+ (( i < count ))
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ local count=1
object network Panther-Gateway
 host 10.0.2.3
+ ((  count == 0  ))
 description Secure outbound concentrator ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ true == true ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local parent_dir=reports/192.168.1.11/cisco
+ newline
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ newline
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/misc/fw1.cfg
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --verbose
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --export
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ local 'extracted_configuration={
 network-object 10.0.0.0 255.255.255.0
  "vendor": "cisco",

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ [[ -n {
 ip address 10.0.0.1 255.255.255.0
  "vendor": "cisco",

  "model": "",
object-group network Spider-Net
  "version": "",
++ basename reports/192.168.1.11/cisco/branch-isr-02
  "domain": "",
  "hostname": ""
 description Web access switches
}
+ result=0

object-group network Wakanda-Core
 description National Core Routing Zone
+ exit 0
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
+ script_filename=network-extract.shell
 host 10.0.2.3
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l1CTg98fAI ]]
 description Secure outbound concentrator ]]
+ script_filename=network-extract
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l1CTg98fAI
+ echo -en '{
+ export network_extract__console=console/network-extract.console
  "vendor": "cisco",
 network-object host 10.0.0.1
  "model": "",
 network-object 192.168.12.0 255.255.255.0'
+ network_extract__console=console/network-extract.console
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ touch console/network-extract.console
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.k2xmqmqbst/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ echo -e --export
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ oIFS=' 	
'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ for xitem in "${@}"
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ IFS==
 ip address 10.0.0.1 255.255.255.0
+ read -r key value

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
+ newline
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local count=1
+ echo -en '{
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
  "version": "",
  "domain": "",
+ (( i < count ))
  "hostname": ""
}

+ echo
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
 description Web access switches
 network-object host 10.0.0.1
+ (( i++ ))
 network-object 192.168.12.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--fg-campus-core.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local search_pattern
+ local export_objects=true
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
++ export jobs_location=jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console ]]
++ jobs_location=jobs
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ mkdir -p jobs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ export =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local verbose=true
+ [[ export =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ debug=false
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console ]]
+ for xitem in "${@}"
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
+ [[ ! -d reports/172.16.1.6/misc ]]
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMEOa8mLRi ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMEOa8mLRi
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local SCRIPT_DIR=./scripts
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local script_filename=cisco-configs.awk
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local count=1
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i < count ))
+ echo
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ (( i < count ))
+ newline
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--access-sw1-west.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ dry_run=false
+ [[ -z true ]]
+ IFS==
+ local count=1
+ [[ -z '' ]]
+ read -r key value
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ export console_output=false
+ echo
+ console_output=false
+ (( i++ ))
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ local target_platform=cisco
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ search_terms=()
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]]
+ case "${target_file}" in
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list != *,* ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--fg-branch-vpn-01.cfg.console
+ mapfile -t search_terms
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ platform =~ ^(search|s)$ ]]
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ configs_objects
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export console_location=console
++ console_location=console
+ result=0
++ mkdir -p console
+ exit 0
++ IFS=,
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EQwMlNZMmX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EQwMlNZMmX
+ case "${target_platform}" in
++ echo 192.168.2.12
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
+ [[ true == true ]]
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ logger =~ ^(config|c)$ ]]
+ result=0
+ local 'extracted_configuration={
+ declare -a execute__netwowrk_extract
+ exit 0
  "vendor": "cisco",
  "model": "",
+ [[ logger =~ ^(console|o)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hGi6C8zybi ]]

object-group network Avengers-Office
+ local 'extracted_configuration={
 description VLAN access layer
 network-object host 10.0.0.1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hGi6C8zybi
+ [[ logger =~ ^(export|r)$ ]]
 network-object 192.168.12.0 255.255.255.0'
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ result=0
version 12.2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
+ [[ -n {
 network-object host 192.168.0.1
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console ]]
  "model": "",
  "version": "",
  "domain": "",
 network-object host 192.168.0.100
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.10.10.10'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ case "${target_file}" in
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--access-sw1-west.cfg.console
version 12.2
hostname campus-sw-access01
+ local script_filename=cisco-configs.awk

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ result=0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ exit 0
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PNw3WX4FvE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PNw3WX4FvE
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --verbose
+ IFS==
+ read -r key value
+ grep -F 192.168.1.10
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ tr -d '\r'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ sed '1{/^[[:space:]]*$/d;}'
+ output_dir=reports/192.168.1.11/fortinet
+ [[ ! -d reports/192.168.1.11/fortinet ]]
++ IFS=,
++ echo 192.168.1.10
++ grep -v '^#'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ sed '1{/^[[:space:]]*$/d;}'
+++ base64
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++++ basename ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ local parent_dir=reports/172.18.1.20/misc
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ sed '/^[[:space:]]*$/d'
+ local 'indent=            '
+ newline 2
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
+ local count=2
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
++ IFS=,
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
++ echo 172.16.1.6
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ newline
+ local first_search_entry=192.168.100.100
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console ]]
+ local last_search_entry=192.168.100.100
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ newline 2
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ echo
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CoVsPcoNyF/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ newline
+ local count=1
+++ echo -n devops-resources.shell
+ (( i = 0 ))
+ IFS=' 	
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
+ local count=2
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
+ echo
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local awk_bin=/usr/bin/awk
+ source ./scripts/devops-helpers.shell
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ grep -v '^#'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(logger|l)$ ]]
'
+ [[ -z '' ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ debug=false
+ [[ -z '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ dry_run=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ logger == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m1IFFU9EtB ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m1IFFU9EtB
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local SCRIPT_DIR=./scripts
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
++ export project_status=run.done
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
++ project_status=run.done
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local script_filename=fortinet-configs.awk
++ touch run.done
++ alias serialize-object=configs_objects
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ basename reports/172.18.1.20/misc/fw1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VbshXp1IqQ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VbshXp1IqQ
++ printf '%*s' 12 ''
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ alias parse-cisco=main
+ local 'indent=            '
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ newline
+ mkdir -p logs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ script_filename=network-extract
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export network_extract__console=console/network-extract.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ network_extract__console=console/network-extract.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ touch console/network-extract.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local awk_bin=/usr/bin/awk
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ dirname -- ./scripts/network-extract.shell
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
++ echo -e --export
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ tr -d '\r'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
++ grep -v '^\s*$'
+ configs_objects
+ configs_objects
+ local first_search_entry=192.168.0.1
+ local last_search_entry=192.168.0.1
++ printf '%*s' 12 ''
++ grep -v '^#'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo -e --verbose
+ local 'indent=            '
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ local count=1
}
+ [[ -n '' ]]
+ (( i = 0 ))
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ echo
+ __NETWORK_EXTRACT__=1
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ LC_ALL=C
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
}
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]

+ local 'message=                .cache/resources/misc/switch3.conf'
version 16.9
hostname branch-isr-02

+ echo -e '                .cache/resources/misc/switch3.conf'
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ newline
 network-object host 198.51.100.75 ]]
+ local count=1
+ (( i = 0 ))
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ echo
++ dirname reports/10.0.0.1/misc/switch1.conf
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ local search_pattern
+ touch console/network-extract.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
++ export targets_location=targets
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-configs--ips.list ]'
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FpjGvD4Z4q ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FpjGvD4Z4q
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat -n
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ configs_objects
++ mktemp -d
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
++ echo 192.168.1.11
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ export =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "cisco",
+ [[ export =~ ^(console|o)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
+ [[ export =~ ^(export|r)$ ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n {
+ [[ export =~ ^(platform|p)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ export =~ ^(search|s)$ ]]

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ [[ export == \h\e\l\p ]]
 description Workstation LAN

object-group network Hydra-Edge
+ [[ export == \d\e\b\u\g ]]
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
  "version": "16.9",
  "domain": "",
+ [[ export == \d\r\y\-\r\u\n ]]
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ export == \v\e\r\b\o\s\e ]]

interface GigabitEthernet0/0/1
+ for xitem in "${@}"
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ IFS==
+ read -r key value
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ echo reports/172.18.1.20/misc/fw1.cfg
++ cut -d/ -f2
+ local parent_dir=reports/10.0.0.1/misc
+ local parent_dir=reports/192.168.0.100/cisco
+++ base64
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ result=0
++++ basename ./scripts/devops-resources.shell
+ output_dir=reports/192.168.100.100/cisco
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ ! -d reports/192.168.100.100/cisco ]]
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cgjdfx7a1v/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ which awk
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console --export --verbose
+++ tr -dc a-zA-Z0-9
++ basename reports/192.168.0.100/cisco/campus-sw-access01
++ basename reports/10.0.0.1/misc/switch1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fG4Rb7PGbN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fG4Rb7PGbN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ oIFS=' 	
++ alias print-message=message
'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ for xitem in "${@}"
+ newline 2
++ alias print-file=print_file
+ IFS==
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
+ read -r key value
+ local count=2
+ local 'extracted_configuration={
++ alias validate-address=validate_address
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
+ (( i = 0 ))
 ip address 172.16.1.6 255.255.255.0'
++ alias warning-message=warning
+ (( i < count ))
++ export LC_ALL=C
+ echo
++ LC_ALL=C
+ result=0
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
++ export 'nl=\n'
+ echo
  "version": "",
++ nl='\n'
  "domain": "",
  "hostname": ""
}
++ export default_addresses=ips.list

+ (( i++ ))
interface Vlan2
++ default_addresses=ips.list
 ip address 172.16.1.6 255.255.255.0 ]]
+ (( i < count ))
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ true == true ]]
++ logs_location=logs
++ mkdir -p logs
+ local first_search_entry=203.0.113.25
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local awk_bin=/usr/bin/awk
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ local last_search_entry=203.0.113.25
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ local count=1
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=172.18.1.20
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ mkdir -p reports/172.18.1.20/misc/.objects
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ return 0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ] ]]
++ readonly __DEVOPS_HELPERS__=1
+ local search_pattern
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS__=1
+ local verbose=true
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ IFS=' 	
++ [[ 5 -lt 4 ]]
'
+ [[ true == true ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local count=1
+ dry_run=false
+ [[ -z true ]]
+ ((  count == 0  ))
+ [[ -z '' ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ export console_output=false
+ console_output=false
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -z true ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ output_dir=reports/10.10.10.10/fortinet
+ (( i = 0 ))
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(search|s)$ ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
+ local search_pattern
+ echo
+ case "${target_file}" in
+ [[ search == \h\e\l\p ]]
+ (( i++ ))
+ [[ search == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ -z cisco ]]

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "domain": "",
  "hostname": ""
}

interface Vlan2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
 ip address 172.16.1.6 255.255.255.0'
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --verbose
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ echo 10.10.10.10
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'indent=            '
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ newline
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ (( i = 0 ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list
+ (( i < count ))
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ source ./scripts/configs-objects.shell
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ [[ -n '' ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo reports/10.0.0.1/misc/switch1.conf
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
++ cut -d/ -f2
++ tr -d '\r'
+ newline 2
++ cut -d/ -f2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ newline 2
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^\s*$'
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local count=2
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ which awk
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ newline
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/misc/switch3.conf
++ alias serialize-object=configs_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list
+ output_dir=reports/192.168.0.1/fortinet
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ search_pattern=192.168.0.100
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ search_pattern=10.0.0.1
++ export console_location=console
++ console_location=console
+ mkdir -p reports/10.0.0.1/misc/.objects
++ mkdir -p console
+ alias parse-cisco=main
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fg-branch-vpn-01.cfg.console
+ local verbose=true
+ IFS=' 	
'
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local search_pattern
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ search_pattern=192.168.1.11
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local parent_dir=reports/192.168.2.12/cisco
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ configs_objects
+ local first_search_entry=192.168.2.12
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local count=1
+ ((  count == 0  ))
+ [[ true == true ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ (( i < count ))
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ configs_objects
+ echo
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ grep -F 172.18.1.20
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
++ IFS=,
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ basename reports/192.168.2.12/cisco/branch-isr-02
++ echo 192.168.100.100
++ export actions_logfile=console/run.console
+ result=0
++ actions_logfile=console/run.console
+ [[ -n {
++ touch console/run.console
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ printf '%*s' 12 ''
++ dirname reports/172.16.1.6/misc/switch3.conf
++ dirname -- ./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ tr -d '\r'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
#hostname="fg-campus-core"
                  BEGIN {
#model="FortiGate-200F"
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }
config firewall address
                  /^{$/ { in_json_header = 1; next }
 edit "Cap-HQ"
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ which awk
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ grep -v '^\s*$'
+ [[ config =~ ^(config|c)$ ]]
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ grep -F 192.168.0.100
+ [[ config =~ ^(platform|p)$ ]]
+ local parent_dir=reports/192.168.1.10/misc
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/172.16.1.6/misc
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ grep -F 10.0.0.1
+ local 'indent=            '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
++ basename reports/192.168.1.10/misc/fw1
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ sed '/^[[:space:]]*$/d'
++ basename reports/172.16.1.6/misc/switch3
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ sed '/^[[:space:]]*$/d'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ output_dir=reports/203.0.113.25/cisco
+ touch console/network-extract.console
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ result=0
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local first_search_entry=192.168.1.10
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
++ cut -d/ -f2
++ printf '%*s' 12 ''
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-configs--ips.list ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BEXHnjegTx ]]
+ local 'indent=            '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BEXHnjegTx
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ ((  count == 0  ))
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ export targets_location=targets
++ targets_location=targets
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export targets_logfile=.cache/targets.jobs
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ targets_logfile=.cache/targets.jobs
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ true == true ]]
+ local search_pattern
+ result=0
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ newline 2
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=2
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ echo
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo
+ (( i < count ))
+ (( i++ ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n '' ]]
+ (( i++ ))
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ set -euo pipefail
+ [[ true == true ]]
+ [[ -z cisco ]]
+ export LC_ALL=C
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ newline
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch1.list
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ IFS==
+ read -r key value
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+++ base64
++ echo reports/172.16.1.6/misc/switch3.conf
+ cat -n
++++ basename ./scripts/devops-resources.shell
++ cut -d/ -f2
++ mktemp -d
+ cat -n
+++ tr -dc a-zA-Z0-9
++ cut -d/ -f2
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.8v87kjnmwh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ echo -n devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console --export --verbose
++ echo -e --platform=fortinet
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ return 0
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ oIFS=' 	
+ (( i++ ))
'
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ local 'extracted_configuration={
+ return 0
  "vendor": "cisco",
  "model": "ASA",
+ IFS==
  "version": "9.12(4)",
+ read -r key value
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ [[ true == true ]]

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console ]]
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
  "hostname": "dmz-fw2-backup"
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console ]]
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--

ASA Version 9.12(4)
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console

interface GigabitEthernet0/1
+ local 'extracted_configuration={
+ local SCRIPT_DIR=./scripts
  "vendor": "fortinet",
+ configs_objects
 nameif inside
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console ]]
 ip address 192.168.100.100 255.255.255.0
  "model": "FortiGate-200F",
+ source ./scripts/devops-helpers.shell
 description Inside LAN segment
+ local script_filename=cisco-configs.awk

+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ case "${target_file}" in
object network Titan-WLAN-Host
  "version": "",
 host 192.168.100.100
  "domain": "",
 description Backup inside NAT IP
  "hostname": "fg-campus-core"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
}


+ search_pattern=172.16.1.6
object-group network Sector-Wireless
++ [[ -n '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search =~ ^(platform|p)$ ]]
#hostname="fg-campus-core"
 description Staff WiFi clients
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDE22iT1uz
 network-object host 192.168.100.100
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 10.10.10.10 ]]
++ readonly __DEVOPS_HELPERS__=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDE22iT1uz
+ cat -n
++ __DEVOPS_HELPERS__=1
+ [[ cfg == \c\f\g ]]
+ mkdir -p reports/172.16.1.6/misc/.objects
++ IFS=,
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ [[ 5 -lt 4 ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ echo 192.168.0.1
+ [[ export =~ ^(logger|l)$ ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
+ export 'nl=\n'
  "model": "FortiGate-200F",
  "version": "",
+ nl='\n'
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ source ./scripts/devops-resources.shell
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ export =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ export =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ declare -a execute__netwowrk_extract
++ alias detect-vendor=detect_vendor
+ case "${target_platform}" in
++ alias exit-error=exit_error
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \d\r\y\-\r\u\n ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ export == \v\e\r\b\o\s\e ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
++ alias list-file=list_file
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ for xitem in "${@}"
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
++ alias log-error=log_error
                    blk = blk divisor " " $0;
                  }
+ IFS==
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
++ alias log-info=log_info
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ alias print-message=message
++ alias print-newline=newline
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias pause=pause
++ alias print-line=print
++ alias serialize-object=configs_objects
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ grep -F 192.168.2.12
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
++ alias system-metrics=system_metrics
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ alias validate-address=validate_address
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ alias warning-message=warning
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
++ export LC_ALL=C
 description Inside LAN segment

++ LC_ALL=C
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ export 'nl=\n'
++ nl='\n'
+ echo -en '{
++ export default_addresses=ips.list
  "vendor": "cisco",
++ default_addresses=ips.list
  "model": "ASA",
++ which awk
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++ export default_devices=devices.list
  "hostname": "dmz-fw2-backup"
++ default_devices=devices.list
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ alias parse-cisco=main
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ print '{
object network Titan-WLAN-Host
  "vendor": "fortinet",
 host 192.168.100.100
  "model": "FortiGate-200F",
 description Backup inside NAT IP
  "version": "",

  "domain": "",
object-group network Sector-Wireless
  "hostname": "fg-campus-core"
 description Staff WiFi clients
}
 network-object host 192.168.100.100

 network-object host 10.10.10.10'
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ [[ -z x ]]
end'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ cut -d/ -f2
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/switch1.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v7VVOs7TLf/network-extract--campus-sw-access01.cfg.console
+ local parent_dir=reports/192.168.1.11/fortinet
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ newline
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ local count=1
                      in_json_header = 0;
                      next;
+ (( i = 0 ))
                    }
                  }
+ (( i < count ))
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo
                    blk = $0;
                    next;
                  }
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
                  }
+ (( i < count ))
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
+ grep -F 192.168.1.10
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ touch console/network-extract.console
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list
+ search_pattern=203.0.113.25
+ [[ search =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ grep -F 172.16.1.6
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
++ echo 203.0.113.25
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local 'indent=            '
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ newline 2
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ newline
++ export jobs_location=jobs
++ jobs_location=jobs
+ cat -n
+ local count=1
++ mkdir -p jobs
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ result=0
+ newline
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBRLE2QXhC ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBRLE2QXhC
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
+ exit 0
+ echo
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4R9XxmZX6l ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4R9XxmZX6l
+ [[ true == true ]]
+ local search_pattern
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ 7 -eq 0 ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ykzd7pdvpj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console --export --verbose
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Ftk3o0loD/network-extract--fw1.cfg.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ read -r key value
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
++ which awk
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ykzd7pdvpj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ configs_objects
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
++ cut -d/ -f2
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
+ [[ config =~ ^(config|c)$ ]]
++ mkdir -p console
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local script_filename=fortinet-configs.awk
+ local SCRIPT_DIR=./scripts
+ local awk_bin=/usr/bin/awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ config =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local script_filename=cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ cat -n
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(search|s)$ ]]
+ newline
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ exit 0
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RRdtOlbKzN ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RRdtOlbKzN
+ configs_objects
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ which awk
+ search_pattern=192.168.1.11
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
++ printf '%*s' 12 ''
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--branch-isr-02.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+ (( i = 0 ))
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console ]]
+ local parent_dir=reports/192.168.100.100/cisco
+ [[ export =~ ^(console|o)$ ]]
+ return 0
+ case "${target_file}" in
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ local export_objects=true
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ (( i < count ))
+ echo
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ (( i++ ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ print '{
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
+ newline
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ local count=1
end'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
  "version": "v7.2.5.F",
++ IFS=,
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ (( i < count ))
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ echo 10.10.10.10
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local search_pattern
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --verbose
++ IFS=,
++ IFS=,
++ echo 192.168.2.12
++ echo 192.168.1.10
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hxwldxs57r/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config == \h\e\l\p ]]
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console --export --verbose
+ [[ config == \d\e\b\u\g ]]
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline 2
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ oIFS=' 	
'
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=2
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/fortinet
+ grep -F 192.168.1.11
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ newline
+ local count=1
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --verbose
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ configs_objects
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ newline 2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw1.cfg.console
++ export project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ project_status=run.done
++ touch run.done
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ read -r key value
+ grep -F 203.0.113.25
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=2
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ IFS=' 	
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ which awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console ]]
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ result=0
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ [[ 0 -ne 0 ]]
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ true == true ]]
++ which awk
++ echo -e --platform=cisco
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]]
+ [[ search =~ ^(config|c)$ ]]
+ search_pattern=192.168.0.1
+ [[ search =~ ^(console|o)$ ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ search_terms=()
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]]
+ for xitem in "${@}"
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list != *,* ]]
+ read -r key value
+ mapfile -t search_terms
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "ASA",
+ (( i < count ))
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ echo
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ (( i++ ))
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ (( i < count ))
 description External Internet-facing Interface
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
++ cut -d/ -f2
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ [[ -z '' ]]
+ script_helper=false
+ newline
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ result=0
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n {
+ [[ extract =~ ^(config|c)$ ]]
+ configs_objects
  "vendor": "cisco",
  "model": "ASA",
+ [[ extract =~ ^(console|o)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ extract =~ ^(export|r)$ ]]
hostname perimeter-fw1
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local parent_dir=reports/10.0.2.3/misc
+ [[ extract == \h\e\l\p ]]
domain-name edge.dc.example.com

+ [[ extract == \d\e\b\u\g ]]
interface GigabitEthernet0/0
 nameif outside
+ [[ extract == \d\r\y\-\r\u\n ]]
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ [[ extract == \v\e\r\b\o\s\e ]]

object network NAT-Edge
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
 host 203.0.113.25
 description Internet-bound IP NAT
+ (( i < count ))
+ cat -n

+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ case "${target_platform}" in
+ result=0
++ which awk
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ 0 -ne 0 ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
                      blk = "";
                      in_json_header = 0;
                    }
+ [[ true == true ]]

+ [[ extract =~ ^(logger|l)$ ]]
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ extract =~ ^(platform|p)$ ]]

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ [[ extract =~ ^(search|s)$ ]]
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
+ [[ extract == \h\e\l\p ]]
                      blk = blk divisor " " $0;
                      next;
+ [[ extract == \d\e\b\u\g ]]
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ dirname reports/10.0.0.1/misc/switch3.conf
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(config|c)$ ]]
++ basename reports/10.0.2.3/misc/fw3
+ [[ platform =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo 192.168.2.12
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ tr -d '\r'
++ echo 10.10.10.10
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ declare -a execute__netwowrk_extract
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
++ tr -d '\r'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ declare -a execute__netwowrk_extract
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local awk_bin=/usr/bin/awk
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ grep -v '^\s*$'
++ echo -e --platform=fortinet
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ echo
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local script_filename=cisco-configs.awk
++ which awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local parent_dir=reports/10.0.0.1/misc
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ config =~ ^(config|c)$ ]]
+ local search_pattern
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console ]]
+ [[ config =~ ^(search|s)$ ]]
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'extracted_configuration={
+ for xitem in "${@}"
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ IFS==
  "hostname": "dmz-fw2-backup"
+ read -r key value
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ cat -n
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ grep -F 192.168.0.1
+ search_pattern=192.168.100.100
+ mkdir -p reports/192.168.100.100/cisco/.objects
++ export targets_location=targets
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKZBZJTUOR ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKZBZJTUOR
+ grep -F 192.168.1.11
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ [[ platform =~ ^(config|c)$ ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ basename reports/10.0.0.1/misc/switch3
+ [[ platform =~ ^(extract|x)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ echo -en '{
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "ASA",
+ [[ platform =~ ^(logger|l)$ ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ echo -e --platform=cisco
}
+ [[ platform =~ ^(platform|p)$ ]]

ASA Version 9.12(4)
++ echo reports/10.0.2.3/misc/fw3.cfg
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local awk_bin=/usr/bin/awk
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(config|c)$ ]]
++ cut -d/ -f2
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ newline
+ [[ logger == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ local target_config=.cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ (( i++ ))
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ echo
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ return 0
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
++ printf '%*s' 12 ''
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ config =~ ^(platform|p)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ config =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
+ [[ config == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ for xitem in "${@}"
+ local first_search_entry=192.168.100.100
+ IFS==
+ read -r key value
+ local last_search_entry=192.168.100.100
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local search_pattern
+ case "${target_file}" in
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--branch-isr-02.cfg.console
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ IFS=,
++ echo 192.168.1.10
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
++ cut -d/ -f2
+ local 'indent=            '
++ echo -e --export
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ search_pattern=10.0.2.3
+ [[ platform =~ ^(export|r)$ ]]
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline 2
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=2
+ newline
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i = 0 ))
+ local count=1
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ local count=1
+ echo
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
++ which awk
++ echo reports/10.0.0.1/misc/switch3.conf
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ for xitem in "${@}"
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ cut -d/ -f2
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local export_objects=true
+ [[ logger =~ ^(logger|l)$ ]]
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ exit 0
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O7zrKOe4W1 ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O7zrKOe4W1
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ search_pattern=10.10.10.10
+ local awk_bin=/usr/bin/awk
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ cat -n
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ echo -e --platform=fortinet
+ local 'indent=            '
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z fortinet ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
++ printf '%*s' 12 ''
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ configs_objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
++ echo -e --verbose
+ local 'indent=            '
++ echo -e --export
+++ base64
++++ basename ./scripts/devops-resources.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
+ [[ true == true ]]
  set ip 192.168.2.12 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ newline
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ newline
  set alias "User LAN"
 next
end

+ local count=1
config firewall address
+ [[ logger =~ ^(config|c)$ ]]
 edit "Branch-Gateway"
+ (( i = 0 ))
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
  set subnet 192.168.2.12 255.255.255.255
+ (( i < count ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(logger|l)$ ]]
  set comment "Primary LAN gateway"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 next
+ echo
end ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ result=0
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ exit 0
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ logger == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CcIpahMv4F ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ return 0
+ [[ logger == \v\e\r\b\o\s\e ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CcIpahMv4F
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS==
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ true == true ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ grep -F 10.0.2.3
+ output_dir=reports/198.51.100.75/cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ case "${target_platform}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ local 'extracted_configuration={
                  }
  "vendor": "fortinet",
                  (in_json_header == 1) { next }
  "model": "FortiGate-60F",
                  /^[^[:space:]]/ {
  "version": "v7.2.5.F",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "domain": "",
                    blk = $0;
  "hostname": "fg-branch-vpn-01"
}
++ echo -e --platform=cisco

                    next;
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
                  }
  set name "Remote NAT"
                  {
  set srcintf "dmz"
                    blk = blk divisor " " $0;
  set dstintf "wan1"
                  }
  set srcaddr "10.10.10.10"
                  END {
  set dstaddr "203.0.113.10"
                    if (blk != "" && !seen[blk]++) print blk "\n";
  set action accept
                  }
  set logtraffic all
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
 next
end'
+ [[ platform =~ ^(config|c)$ ]]
+ result=0
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ platform =~ ^(export|r)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ platform =~ ^(extract|x)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ sed '/^[[:space:]]*$/d'
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+++ echo -n devops-resources.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo -e --export
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'indent=            '
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ print '{
+ [[ verbose == \d\e\b\u\g ]]
  "vendor": "fortinet",
+ [[ export == \h\e\l\p ]]
  "model": "FortiGate-60F",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ verbose == \v\e\r\b\o\s\e ]]
}

+ local verbose=true
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ IFS=' 	
 edit 13
'
  set name "Remote NAT"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
  set srcintf "dmz"
+ [[ export == \d\e\b\u\g ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
  set dstintf "wan1"
+ debug=false
+ [[ true == true ]]
  set srcaddr "10.10.10.10"
+ [[ export == \v\e\r\b\o\s\e ]]
  set dstaddr "203.0.113.10"
+ [[ -z '' ]]
  set action accept
+ for xitem in "${@}"
  set logtraffic all
+ dry_run=false
 next
end'
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ source ./scripts/devops-helpers.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ [[ -n '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ local count=1
+ [[ -n {
+ search_terms=()
+ (( i = 0 ))
++ readonly __DEVOPS_HELPERS__=1
+ newline 2
+ newline
  "vendor": "fortinet",
+ declare -a search_terms
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local count=1
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]

++ command -v -- ./scripts/network-extract.shell
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ mapfile -t search_terms
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
  set action accept
  set logtraffic all
 next
end ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ result=0
+ [[ 0 -ne 0 ]]
+ configs_objects
+ [[ true == true ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
++ __DEVOPS_HELPERS__=1
+ echo
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ result=0
                    next;
                  }
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
                  {
                    blk = blk divisor " " $0;
+ [[ 0 -ne 0 ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ true == true ]]
                ' reports/10.0.0.1/misc/switch3.conf
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ grep -F 10.0.0.1
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias parse-listings--helper=parse_listings__helper
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
++ echo -e --verbose
+ newline
+ newline
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ message '                .cache/resources/misc/switch1.conf'
+ source ./scripts/configs-objects.shell
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ newline 2
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ sed '/^[[:space:]]*$/d'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local count=2
+ local export_objects=true
+ (( i = 0 ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ echo
+ [[ export == \d\e\b\u\g ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
++ tr -d '\r'
+ read -r key value
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ local count=2
+ result=0
+ newline 2
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ cat -n
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ local count=2
+ (( i = 0 ))
+ echo
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ alias parse-cisco=main
+ local search_pattern
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z x ]]
+ [[ true == true ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ grep -v '^#'
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOq7IYJOk9 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOq7IYJOk9
++ echo -e --verbose
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
++ which awk
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ echo
+ export console_output=false
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.168.100.100
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ newline
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ search_terms=()
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ declare -a search_terms
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]

+ case "${target_file}" in
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ cat reports/10.0.0.1/misc/.objects/switch3.list
                      next;
                    }

+ newline
                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ cat -n
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ local last_search_entry=198.51.100.75
+ (( i = 0 ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ] ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ read -r key value
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local count=1
+ ((  count == 0  ))
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ configs_objects
+ newline 2
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ local count=2
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local parent_dir=reports/192.168.0.1/fortinet
+ [[ -z cisco ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ tr -d '\r'
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ search_pattern=10.10.10.10
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ verbose =~ ^(search|s)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ verbose == \h\e\l\p ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ local verbose=true
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ newline
+ [[ -z '' ]]
+ dry_run=false
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ cat -n
+ console_output=false
+ echo
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ grep -v '^\s*$'
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ IFS=,
++ echo 198.51.100.75
+ grep -F 10.10.10.10
+ cat -n reports/192.168.1.10/misc/fw3.cfg
++ grep -v '^#'
++ echo -e --export
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ [[ export =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R7e6e0wHoZ/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console ]]
+ local export_objects=true
+ case "${target_file}" in
+ [[ export =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ script_filename=network-extract.shell

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ local count=1
  set comment "Vision’s quantum channel"
+ script_filename=network-extract
 next
end'
+ (( i = 0 ))
+ export network_extract__console=console/network-extract.console
+ (( i < count ))
+ result=0
+ echo
+ network_extract__console=console/network-extract.console
+ [[ -n {
+ (( i++ ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i < count ))
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ return 0
 next
end ]]
+ touch console/network-extract.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console ]]
+ local parent_dir=reports/10.10.10.10/fortinet
+ case "${target_file}" in
+ local parent_dir=reports/192.168.2.12/fortinet
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
++ which awk
++ tr -d '\r'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ sed '/^[[:space:]]*$/d'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ newline

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
++ grep -v '^\s*$'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ sed '/^[[:space:]]*$/d'
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ local count=1
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ local count=1
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
++ grep -v '^#'
++ echo -e --verbose
++ echo -e --export
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i++ ))
+ [[ -z fortinet ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ export =~ ^(logger|l)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ result=0
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ exit 0
+ configs_objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uwMlbrjtjI ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uwMlbrjtjI
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console ]]
+ case "${target_platform}" in
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ case "${target_file}" in
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e01PZkihVW/network-extract--switch3.conf.console
+ configs_objects
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ cfg == \c\f\g ]]
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ cfg == \c\f\g ]]
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ result=0
+ [[ true == true ]]
+ [[ 7 -eq 0 ]]
+ [[ 0 -ne 0 ]]
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ print '{
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ykzd7pdvpj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ local search_pattern
  "vendor": "cisco",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console ]]
interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console --export --verbose
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0PLgPGcakD/network-extract--switch3.conf.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ oIFS=' 	
  "version": "",
'
  "domain": "",
  "hostname": ""
+ result=0
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ for xitem in "${@}"
+ [[ 0 -ne 0 ]]
+ IFS==
+ echo -en '{
+ [[ true == true ]]
  "vendor": "cisco",
+ read -r key value
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local search_pattern
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ grep -F 10.10.10.10
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ local 'indent=            '
+ echo
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local first_search_entry=198.51.100.75
+ (( i < count ))
+ (( i < count ))
+ local last_search_entry=198.51.100.75
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-configs--ips.list ]'
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
++ echo -e --verbose
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ search_terms=()
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
++ cut -d/ -f2
+ [[ true == true ]]
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local parent_dir=reports/192.168.1.10/misc
+ local count=1
+ (( i = 0 ))
+ output_dir=reports/198.51.100.75/misc
+ (( i < count ))
+ echo
+ [[ ! -d reports/198.51.100.75/misc ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ cut -d/ -f2
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oNAMPSwVhf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oNAMPSwVhf
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ newline 2
+ newline 2
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ output_dir=reports/192.168.100.100/fortinet
+ for xitem in "${@}"
+ IFS==
++ cut -d/ -f2
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ read -r key value
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local count=2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ local count=2
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ echo
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.krRGhcpeBj/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ result=0
+ [[ 0 -ne 0 ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
++ basename reports/192.168.1.10/misc/fw3
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ cat -n
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ dry_run=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ command -v -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ grep -v '^\s*$'
++ echo -e --verbose
++ grep -v '^#'
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ local search_pattern
++ dirname -- ./scripts/network-extract.shell
+ cat -n
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress
+ search_pattern=192.168.0.1

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat -n
+ output_dir=reports/198.51.100.75/fortinet
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local search_pattern
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
++ tr -d '\r'
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ return 0
+ [[ false == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ result=0
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list
+ exit 0
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1AiRAUdafH ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1AiRAUdafH
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
 description Remote site uplink
 network-object host 192.168.2.12
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
 network-object host 198.51.100.75 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ echo -en '{
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
  "vendor": "cisco",
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
  "model": "",
  "version": "16.9",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
++ grep -v '^\s*$'
 network-object host 198.51.100.75'
+ configs_objects
++ dirname -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
++ echo reports/192.168.1.10/misc/fw3.cfg
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
++ cut -d/ -f2
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ return 0
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console ]]
+ script_helper=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
+ search_terms=()
++ dirname reports/192.168.1.10/misc/switch1.conf
++ which awk
+ case "${target_platform}" in
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ echo -e --config=.cache/resources/misc/fw3.cfg
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '

                    BEGIN {
+ declare -a search_terms
                      blk = "";
                      in_json_header = 0;
                    # Add next to block
                    }

                    # Skip blank lines
                    /^[[:space:]]*next$/ {
                    /^[[:space:]]*$/ { next }
                      blk = blk divisor " " $0;

                      next;
                    # Skip JSON preamble
                    }
                    /^{$/            { in_json_header = 1; next }

                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    # Finalize block at end
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]]
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                    (in_json_header == 1) { next }
                      blk = "";

                      next;
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list != *,* ]]
                    }

                    # Skip platform metadata
+ mapfile -t search_terms
                    # Accumulate middle lines
                    /^#(hostname|model|config-version)=/ { next }
                    {

                      blk = blk divisor " " $0;
                    # Start of a new block
                    }
                    /^config / {

                      if (blk != "") print blk;
                    END {
                      blk = $0;
                      # No need for final print — all blocks end with end
                      next;
                    }
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ newline
++ cut -d/ -f2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ output_dir=reports/198.51.100.75/cisco
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local count=2
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ search_pattern=192.168.1.10
+ local first_search_entry=10.10.10.10
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ IFS==
+ result=0
+ mkdir -p reports/192.168.1.10/misc/.objects
+ read -r key value
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local last_search_entry=10.10.10.10
+ exit 0
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bU9NYlQTSm ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bU9NYlQTSm
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ grep -F 10.10.10.10
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-configs--ips.list ]'
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.168.2.12
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ newline
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_objects
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local parent_dir=reports/192.168.1.10/misc
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--dmz-fw2-backup.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--dmz-fw2-backup.cfg.console
++ tr -d '\r'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
++ grep -v '^\s*$'
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
++ IFS=,
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo 198.51.100.75
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^#'
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ result=0
+ [[ cfg == \c\f\g ]]
+ [[ 0 -ne 0 ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ which awk
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ result=0
++ which awk
+ [[ 0 -ne 0 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ basename reports/192.168.1.10/misc/switch1
+ newline
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ grep -F 192.168.0.1
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ search_pattern=203.0.113.25
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ case "${target_platform}" in
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console ]]
                  /^[^[:space:]]/ {
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ configs_objects
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-campus-core.cfg.console
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ grep -F 192.168.1.10
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j0KF4jwNWl ]]
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j0KF4jwNWl
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ IFS=,
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo 192.168.100.100
+ local awk_bin=/usr/bin/awk
+ sed '/^[[:space:]]*$/d'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ cat -n
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ declare -a execute__netwowrk_extract
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-configs--ips.list ]'
+ local count=1
+ local parent_dir=reports/192.168.2.12/fortinet
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
++ IFS=,
+ (( i < count ))
++ echo 198.51.100.75
++ printf '%*s' 12 ''
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local 'indent=            '
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e7N28bkesX ]]
++ command -v -- ./scripts/network-extract.shell
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e7N28bkesX
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m0UtoBiCZX ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m0UtoBiCZX
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local parent_dir=reports/198.51.100.75/cisco
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ newline
+ [[ true == true ]]
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
+ (( i++ ))
+ return 0
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ case "${target_file}" in
+ result=0
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ output_dir=reports/10.10.10.10/misc
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -d reports/10.10.10.10/misc ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo
+ (( i++ ))
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xjGzAVVfIZ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xjGzAVVfIZ
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.1.10/misc/switch1.conf
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ case "${target_platform}" in
++ dirname -- ./scripts/network-extract.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ cut -d/ -f2
++ echo 198.51.100.75
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ grep -F 203.0.113.25
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ extract =~ ^(search|s)$ ]]
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ declare -a execute__netwowrk_extract
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local search_pattern
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ sed '/^[[:space:]]*$/d'
+ local script_filename=fortinet-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fg-testing-config.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=192.168.1.10
+ cat -n
+ mkdir -p reports/192.168.1.10/misc/.objects
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ which awk
++ which awk
+ local 'indent=            '
+ [[ true == true ]]
+ local 'indent=            '
+ cat -n
+ [[ true == true ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \h\e\l\p ]]
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ for xitem in "${@}"
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ read -r key value
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ cut -d/ -f2
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ return 0
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ local awk_bin=/usr/bin/awk
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B8yKoohQMq ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B8yKoohQMq
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local count=1
  "hostname": ""
}

object-group network Krypton-Cloud
+ (( i = 0 ))
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ (( i < count ))

object network External-Failover
 host 198.51.100.75
+ echo
 description Secondary outbound route for edge'
+ (( i++ ))
++ echo -e --platform=cisco
+ (( i < count ))
+ result=0
+ [[ -n {
+ return 0
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GVmb9OMTS7 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GVmb9OMTS7
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
++ which awk
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ case "${target_platform}" in
++ printf '%*s' 12 ''
++ IFS=,
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ echo 203.0.113.25
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ local 'indent=            '
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ cat -n
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ newline
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
+ local count=1
 description Secondary outbound route for edge ]]
+ output_dir=reports/192.168.2.12/misc
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ ! -d reports/192.168.2.12/misc ]]
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ (( i = 0 ))

object network External-Failover
+ (( i < count ))
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ search_pattern=198.51.100.75
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ search_pattern=192.168.2.12
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.168.1.10
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2XOOdoA6K9/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ local 'extracted_configuration={
end'
+ [[ platform =~ ^(console|o)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ result=0
  "domain": "",
+ [[ platform =~ ^(export|r)$ ]]
  "hostname": "fg-branch-vpn-01"
}

+ [[ -n {
#hostname="fg-branch-vpn-01"
  "vendor": "fortinet",
#model="FortiGate-60F"
  "model": "FortiGate-200F",
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "",
+ newline
  "domain": "",
  "hostname": "fg-campus-core"
}
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(logger|l)$ ]]


config system interface
+ local count=1
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
#hostname="fg-campus-core"
  set alias "Branch ISP"
+ (( i = 0 ))
#model="FortiGate-200F"
 next

end
config system interface

 edit "wifi"
+ (( i < count ))
config firewall address
  set ip 192.168.100.100 255.255.255.0
+ [[ platform =~ ^(platform|p)$ ]]
  set alias "Wireless VLAN"
 edit "Branch-Public"
 next
  set subnet 198.51.100.75 255.255.255.255
end
  set comment "Branch NAT"

 next
config firewall address
+ echo
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
end'
+ local target_platform=cisco
  set comment "Guest WiFi node"
 next
end

+ [[ platform =~ ^(search|s)$ ]]
+ result=0
config firewall address
+ (( i++ ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ platform == \h\e\l\p ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ platform == \d\e\b\u\g ]]
}
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
 edit "Wanda-Field"

  set subnet 192.168.100.100 255.255.255.255
#hostname="fg-branch-vpn-01"
  set comment "Wanda’s chaos relay"
+ (( i < count ))
 next
#model="FortiGate-60F"
end ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--fw3.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ newline 2
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ IFS=,
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
++ echo 10.10.10.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ print '{

  "vendor": "fortinet",
#hostname="fg-campus-core"
  "model": "FortiGate-60F",
#model="FortiGate-200F"
  "version": "v7.2.5.F",

  "domain": "",
config system interface
  "hostname": "fg-branch-vpn-01"
 edit "wifi"
}
  set ip 192.168.100.100 255.255.255.0

  set alias "Wireless VLAN"
#hostname="fg-branch-vpn-01"
 next
#model="FortiGate-60F"
end
#config-version=FGT_60F-v7.2.5.F-build1517-230421


config firewall address
config system interface
 edit "Titan-WLAN-Host"
 edit "wan1"
  set subnet 192.168.100.100 255.255.255.255
  set ip 198.51.100.75 255.255.255.0
  set comment "Guest WiFi node"
  set alias "Branch ISP"
 next
 next
end
end


config firewall address
config firewall address
 edit "Wanda-Field"
 edit "Branch-Public"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
  set subnet 192.168.100.100 255.255.255.255
 next
  set comment "Wanda’s chaos relay"
end'
 next
end'
+ declare -a execute__netwowrk_extract
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n {
  "version": "v7.2.5.F",
  "vendor": "fortinet",
  "domain": "",
  "model": "FortiGate-200F",
  "hostname": "fg-branch-vpn-01"
  "version": "",
}
  "domain": "",

  "hostname": "fg-campus-core"
#hostname="fg-branch-vpn-01"
}
#model="FortiGate-60F"

#config-version=FGT_60F-v7.2.5.F-build1517-230421
#hostname="fg-campus-core"

#model="FortiGate-200F"
config system interface

 edit "wan1"
config system interface
  set ip 198.51.100.75 255.255.255.0
 edit "wifi"
  set alias "Branch ISP"
  set ip 192.168.100.100 255.255.255.0
 next
  set alias "Wireless VLAN"
end
 next

end
config firewall address

 edit "Branch-Public"
config firewall address
  set subnet 198.51.100.75 255.255.255.255
 edit "Titan-WLAN-Host"
  set comment "Branch NAT"
  set subnet 192.168.100.100 255.255.255.255
 next
  set comment "Guest WiFi node"
end ]]
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ echo -en '{
#model="FortiGate-60F"
  "vendor": "fortinet",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "model": "FortiGate-200F",

  "version": "",
config system interface
  "domain": "",
 edit "wan1"
  "hostname": "fg-campus-core"
  set ip 198.51.100.75 255.255.255.0
}
  set alias "Branch ISP"

 next
#hostname="fg-campus-core"
end
#model="FortiGate-200F"


config firewall address
config system interface
 edit "Branch-Public"
 edit "wifi"
  set subnet 198.51.100.75 255.255.255.255
  set ip 192.168.100.100 255.255.255.0
  set comment "Branch NAT"
  set alias "Wireless VLAN"
 next
 next
end'
end

++ printf '%*s' 12 ''
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ local 'indent=            '
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ true == true ]]
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
+ case "${target_platform}" in

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ newline
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    # Add next to block
                  BEGIN {
                    /^[[:space:]]*next$/ {
                    in_json_header = 0;
                      blk = blk divisor " " $0;
                    blk = "";
                      next;
                  }
                    }
                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                    # Finalize block at end
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                  /^}$/ {
+ sed '1{/^[[:space:]]*$/d;}'
                    if (in_json_header == 1) {
                      if (blk != "" && !seen[blk]++) print blk;
                      in_json_header = 0;
+ local count=1
                      blk = "";
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
                      next;
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
                    }
                      next;
+ echo
                    }

                  }
                    # Accumulate middle lines
                  (in_json_header == 1) { next }
                    {
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
                      blk = blk divisor " " $0;
                  /^[^[:space:]]/ {
                    }
+ (( i++ ))

                    if (blk != "" && !seen[blk]++) print blk "\n";
                    END {
                    blk = $0;
                      # No need for final print — all blocks end with end
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
                    }
                    next;
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
                  }
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
                  {
                    blk = blk divisor " " $0;
+ [[ logger =~ ^(export|r)$ ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ newline
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ which awk
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ (( i = 0 ))
+ grep -F 192.168.2.12
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ grep -F 198.51.100.75
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MZFvidJrN9 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MZFvidJrN9
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dGXm7ZLgI2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dGXm7ZLgI2
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ result=0
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console ]]
++ which awk
+ cat -n
+ newline 2
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--perimeter-fw1.cfg.console
+ local count=2
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --export
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ local count=2
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ [[ true == true ]]
+ echo
}

ASA Version 9.12(4)
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ echo
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
  "domain": "global.dmz.example.net",
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
}

+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ true == true ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ 0 -ne 0 ]]
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ local count=1
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ result=0
+ echo
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ newline
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ configs_objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ return 0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ (( i = 0 ))
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ echo
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ (( i++ ))
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
++ IFS=,
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
++ echo 192.168.2.12
++ dirname reports/198.51.100.75/misc/fw1.cfg
++ echo -e --export
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ cat -n
+ [[ export =~ ^(export|r)$ ]]
+ cat -n
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ local export_objects=true
 next
end'
+ [[ export =~ ^(extract|x)$ ]]
+ result=0
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ export =~ ^(platform|p)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ export =~ ^(search|s)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ [[ export == \h\e\l\p ]]
 next
end ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.obx2kc4AxJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.obx2kc4AxJ
+ local count=2
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ which awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ newline
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ newline
+ local count=1
#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))

config firewall address
+ local count=1
+ echo
+ (( i = 0 ))
 edit "Public-Test"
+ (( i++ ))
+ (( i < count ))
  set subnet 203.0.113.25 255.255.255.255
+ (( i < count ))
  set comment "Public NAT exposure for Red Skull trap"
+ echo
 next
end'
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ configs_objects
+ configs_objects
+ local parent_dir=reports/198.51.100.75/misc
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KuySYbERVP/network-extract--switch1.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ return 0
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console ]]
++ echo -e --verbose
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console ]]
+ [[ export =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ IFS==
+ read -r key value
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/198.51.100.75/misc/fw1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ true == true ]]

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ result=0
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n {
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ configs_objects

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ printf '%*s' 12 ''
++ echo -e --verbose
+ local 'indent=            '
+ newline 2
+ [[ true == true ]]
+ local parent_dir=reports/192.168.100.100/fortinet
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ print '{
  "vendor": "cisco",
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
}
+ [[ true == true ]]

+ message '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ result=0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ exit 0
 network-object host 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ message '                .cache/resources/misc/fw1.cfg'
 host 10.10.10.10
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SthaqLmHFt ]]
 description Guest NAT'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SthaqLmHFt
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
+ local parent_dir=reports/198.51.100.75/fortinet
+ echo
  "model": "",
  "version": "",
  "domain": "",
+ (( i++ ))
  "hostname": ""
}
+ (( i < count ))

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ true == true ]]
+ local search_pattern
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ [[ verbose =~ ^(export|r)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--branch-isr-02.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local parent_dir=reports/198.51.100.75/cisco
++ echo reports/198.51.100.75/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ cut -d/ -f2
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ tr -d '\r'
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ newline 2
++ grep -v '^\s*$'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ local search_pattern
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
++ grep -v '^#'
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DzuufkIhM5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DzuufkIhM5
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ tr -d '\r'
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
++ cut -d/ -f2
+ local 'extracted_configuration={
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.edDxIhaUqJ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.edDxIhaUqJ

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
++ grep -v '^\s*$'
++ cut -d/ -f2
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ search_pattern=198.51.100.75
+ local search_pattern
+ mkdir -p reports/198.51.100.75/misc/.objects
++ grep -v '^#'
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ print '{
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
++ cut -d/ -f2
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local parent_dir=reports/203.0.113.25/fortinet
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ search_pattern=192.168.100.100
+ newline
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ search_pattern=198.51.100.75
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ configs_objects
+ local first_search_entry=203.0.113.25
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_platform}" in
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ local count=1
                    in_json_header = 0;
                    blk = "";
+ (( i = 0 ))
                  }
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ (( i++ ))
                  }
                  {
                    blk = blk divisor " " $0;
+ (( i < count ))
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ grep -F 198.51.100.75
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ search_pattern=198.51.100.75
+ local count=2
+ (( i = 0 ))
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local parent_dir=reports/10.10.10.10/misc
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ grep -F 192.168.100.100
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

++ basename reports/10.10.10.10/misc/fw3
                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ grep -F 198.51.100.75
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
++ cut -d/ -f2
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ newline
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ configs_objects
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ grep -F 198.51.100.75
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ local search_pattern
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ search_pattern=203.0.113.25
+ cat -n
+ mkdir -p reports/203.0.113.25/fortinet/.objects
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ output_dir=reports/203.0.113.25/misc
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/203.0.113.25/misc ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo reports/10.10.10.10/misc/fw3.cfg
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat -n
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat -n
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/misc
+ return 0
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ output_dir=reports/203.0.113.25/misc
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ [[ ! -d reports/203.0.113.25/misc ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ case "${target_platform}" in
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
++ basename reports/192.168.2.12/misc/fw1
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ cat -n
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ search_pattern=10.10.10.10

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
+ mkdir -p reports/10.10.10.10/misc/.objects
                      blk = blk divisor " " $0;
                      next;
+ grep -F 203.0.113.25
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ local SCRIPT_PATH=./scripts/network-extract.shell
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ local SCRIPT_DIR=./scripts
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ true == true ]]
+ local search_pattern
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ result=0
+ [[ 0 -ne 0 ]]
++ echo reports/192.168.2.12/misc/fw1.cfg
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
++ cut -d/ -f2
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ grep -F 10.10.10.10
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGjdfX7A1v/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--fg-branch-vpn-01.cfg.console
+ sed '/^[[:space:]]*$/d'
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ cat -n
++ IFS=,
++ echo 203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkqZ7z1M9d ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkqZ7z1M9d
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console ]]
++ which awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.K2XmQMQbST/network-extract--dmz-fw2-backup.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
++ IFS=,
+ [[ true == true ]]
++ echo 203.0.113.25
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ result=0
+ declare -a execute__netwowrk_extract
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EeV43u0V5J ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D21mAvScgv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EeV43u0V5J
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D21mAvScgv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ cat -n
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zRFnzcXqWd ]]
+ local 'indent=            '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zRFnzcXqWd
+ [[ true == true ]]
+ grep -F 192.168.2.12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ sed '/^[[:space:]]*$/d'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ message '                .cache/resources/misc/fw3.cfg'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ return 0
++ printf '%*s' 12 ''
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q8BZpr4Lof ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q8BZpr4Lof
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat -n
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hxWLdxS57r/network-extract--fw3.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print '{
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console ]]
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console ]]
+ result=0
+ case "${target_file}" in
+ exit 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.odm2VBh0mS ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.odm2VBh0mS
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
+ sed '1{/^[[:space:]]*$/d;}'
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console ]]
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8V87KJNmwH/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ configs_objects
+ newline
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ false == true ]]
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5fV3VGE2Uh ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5fV3VGE2Uh
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ configs_objects
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw1
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
++ echo reports/203.0.113.25/misc/fw1.cfg
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo
+ (( i++ ))
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console ]]
+ return 0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ykZd7pDvpJ/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fG4Rb7PGbN ]]
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fG4Rb7PGbN
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDE22iT1uz ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDE22iT1uz
