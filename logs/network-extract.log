+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWZZkKDCvY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWZZkKDCvY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2MzAzOTY4MjAwMAo
++ divisor=MTc0ODc0Nzg2MzAzOTY4MjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWZZkKDCvY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWZZkKDCvY
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9TQlloe5gd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9TQlloe5gd
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2MzE2NzU1MjAwMAo
++ divisor=MTc0ODc0Nzg2MzE2NzU1MjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9TQlloe5gd ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9TQlloe5gd
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xOApHAmpBX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xOApHAmpBX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2MzM0ODY2MzAwMAo
++ divisor=MTc0ODc0Nzg2MzM0ODY2MzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xOApHAmpBX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xOApHAmpBX
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VZqhXkuNar
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VZqhXkuNar
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2MzQ4NDM5NzAwMAo
++ divisor=MTc0ODc0Nzg2MzQ4NDM5NzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VZqhXkuNar ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VZqhXkuNar
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ixD40aroKG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ixD40aroKG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2MzYyNTUyMzAwMAo
++ divisor=MTc0ODc0Nzg2MzYyNTUyMzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
+ sed '1{/^[[:space:]]*$/d;}'
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ixD40aroKG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ixD40aroKG
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OwifC99SXj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OwifC99SXj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2Mzc1NDM5NjAwMAo
++ divisor=MTc0ODc0Nzg2Mzc1NDM5NjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
+ sed '1{/^[[:space:]]*$/d;}'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OwifC99SXj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OwifC99SXj
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wC0tTmeOOv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wC0tTmeOOv
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2Mzg5MzY0MjAwMAo
++ divisor=MTc0ODc0Nzg2Mzg5MzY0MjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wC0tTmeOOv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wC0tTmeOOv
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cztsVSp65s
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cztsVSp65s
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NDAyMTI4ODAwMAo
++ divisor=MTc0ODc0Nzg2NDAyMTI4ODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cztsVSp65s ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cztsVSp65s
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tyJ9kPwLD2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tyJ9kPwLD2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NDI2MTQ5NDAwMAo
++ divisor=MTc0ODc0Nzg2NDI2MTQ5NDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
++ dirname .cache/resources/misc/fw1.cfg
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tyJ9kPwLD2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tyJ9kPwLD2
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wc8NNFC63j
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wc8NNFC63j
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NDM5MTQyMjAwMAo
++ divisor=MTc0ODc0Nzg2NDM5MTQyMjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wc8NNFC63j ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wc8NNFC63j
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5TEzTF6SUm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5TEzTF6SUm
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NDU0MDIyODAwMAo
++ divisor=MTc0ODc0Nzg2NDU0MDIyODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5TEzTF6SUm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5TEzTF6SUm
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LCkGqP6X8s
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LCkGqP6X8s
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NDY3NzI3NDAwMAo
++ divisor=MTc0ODc0Nzg2NDY3NzI3NDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LTPmGvpdpW/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LCkGqP6X8s ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LCkGqP6X8s
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoZRLH4Bg7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoZRLH4Bg7
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L9Co0tUkml
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L9Co0tUkml
+ export 'nl=\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ export logs_location=logs
++ nl='\n'
++ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DxUc6TiYD8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DxUc6TiYD8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKFbrmPfqR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKFbrmPfqR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ mktemp -d
++ alias detect-vendor=detect_vendor
+ set -euo pipefail
++ alias exit-error=exit_error
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+++ base64
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ base64
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cKpb2kY8jD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cKpb2kY8jD
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ set -euo pipefail
++ alias log-error=log_error
+ export LC_ALL=C
+ set -euo pipefail
++ alias log-info=log_info
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ export divisor=MTc0ODc0Nzg2NTU2MDM0MjAwMAo
++ alias relative-configpath=relative_configpath
++ divisor=MTc0ODc0Nzg2NTU2MDM0MjAwMAo
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc0Nzg2NTU2MTA5MDAwMAo
++ divisor=MTc0ODc0Nzg2NTU2MTA5MDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias validate-address=validate_address
++ alias warning-message=warning
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ mktemp -d
++ touch ./logs/console/run.console
++ export logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zLKGrkiwX6
++ alias network-extract--helper=network_extract__helper
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zLKGrkiwX6
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs/console logs/jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ date +%s%N
+ export 'nl=\n'
++ mktemp -d
+ nl='\n'
++ mktemp -d
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
+ alias parse-cisco=main
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias print-newline=newline
+ mkdir -p logs/console
+++ base64
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ alias parse-cisco=main
++ mkdir -p logs/console logs/jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oam1CW0pnS
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vtgu74P5fz
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yaLiKJdqo6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oam1CW0pnS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yaLiKJdqo6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vtgu74P5fz
++ export actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
++ touch ./logs/console/run.console
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ script_filename=network-extract.shell
++ alias list-file=list_file
+ script_filename=network-extract
++ alias list-file=list_file
+ export network_extract__console=logs/console/network-extract.console
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export divisor=MTc0ODc0Nzg2NTU3MDY4NDAwMAo
++ alias log-error=log_error
++ divisor=MTc0ODc0Nzg2NTU3MDY4NDAwMAo
++ alias log-warn=log_warn
+ network_extract__console=logs/console/network-extract.console
++ alias log-info=log_info
++ alias log-info=log_info
++ alias print-message=message
+ source ./scripts/devops-helpers.shell
+ touch logs/console/network-extract.console
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-message=message
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
++ alias print-newline=newline
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-file=print_file
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias network-configs--helper=network_configs__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ LC_ALL=C
++ alias validate-address=validate_address
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
++ alias warning-message=warning
++ export cache_location=.cache
++ export LC_ALL=C
++ cache_location=.cache
++ cache_location=.cache
++ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ export logs_location=logs
++ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mkdir -p logs/console logs/jobs
++ actions_logfile=./logs/console/run.console
++ export 'nl=\n'
++ touch ./logs/console/run.console
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ date +%s%N
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.enpa963i0l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ export actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ IFS==
++ actions_logfile=./logs/console/run.console
+ read -r key value
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ export actions_logfile=./logs/console/run.console
++ targets_location=targets
++ actions_logfile=./logs/console/run.console
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ touch ./logs/console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uhpmt1lc8u/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ oIFS=' 	
'
+ touch logs/console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=MTc0ODc0Nzg2NTU4MDYwODAwMAo
++ divisor=MTc0ODc0Nzg2NTU4MDYwODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+++ base64
+ alias parse-cisco=main
+++ date +%s%N
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list
+ mkdir -p logs/console
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
++ targets_logfile=logs/jobs/targets.jobs
++ mktemp -d
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=MTc0ODc0Nzg2NTU4ODc5NTAwMAo
++ divisor=MTc0ODc0Nzg2NTU4ODc5NTAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
+++ date +%s%N
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export divisor=MTc0ODc0Nzg2NTU5MTE4MTAwMAo
++ divisor=MTc0ODc0Nzg2NTU5MTE4MTAwMAo
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+ script_filename=network-extract.shell
++ [[ 5 -lt 4 ]]
+ [[ search == \h\e\l\p ]]
+ script_filename=network-extract
+ [[ search == \d\e\b\u\g ]]
+++ base64
+ export network_extract__console=logs/console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+++ base64
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+++ base64
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fbxOmIyhoy
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fbxOmIyhoy
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ alias list-file=list_file
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ mkdir -p logs/console
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export divisor=MTc0ODc0Nzg2NTU5ODEzMzAwMAo
++ divisor=MTc0ODc0Nzg2NTU5ODEzMzAwMAo
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc0Nzg2NTU5ODU1MDAwMAo
++ divisor=MTc0ODc0Nzg2NTU5ODU1MDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ export divisor=MTc0ODc0Nzg2NTU5ODQzNTAwMAo
++ divisor=MTc0ODc0Nzg2NTU5ODQzNTAwMAo
+ source ./scripts/devops-helpers.shell
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.op9fkrwsf9/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias parse-listings--helper=parse_listings__helper
++ __DEVOPS_HELPERS_SOURCED=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console --verbose
+ [[ search =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs/console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ script_filename=network-extract.shell
++ touch ./logs/console/run.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qekTRSt9E4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qekTRSt9E4
+ script_filename=network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract
+ export 'nl=\n'
+ nl='\n'
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
+ export network_extract__console=logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
+ network_extract__console=logs/console/network-extract.console
++ alias exit-error=exit_error
+ touch logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-info=log_info
++ export targets_location=targets
++ alias log-warn=log_warn
+ [[ config =~ ^(platform|p)$ ]]
++ targets_location=targets
++ alias print-message=message
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
++ alias print-newline=newline
++ targets_logfile=logs/jobs/targets.jobs
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ 6 -eq 0 ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2lbf9jooww/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-file=print_file
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias relative-configpath=relative_configpath
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console --verbose
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
++ alias system-metrics=system_metrics
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jfouzajuow/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias validate-address=validate_address
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console --verbose
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ oIFS=' 	
++ cache_location=.cache
'
++ export logs_location=logs
++ logs_location=logs
+ for xitem in "${@}"
++ mkdir -p logs/console logs/jobs
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JXY8nIncfk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JXY8nIncfk
+++ date +%s%N
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ 6 -eq 0 ]]
+++ base64
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.x0ydsckiiu/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias pause=pause
++ alias print-line=print
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console --verbose
++ alias print-file=print_file
+ [[ 6 -eq 0 ]]
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z2to1zkai8/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console --verbose
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.h37gf33kmp/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias validate-address=validate_address
+ for xitem in "${@}"
++ alias warning-message=warning
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console --verbose
+ IFS==
++ export LC_ALL=C
+ read -r key value
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ export divisor=MTc0ODc0Nzg2NTYyMTE0MTAwMAo
+ [[ search =~ ^(console|o)$ ]]
++ divisor=MTc0ODc0Nzg2NTYyMTE0MTAwMAo
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ read -r key value
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
+ [[ extract == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ alias parse-cisco=main
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --platform=fortinet
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list
++ mktemp -d
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ base64
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ date +%s%N
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ LC_ALL=C
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VLiEhjG0JF
+++ base64
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VLiEhjG0JF
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export 'nl=\n'
+ for xitem in "${@}"
+ nl='\n'
+ IFS==
+ read -r key value
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ mktemp -d
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ tr -dc a-zA-Z0-9
++ alias print-file=print_file
++ export divisor=MTc0ODc0Nzg2NTYzNTg2MTAwMAo
++ alias relative-configpath=relative_configpath
++ divisor=MTc0ODc0Nzg2NTYzNTg2MTAwMAo
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
++ alias warning-message=warning
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yokgkz1opj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ export 'nl=\n'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console --verbose
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ config == \d\e\b\u\g ]]
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ read -r key value
++ export divisor=MTc0ODc0Nzg2NTY0MDExMTAwMAo
++ divisor=MTc0ODc0Nzg2NTY0MDExMTAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ echo -e --platform=cisco
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjFHWaB2oG
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjFHWaB2oG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias network-extract--helper=network_extract__helper
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ alias parse-cisco=main
++ alias print-newline=newline
++ export actions_logfile=./logs/console/run.console
++ alias pause=pause
+ [[ -z x ]]
++ alias print-line=print
+ export logs_location=logs
++ actions_logfile=./logs/console/run.console
+ logs_location=logs
++ touch ./logs/console/run.console
+ mkdir -p logs/console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ alias warning-message=warning
+ [[ extract =~ ^(config|c)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
++ export 'nl=\n'
+ [[ extract =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ cache_location=.cache
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --verbose
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ extract == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ extract == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.unftm3mxm9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console --verbose
+++ date +%s%N
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --platform=cisco
+++ base64
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.os347ubshf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ for xitem in "${@}"
++ export targets_location=targets
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
++ targets_location=targets
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ IFS=' 	
+ export console_output=false
'
+ console_output=false
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ export console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ search_terms=()
+ [[ verbose == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ false == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]]
+ search_terms=()
+ [[ platform =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ platform =~ ^(console|o)$ ]]
+++ date +%s%N
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ local target_platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
++ export divisor=MTc0ODc0Nzg2NTY2MjEwMDAwMAo
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]]
++ divisor=MTc0ODc0Nzg2NTY2MjEwMDAwMAo
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local verbose=true
+ source ./scripts/devops-helpers.shell
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ local target_platform=cisco
++ [[ 5 -lt 4 ]]
+ IFS==
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+++ base64
+ for xitem in "${@}"
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ debug=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ dry_run=false
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias network-configs--helper=network_configs__helper
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias network-extract--helper=network_extract__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
++ tr -d '\r'
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc0Nzg2NTY3MDI5MDAwMAo
++ divisor=MTc0ODc0Nzg2NTY3MDI5MDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ grep -v '^#'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^#'
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias parse-cisco=main
++ grep -v '^#'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ logger =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ logger == \h\e\l\p ]]
+ console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ logger == \h\e\l\p ]]
+ declare -a search_terms
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ local first_search_entry=10.0.1.2
+ ((  count == 0  ))
++ echo -e --verbose
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ 6 -eq 0 ]]
++ echo -e --verbose
+ [[ true == true ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tm1nmlieak/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ local first_search_entry=10.10.10.10
+ [[ config =~ ^(config|c)$ ]]
+ local last_search_entry=10.10.10.10
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ] ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console --verbose
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ oIFS=' 	
'
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
++ echo -e --verbose
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ tr -d '\r'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ export network_extract__console=logs/console/network-extract.console
+ (( i < count ))
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ touch logs/console/network-extract.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ config =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
+ local count=1
+ ((  count == 0  ))
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config == \h\e\l\p ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
++ echo -e --verbose
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ read -r key value
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -z cisco ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ (( i = 0 ))
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
+ [[ -z cisco ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ set -euo pipefail
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ newline
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local verbose=true
+ IFS=' 	
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
'
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ debug=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
+ [[ -z true ]]
'
+ IFS=' 	
'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ debug=false
+ [[ 6 -eq 0 ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ [[ -z '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.chzjtleo2l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ debug=false
+ dry_run=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ export console_output=false
+ dry_run=false
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console --verbose
+ console_output=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ script_helper=false
+ [[ false == true ]]
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ false == true ]]
+ oIFS=' 	
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]]
'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ search_terms=()
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list != *,* ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list != *,* ]]
+ IFS==
+ mapfile -t search_terms
+ mapfile -t search_terms
+ [[ verbose =~ ^(console|o)$ ]]
+ search_terms=()
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]
+ local first_search_entry=172.16.0.5
+ [[ -z '' ]]
+ script_helper=false
+ local last_search_entry=172.16.0.5
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]]
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ mapfile -t search_terms
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ ((  count == 0  ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list != *,* ]]
+ [[ -z cisco ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.etd7r2nyoK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.etd7r2nyoK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ (( i < count ))
+ nl='\n'
+ [[ search =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ echo
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
++ [[ -n '' ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ for xitem in "${@}"
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ IFS==
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ extract =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ tr -d '\r'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
++ alias pause=pause
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ alias print-line=print
+ [[ extract =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ tr -d '\r'
++ alias print-file=print_file
+ [[ extract =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ grep -v '^\s*$'
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ cfg == \c\f\g ]]
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ tr -d '\r'
++ grep -v '^#'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local first_search_entry=10.0.2.3
+ [[ cfg == \c\f\g ]]
+ local last_search_entry=10.0.2.3
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=./logs/console/run.console
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ actions_logfile=./logs/console/run.console
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ touch ./logs/console/run.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local first_search_entry=192.0.2.50
+ local count=1
+ (( i = 0 ))
+ local last_search_entry=192.0.2.50
+ (( i < count ))
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ (( i < count ))
+ local first_search_entry=172.16.1.6
+ local first_search_entry=172.18.1.20
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ ((  count == 0  ))
+ local last_search_entry=172.16.1.6
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local last_search_entry=172.18.1.20
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ] ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ ((  count == 0  ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i++ ))
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
++ echo -e --verbose
+ [[ -z cisco ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config == \d\e\b\u\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z cisco ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ [[ -z cisco ]]
+ read -r key value
+ [[ true == true ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ newline
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local first_search_entry=172.31.255.254
+ (( i < count ))
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ local last_search_entry=172.31.255.254
+ echo
+ echo
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ] ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ local target_platform=cisco
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-configs--ips.list ]'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ ((  count == 0  ))
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ IFS==
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ for xitem in "${@}"
+ local count=1
+ output_dir=reports/10.0.0.1/cisco
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ output_dir=reports/10.10.10.10/cisco
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ output_dir=reports/172.16.0.5/cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ local SCRIPT_DIR=./scripts
+ extract_location=reports/172.31.255.254/misc/switch1.conf
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local script_filename=fortinet-configs.awk
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export divisor=MTc0ODc0Nzg2NTcyMDk1NjAwMAo
++ which awk
++ divisor=MTc0ODc0Nzg2NTcyMDk1NjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
++ grep -v '^#'
++ alias network-extract--helper=network_extract__helper
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ echo -e --platform=cisco
++ dirname reports/172.31.255.254/misc/switch1.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --verbose
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ which awk
+ logs_location=logs
+ mkdir -p logs/console
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ output_dir=reports/192.0.2.50/cisco
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ output_dir=reports/172.18.1.20/cisco
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
+ local first_search_entry=192.168.0.100
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ command -v -- ./scripts/network-extract.shell
++ echo 10.0.0.1
++ echo -e --platform=cisco
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ local last_search_entry=192.168.0.100
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ set -euo pipefail
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a execute
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ] ]]
'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ [[ platform =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ local target_platform=cisco
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ debug=false
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ dry_run=false
+ for xitem in "${@}"
+ ((  count == 0  ))
+ [[ -z true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ export console_output=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ console_output=false
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ local count=1
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ search_terms=()
+ network_extract__console=logs/console/network-extract.console
+ declare -a search_terms
+ IFS=' 	
'
+ [[ -z '' ]]
+ touch logs/console/network-extract.console
+ debug=false
+ echo
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list != *,* ]]
+ dry_run=false
++ mktemp -d
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ console_output=false
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ -z cisco ]]
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list != *,* ]]
++ IFS=,
+ mapfile -t search_terms
+ newline
++ echo 10.0.1.2
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ IFS=,
+ declare -a execute
++ echo 10.10.10.10
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ which awk
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 172.16.0.5
++ which awk
++ tr -d '\r'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local awk_bin=/usr/bin/awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local script_filename=cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ grep -v '^\s*$'
+ [[ 6 -eq 0 ]]
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zzvcwqc80c/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console --verbose
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ oIFS=' 	
'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PkZOfJ0MsL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PkZOfJ0MsL
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ grep -v '^#'
++ grep -v '^#'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
++ which awk
++ alias list-file=list_file
++ alias log-error=log_error
+ local awk_bin=/usr/bin/awk
++ alias log-info=log_info
++ which awk
++ printf '%*s' 12 ''
++ which awk
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ which awk
+ local awk_bin=/usr/bin/awk
++ alias pause=pause
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ alias print-file=print_file
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'indent=            '
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ newline
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
++ alias validate-address=validate_address
+ (( i < count ))
++ which awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias warning-message=warning
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ which awk
++ export LC_ALL=C
++ LC_ALL=C
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ cache_location=.cache
+ [[ logger =~ ^(search|s)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ logger == \h\e\l\p ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ mkdir -p logs/console logs/jobs
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ cfg == \c\f\g ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.0.1
+ local 'indent=            '
+ local 'indent=            '
+ local last_search_entry=192.168.0.1
+ local first_search_entry=192.168.1.10
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ true == true ]]
+ local last_search_entry=192.168.1.10
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ] ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ newline
+ newline
+ local count=1
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ] ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -z cisco ]]
+ newline
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ true == true ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ IFS==
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ read -r key value
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --verbose
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ IFS=,
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo 172.16.1.6
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
++ IFS=,
++ IFS=,
++ echo 10.0.2.3
++ echo 192.0.2.50
+ local count=1
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ declare -a execute
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
++ IFS=,
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ actions_logfile=./logs/console/run.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ touch ./logs/console/run.console
++ echo 172.18.1.20
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ IFS=,
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ declare -a execute
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ echo 172.31.255.254
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ search =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ newline
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ declare -a execute
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ which awk
++ which awk
++ echo -e --verbose
++ which awk
++ which awk
++ which awk
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ verbose == \h\e\l\p ]]
  "model": "ASA",
  "version": "9.14(3)",
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ verbose == \d\r\y\-\r\u\n ]]
ASA Version 9.14(3)
+ [[ verbose == \v\e\r\b\o\s\e ]]
hostname perimeter-fw1
+ local verbose=true
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
+ IFS=' 	
'
 security-level 100
+ [[ -z '' ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ debug=false

+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
object network Stark-Tower
+ dry_run=false
 host 10.0.0.1
+ local awk_bin=/usr/bin/awk
 description Core services gateway'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ -z true ]]
+ local awk_bin=/usr/bin/awk
+ result=0
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ -z '' ]]
+ [[ -n {
+ export console_output=false
+ console_output=false
  "vendor": "cisco",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
  "model": "ASA",
+ [[ -z '' ]]
+ script_helper=false
  "version": "9.14(3)",
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]]
  "domain": "edge.dc.example.com",
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ search_terms=()
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ declare -a search_terms
  "hostname": "perimeter-fw1"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]]
}
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list != *,* ]]
++ dirname -- ./scripts/network-extract.shell
+ mapfile -t search_terms
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
+ [[ verbose =~ ^(search|s)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ verbose == \h\e\l\p ]]
  "hostname": "fg-branch-vpn-01"
}
+ [[ verbose == \d\e\b\u\g ]]

+ [[ verbose == \d\r\y\-\r\u\n ]]
#hostname="fg-branch-vpn-01"
+ [[ verbose == \v\e\r\b\o\s\e ]]
#model="FortiGate-60F"
+ local verbose=true
+ local 'extracted_configuration={
  "vendor": "cisco",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ IFS=' 	

+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
config firewall address
'
 edit "Spidey-Sandbox"
  "model": "",
  set subnet 10.0.1.2 255.255.255.255
  "version": "12.4",
+ [[ -z '' ]]
  set comment "QA node in Peter'\''s Lab"
++ printf '%*s' 12 ''
+ debug=false
 next
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ cfg == \c\f\g ]]
}

+ [[ -z '' ]]
end'
version 12.4
+ dry_run=false
+ result=0
hostname access-sw1-west
+ [[ -z true ]]
+ [[ -n {
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg

  "vendor": "fortinet",
+ [[ -z '' ]]
++ printf '%*s' 12 ''
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
  "model": "FortiGate-60F",
+ export console_output=false
  "version": "v7.2.5.F",
  "domain": ""
object-group network MGMT-ACCESS
+ console_output=false
+ local 'indent=            '
  "hostname": "fg-branch-vpn-01"
 description Management objects
}
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]

 network-object host 192.168.0.1
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
#hostname="fg-branch-vpn-01"
 network-object host 192.168.0.100
+ script_helper=false
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
#model="FortiGate-60F"
 network-object host 10.10.10.10
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ false == true ]]

+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
object-group network Mutant-WiFi

 description Controlled guest devices
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 network-object host 10.10.10.10'
+ local 'indent=            '
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
+ search_terms=()
  "model": "",
  "version": "12.4",
+ declare -a search_terms
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]

version 12.4
hostname access-sw1-west
++ printf '%*s' 12 ''

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list != *,* ]]
object-group network MGMT-ACCESS
+ newline
 description Management objects
config firewall address
+ mapfile -t search_terms
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
 network-object host 192.168.0.1
+++ date +%s%N
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 edit "Spidey-Sandbox"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set subnet 10.0.1.2 255.255.255.255
 network-object host 192.168.0.100
  set comment "QA node in Peter's Lab"
 network-object host 10.10.10.10
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print '{

++ printf '%*s' 12 ''
+ local 'indent=            '
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
 next
  "model": "ASA",
  "version": "9.14(3)",
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
end ]]
object-group network Mutant-WiFi
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
 description Controlled guest devices
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
  "model": "ASA",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 10.10.10.10 ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
}

  "hostname": "perimeter-fw1"
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local 'indent=            '
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
ASA Version 9.14(3)
}
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ printf '%*s' 12 ''
hostname perimeter-fw1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
domain-name edge.dc.example.com
+ echo

+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'

ASA Version 9.14(3)
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
hostname perimeter-fw1
+ newline
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
domain-name edge.dc.example.com
+++ base64
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
interface GigabitEthernet0/1
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]

+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'indent=            '
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
object-group network Panther-Edge
 description Internal Network Interface
+ newline

+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
object network Stark-Tower
+ [[ config =~ ^(search|s)$ ]]
+ [[ true == true ]]
 description Internet-facing proxy systems
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config == \h\e\l\p ]]
 host 10.0.0.1
+ local count=1
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
 description Core services gateway'
 network-object host 203.0.113.25
+ [[ config == \d\e\b\u\g ]]
+ echo
+ newline
 network-object host 172.16.0.5
+ [[ config == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n {

  "vendor": "cisco",
+ (( i++ ))
+ newline
+ (( i < count ))
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
  "model": "ASA",
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ (( i < count ))
+ for xitem in "${@}"
  "version": "9.14(3)",
+ IFS==
++ tr -d '\r'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ read -r key value
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
object network Magneto-Core
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
 host 172.16.0.5
+ echo
 description WAN firewall entry point'
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
  "domain": "edge.dc.example.com",
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local SCRIPT_DIR=./scripts
  "hostname": "perimeter-fw1"
+ result=0
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
}
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ -n {

+ (( i++ ))
ASA Version 9.14(3)
+ local script_filename=cisco-configs.awk
+ print '{
+++ tr -dc a-zA-Z0-9
  "vendor": "cisco",
  "vendor": "fortinet",
+ (( i < count ))
  "model": "ASA",
hostname perimeter-fw1
  "model": "FortiGate-60F",
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
domain-name edge.dc.example.com
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "version": "9.14(3)",
  "version": "v7.2.5.F",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
  "domain": "edge.dc.example.com",
  "domain": ""
  "hostname": "perimeter-fw1"
interface GigabitEthernet0/1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}
  "model": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
  "version": "12.4",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
 nameif inside
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 security-level 100

 ip address 10.0.0.1 255.255.255.0

+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
 description Internal Network Interface
ASA Version 9.14(3)
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ grep -v '^\s*$'
hostname perimeter-fw1
#hostname="fg-branch-vpn-01"
  "domain": "",
+ message '                .cache/resources/misc/switch1.conf'
  "hostname": "access-sw1-west"
domain-name edge.dc.example.com
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'

+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'

object network Stark-Tower
object-group network Panther-Edge
 description Internet-facing proxy systems
}
#model="FortiGate-60F"
 network-object host 203.0.113.25
 host 10.0.0.1
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]

 network-object host 172.16.0.5
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
 description Core services gateway ]]
++ tr -d '\r'

object network Magneto-Core
version 12.4
 host 172.16.0.5
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline

hostname access-sw1-west
+ echo -en '{
config firewall address
  "vendor": "cisco",

 description WAN firewall entry point ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 edit "Spidey-Sandbox"
  "model": "ASA",
object-group network MGMT-ACCESS
+ local 'message=                .cache/resources/misc/switch1.conf'
  "version": "9.14(3)",
  set subnet 10.0.1.2 255.255.255.255
+ echo -e '                .cache/resources/misc/switch1.conf'
  set comment "QA node in Peter'\''s Lab"
 description Management objects
 next
  "domain": "edge.dc.example.com",
 network-object host 192.168.0.1
 network-object host 192.168.0.100
  "hostname": "perimeter-fw1"
 network-object host 10.10.10.10
}
+ set -euo pipefail

end'

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ export LC_ALL=C
+ LC_ALL=C
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
+ [[ -n {
  "vendor": "fortinet",
  "vendor": "cisco",
  "model": "FortiGate-60F",
ASA Version 9.14(3)
hostname perimeter-fw1
  "version": "v7.2.5.F",
domain-name edge.dc.example.com
  "model": "",

  "version": "12.4",
interface GigabitEthernet0/1
  "domain": "",
 nameif inside
  "hostname": "access-sw1-west"
 security-level 100
}
 ip address 10.0.0.1 255.255.255.0

 description Internal Network Interface
version 12.4

hostname access-sw1-west
+ sed '1{/^[[:space:]]*$/d;}'
object network Stark-Tower

++ grep -v '^#'
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
 host 10.0.0.1
 description Core services gateway'
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ echo -en '{
  "vendor": "fortinet",
 description Controlled guest devices
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
 network-object host 10.10.10.10 ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ echo -en '{
#model="FortiGate-60F"
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
#config-version=FGT_60F-v7.2.5.F-build1517-230421
}


version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
config firewall address
 edit "Spidey-Sandbox"
 description Management objects
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 network-object host 192.168.0.1
 next
 network-object host 192.168.0.100
end'
 network-object host 10.10.10.10
++ grep -v '^\s*$'

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ grep -v '^#'
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ (( i++ ))
++ mktemp -d
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ export divisor=MTc0ODc0Nzg2NTc3MDU3ODAwMAo
+ echo
+ (( i++ ))
+ (( i < count ))
++ divisor=MTc0ODc0Nzg2NTc3MDU3ODAwMAo
+ source ./scripts/devops-helpers.shell
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ which awk
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ output_dir=reports/192.168.1.10/fortinet
+ [[ ! -d reports/192.168.1.10/fortinet ]]
++ alias network-configs--helper=network_configs__helper
+ newline 2
++ alias network-extract--helper=network_extract__helper
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ print '{
+ newline
  "vendor": "cisco",
  "model": "ASA",
+ local count=1
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ (( i = 0 ))
  "hostname": "perimeter-fw1"
}
+ (( i < count ))

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ extract =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.2.12
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n {
+ local last_search_entry=192.168.2.12
  "vendor": "cisco",
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
  "model": "ASA",
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ extract =~ ^(platform|p)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ extract =~ ^(search|s)$ ]]

object network Magneto-Core
 host 172.16.0.5
+ [[ extract == \h\e\l\p ]]
 description WAN firewall entry point ]]
+ [[ -z x ]]
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ export logs_location=logs
+ [[ extract == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ] ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -en '{
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
  "vendor": "cisco",
+ (( i++ ))
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
  "model": "ASA",
+ mkdir -p logs/console
  "version": "9.14(3)",
+ IFS==
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ newline 2
+ read -r key value
+ local count=1
+ local first_search_entry=192.168.1.11
}
+ ((  count == 0  ))
+ newline 2

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
object network Magneto-Core
 host 172.16.0.5
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
 description WAN firewall entry point'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
+ local last_search_entry=192.168.1.11
+ echo
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zMDA06Kwor
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zMDA06Kwor
++ command -v -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
+ local count=2
  "model": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ] ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "version": "16.9",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export 'nl=\n'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
+ nl='\n'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ local count=2
+ source ./scripts/devops-resources.shell
+ [[ -z cisco ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ local count=2
+ (( i < count ))
  "domain": "",
  "hostname": "branch-isr-02"
}
+ echo
++ [[ -n '' ]]
+ newline
+ echo
+ (( i = 0 ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1

+ local count=1
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
version 16.9
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
+ echo
+ echo
+ ((  count == 0  ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ echo
++ alias exit-error=exit_error
+ (( i++ ))
hostname branch-isr-02
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias list-file=list_file
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
++ alias log-error=log_error
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ (( i++ ))

++ alias log-info=log_info
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
interface GigabitEthernet0/0/0
++ alias log-warn=log_warn
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ alias print-message=message
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo
++ alias print-newline=newline
+ newline
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ local count=1
+ (( i++ ))

+ (( i = 0 ))
++ alias pause=pause
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
object network BlackWidow-Core
++ alias print-line=print
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
 host 172.16.1.6
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
 description Branch router uplink NAT'
+ echo
++ alias print-file=print_file
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ local 'extracted_configuration={
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
  "vendor": "cisco",
+ result=0
  "model": "",
+ (( i < count ))
++ alias relative-configpath=relative_configpath
  "version": "16.9",
+ newline
+ [[ -n {
  "domain": "",
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
  "hostname": "branch-isr-02"
+ local count=1
}
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ sed '1{/^[[:space:]]*$/d;}'

+ (( i = 0 ))
  "vendor": "cisco",
+ [[ -z cisco ]]
+ (( i < count ))
version 16.9
++ alias system-metrics=system_metrics
  "model": "",
+ [[ true == true ]]
hostname branch-isr-02
++ IFS=,

interface GigabitEthernet0/0/2
+ newline
 ip address 10.0.2.3 255.255.255.0
+ echo
+ local count=1
++ echo 192.168.0.100
+ (( i++ ))
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ (( i < count ))
 description Dev VLAN
 description ISP uplink
++ alias validate-address=validate_address

++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
object network Panther-Gateway
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ newline
++ alias warning-message=warning
+ local count=1
++ export LC_ALL=C
+ (( i = 0 ))
++ LC_ALL=C
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
 host 10.0.2.3
++ dirname -- ./scripts/network-extract.shell
+ echo

+ echo
++ export 'nl=\n'
object network BlackWidow-Core
 description Secure outbound concentrator'
 host 172.16.1.6
+ (( i++ ))
 description Branch router uplink NAT ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ nl='\n'
+ (( i++ ))
+ (( i < count ))
++ export cache_location=.cache
++ cache_location=.cache
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ export logs_location=logs
+ (( i < count ))
++ logs_location=logs
++ echo -e --platform=cisco
+ result=0
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ mkdir -p logs/console logs/jobs
+ declare -a execute
+ [[ -n {
  "vendor": "cisco",
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
  "model": "",
  "version": "16.9",
  "domain": "",
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "hostname": "branch-isr-02"
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
}

version 16.9
hostname branch-isr-02

+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ print '{
  "vendor": "cisco",
  "model": "",
+ touch logs/console/network-extract.console
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ print '{
  "vendor": "cisco",

  "model": "",
interface GigabitEthernet0/0/0
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink


version 16.9
object network BlackWidow-Core
hostname branch-isr-02
 host 172.16.1.6

 description Branch router uplink NAT'
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ -n {
  "vendor": "cisco",
hostname branch-isr-02
  "model": "",

  "version": "16.9",
interface GigabitEthernet0/0/0
  "domain": "",
 ip address 172.16.1.6 255.255.255.0
  "hostname": "branch-isr-02"
 description ISP uplink
}


object network BlackWidow-Core
version 16.9
 host 172.16.1.6
hostname branch-isr-02
 description Branch router uplink NAT ]]

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

+ echo -en '{
object network Panther-Gateway
  "vendor": "cisco",
 host 10.0.2.3
  "model": "",
 description Secure outbound concentrator ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ echo -en '{
version 16.9
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink


version 16.9
object network BlackWidow-Core
hostname branch-isr-02

 host 172.16.1.6
interface GigabitEthernet0/0/2
 description Branch router uplink NAT'
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ newline 2
+ [[ -n {
+ local SCRIPT_DIR=./scripts
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local script_filename=fortinet-configs.awk
+ local SCRIPT_DIR=./scripts
version 16.9
+ local count=2
+ local script_filepath=./scripts/extract/fortinet-configs.awk
hostname branch-isr-02
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ (( i = 0 ))

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ newline

+ [[ true == true ]]
+ local count=1
interface Vlan1
+ (( i = 0 ))
 ip address 172.31.255.254 255.255.255.0'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ false == true ]]
++ touch ./logs/console/run.console
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ platform =~ ^(config|c)$ ]]
  "version": "",
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
  "domain": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
  "hostname": ""
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]

+ [[ platform =~ ^(extract|x)$ ]]
interface Vlan1
+ newline
+ newline
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ case "${target_file}" in
 ip address 172.31.255.254 255.255.255.0 ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ (( i = 0 ))
+ local count=1
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ local target_platform=cisco
+ (( i++ ))
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.12(4)",
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ for xitem in "${@}"
  "domain": "global.dmz.example.net",
+ [[ cfg == \c\f\g ]]
  "hostname": "dmz-fw2-backup"
+ IFS==
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
}
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
++ which awk
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg

ASA Version 9.12(4)

+ (( i++ ))
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
hostname dmz-fw2-backup
version 16.9
+ (( i < count ))
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
domain-name global.dmz.example.net
 network-object host 172.18.1.20

object-group network Watchtower-DMZ
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
 network-object host 192.168.1.11'
 description Global secure relay
+ (( i++ ))
+ [[ false == true ]]
 network-object host 192.0.2.50'
+ case "${target_file}" in
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
  "model": "",
+ [[ -n {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
  "version": "16.9",
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
  "model": "ASA",
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
  "hostname": "branch-isr-02"
}

+ case "${target_file}" in
  "version": "9.12(4)",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
}

 network-object host 172.18.1.20
ASA Version 9.12(4)
 network-object host 192.168.1.11 ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ printf '%*s' 12 ''
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ 6 -eq 0 ]]
  "domain": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.owwnn3pb3v/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console --verbose
+ local 'indent=            '
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ oIFS=' 	
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
'
+ newline
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ newline 2
++ export targets_location=targets
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ targets_location=targets
+ local count=2
+ (( i = 0 ))
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
++ targets_logfile=logs/jobs/targets.jobs
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ true == true ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n logs/console/network-extract.console ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ output_dir=reports/192.168.2.12/cisco
++ IFS=,
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
++ echo 192.168.1.10
+ newline 2
++ IFS=,
++ echo 192.168.0.1
+ [[ true == true ]]
+ newline 2
+ print_file logs/console/network-extract.console
+ newline
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ local count=1
+ [[ -f logs/console/network-extract.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ cat logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ local count=2
+ [[ false == true ]]
+ declare -a execute
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ local count=2
+ echo
+ declare -a execute
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ print_file logs/console/network-extract.console
+ echo
+ (( i++ ))
+ [[ -n logs/console/network-extract.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ (( i < count ))
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ echo
+ local target_file=logs/console/network-extract.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ (( i++ ))
+ [[ -f logs/console/network-extract.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ [[ true == true ]]
+ output_dir=reports/192.168.1.11/cisco
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ cat logs/console/network-extract.console
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ newline
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
+++ base64
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
++ which awk
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DxUc6TiYD8 ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DxUc6TiYD8
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ echo
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ case "${target_file}" in
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ echo -e --verbose
+ local awk_bin=/usr/bin/awk
++ export divisor=MTc0ODc0Nzg2NTgwNzI4MzAwMAo
++ divisor=MTc0ODc0Nzg2NTgwNzI4MzAwMAo
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ source ./scripts/devops-helpers.shell
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ newline
+ [[ -f logs/console/network-extract.console ]]
+ result=0
++ alias parse-listings--helper=parse_listings__helper
+ exit 0
+ case "${target_file}" in
+ local count=1
+ newline
+ cat logs/console/network-extract.console
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoZRLH4Bg7 ]]
+ (( i < count ))
+ local count=1
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VoZRLH4Bg7
+ (( i = 0 ))
+ (( i++ ))
+ print '{
+ (( i < count ))
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ result=0
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
++ alias network-configs--helper=network_configs__helper

+ [[ true == true ]]
+ exit 0
version 12.4
+ echo
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L9Co0tUkml ]]
+ (( i++ ))
 description Guest VLAN Gateway
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L9Co0tUkml
+ (( i < count ))

object-group network MGMT-ACCESS
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2tO1ZKai8/network-extract.console
+ [[ -n {
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]
  "model": "",
  "version": "12.4",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]

version 12.4
hostname access-sw1-west
+ case "${target_file}" in

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
++ printf '%*s' 12 ''
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ alias parse-cisco=main
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -z x ]]
+ (( i < count ))
+ export logs_location=logs
+ echo
+ logs_location=logs
+ mkdir -p logs/console
+ (( i++ ))
++ which awk
+ newline
+ (( i < count ))
+ local 'indent=            '
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ false == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ echo
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ which awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ result=0
+ exit 0
+ local count=2
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKFbrmPfqR ]]
+ (( i = 0 ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKFbrmPfqR
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ print_file logs/console/network-extract.console
+ (( i < count ))
+ echo
+ [[ -n logs/console/network-extract.console ]]
+ [[ true == true ]]
+ (( i++ ))
+ local target_file=logs/console/network-extract.console
+ (( i < count ))
+ [[ -f logs/console/network-extract.console ]]
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ print_file logs/console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ case "${target_file}" in
+ script_filename=network-extract
+ [[ -n logs/console/network-extract.console ]]
+ cat logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ local target_file=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ touch logs/console/network-extract.console
+ cat logs/console/network-extract.console
++ IFS=,
++ echo 192.168.2.12
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
++ tr -d '\r'
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zLKGrkiwX6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zLKGrkiwX6
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cKpb2kY8jD ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cKpb2kY8jD
++ grep -v '^\s*$'
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ which awk
++ IFS=,
++ echo 192.168.1.11
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ 6 -eq 0 ]]
  "model": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.anuvumcnc0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console --verbose
+ newline
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ oIFS=' 	
'
  "version": "12.4",
+ echo
#model="FortiGate-60F"
  "domain": "",
+ for xitem in "${@}"
+ (( i++ ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))

+ IFS==
+ read -r key value
+ result=0
config firewall address
+ exit 0
  "hostname": "access-sw1-west"
+ [[ false == true ]]
}
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yaLiKJdqo6 ]]

+ [[ true == true ]]
version 12.4
 edit "Panther-Vault"
hostname access-sw1-west
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yaLiKJdqo6
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"

interface Vlan1
 next
 ip address 192.168.0.1 255.255.255.0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
 description Management Interface

object-group network MGMT-ACCESS
end'
 description Management objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
+ result=0
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ -n {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
 network-object host 10.10.10.10'
  "vendor": "fortinet",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ case "${target_file}" in
  "domain": ""
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ result=0
+ [[ -n {
+ exit 0
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vtgu74P5fz ]]
  "hostname": "access-sw1-west"
}
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vtgu74P5fz

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local awk_bin=/usr/bin/awk
 network-object host 192.168.0.100
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
 network-object host 10.10.10.10 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.100.100
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local last_search_entry=192.168.100.100
+ print '{
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ extract =~ ^(platform|p)$ ]]
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ extract =~ ^(search|s)$ ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ] ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
  set comment "Wakandan data store"
+ [[ extract == \d\e\b\u\g ]]
 next
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
end'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ extract == \v\e\r\b\o\s\e ]]
+ exit 0
++ printf '%*s' 12 ''
+ for xitem in "${@}"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oam1CW0pnS ]]
+ local count=1
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oam1CW0pnS
end'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ IFS==
+ local 'indent=            '
+ read -r key value
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ ((  count == 0  ))
object-group network MGMT-ACCESS
 description Management objects
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local awk_bin=/usr/bin/awk
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ newline
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local count=1
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ newline 2
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ newline
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ exit 0
+ read -r key value
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fbxOmIyhoy ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fbxOmIyhoy
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]

+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ config =~ ^(extract|x)$ ]]
  "model": "",
+ (( i++ ))
  "version": "16.9",
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ config =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
hostname branch-isr-02
  "model": "",

  "version": "16.9",
interface GigabitEthernet0/0/1
  "domain": "",
 ip address 192.168.2.12 255.255.255.0
+ [[ false == true ]]
+ [[ config =~ ^(search|s)$ ]]
 description Workstation LAN
  "hostname": "branch-isr-02"

+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
}
object-group network Hydra-Edge

version 16.9
+ [[ config == \d\e\b\u\g ]]
hostname branch-isr-02
 description Remote site uplink
+ [[ config == \d\r\y\-\r\u\n ]]

+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.2.12
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
object-group network Lantern-DMZ
+ IFS==
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 198.51.100.75'
 network-object host 192.168.1.11'
+ result=0
+ read -r key value
+ [[ -n {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
  "domain": "",
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
  "hostname": "branch-isr-02"
}

version 16.9

hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
version 16.9
+ case "${target_file}" in
 description Remote site uplink
hostname branch-isr-02
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console

 network-object host 192.168.2.12
object-group network Lantern-DMZ
 network-object host 198.51.100.75 ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ output_dir=reports/192.168.100.100/cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ print_file logs/console/network-extract.console
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ logger == \h\e\l\p ]]
+ cat logs/console/network-extract.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
+ [[ true == true ]]
+ local count=2
+ print_file logs/console/network-extract.console
+ (( i = 0 ))
+ [[ -n logs/console/network-extract.console ]]
+ (( i < count ))
+ local target_file=logs/console/network-extract.console
+ echo
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ newline 2
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --verbose
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=2
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ result=0
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ exit 0
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qekTRSt9E4 ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qekTRSt9E4
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JXY8nIncfk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JXY8nIncfk
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ tr -d '\r'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 192.168.100.100
++ grep -v '^\s*$'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^#'
++ which awk
+ [[ true == true ]]
++ mktemp -d
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ print_file logs/console/network-extract.console
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AUhZZZKwxe
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AUhZZZKwxe
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ mktemp -d
++ alias list-file=list_file
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ] ]]
++ alias log-error=log_error
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local count=1
+ ((  count == 0  ))
++ alias print-message=message
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ alias print-newline=newline
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ cache_location=.cache
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ export logs_location=logs
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ logs_location=logs
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ mkdir -p logs/console logs/jobs
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9OiW3GtPES
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9OiW3GtPES
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ printf '%*s' 12 ''
+ result=0
+ exit 0
++ alias list-file=list_file
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VLiEhjG0JF ]]
+ [[ logger =~ ^(config|c)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VLiEhjG0JF
++ alias log-error=log_error
+ [[ logger =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ logger =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(logger|l)$ ]]
++ alias print-message=message
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ [[ logger =~ ^(search|s)$ ]]
++ alias pause=pause
++ alias print-line=print
+ [[ logger == \h\e\l\p ]]
++ mktemp -d
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ IFS==
+ result=0
++ alias relative-configpath=relative_configpath
+ read -r key value
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjFHWaB2oG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjFHWaB2oG
++ alias system-metrics=system_metrics
+ local 'indent=            '
+ [[ true == true ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline
++ alias validate-address=validate_address
+ local count=1
+ (( i = 0 ))
++ alias warning-message=warning
+ (( i < count ))
++ export LC_ALL=C
++ LC_ALL=C
+ echo
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ export logs_location=logs
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ logs_location=logs
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ mkdir -p logs/console logs/jobs
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h5faB9Qf3U
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h5faB9Qf3U
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ alias print-newline=newline
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ mktemp -d
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
++ alias pause=pause
+ local count=1
+ (( i = 0 ))
++ alias print-line=print
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias warning-message=warning
++ export LC_ALL=C
++ touch ./logs/console/run.console
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --verbose
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2YTGQubfet
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2YTGQubfet
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ alias list-file=list_file
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
++ alias log-warn=log_warn
+ [[ cfg == \c\f\g ]]
++ alias print-message=message
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ alias print-newline=newline
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0q8OU62PKr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0q8OU62PKr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias list-file=list_file
++ touch ./logs/console/run.console
++ alias log-error=log_error
++ export targets_location=targets
++ alias log-info=log_info
++ alias log-warn=log_warn
++ targets_location=targets
++ alias print-message=message
++ alias print-newline=newline
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias pause=pause
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias system-metrics=system_metrics
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ mktemp -d
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias validate-address=validate_address
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ search_terms=()
++ alias warning-message=warning
+ declare -a search_terms
++ export LC_ALL=C
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
++ LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ set -euo pipefail
++ export targets_location=targets
+ export LC_ALL=C
++ targets_location=targets
+ LC_ALL=C
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
object network Titan-WLAN-Host
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dJa2CTepXN
 host 192.168.100.100
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dJa2CTepXN
 description Backup inside NAT IP

object-group network Sector-Wireless
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ [[ -n '' ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
domain-name global.dmz.example.net
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
++ alias exit-error=exit_error

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ alias list-file=list_file
+ output_dir=reports/198.51.100.75/cisco
++ alias log-error=log_error
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ date +%s%N
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ tr -d '\r'
+++ base64
++ export targets_location=targets
++ targets_location=targets
+ print '{
  "vendor": "cisco",
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ command -v -- ./scripts/network-extract.shell
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+++ date +%s%N
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
++ grep -v '^\s*$'
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+++ tr -dc a-zA-Z0-9
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ base64
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI9ZrtdVkq
++ export actions_logfile=./logs/console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI9ZrtdVkq
++ actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ touch ./logs/console/run.console
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rarAAiIMsA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rarAAiIMsA
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias detect-vendor=detect_vendor
++ export targets_location=targets
+ source ./scripts/devops-resources.shell
++ alias exit-error=exit_error
++ export divisor=MTc0ODc0Nzg2NTkxMTU5MTAwMAo
++ targets_location=targets
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ divisor=MTc0ODc0Nzg2NTkxMTU5MTAwMAo
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ [[ -n '' ]]
++ alias list-file=list_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-message=message
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias pause=pause
++ alias print-line=print
+ sed '1{/^[[:space:]]*$/d;}'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
++ alias system-metrics=system_metrics
++ alias list-file=list_file
+++ tr -dc a-zA-Z0-9
++ alias log-error=log_error
++ alias log-info=log_info
+ local first_search_entry=203.0.113.25
++ alias log-warn=log_warn
+ local last_search_entry=203.0.113.25
++ alias print-message=message
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
++ alias print-newline=newline
++ alias validate-address=validate_address
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
++ alias pause=pause
++ alias warning-message=warning
++ alias network-configs--helper=network_configs__helper
++ export LC_ALL=C
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ] ]]
++ alias print-line=print
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
++ LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
++ export targets_location=targets
++ export 'nl=\n'
++ targets_location=targets
++ nl='\n'
+ local count=1
++ export cache_location=.cache
++ cache_location=.cache
++ export targets_logfile=logs/jobs/targets.jobs
+ ((  count == 0  ))
++ targets_logfile=logs/jobs/targets.jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias print-file=print_file
++ export divisor=MTc0ODc0Nzg2NTkxNDM5NDAwMAo
++ divisor=MTc0ODc0Nzg2NTkxNDM5NDAwMAo
++ alias relative-configpath=relative_configpath
+ source ./scripts/devops-helpers.shell
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local count=1
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i = 0 ))
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
++ alias parse-listings--helper=parse_listings__helper
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias warning-message=warning
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ export LC_ALL=C
+ [[ -z cisco ]]
++ LC_ALL=C
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ newline
++ mkdir -p logs/console logs/jobs
++ alias network-configs--helper=network_configs__helper
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ set -euo pipefail
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+++ date +%s%N
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ newline 2
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
++ export divisor=MTc0ODc0Nzg2NTkxNzkwMjAwMAo
++ divisor=MTc0ODc0Nzg2NTkxNzkwMjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local count=2
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i = 0 ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ mktemp -d
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
++ alias network-configs--helper=network_configs__helper
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+++ tr -dc a-zA-Z0-9
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias network-extract--helper=network_extract__helper
+ (( i++ ))
+ (( i < count ))
+++ base64
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
++ which awk
+++ base64
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export divisor=MTc0ODc0Nzg2NTkyNDM0MDAwMAo
+++ tr -dc a-zA-Z0-9
++ divisor=MTc0ODc0Nzg2NTkyNDM0MDAwMAo
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc0Nzg2NTkyNTY1NzAwMAo
++ divisor=MTc0ODc0Nzg2NTkyNTY1NzAwMAo
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cBxX8bGrRu
++ [[ 5 -lt 4 ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cBxX8bGrRu
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract
++ alias network-extract--helper=network_extract__helper
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
+ touch logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
+ newline
+ local count=1
++ alias list-file=list_file
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias log-error=log_error
+ (( i++ ))
+ (( i < count ))
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
++ alias log-warn=log_warn
+ [[ false == true ]]
++ alias print-message=message
+ [[ true == true ]]
++ alias print-newline=newline
++ alias pause=pause
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
++ alias print-line=print
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ alias parse-cisco=main
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ case "${target_file}" in
++ alias print-file=print_file
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export targets_location=targets
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ mkdir -p logs/console
++ alias system-metrics=system_metrics
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias warning-message=warning
+ mkdir -p logs/console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export divisor=MTc0ODc0Nzg2NTkzMDAwNzAwMAo
++ logs_location=logs
++ divisor=MTc0ODc0Nzg2NTkzMDAwNzAwMAo
++ mkdir -p logs/console logs/jobs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ IFS=,
++ echo 198.51.100.75
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+++ date +%s%N
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.enpa963i0l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console --verbose
+ oIFS=' 	
'
+ alias parse-cisco=main
+ for xitem in "${@}"
+ [[ -z x ]]
+ IFS==
+ export logs_location=logs
+ read -r key value
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
+++ date +%s%N
+ [[ 6 -eq 0 ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uhpmt1lc8u/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+++ tr -dc a-zA-Z0-9
+++ base64
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ script_filename=network-extract
++ export actions_logfile=./logs/console/run.console
+ export network_extract__console=logs/console/network-extract.console
++ actions_logfile=./logs/console/run.console
+ network_extract__console=logs/console/network-extract.console
++ touch ./logs/console/run.console
+ touch logs/console/network-extract.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ set -euo pipefail
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ export LC_ALL=C
+ LC_ALL=C
+ touch logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ export divisor=MTc0ODc0Nzg2NTkzOTIwNTAwMAo
++ divisor=MTc0ODc0Nzg2NTkzOTIwNTAwMAo
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
++ export divisor=MTc0ODc0Nzg2NTk0MDg4NDAwMAo
++ divisor=MTc0ODc0Nzg2NTk0MDg4NDAwMAo
++ mktemp -d
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ 6 -eq 0 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.op9fkrwsf9/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ 5 -lt 4 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console --verbose
+ [[ search =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ alias parse-cisco=main
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ -z x ]]
+ [[ search == \h\e\l\p ]]
+ export logs_location=logs
+ [[ search == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ mkdir -p logs/console
++ printf '%*s' 12 ''
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ newline
++ export targets_location=targets
++ targets_location=targets
+ local count=1
+ (( i = 0 ))
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2lbf9jooww/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console --verbose
++ targets_logfile=logs/jobs/targets.jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ echo
+ local script_filename=cisco-configs.awk
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ alias parse-cisco=main
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+ [[ -z x ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ export logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ mkdir -p logs/console
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ IFS==
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ read -r key value
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.etd7r2nyoK ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.etd7r2nyoK
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ [[ 6 -eq 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jfouzajuow/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list
++ which awk
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lfLmzO1461
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Va6IYYcM3a
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lfLmzO1461
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Va6IYYcM3a
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+++ date +%s%N
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
++ alias list-file=list_file
++ alias log-error=log_error
+ script_filename=network-extract.shell
++ alias log-info=log_info
++ alias log-error=log_error
+ script_filename=network-extract
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ alias print-message=message
++ alias print-newline=newline
+++ base64
++ alias print-message=message
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ alias pause=pause
++ alias print-newline=newline
+ touch logs/console/network-extract.console
++ alias print-line=print
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ export logs_location=logs
++ nl='\n'
+ script_filename=network-extract.shell
++ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
+ script_filename=network-extract
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
+ export network_extract__console=logs/console/network-extract.console
++ logs_location=logs
+ network_extract__console=logs/console/network-extract.console
++ mkdir -p logs/console logs/jobs
+ touch logs/console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
++ IFS=,
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo 203.0.113.25
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=MTc0ODc0Nzg2NTk1NTY4NTAwMAo
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
++ divisor=MTc0ODc0Nzg2NTk1NTY4NTAwMAo
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ search == \d\r\y\-\r\u\n ]]
  "model": "",
  "version": "16.9",
+ [[ search == \v\e\r\b\o\s\e ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ for xitem in "${@}"
}
++ mktemp -d

++ mktemp -d
version 16.9
hostname branch-isr-02
+ [[ 6 -eq 0 ]]
++ alias network-configs--helper=network_configs__helper

+ declare -a execute
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.x0ydsckiiu/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console --verbose
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
++ alias network-extract--helper=network_extract__helper
+ [[ -n {
+ oIFS=' 	
  "vendor": "cisco",
'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ for xitem in "${@}"

+ IFS==
version 16.9
+ read -r key value
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.h37gf33kmp/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export actions_logfile=./logs/console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console --verbose
++ actions_logfile=./logs/console/run.console
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ touch ./logs/console/run.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P04Vb1wkTJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P04Vb1wkTJ
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTqFlppfMV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTqFlppfMV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_logfile=logs/jobs/targets.jobs
++ [[ -n '' ]]
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ targets_location=targets
++ [[ 5 -lt 4 ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ alias detect-vendor=detect_vendor
++ targets_logfile=logs/jobs/targets.jobs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias list-file=list_file
++ alias list-file=list_file
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
++ alias print-message=message
++ alias log-warn=log_warn
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
++ alias print-newline=newline
+ read -r key value
++ alias print-message=message
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ script_filename=network-extract.shell
+ [[ extract =~ ^(search|s)$ ]]
++ alias print-newline=newline
+ script_filename=network-extract
++ alias pause=pause
+ [[ extract == \h\e\l\p ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ extract == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias pause=pause
+ for xitem in "${@}"
+ IFS==
+ touch logs/console/network-extract.console
+ read -r key value
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ export LC_ALL=C
++ nl='\n'
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mkdir -p logs/console logs/jobs
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline 2
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ local count=2
+ [[ config == \d\r\y\-\r\u\n ]]
+++ date +%s%N
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+++ date +%s%N
+ [[ search == \d\e\b\u\g ]]
+ (( i = 0 ))
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ local 'indent=            '
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ search =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+++ base64
++ echo -e --platform=cisco
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+++ base64
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ newline
+ IFS==
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ newline
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ echo -e --platform=fortinet
++ export actions_logfile=./logs/console/run.console
++ echo -e --platform=cisco
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yokgkz1opj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc0Nzg2NTk3Njg0MjAwMAo
++ divisor=MTc0ODc0Nzg2NTk3Njg0MjAwMAo
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local target_platform=cisco
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
++ export divisor=MTc0ODc0Nzg2NTk3NjkyNjAwMAo
++ divisor=MTc0ODc0Nzg2NTk3NjkyNjAwMAo
+ source ./scripts/devops-helpers.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ __DEVOPS_HELPERS_SOURCED=1
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ newline
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ mkdir -p logs/console
+ [[ -z x ]]
++ export targets_location=targets
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ targets_location=targets
++ targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ export logs_location=logs
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ logs_location=logs
+ local target_platform=cisco
++ targets_logfile=logs/jobs/targets.jobs
+ local target_platform=fortinet
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ mkdir -p logs/console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
++ echo -e --platform=fortinet
+++ date +%s%N
+++ date +%s%N
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --platform=cisco
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "cisco",
+++ tr -dc a-zA-Z0-9
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+++ tr -dc a-zA-Z0-9
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ -n {
  "vendor": "cisco",
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "ASA",
  "version": "9.12(4)",
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
+ script_filename=network-extract.shell
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ script_filename=network-extract
}
+ script_filename=network-extract.shell

+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo -en '{
+ network_extract__console=logs/console/network-extract.console
+ [[ platform =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ platform =~ ^(logger|l)$ ]]
  "version": "9.12(4)",
+ [[ platform =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export divisor=MTc0ODc0Nzg2NTk5MzExMDAwMAo
+ [[ extract =~ ^(console|o)$ ]]
++ divisor=MTc0ODc0Nzg2NTk5MzExMDAwMAo
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ export divisor=MTc0ODc0Nzg2NTk5MzM4MzAwMAo
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
++ divisor=MTc0ODc0Nzg2NTk5MzM4MzAwMAo
+ print_file logs/console/network-extract.console
+ [[ platform == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ source ./scripts/devops-helpers.shell
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n logs/console/network-extract.console ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_file=logs/console/network-extract.console
+ IFS==
++ [[ -n '' ]]
+ read -r key value
+ [[ -f logs/console/network-extract.console ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ case "${target_file}" in
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ cat logs/console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -z x ]]
++ echo -e --verbose
+ export logs_location=logs
+ logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.unftm3mxm9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.os347ubshf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console --verbose
+ oIFS=' 	
+ oIFS=' 	
'
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ echo -e --verbose
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ result=0
+ exit 0
+ read -r key value
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PkZOfJ0MsL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PkZOfJ0MsL
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ local verbose=true
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
++ tr -d '\r'
+ console_output=false
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tm1nmlieak/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.chzjtleo2l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console --verbose
+ oIFS=' 	
'
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ oIFS=' 	
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
++ echo -e --verbose
+ read -r key value
++ echo -e --verbose
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
++ tr -d '\r'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ grep -v '^#'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local first_search_entry=10.10.10.10
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local last_search_entry=10.10.10.10
+ local verbose=true
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ IFS=' 	
'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ debug=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export console_output=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ verbose == \h\e\l\p ]]
+ console_output=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ local verbose=true
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ local count=1
+ script_helper=false
+ IFS=' 	
+ [[ false == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ debug=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ dry_run=false
+ search_terms=()
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ print_file logs/console/network-extract.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ declare -a search_terms
+ [[ -z '' ]]
+ [[ -n logs/console/network-extract.console ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ IFS==
+ read -r key value
+ console_output=false
+ newline
+ dry_run=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ [[ false == true ]]
+ export console_output=false
+ console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ (( i = 0 ))
++ mktemp -d
+ (( i < count ))
+ search_terms=()
+ [[ -z '' ]]
+ script_helper=false
+ declare -a search_terms
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ local target_file=logs/console/network-extract.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f logs/console/network-extract.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list != *,* ]]
+ echo
+ case "${target_file}" in
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ (( i++ ))
+ mapfile -t search_terms
+ cat logs/console/network-extract.console
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local first_search_entry=10.0.1.2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ local last_search_entry=10.0.1.2
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ] ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-configs--ips.list ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ ((  count == 0  ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ IFS==
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i < count ))
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
++ echo -e --platform=cisco
+ IFS==
+ read -r key value
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ] ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ IFS==
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ read -r key value
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
++ echo -e --verbose
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ echo -e --verbose
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ grep -v '^\s*$'
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j6auDFflWj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j6auDFflWj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ grep -v '^#'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^#'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local first_search_entry=172.16.0.5
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ verbose =~ ^(search|s)$ ]]
+ local last_search_entry=172.16.0.5
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local first_search_entry=172.16.1.6
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local last_search_entry=172.16.1.6
+ [[ platform == \h\e\l\p ]]
+ local verbose=true
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ debug=false
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ dry_run=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ] ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-configs--ips.list ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ] ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ [[ -z '' ]]
+ ((  count == 0  ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ conf == \c\o\n\f ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ read -r key value
+ export console_output=false
+ [[ extract =~ ^(logger|l)$ ]]
+ console_output=false
+ local first_search_entry=10.0.2.3
+ [[ verbose =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ extract =~ ^(search|s)$ ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ script_helper=false
+ local count=1
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ extract =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.2.3
+ [[ verbose == \d\e\b\u\g ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ ((  count == 0  ))
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local verbose=true
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ (( i = 0 ))
+ search_terms=()
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ] ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ declare -a search_terms
+ (( i < count ))
+ result=0
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]]
+ for xitem in "${@}"
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ IFS=' 	
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ exit 0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list != *,* ]]
+ IFS==
+ mapfile -t search_terms
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zMDA06Kwor ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ echo
+ [[ extract == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ newline
+ IFS==
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zMDA06Kwor
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ [[ -z '' ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i++ ))
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ debug=false
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ read -r key value
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ dry_run=false
+ [[ config =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
+ local 'prompt_message=Enter configuration file to be parsed: '
++ actions_logfile=./logs/console/run.console
+ [[ config == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local count=1
+ echo
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ console_output=false
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ IFS==
+ script_helper=false
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]]
+ local count=1
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ (( i = 0 ))
+ [[ -z fortinet ]]
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ [[ true == true ]]
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list != *,* ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ mapfile -t search_terms
+ (( i++ ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ newline
+ echo
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.10.10.10/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+++ date +%s%N
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract == \h\e\l\p ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ IFS==
+ IFS==
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=192.0.2.50
+ IFS==
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ read -r key value
+++ base64
+ local last_search_entry=192.0.2.50
+ for xitem in "${@}"
+ read -r key value
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ] ]]
+ [[ cfg == \c\f\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-configs--ips.list ]'
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local first_search_entry=172.18.1.20
++ dirname -- ./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local last_search_entry=172.18.1.20
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ echo -e --platform=fortinet
++ echo -e --platform=fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc0Nzg2NjA1NDkwNTAwMAo
++ divisor=MTc0ODc0Nzg2NjA1NDkwNTAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_DIR=./scripts
++ __DEVOPS_HELPERS_SOURCED=1
+ local script_filename=cisco-configs.awk
++ [[ 5 -lt 4 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias parse-listings--helper=parse_listings__helper
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/10.0.0.1/fortinet
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ output_dir=reports/172.16.1.6/fortinet
++ alias network-configs--helper=network_configs__helper
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ output_dir=reports/172.16.0.5/misc
+ [[ ! -d reports/172.16.0.5/misc ]]
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_platform=fortinet
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ debug=false
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ for xitem in "${@}"
+ console_output=false
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ cfg == \c\f\g ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]]
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo -e --verbose
++ echo 10.10.10.10
++ tr -d '\r'
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.1.2
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ local SCRIPT_DIR=./scripts
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ declare -a execute
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
++ grep -v '^\s*$'
+ local script_filename=fortinet-configs.awk
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local script_filename=fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^#'
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ which awk
++ which awk
++ which awk
+ output_dir=reports/172.18.1.20/misc
+ [[ ! -d reports/172.18.1.20/misc ]]
++ which awk
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zzvcwqc80c/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list != *,* ]]
+ local first_search_entry=192.168.0.100
+ mapfile -t search_terms
+ local last_search_entry=192.168.0.100
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ local count=1
++ echo -e --verbose
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ echo -e --verbose
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ IFS=,
++ echo 172.16.0.5
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ newline
+ [[ true == true ]]
+ declare -a execute
+ local count=1
++ IFS=,
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
++ echo 10.0.0.1
+ newline
++ IFS=,
++ echo 172.16.1.6
+ echo
++ echo 10.0.2.3
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ declare -a execute
+ (( i++ ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ tr -d '\r'
+ declare -a execute
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ grep -v '^\s*$'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ (( i++ ))
+ message '                .cache/resources/misc/switch1.conf'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local SCRIPT_DIR=./scripts
++ which awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ grep -v '^#'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ local verbose=true
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ which awk
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ [[ verbose == \h\e\l\p ]]
+ search_terms=()
+ [[ verbose == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ local awk_bin=/usr/bin/awk
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ newline
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ echo
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local awk_bin=/usr/bin/awk
+ local first_search_entry=192.168.0.1
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local last_search_entry=192.168.0.1
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
+ [[ -z cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ] ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
++ tr -d '\r'
+ echo
++ tr -d '\r'
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'indent=            '
+ local count=1
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ printf '%*s' 12 ''
+ newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z cisco ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ local 'indent=            '
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ echo
++ printf '%*s' 12 ''
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i < count ))
+ newline
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ grep -v '^\s*$'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
++ grep -v '^\s*$'
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'indent=            '
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ grep -v '^#'
++ grep -v '^#'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'indent=            '
+ (( i++ ))
+ local 'extracted_configuration={
  "model": "",
  "vendor": "cisco",
  "version": "",
  "model": "",
  "domain": "",
+ newline
+ (( i < count ))
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ true == true ]]
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
  "hostname": ""
+ local count=1
}
 description End-user and service devices
+ (( i = 0 ))
 network-object host 192.168.0.1

 network-object host 192.168.0.100
+ newline
 network-object host 10.10.10.10'
interface Vlan10
+ (( i < count ))
 ip address 10.0.1.2 255.255.255.0'
+ echo
+ result=0
++ IFS=,
+ (( i++ ))
+ [[ -n {
+ result=0
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "12.2",
  "domain": "",
+ (( i < count ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ echo
  "version": "",
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "domain": "",
  "hostname": "campus-sw-access01"
  "hostname": ""
++ echo 172.18.1.20
}
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]

++ IFS=,
+ (( i++ ))
+ (( i < count ))
++ echo 192.0.2.50
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}

version 12.2
hostname campus-sw-access01
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'

+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
interface Vlan10
object-group network Floor-Networks
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
 ip address 10.0.1.2 255.255.255.0 ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
 description End-user and service devices
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ declare -a execute
 network-object host 10.10.10.10 ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ output_dir=reports/192.168.0.100/cisco
+ [[ config =~ ^(extract|x)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ which awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fIigkp0cRa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fIigkp0cRa
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n {
+ print '{
  "vendor": "cisco",
  "model": "",
  "vendor": "cisco",
  "version": "12.2",
  "model": "",
  "domain": "",
  "version": "",
  "hostname": "campus-sw-access01"
++ [[ -n '' ]]
}
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1

version 12.2
  "domain": "",
hostname campus-sw-access01
  "hostname": ""
}
++ [[ 5 -lt 4 ]]


object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
 network-object host 192.168.0.100
++ which awk
++ alias detect-vendor=detect_vendor
 network-object host 10.10.10.10'
+ echo -en '{
+ local first_search_entry=192.168.1.11
  "vendor": "cisco",
++ alias exit-error=exit_error
  "model": "",
+ local first_search_entry=192.168.2.12
  "version": "",
+ local last_search_entry=192.168.1.11
+ local last_search_entry=192.168.2.12
  "domain": "",
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "hostname": ""
+ [[ true == true ]]
  "model": "",
}
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'

  "version": "12.2",
interface Vlan10
++ alias list-file=list_file
  "domain": "",
 ip address 10.0.1.2 255.255.255.0'
  "hostname": "campus-sw-access01"
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
}
++ alias log-error=log_error

version 12.2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ] ]]
hostname campus-sw-access01
++ alias log-info=log_info

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
++ alias log-warn=log_warn
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-configs--ips.list ]'
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
++ alias print-message=message
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
++ alias print-newline=newline
+ echo -en '{
  "vendor": "cisco",
+ local count=1
  "model": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ] ]]
  "version": "12.2",
  "domain": "",
++ alias pause=pause
  "hostname": "campus-sw-access01"
+ sed '1{/^[[:space:]]*$/d;}'
}
+ ((  count == 0  ))

version 12.2
++ alias print-line=print
hostname campus-sw-access01
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
++ alias print-file=print_file
 network-object host 192.168.0.100
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
 network-object host 10.10.10.10'
++ alias relative-configpath=relative_configpath
+ local count=1
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ ((  count == 0  ))
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i < count ))
++ alias system-metrics=system_metrics
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
++ alias validate-address=validate_address
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ (( i < count ))
++ alias warning-message=warning
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ export LC_ALL=C
+ [[ -z fortinet ]]
++ LC_ALL=C
+ [[ true == true ]]
++ export 'nl=\n'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ nl='\n'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ export cache_location=.cache
+ [[ -z fortinet ]]
++ cache_location=.cache
+ newline
+ [[ true == true ]]
++ export logs_location=logs
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ local count=1
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ newline
+ echo
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ local count=1
+ (( i++ ))
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ newline 2
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ local count=2
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i++ ))
  "version": "v7.2.5.F",
+ (( i < count ))
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ newline 2
+ echo
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''

config firewall address
 edit "IronMan-HQ"
+ [[ true == true ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ newline
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ echo
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ local SCRIPT_DIR=./scripts
+ newline
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ export actions_logfile=./logs/console/run.console
  "model": "",
+ local 'indent=            '
+ local count=1
+ local 'extracted_configuration={
+ local script_filename=cisco-configs.awk
  "vendor": "cisco",
  "model": "",
++ actions_logfile=./logs/console/run.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
  "version": "",
  "version": "",
  "domain": "",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
  "hostname": ""
+ echo
++ touch ./logs/console/run.console
+ (( i++ ))
+ (( i < count ))
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ print '{
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "domain": "",
  "version": "",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ true == true ]]
  "hostname": "fg-campus-core"
+ [[ extract =~ ^(config|c)$ ]]
}
+ output_dir=reports/192.168.1.10/misc
+ [[ -n {
  "domain": ""
  "hostname": ""
  "hostname": "fg-branch-vpn-01"
+ [[ extract =~ ^(console|o)$ ]]
  "vendor": "cisco",

}
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.1.10/misc ]]
  "model": "",
}
#hostname="fg-campus-core"

+ [[ ! -d reports/192.168.0.1/cisco ]]
  "version": "",

#hostname="fg-branch-vpn-01"
#model="FortiGate-200F"
+ [[ extract =~ ^(extract|x)$ ]]
  "domain": "",
#model="FortiGate-60F"

  "hostname": ""
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ newline
}
object-group network Metropolis-Internal
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 description Core internal LAN for application clusters

 network-object host 10.0.2.3
+ local count=1
config firewall address

 edit "Hawkeye-Nest"
object-group network Panther-Edge
 network-object 192.168.2.0 255.255.255.0
config firewall address
+ (( i = 0 ))
 network-object host 192.168.2.12
 description Internet-facing proxy systems

  set subnet 172.16.1.6 255.255.255.255
+ (( i < count ))
 network-object host 203.0.113.25
+ echo
  set comment "Remote sniper node"
 edit "IronMan-HQ"
 network-object host 172.16.0.5
+ (( i++ ))
 next
object network Kent-Server

end'
 host 10.0.2.3
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
object network Edge-Terminal
  set subnet 10.0.0.1 255.255.255.255
 host 172.16.0.5
  set comment "Main node at Stark Tower"
 description Internet firewall handoff ]]
 next
+ sed '1{/^[[:space:]]*$/d;}'
end'
+ [[ extract =~ ^(platform|p)$ ]]
 description Internal mail & identity services'
+ echo -en '{
+ [[ extract =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ result=0
+ result=0
  "model": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \h\e\l\p ]]
  "version": "",
+ [[ -n {
  "domain": "",
  "vendor": "fortinet",
  "hostname": ""
  "model": "FortiGate-60F",
}
  "version": "v7.2.5.F",

  "domain": ""
object-group network Panther-Edge
  "hostname": "fg-branch-vpn-01"
 description Internet-facing proxy systems
}
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n {
 network-object host 203.0.113.25

  "vendor": "fortinet",
#hostname="fg-branch-vpn-01"
 network-object host 172.16.0.5
#model="FortiGate-60F"
+ [[ extract == \d\r\y\-\r\u\n ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421


object network Edge-Terminal
config firewall address
+ [[ extract == \v\e\r\b\o\s\e ]]
 host 172.16.0.5
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n {
  "model": "FortiGate-200F",
 edit "IronMan-HQ"
+ for xitem in "${@}"
  set subnet 10.0.0.1 255.255.255.255
 description Internet firewall handoff'
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ IFS==
+ read -r key value
++ which awk
  "vendor": "cisco",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
  "version": "",
  "domain": ""
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "fg-campus-core"
}
  "version": "",

++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
  "domain": "",
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
  "hostname": ""
}
#hostname="fg-campus-core"
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]

#model="FortiGate-200F"
object-group network Metropolis-Internal
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'

+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 description Core internal LAN for application clusters
config firewall address
 network-object host 10.0.2.3
 edit "Hawkeye-Nest"
 network-object 192.168.2.0 255.255.255.0
  set subnet 172.16.1.6 255.255.255.255
 network-object host 192.168.2.12
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  set comment "Remote sniper node"

 next
object network Kent-Server
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
end ]]
 host 10.0.2.3
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 description Internal mail & identity services ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ command -v -- ./scripts/network-extract.shell
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ newline

#hostname="fg-campus-core"
+ print '{
  "vendor": "cisco",
#model="FortiGate-200F"
  "model": "",

  "version": "",
config firewall address
  "domain": "",
 edit "Hawkeye-Nest"
  "hostname": ""
  set subnet 172.16.1.6 255.255.255.255
}
  set comment "Remote sniper node"

 next
object-group network Metropolis-Internal
end'
 description Core internal LAN for application clusters
+ local count=1
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
+ (( i = 0 ))
 description Internal mail & identity services'
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ echo
  "version": "",
  "domain": ""
+ (( i++ ))
  "hostname": "fg-campus-core"
+ (( i < count ))
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -n {
  "vendor": "cisco",

  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
config firewall address
 edit "Hawkeye-Nest"
}

  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
++ export targets_location=targets
+ echo -en '{

  "vendor": "fortinet",
object network Kent-Server
 host 10.0.2.3
  "model": "FortiGate-200F",
++ targets_location=targets
  "version": "",
 description Internal mail & identity services ]]
  "domain": ""
++ export targets_logfile=logs/jobs/targets.jobs
  "hostname": "fg-campus-core"
++ targets_logfile=logs/jobs/targets.jobs
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ echo -e --platform=fortinet

#hostname="fg-campus-core"
}
#model="FortiGate-200F"


config firewall address
object-group network Metropolis-Internal
 edit "Hawkeye-Nest"
 description Core internal LAN for application clusters
  set subnet 172.16.1.6 255.255.255.255
+ newline 2
 network-object host 10.0.2.3
+ [[ false == true ]]
  set comment "Remote sniper node"
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
 next
 network-object host 192.168.2.12

+ newline 2
end'
object network Kent-Server
++ dirname -- ./scripts/network-extract.shell
 host 10.0.2.3
 description Internal mail & identity services'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ echo
+ echo
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_file}" in
+ (( i < count ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UHpmt1LC8U/network-extract.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ newline
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ echo
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ echo
+ (( i++ ))
+ (( i < count ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/172.16.0.5/misc/fw3.cfg
++ IFS=,
++ echo 192.168.0.100
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
+++ date +%s%N
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ mktemp -d
+ output_dir=reports/192.168.1.11/fortinet
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ output_dir=reports/192.168.2.12/fortinet
+ local script_filename=cisco-configs.awk
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+++ base64
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
++ which awk
+ newline 2
+ local count=2
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform == \d\e\b\u\g ]]
+ print '{
  "vendor": "cisco",
+ [[ platform == \d\r\y\-\r\u\n ]]
  "model": "",
  "version": "",
+ [[ platform == \v\e\r\b\o\s\e ]]
  "domain": "",
  "hostname": ""
+ for xitem in "${@}"
}
+ IFS==

+ read -r key value
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n {
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ newline
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
  "hostname": ""
}
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'

object-group network Fortress-Wireless
 description Secure wireless access layer
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ echo -en '{
  "vendor": "cisco",
  "version": "9.14(3)",
++ command -v -- ./scripts/network-extract.shell
  "model": "",
  "domain": "edge.dc.example.com",
  "version": "",
  "hostname": "perimeter-fw1"
  "domain": "",
}
  "hostname": ""

}
ASA Version 9.14(3)

+ local count=1
hostname perimeter-fw1
+ (( i = 0 ))
object-group network Fortress-Wireless
++ which awk
domain-name edge.dc.example.com
 description Secure wireless access layer

+ (( i < count ))
+ newline
object-group network Avengers-DMZ
 network-object host 172.18.1.20
 description Public access layer
+ [[ true == true ]]
+ echo
+ local count=1
 network-object host 192.168.1.10'
+ (( i++ ))
 network-object host 192.0.2.50
+ (( i < count ))
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ print_file logs/console/network-extract.console
+ echo
++ command -v -- ./scripts/network-extract.shell
+ [[ -n logs/console/network-extract.console ]]
+ (( i++ ))
+ local target_file=logs/console/network-extract.console
+ (( i < count ))
+ [[ -f logs/console/network-extract.console ]]
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ cat -n reports/10.0.2.3/misc/fw1.cfg
 network-object host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.2.0 255.255.255.0'
++ which awk
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ newline
+ newline
ASA Version 9.14(3)
+ [[ true == true ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
+ local count=1
 description Public access layer
+ print_file logs/console/network-extract.console
+ local count=1
 network-object host 192.0.2.50
+ [[ -n logs/console/network-extract.console ]]
 network-object host 203.0.113.25
+ (( i = 0 ))
+ (( i = 0 ))
+ local target_file=logs/console/network-extract.console
 network-object 192.168.2.0 255.255.255.0 ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ -f logs/console/network-extract.console ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ cat logs/console/network-extract.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.op9fKrwsF9/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n9GZHuCM50
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n9GZHuCM50
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
++ alias detect-vendor=detect_vendor
++ dirname -- ./scripts/network-extract.shell
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ export divisor=MTc0ODc0Nzg2NjEyMjg3MzAwMAo
++ divisor=MTc0ODc0Nzg2NjEyMjg3MzAwMAo
++ alias log-info=log_info
++ alias log-warn=log_warn
+ source ./scripts/devops-helpers.shell
+ print '{
  "vendor": "cisco",
++ alias print-message=message
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

++ [[ -n '' ]]
++ alias print-newline=newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
ASA Version 9.14(3)
hostname perimeter-fw1
++ __DEVOPS_HELPERS_SOURCED=1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
++ [[ 5 -lt 4 ]]
 description Public access layer
 network-object host 192.0.2.50
++ alias pause=pause
 network-object host 203.0.113.25
++ alias print-line=print
 network-object 192.168.2.0 255.255.255.0'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ alias parse-listings--helper=parse_listings__helper
domain-name edge.dc.example.com

++ alias system-metrics=system_metrics
object-group network Avengers-DMZ
 description Public access layer
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ echo -en '{
++ alias network-configs--helper=network_configs__helper
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ printf '%*s' 12 ''
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
+ newline 2
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local 'indent=            '
++ export 'nl=\n'
++ nl='\n'
+ [[ true == true ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ echo
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ (( i < count ))
++ IFS=,
+ [[ -z x ]]
+ echo
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ echo 192.168.1.10
+ export logs_location=logs
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ local count=1
+ (( i++ ))
+ logs_location=logs
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mkdir -p logs/console
+ newline
+ (( i < count ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local count=1
+ echo
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ (( i < count ))
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ result=0
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ exit 0
+ (( i++ ))
+ declare -a execute
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ false == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ true == true ]]
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h5faB9Qf3U ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h5faB9Qf3U
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
++ IFS=,
+ local script_filename=fortinet-configs.awk
+ case "${target_file}" in
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
++ echo 192.168.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local count=1
+ local target_file=logs/console/network-extract.console
+ (( i = 0 ))
+ [[ -f logs/console/network-extract.console ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ cat logs/console/network-extract.console
+ (( i++ ))
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local target_file=logs/console/network-extract.console
+ declare -a execute
+ (( i < count ))
++ which awk
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9OiW3GtPES ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9OiW3GtPES
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ which awk
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ newline 2
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ export network_extract__console=logs/console/network-extract.console
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ network_extract__console=logs/console/network-extract.console
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ touch logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ true == true ]]
+ [[ -n logs/console/network-extract.console ]]
++ echo -e --verbose
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ print_file logs/console/network-extract.console
+ case "${target_file}" in
+ [[ -n logs/console/network-extract.console ]]
+ cat logs/console/network-extract.console
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AUhZZZKwxe ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AUhZZZKwxe
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ local awk_bin=/usr/bin/awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console ]]
+ case "${target_file}" in
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h37gf33KMP/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0q8OU62PKr ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0q8OU62PKr
++ IFS=,
++ printf '%*s' 12 ''
++ echo 192.168.1.11
+ local 'indent=            '
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ IFS=,
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo 192.168.2.12
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ printf '%*s' 12 ''
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ local 'indent=            '
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "12.2",
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "campus-sw-access01"
}
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

++ which awk
version 12.2
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
hostname campus-sw-access01
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]

+ [[ 6 -eq 0 ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.owwnn3pb3v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
object-group network Floor-Networks
 description End-user and service devices
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console --verbose
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ oIFS=' 	
'
+ newline
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(config|c)$ ]]
+ result=0
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ [[ verbose =~ ^(extract|x)$ ]]

+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
version 12.2
++ which awk
+ [[ verbose =~ ^(platform|p)$ ]]
hostname campus-sw-access01

+ local count=1
object-group network Floor-Networks
 description End-user and service devices
+ (( i = 0 ))
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
+ echo
 network-object host 10.10.10.10 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local verbose=true
+ IFS=' 	
'
+ result=0
+ [[ -z '' ]]
+ exit 0
+ debug=false
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2YTGQubfet ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2YTGQubfet
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dJa2CTepXN ]]
+ [[ -z '' ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dJa2CTepXN
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+++ date +%s%N
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]]
+ case "${target_file}" in
+ search_terms=()
+ declare -a search_terms
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x0ydScKiIU/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+++ base64
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ tr -d '\r'
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
+ local 'indent=            '
+ [[ true == true ]]
+ local 'indent=            '
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ true == true ]]
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ newline
+ result=0
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ [[ -n {
+ echo
  "vendor": "cisco",
+ local count=1
+ (( i++ ))
  "model": "",
  "version": "",
+ (( i < count ))
+ (( i = 0 ))
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
 network-object host 172.18.1.20
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
 network-object host 192.168.1.10 ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file logs/console/network-extract.console
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n logs/console/network-extract.console ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local target_file=logs/console/network-extract.console
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -f logs/console/network-extract.console ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ grep -v '^#'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ export divisor=MTc0ODc0Nzg2NjE0OTkwMzAwMAo
++ divisor=MTc0ODc0Nzg2NjE0OTkwMzAwMAo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ cat logs/console/network-extract.console
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
++ [[ -n '' ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
+ result=0
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ newline
+ newline 2
+ exit 0
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rarAAiIMsA ]]
+ [[ search =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rarAAiIMsA
+ [[ search =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",
+ [[ search =~ ^(platform|p)$ ]]
+ local count=2
  "version": "12.2",
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
  "domain": "",
++ alias parse-listings--helper=parse_listings__helper
  "hostname": "campus-sw-access01"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
}
+ (( i < count ))

version 12.2
+ [[ search == \h\e\l\p ]]
hostname campus-sw-access01

+ [[ search == \d\e\b\u\g ]]
interface Vlan1
+ [[ search == \d\r\y\-\r\u\n ]]
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ search == \v\e\r\b\o\s\e ]]

object-group network Floor-Networks
+ for xitem in "${@}"
 description End-user and service devices
+ echo
+ IFS==
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ read -r key value
+ (( i++ ))
 network-object host 10.10.10.10'
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ echo
  "model": "",
+ result=0
+ (( i++ ))
  "version": "",
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
  "domain": "",
+ [[ -n {
  "hostname": ""
}

  "vendor": "cisco",
  "model": "",
object-group network Fortress-Wireless
  "version": "12.2",
 description Secure wireless access layer
  "domain": "",
 network-object host 172.18.1.20
  "hostname": "campus-sw-access01"
 network-object host 192.168.1.10'
}

version 12.2
hostname campus-sw-access01

interface Vlan1
+ [[ true == true ]]
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ -n {
++ alias network-extract--helper=network_extract__helper
  "vendor": "cisco",
  "model": "",
 network-object host 192.168.0.100
  "version": "",
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
 network-object host 10.10.10.10 ]]
  "domain": "",
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ newline
+ echo -en '{
  "vendor": "cisco",
+ local count=1
  "model": "",
  "version": "",
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}
+ echo

object-group network Fortress-Wireless
+ (( i++ ))
 description Secure wireless access layer
+ (( i < count ))
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local first_search_entry=192.168.100.100
+ echo -en '{
  "vendor": "cisco",
+ local last_search_entry=192.168.100.100
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ [[ true == true ]]
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ result=0
+ exit 0
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ script_filename=network-extract.shell
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ newline 2
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI9ZrtdVkq ]]
+ local count=2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI9ZrtdVkq
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
+ local 'extracted_configuration={
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "vendor": "fortinet",
+ newline
  "model": "FortiGate-200F",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console ]]
+ echo
  "version": "",
+ local count=1
  "domain": ""
  "model": "FortiGate-60F",
+ (( i = 0 ))
  "version": "v7.2.5.F",
+ (( i++ ))
  "hostname": "fg-campus-core"
+ case "${target_file}" in
  "domain": ""
+ (( i < count ))
+ (( i < count ))
}

+ echo
#hostname="fg-campus-core"
+ [[ true == true ]]
#model="FortiGate-200F"
+ [[ config =~ ^(config|c)$ ]]

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
end'
+ [[ config =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yokgKz1OPj/network-extract.console
  "hostname": "fg-branch-vpn-01"
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ result=0
+ [[ config =~ ^(platform|p)$ ]]
}
+ [[ -n {
  "vendor": "fortinet",
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))

+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
  "model": "FortiGate-200F",
#hostname="fg-branch-vpn-01"
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
  "version": "",
  "domain": ""
#model="FortiGate-60F"
  "hostname": "fg-campus-core"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
}
config system interface
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'

 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
  set alias "User LAN"
#hostname="fg-campus-core"
#model="FortiGate-200F"
 next

config firewall address
+ newline
 edit "Cap-HQ"
end
  set subnet 192.168.1.11 255.255.255.255
+ local count=1

  set comment "Captain America’s secure endpoint"
 next
end ]]
+ (( i = 0 ))
config firewall address
 edit "Branch-Gateway"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
+ echo
  set comment "Primary LAN gateway"
 next
+ (( i++ ))
end'
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ -n {
  "vendor": "fortinet",
  "hostname": "fg-branch-vpn-01"
  "model": "FortiGate-200F",
}
  "version": "",
  "domain": ""
+ [[ 6 -eq 0 ]]

+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.anuvumcnc0/network-configs--ips.list =~ ^-*(h|help)$ ]]
#hostname="fg-branch-vpn-01"
  "hostname": "fg-campus-core"
}
#model="FortiGate-60F"

+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console --verbose
#hostname="fg-campus-core"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

#model="FortiGate-200F"
config system interface

 edit "internal"
config firewall address
  set ip 192.168.2.12 255.255.255.0
 edit "Cap-HQ"
  set alias "User LAN"
  set subnet 192.168.1.11 255.255.255.255
 next
  set comment "Captain America’s secure endpoint"
end
 next

end ]]
config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ oIFS=' 	
'
  set comment "Primary LAN gateway"
 next
+ for xitem in "${@}"
+ echo -en '{
  "vendor": "fortinet",
end'
+ IFS==
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ read -r key value
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ [[ -n {
 next
  "vendor": "fortinet",
end'
  "model": "FortiGate-60F",
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ false == true ]]
+ print_file logs/console/network-extract.console
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n logs/console/network-extract.console ]]
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local target_file=logs/console/network-extract.console
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ cat logs/console/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ local count=2
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ result=0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ exit 0
+ [[ search == \h\e\l\p ]]
++ echo -e --platform=cisco
+ [[ search == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cBxX8bGrRu ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cBxX8bGrRu
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tm1NmliEaK/network-extract.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Va6IYYcM3a ]]
+ [[ platform =~ ^(console|o)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Va6IYYcM3a
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lfLmzO1461 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lfLmzO1461
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -n logs/console/network-extract.console ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_file=logs/console/network-extract.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -f logs/console/network-extract.console ]]
+ for xitem in "${@}"
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ IFS==
+ read -r key value
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ which awk
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P04Vb1wkTJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P04Vb1wkTJ
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTqFlppfMV ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZTqFlppfMV
++ IFS=,
++ echo 192.168.100.100
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
++ echo -e --verbose
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
++ which awk
++ mktemp -d
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ export console_output=false
+ console_output=false
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcY2qhXgU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcY2qhXgU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ printf '%*s' 12 ''
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ mktemp -d
++ alias pause=pause
+ local 'indent=            '
++ alias print-line=print
++ alias print-file=print_file
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ tr -d '\r'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias validate-address=validate_address
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias warning-message=warning
++ export LC_ALL=C
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ LC_ALL=C
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ export 'nl=\n'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ export logs_location=logs
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ logs_location=logs
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ mkdir -p logs/console logs/jobs
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ grep -v '^#'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JC25gefT6g
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JC25gefT6g
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ local first_search_entry=198.51.100.75
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local last_search_entry=198.51.100.75
++ [[ 5 -lt 4 ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
++ alias list-file=list_file
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
++ alias log-error=log_error
++ alias log-info=log_info
+ local count=1
+ ((  count == 0  ))
++ alias log-warn=log_warn
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ alias print-message=message
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ alias print-newline=newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias pause=pause
+ echo
+ (( i++ ))
++ alias print-line=print
+ (( i < count ))
++ alias print-file=print_file
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias relative-configpath=relative_configpath
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ alias system-metrics=system_metrics
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ alias validate-address=validate_address
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
++ export targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnsZxQ144R
  "vendor": "fortinet",
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnsZxQ144R
  "model": "FortiGate-200F",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XvJ5xDCe5m
++ targets_location=targets
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XvJ5xDCe5m
  "version": "",
  "domain": ""
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "hostname": "fg-campus-core"
++ export targets_logfile=logs/jobs/targets.jobs
}
+ export 'nl=\n'

+ export 'nl=\n'
++ targets_logfile=logs/jobs/targets.jobs
#hostname="fg-campus-core"
+ nl='\n'
+ [[ logger =~ ^(config|c)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
#model="FortiGate-200F"
+ [[ logger =~ ^(console|o)$ ]]

+ source ./scripts/devops-resources.shell
config system interface
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
 edit "wifi"
+ [[ logger =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
 next
+ [[ logger == \h\e\l\p ]]
end

+ [[ logger == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
config firewall address
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
 edit "Titan-WLAN-Host"
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias detect-vendor=detect_vendor
  set subnet 192.168.100.100 255.255.255.255
++ alias exit-error=exit_error
  set comment "Guest WiFi node"
+ for xitem in "${@}"
++ alias exit-error=exit_error
 next
+ IFS==
end

+ read -r key value
config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
++ alias list-file=list_file
  set comment "Wanda’s chaos relay"
 next
++ alias list-file=list_file
end ]]
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ alias print-file=print_file
++ alias pause=pause
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ print '{
++ alias validate-address=validate_address
++ export 'nl=\n'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
++ nl='\n'
++ alias warning-message=warning
  "domain": ""
  "hostname": "fg-campus-core"
++ export cache_location=.cache
}
+++ date +%s%N

++ cache_location=.cache
++ export LC_ALL=C
#hostname="fg-campus-core"
++ export logs_location=logs
#model="FortiGate-200F"
++ logs_location=logs

config system interface
 edit "wifi"
++ mkdir -p logs/console logs/jobs
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
++ LC_ALL=C
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
++ export 'nl=\n'
  set comment "Wanda’s chaos relay"
++ nl='\n'
 next
end'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export cache_location=.cache
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
++ cache_location=.cache
 next
++ export logs_location=logs
++ logs_location=logs
+ sed '1{/^[[:space:]]*$/d;}'
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
++ mkdir -p logs/console logs/jobs

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+++ base64
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

++ echo -e --verbose
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ newline 2
+ local count=2
+ (( i = 0 ))
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ local verbose=true
+ local count=1
+ IFS=' 	
+ (( i = 0 ))
'
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ debug=false
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
++ export actions_logfile=./logs/console/run.console
+ export console_output=false
++ actions_logfile=./logs/console/run.console
+ console_output=false
++ touch ./logs/console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list != *,* ]]
++ export divisor=MTc0ODc0Nzg2NjIzMTY3MjAwMAo
+ mapfile -t search_terms
++ divisor=MTc0ODc0Nzg2NjIzMTY3MjAwMAo
+ source ./scripts/devops-helpers.shell
+++ date +%s%N
++ [[ -n '' ]]
+++ base64
+++ tr -dc a-zA-Z0-9
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ output_dir=reports/198.51.100.75/cisco
++ tr -d '\r'
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ grep -v '^\s*$'
+ alias parse-cisco=main
++ grep -v '^#'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ newline
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ (( i < count ))
++ export targets_logfile=logs/jobs/targets.jobs
+ echo
++ targets_logfile=logs/jobs/targets.jobs
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zzVcwqC80c/network-extract.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export divisor=MTc0ODc0Nzg2NjIzODU1ODAwMAo
++ divisor=MTc0ODc0Nzg2NjIzODU1ODAwMAo
+ source ./scripts/devops-helpers.shell
+++ date +%s%N
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias parse-listings--helper=parse_listings__helper
+++ date +%s%N
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+++ base64
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ alias parse-cisco=main
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ tr -dc a-zA-Z0-9
+ echo
+ mkdir -p logs/console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export divisor=MTc0ODc0Nzg2NjI0NDk0MDAwMAo
++ divisor=MTc0ODc0Nzg2NjI0NDk0MDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ which awk
++ alias network-configs--helper=network_configs__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
++ export divisor=MTc0ODc0Nzg2NjI0NTUxMzAwMAo
++ divisor=MTc0ODc0Nzg2NjI0NTUxMzAwMAo
+ oIFS=' 	
'
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ mktemp -d
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ script_filename=network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z x ]]
+ network_extract__console=logs/console/network-extract.console
+ export logs_location=logs
+ touch logs/console/network-extract.console
+ logs_location=logs
++ alias network-configs--helper=network_configs__helper
+ mkdir -p logs/console
++ alias network-extract--helper=network_extract__helper
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j6auDFflWj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j6auDFflWj
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ alias parse-cisco=main
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ IFS=,
++ echo 198.51.100.75
++ mktemp -d
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.enpa963i0l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console --verbose
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9SrUzwtcg7
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9SrUzwtcg7
++ which awk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ [[ search =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias print-message=message
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ output_dir=reports/203.0.113.25/cisco
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iAI6erqhdk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iAI6erqhdk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ set -euo pipefail
+ export LC_ALL=C
+ source ./scripts/devops-resources.shell
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local awk_bin=/usr/bin/awk
++ alias list-file=list_file
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ alias log-error=log_error
+ [[ 6 -eq 0 ]]
++ alias log-info=log_info
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jfouzajuow/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console --verbose
++ mktemp -d
++ alias log-warn=log_warn
++ command -v -- ./scripts/network-extract.shell
+ oIFS=' 	
'
++ alias print-message=message
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=./logs/console/run.console
+ [[ 6 -eq 0 ]]
++ actions_logfile=./logs/console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2lbf9jooww/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console --verbose
+ local 'indent=            '
++ touch ./logs/console/run.console
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ for xitem in "${@}"
+ IFS==
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ read -r key value
+ IFS==
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ read -r key value
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
++ export actions_logfile=./logs/console/run.console
+ local script_filename=cisco-configs.awk
++ actions_logfile=./logs/console/run.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ touch ./logs/console/run.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KyUvwrOX6u
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KyUvwrOX6u
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ export targets_location=targets
++ alias log-error=log_error
++ targets_location=targets
++ alias log-info=log_info
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias warning-message=warning
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ which awk
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+++ date +%s%N
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ echo -e --config=.cache/resources/misc/fw3.cfg
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
++ IFS=,
++ echo 203.0.113.25
+++ date +%s%N
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ echo -e --platform=cisco
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
++ export divisor=MTc0ODc0Nzg2NjI3NDc5NTAwMAo
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ divisor=MTc0ODc0Nzg2NjI3NDc5NTAwMAo

+ local target_config=.cache/resources/misc/fw3.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ source ./scripts/devops-helpers.shell
domain-name global.dmz.example.net
+ [[ config =~ ^(console|o)$ ]]

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ [[ -n '' ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export divisor=MTc0ODc0Nzg2NjI3OTYxMzAwMAo
+ [[ config == \v\e\r\b\o\s\e ]]
++ divisor=MTc0ODc0Nzg2NjI3OTYxMzAwMAo
+ local awk_bin=/usr/bin/awk
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias parse-listings--helper=parse_listings__helper
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ read -r key value
+++ date +%s%N
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ export logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
+ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+++ base64
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+++ tr -dc a-zA-Z0-9
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local 'indent=            '
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ extract == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ echo
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export divisor=MTc0ODc0Nzg2NjI4OTc1NDAwMAo
++ divisor=MTc0ODc0Nzg2NjI4OTc1NDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ [[ platform =~ ^(platform|p)$ ]]
+ logs_location=logs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ mkdir -p logs/console
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ touch logs/console/network-extract.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.unftm3mxm9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console --verbose
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
'
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
+ read -r key value
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.os347ubshf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console --verbose
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ oIFS=' 	
'
+ local 'extracted_configuration={
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
  "vendor": "cisco",
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
  "model": "ASA",
+ local target_platform=cisco
  "version": "9.14(3)",
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
  "domain": "edge.dc.example.com",
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
  "hostname": "perimeter-fw1"
+ [[ verbose =~ ^(extract|x)$ ]]
}
+ [[ logger == \h\e\l\p ]]

+ print_file logs/console/network-extract.console
+ [[ platform == \d\r\y\-\r\u\n ]]
ASA Version 9.14(3)
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
hostname perimeter-fw1
+ local target_platform=cisco
+ [[ -n logs/console/network-extract.console ]]
domain-name edge.dc.example.com
+ [[ logger == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
interface GigabitEthernet0/0
 nameif outside
+ local target_file=logs/console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
 security-level 0
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
 ip address 203.0.113.25 255.255.255.0
+ [[ -f logs/console/network-extract.console ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ verbose == \v\e\r\b\o\s\e ]]
 description External Internet-facing Interface
+ local verbose=true

object network NAT-Edge
 host 203.0.113.25
+ IFS=' 	
 description Internet-bound IP NAT
'

+ [[ -z '' ]]
+ debug=false
object-group network Avengers-DMZ
+ [[ -z '' ]]
 description Public access layer
+ dry_run=false
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ cat logs/console/network-extract.console
+ [[ -z true ]]
 network-object 192.168.2.0 255.255.255.0
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]

object-group network Panther-Edge
+ search_terms=()
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ declare -a search_terms
 network-object host 172.16.0.5'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ result=0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ [[ 6 -eq 0 ]]
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
object-group network Avengers-DMZ
++ echo -e --verbose
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.chzjtleo2l/network-configs--ips.list =~ ^-*(h|help)$ ]]
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ oIFS=' 	
'
interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ for xitem in "${@}"
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ IFS==
object network NAT-Edge
+ read -r key value
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
++ grep -v '^\s*$'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fIigkp0cRa ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fIigkp0cRa
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ grep -v '^#'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ [[ -z '' ]]
+ IFS==
+ debug=false
+ read -r key value
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ local verbose=true
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ config == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ newline
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ IFS=' 	
'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ debug=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ dry_run=false
+ case "${target_file}" in
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local count=1
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ ((  count == 0  ))
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ cfg == \c\f\g ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ newline
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ config =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
++ grep -v '^#'
++ grep -v '^#'
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.2.3
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=fortinet
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --platform=cisco
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ result=0
+ exit 0
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n9GZHuCM50 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n9GZHuCM50
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=fortinet
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(search|s)$ ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
++ which awk
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
++ dirname reports/10.0.2.3/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/172.16.1.6/misc/switch3.conf
++ IFS=,
++ echo 10.10.10.10
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
++ dirname -- ./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ verbose == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local verbose=true
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS=' 	
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -z true ]]
+ [[ verbose == \h\e\l\p ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ local verbose=true
+ console_output=false
+ IFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ debug=false
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ dry_run=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ search_terms=()
+ export console_output=false
+ declare -a search_terms
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ [[ -z '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list != *,* ]]
+ script_helper=false
+ mapfile -t search_terms
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
++ IFS=,
++ echo 10.0.0.1
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ which awk
++ tr -d '\r'
++ tr -d '\r'
++ IFS=,
++ grep -v '^\s*$'
++ echo 10.0.2.3
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ grep -v '^\s*$'
+ [[ verbose =~ ^(console|o)$ ]]
+ declare -a execute
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
++ grep -v '^#'
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ grep -v '^#'
++ mktemp -d
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ IFS=,
++ echo 172.16.1.6
++ which awk
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ which awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ local first_search_entry=192.168.1.10
+ echo -e '                .cache/resources/misc/switch1.conf'
+ local last_search_entry=192.168.1.10
++ tr -d '\r'
+ newline
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ print '{
  "vendor": "cisco",
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
  "model": "ASA",
  "version": "9.12(4)",
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ newline
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ local count=1
domain-name global.dmz.example.net
+ (( i = 0 ))

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ local first_search_entry=192.168.0.1

object network Shield-WiFi-Alias
+ local last_search_entry=192.168.0.1
 host 10.10.10.10
 description Guest NAT
+ (( i < count ))
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'

object-group network Sector-Wireless
+ [[ true == true ]]
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-configs--ips.list ]'

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
+ local count=1
 ip address 10.10.10.10 255.255.255.0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ ((  count == 0  ))
 description Guest access interface
+ local awk_bin=/usr/bin/awk

+ [[ -z .cache/resources/misc/fw3.cfg ]]
object network Shield-WiFi-Alias
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
 host 10.10.10.10
+ [[ -z cisco ]]
 description Guest NAT
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ grep -v '^\s*$'
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ echo -en '{
+ newline
  "vendor": "cisco",
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local count=1
  "model": "ASA",
  "version": "9.12(4)",
+ newline
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
}
+ (( i < count ))

ASA Version 9.12(4)
+ local count=1
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
+ (( i = 0 ))
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ (( i < count ))

+ echo
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ (( i++ ))

+ echo
object-group network Sector-Wireless
 description Staff WiFi clients
+ (( i < count ))
 network-object host 192.168.100.100
+ (( i++ ))
 network-object host 10.10.10.10'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.11o3qv6eku
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.11o3qv6eku
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
+ echo
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias detect-vendor=detect_vendor
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias exit-error=exit_error
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ printf '%*s' 12 ''
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local awk_bin=/usr/bin/awk
+ local 'indent=            '
+ [[ true == true ]]
++ alias validate-address=validate_address
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ newline
++ nl='\n'
++ export cache_location=.cache
+ local count=1
++ cache_location=.cache
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ newline 2
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local count=2
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'indent=            '
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ (( i < count ))
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ [[ true == true ]]
+ echo
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ (( i++ ))
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z fortinet ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ message '                .cache/resources/misc/switch3.conf'
+ echo
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ (( i++ ))
+ local 'message=                .cache/resources/misc/switch3.conf'
+ newline
+ echo -e '                .cache/resources/misc/switch3.conf'
+ (( i < count ))
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
+ output_dir=reports/192.168.0.1/fortinet
 ip address 172.16.1.6 255.255.255.0'
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ output_dir=reports/192.168.1.10/misc
  "version": "",
  "domain": "",
+ [[ ! -d reports/192.168.1.10/misc ]]
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
 host 10.0.2.3
+ newline 2
 description Secure outbound concentrator ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo -en '{
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+++ date +%s%N
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ cat -n reports/10.0.0.1/misc/switch1.conf
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n {
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+++ base64
++ dirname -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ output_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ newline 2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ local SCRIPT_DIR=./scripts
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ case "${target_file}" in
+ local count=2
+ local script_filename=fortinet-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo
++ export divisor=MTc0ODc0Nzg2NjQ2ODUwMjAwMAo
+ (( i++ ))
++ divisor=MTc0ODc0Nzg2NjQ2ODUwMjAwMAo
+ (( i < count ))
+ echo
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ set -euo pipefail
+ [[ true == true ]]
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ cat -n reports/172.16.1.6/misc/switch3.conf
++ command -v -- ./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
++ which awk
++ which awk
++ mktemp -d
+ alias parse-cisco=main
+ result=0
+ exit 0
+ [[ -z x ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcY2qhXgU ]]
+ export logs_location=logs
+ logs_location=logs
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcY2qhXgU
+ mkdir -p logs/console
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ print_file logs/console/network-extract.console
+ [[ true == true ]]
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jfouZAjuOw/network-extract.console
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ local SCRIPT_DIR=./scripts
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console ]]
+ case "${target_file}" in
+ local script_filename=fortinet-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2lBF9JOoWw/network-extract.console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMt0DTytwx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMt0DTytwx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ IFS=,
++ echo 192.168.0.1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ IFS=,
++ echo 192.168.1.10
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ alias list-file=list_file
+ script_filename=network-extract.shell
+ declare -a execute
++ alias log-error=log_error
+ script_filename=network-extract
++ alias log-info=log_info
+ export network_extract__console=logs/console/network-extract.console
++ alias log-warn=log_warn
+ network_extract__console=logs/console/network-extract.console
++ alias print-message=message
+ touch logs/console/network-extract.console
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ alias print-file=print_file
+ declare -a execute
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ which awk
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ which awk
++ which awk
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JC25gefT6g ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JC25gefT6g
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.owwnn3pb3v/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ IFS=,
++ echo 192.168.2.12
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ local 'indent=            '
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnsZxQ144R ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnsZxQ144R
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XvJ5xDCe5m ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XvJ5xDCe5m
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+++ tr -dc a-zA-Z0-9
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
++ export divisor=MTc0ODc0Nzg2NjUwNTAzMzAwMAo
++ divisor=MTc0ODc0Nzg2NjUwNTAzMzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ alias network-configs--helper=network_configs__helper
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 192.168.1.10
+ alias parse-cisco=main
 network-object host 10.0.2.3
+ [[ config =~ ^(logger|l)$ ]]
 network-object 10.0.0.0 255.255.255.0'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ config == \d\e\b\u\g ]]
+ export logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n {
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
  "vendor": "cisco",
+ read -r key value
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local count=2
  "version": "",
+ (( i = 0 ))
  "domain": ""
+ (( i < count ))
  "hostname": "fg-campus-core"
}

+ echo
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ (( i++ ))
config firewall address
+ (( i < count ))
 edit "Vision-Link"
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]

config firewall address
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
  set comment "Vision’s quantum channel"
 next
end ]]
+ newline
+ local count=1
+ echo -en '{
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-200F",
  "version": "",
+ echo
  "domain": ""
  "hostname": "fg-campus-core"
+ (( i++ ))
}
+ (( i < count ))

#hostname="fg-campus-core"
+ script_filename=network-extract.shell
+ cat -n reports/192.168.1.10/misc/fw3.cfg
#model="FortiGate-200F"
+ script_filename=network-extract

config firewall address
+ export network_extract__console=logs/console/network-extract.console
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ network_extract__console=logs/console/network-extract.console
  set comment "Vision’s quantum channel"
 next
end'
+ touch logs/console/network-extract.console
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UNFTm3mXm9/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.anuvumcnc0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline 2
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console --verbose
+ local count=2
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
'
+ echo
+ newline
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ false == true ]]
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
++ echo -e --platform=fortinet
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ [[ true == true ]]
+ newline
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local count=1
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat logs/console/network-extract.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9SrUzwtcg7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9SrUzwtcg7
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iAI6erqhdk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iAI6erqhdk
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LjZ7qmvTvP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LjZ7qmvTvP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias exit-error=exit_error
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
++ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KyUvwrOX6u ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KyUvwrOX6u
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n4vN8eXutV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n4vN8eXutV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias list-file=list_file
+ IFS=' 	
'
+ [[ -z '' ]]
++ alias log-error=log_error
+ debug=false
+ [[ -z '' ]]
++ alias log-info=log_info
+ dry_run=false
+ [[ -z true ]]
++ alias log-warn=log_warn
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias print-message=message
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
++ alias print-newline=newline
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ search_terms=()
++ alias pause=pause
++ alias print-line=print
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
++ alias print-file=print_file
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --platform=fortinet
++ export actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+++ date +%s%N
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+++ base64
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ date +%s%N
+ IFS==
+ read -r key value
+++ base64
++ export divisor=MTc0ODc0Nzg2NjU5NTk5NjAwMAo
++ divisor=MTc0ODc0Nzg2NjU5NTk5NjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --verbose
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ export divisor=MTc0ODc0Nzg2NjYwMTQzODAwMAo
++ divisor=MTc0ODc0Nzg2NjYwMTQzODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ output_dir=reports/198.51.100.75/fortinet
+ script_filename=network-extract.shell
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ tr -d '\r'
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ grep -v '^#'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ which awk
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ 6 -eq 0 ]]
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.enpa963i0l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console --verbose
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 198.51.100.75
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
++ which awk
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8Hiz95XKCa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8Hiz95XKCa
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ cfg == \c\f\g ]]
+ read -r key value
++ alias list-file=list_file
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ echo -e --config=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ output_dir=reports/203.0.113.25/fortinet
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+++ date +%s%N
++ echo -e --platform=fortinet
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ result=0
+++ base64
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

++ sed -e '1s|^\(-\)\{1,\}||'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+++ tr -dc a-zA-Z0-9
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKVJ6WK1wP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKVJ6WK1wP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ platform =~ ^(console|o)$ ]]
++ alias pause=pause
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export divisor=MTc0ODc0Nzg2NjY0NTEzNjAwMAo
++ divisor=MTc0ODc0Nzg2NjY0NTEzNjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --platform=cisco
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 203.0.113.25
++ alias network-extract--helper=network_extract__helper
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ alias parse-cisco=main
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
++ export actions_logfile=./logs/console/run.console
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
++ actions_logfile=./logs/console/run.console
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
++ touch ./logs/console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ script_filename=network-extract.shell
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ newline
++ targets_logfile=logs/jobs/targets.jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ false == true ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+++ date +%s%N
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ base64
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.os347ubshf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console --verbose
+ oIFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ export divisor=MTc0ODc0Nzg2NjY2MzQ3MDAwMAo
++ divisor=MTc0ODc0Nzg2NjY2MzQ3MDAwMAo
++ echo -e --verbose
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
++ alias network-extract--helper=network_extract__helper
+ result=0
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ search =~ ^(extract|x)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ search =~ ^(logger|l)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ search =~ ^(platform|p)$ ]]
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ [[ search =~ ^(search|s)$ ]]
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ echo -en '{
+ [[ search == \d\r\y\-\r\u\n ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ search == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
  "domain": ""
+ for xitem in "${@}"
  "hostname": "fg-branch-vpn-01"
}
+ IFS==

+ read -r key value
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ result=0
+ [[ verbose =~ ^(config|c)$ ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.11o3qv6eku ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.11o3qv6eku
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ tr -d '\r'
+ network_extract__console=logs/console/network-extract.console
+ newline
+ touch logs/console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ newline 2
++ grep -v '^#'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.chzjtleo2l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console --verbose
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ oIFS=' 	
'
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ extract_location=reports/10.0.0.1/misc/switch3.conf
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/10.0.0.1/misc/switch3.conf
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMt0DTytwx ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aMt0DTytwx
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ output_dir=reports/10.0.0.1/misc
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ! -d reports/10.0.0.1/misc ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ local script_filename=cisco-configs.awk
++ IFS=,
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo 10.10.10.10
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
++ which awk
++ echo -e --platform=cisco
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ IFS=,
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
++ echo 10.0.0.1
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ -z '' ]]
+ script_helper=false
+ declare -a execute
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
++ printf '%*s' 12 ''
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ which awk
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^#'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-configs--ips.list ]'
++ echo -e --verbose
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ ls -al --color=auto .cache/resources/misc/switch1.conf
  "model": "FortiGate-200F",
  "version": "",
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ sed '1{/^[[:space:]]*$/d;}'
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ set -euo pipefail

object-group network Spider-Net
 description Web access switches
+ export LC_ALL=C
 network-object host 10.0.0.1
+ newline 2
+ LC_ALL=C
 network-object 192.168.12.0 255.255.255.0 ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
++ mktemp -d
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.1.10/misc/switch1.conf
++ grep -v '^#'
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/192.168.1.10/misc
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x7POkymEoR
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x7POkymEoR
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ case "${target_file}" in
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ export 'nl=\n'
+ newline
+ nl='\n'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.2.12
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
++ [[ -n '' ]]
+ [[ true == true ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
++ alias detect-vendor=detect_vendor
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-configs--ips.list ]'
++ alias exit-error=exit_error
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
++ alias list-file=list_file
+ (( i < count ))
++ alias log-error=log_error
++ alias log-info=log_info
+ echo
++ alias log-warn=log_warn
+ (( i++ ))
+ (( i < count ))
++ alias print-message=message
++ alias print-newline=newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
++ alias pause=pause
+ [[ true == true ]]
++ alias print-line=print
++ alias print-file=print_file
+ newline
+ local count=1
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ alias system-metrics=system_metrics
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ newline
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ local count=1
+ cat logs/console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eNpa963I0L/network-extract.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ result=0
+ local target_file=logs/console/network-extract.console
+ exit 0
+ [[ -f logs/console/network-extract.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LjZ7qmvTvP ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LjZ7qmvTvP
+ cat logs/console/network-extract.console
++ which awk
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n4vN8eXutV ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n4vN8eXutV
++ IFS=,
++ echo 192.168.1.10
+++ base64
++ mktemp -d
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ output_dir=reports/192.168.2.12/misc
+ declare -a execute
+ [[ ! -d reports/192.168.2.12/misc ]]
+++ tr -dc a-zA-Z0-9
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ export divisor=MTc0ODc0Nzg2Njc1NjAyODAwMAo
++ divisor=MTc0ODc0Nzg2Njc1NjAyODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wRlAUaBrQS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wRlAUaBrQS
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias network-extract--helper=network_extract__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local awk_bin=/usr/bin/awk
++ alias print-message=message
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
++ alias warning-message=warning
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ newline
+ local script_filename=cisco-configs.awk
+ local count=1
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ export actions_logfile=./logs/console/run.console
+ script_filename=network-extract.shell
++ actions_logfile=./logs/console/run.console
+ script_filename=network-extract
++ touch ./logs/console/run.console
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ IFS=,
++ echo 192.168.2.12
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
++ export targets_location=targets
++ targets_location=targets
+ [[ 6 -eq 0 ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.owwnn3pb3v/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
++ which awk
+++ date +%s%N
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+++ base64
+ sed '1{/^[[:space:]]*$/d;}'
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ true == true ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/switch1.conf
++ export divisor=MTc0ODc0Nzg2Njc3OTYyMjAwMAo
++ divisor=MTc0ODc0Nzg2Njc3OTYyMjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OS347UBShf/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local target_config=.cache/resources/misc/fw1.cfg
  "domain": "",
  "hostname": ""
+ [[ config =~ ^(console|o)$ ]]
}

object-group network Metropolis-Internal
+ [[ config =~ ^(extract|x)$ ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ result=0
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ config == \h\e\l\p ]]
  "domain": "",
  "hostname": ""
+ [[ config == \d\e\b\u\g ]]
}

+ [[ config == \d\r\y\-\r\u\n ]]
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ for xitem in "${@}"
 network-object host 192.168.2.12 ]]
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.anuvumcnc0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ extract == \h\e\l\p ]]
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8Hiz95XKCa ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8Hiz95XKCa
++ echo -e --platform=cisco
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
++ mktemp -d
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CHzJtlEO2l/network-extract.console
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ local target_file=logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ [[ config =~ ^(extract|x)$ ]]
+ cat logs/console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.78q8lQEk3d
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.78q8lQEk3d
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKVJ6WK1wP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKVJ6WK1wP
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ export actions_logfile=./logs/console/run.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
++ touch ./logs/console/run.console
+ IFS==
+ read -r key value
++ echo -e --verbose
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+++ date +%s%N
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+++ base64
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ local verbose=true
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ platform == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ debug=false
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ export divisor=MTc0ODc0Nzg2NjgzMTg2OTAwMAo
++ divisor=MTc0ODc0Nzg2NjgzMTg2OTAwMAo
++ grep -v '^#'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local first_search_entry=198.51.100.75
+ IFS==
+ read -r key value
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ 6 -eq 0 ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ oIFS=' 	
+ [[ false == true ]]
'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ search_terms=()
+ IFS==
+ declare -a search_terms
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
++ tr -d '\r'
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
++ grep -v '^\s*$'
++ dirname reports/198.51.100.75/misc/fw1.cfg
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/198.51.100.75/misc
+ [[ ! -d reports/198.51.100.75/misc ]]
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ IFS=,
+ IFS==
+ read -r key value
++ echo 198.51.100.75
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
++ IFS=,
+ [[ logger =~ ^(console|o)$ ]]
++ echo 203.0.113.25
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
++ which awk
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ local awk_bin=/usr/bin/awk
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'

+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'indent=            '
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
++ tr -d '\r'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "",
  "domain": "",
+ (( i < count ))
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local count=1

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ (( i = 0 ))
 network-object host 198.51.100.75
+ local 'prompt_message=Enter configuration file to be parsed: '
 network-object host 203.0.113.25
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]

+ echo
+ [[ -z fortinet ]]
object network Krypton-Gateway
+ (( i++ ))
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ case "${target_file}" in
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oWWnn3pB3V/network-extract.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ true == true ]]
+ newline 2
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local count=2
+ (( i = 0 ))
+ local target_file=logs/console/network-extract.console
+ (( i < count ))
+ echo
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ (( i++ ))
+ cat logs/console/network-extract.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
+ result=0
+ local count=1
+ exit 0
+ (( i = 0 ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x7POkymEoR ]]
+ echo
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.x7POkymEoR
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wRlAUaBrQS ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wRlAUaBrQS
++ IFS=,
++ echo 10.10.10.10
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ sed '1{/^[[:space:]]*$/d;}'
end'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.78q8lQEk3d ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.78q8lQEk3d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.omCcHkHeD3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.omCcHkHeD3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2Njk4MDQ3NTAwMAo
++ divisor=MTc0ODc0Nzg2Njk4MDQ3NTAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.anuvumcnc0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.crhsecFC5H
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.crhsecFC5H
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc0Nzg2NzAyMTY3NTAwMAo
++ divisor=MTc0ODc0Nzg2NzAyMTY3NTAwMAo
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1cfvz3la7z/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/203.0.113.25/misc/fw3.cfg
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --verbose
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ tr -d '\r'
++ grep -v '^\s*$'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
++ grep -v '^#'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local first_search_entry=10.10.10.10
+ newline 2
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ local count=2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ echo
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AnUVuMCNC0/network-extract.console
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.omCcHkHeD3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.omCcHkHeD3
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ IFS=,
++ echo 10.10.10.10
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1cfvZ3LA7z/network-extract.console
+ [[ true == true ]]
+ print_file logs/console/network-extract.console
+ [[ -n logs/console/network-extract.console ]]
+ local target_file=logs/console/network-extract.console
+ [[ -f logs/console/network-extract.console ]]
+ case "${target_file}" in
+ cat logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.crhsecFC5H ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.crhsecFC5H
