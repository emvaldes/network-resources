+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZhoiAefc2J
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZhoiAefc2J
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODgzMzYwMjIzNjM5OTAwMAo--
++ divisor=--MTc0ODgzMzYwMjIzNjM5OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias serialize-object=serialize_objects
++ mktemp -d
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfgvRWE1OE
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfgvRWE1OE
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODgzMzYwMjI1MjQ3OTAwMAo--
++ divisor=--MTc0ODgzMzYwMjI1MjQ3OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9NqaGG4RuB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9NqaGG4RuB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console --verbose
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ oIFS=' 	
'
++ alias print-newline=newline
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
++ alias pause=pause
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-file=print_file
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzYwMjI3MDY5NjAwMAo--
++ divisor=--MTc0ODgzMzYwMjI3MDY5NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ tr -d '\r'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ mktemp -d
++ echo -e --platform=cisco
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZstnflJiX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZstnflJiX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console --verbose
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ oIFS=' 	
'
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ IFS=' 	
'
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ config =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local export_objects=false
+++ date +%s%N
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ script_helper=false
+ [[ config == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/ips.list ]]
+ for xitem in "${@}"
+ IFS==
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
++ export divisor=--MTc0ODgzMzYwMjI5MTQ3MDAwMAo--
++ divisor=--MTc0ODgzMzYwMjI5MTQ3MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ set -euo pipefail
++ alias network-configs--helper=network_configs__helper
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ declare -a execute
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ echo -e --platform=cisco
++ which awk
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bS5bGr79Eh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bS5bGr79Eh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ 6 -eq 0 ]]
+ [[ true == true ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ oIFS=' 	
'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ for xitem in "${@}"
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ echo -e --search=.cache/ips.list
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export targets_location=targets
+ [[ search =~ ^(config|c)$ ]]
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+++ date +%s%N

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+++ base64
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local script_filename=cisco-configs.awk
+ local verbose=true
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS=' 	
'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ debug=false
+ set -euo pipefail
+ [[ -z '' ]]
+ dry_run=false
+ export LC_ALL=C
+ [[ -z true ]]
+ LC_ALL=C
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzYwMjMwOTI5NjAwMAo--
++ divisor=--MTc0ODgzMzYwMjMwOTI5NjAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
+ [[ config =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(export|r)$ ]]
++ mktemp -d
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ which awk
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ newline 2
++ alias network-extract--helper=network_extract__helper
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ alias serialize-object=serialize_objects
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ [[ -z x ]]
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ export logs_location=logs
++ grep -v '^#'
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NozZVLkJdj
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NozZVLkJdj
+ declare -a execute
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ script_filename=network-extract.shell
++ alias print-line=print
+ script_filename=network-extract
++ which awk
+ newline
++ alias print-file=print_file
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ network_extract__console=logs/console/network-extract.console
+ local count=1
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(console|o)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ extract =~ ^(export|r)$ ]]
+ touch logs/console/network-extract.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ (( i < count ))
++ alias system-metrics=system_metrics
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ false == true ]]
++ alias validate-address=validate_address
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
++ alias warning-message=warning
+ for xitem in "${@}"
+ local count=17
+ IFS==
++ export LC_ALL=C
+ read -r key value
+ ((  count == 0  ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
++ LC_ALL=C
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ export 'nl=\n'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console ]]
+ newline
++ nl='\n'
+ case "${target_file}" in
+ local count=1
++ export cache_location=.cache
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ (( i = 0 ))
++ cache_location=.cache
+ (( i < count ))
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console --verbose
++ printf '%*s' 12 ''
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ export actions_logfile=./logs/console/run.console
+ [[ true == true ]]
++ actions_logfile=./logs/console/run.console
+ newline
+ local count=1
++ touch ./logs/console/run.console
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--access-sw1-west.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ export targets_location=targets
++ targets_location=targets
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZhoiAefc2J ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZhoiAefc2J
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ sed -e '1s|^\(-\)\{1,\}||'

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ logger =~ ^(config|c)$ ]]
}
+ output_dir=.cache/resources/cisco

+ [[ logger =~ ^(console|o)$ ]]
version 16.9
hostname branch-isr-02
+ [[ ! -d .cache/resources/cisco ]]

+ [[ logger =~ ^(export|r)$ ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ logger =~ ^(extract|x)$ ]]
 description ISP uplink

interface GigabitEthernet0/0/1
+ [[ logger =~ ^(logger|l)$ ]]
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ logger =~ ^(platform|p)$ ]]
 description Dev VLAN

object network BlackWidow-Core
+ [[ logger =~ ^(search|s)$ ]]
 host 172.16.1.6
 description Branch router uplink NAT

+ [[ logger == \h\e\l\p ]]
object network Hydra-Link
 host 198.51.100.75
+ [[ logger == \d\e\b\u\g ]]
 description Branch NAT egress
+ [[ logger == \d\r\y\-\r\u\n ]]

+ [[ logger == \v\e\r\b\o\s\e ]]
object-group network Hydra-Edge
+ for xitem in "${@}"
 description Remote site uplink
 network-object host 192.168.2.12
+ IFS==
 network-object host 198.51.100.75
+ read -r key value

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
++ mktemp -d
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
++ export divisor=--MTc0ODgzMzYwMjMzMDE1MjAwMAo--
  "vendor": "cisco",
++ divisor=--MTc0ODgzMzYwMjMzMDE1MjAwMAo--
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ source ./scripts/devops-helpers.shell
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
++ [[ -n '' ]]
 description Workstation LAN

++ readonly __DEVOPS_HELPERS_SOURCED=1
interface GigabitEthernet0/0/2
++ __DEVOPS_HELPERS_SOURCED=1
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
++ [[ 5 -lt 4 ]]
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
++ echo -e --verbose
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
++ alias network-configs--helper=network_configs__helper
 description Workstation LAN
++ dirname -- ./scripts/network-extract.shell

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ alias network-extract--helper=network_extract__helper
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ config =~ ^(config|c)$ ]]

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ alias serialize-object=serialize_objects
+ local target_config=configs/cisco/perimeter-fw1.cfg

interface GigabitEthernet0/0/1
+ [[ config =~ ^(console|o)$ ]]
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
+ [[ config =~ ^(export|r)$ ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
+ [[ config =~ ^(extract|x)$ ]]
 host 172.16.1.6
 description Branch router uplink NAT

+ [[ config =~ ^(logger|l)$ ]]
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
+ [[ config =~ ^(platform|p)$ ]]
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
+ [[ config =~ ^(search|s)$ ]]
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
+ [[ config == \h\e\l\p ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ config == \d\e\b\u\g ]]
 network-object host 192.168.1.11'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lP2I7iiASB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lP2I7iiASB
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline 2
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ verbose == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local count=2
+ IFS=' 	
+ (( i = 0 ))
'
++ [[ -n '' ]]
+ (( i < count ))
+ [[ -z '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo
+ debug=false
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ dry_run=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ echo
+ export console_output=false
++ alias exit-error=exit_error
+ (( i++ ))
+ console_output=false
+ (( i < count ))
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
++ alias list-file=list_file
++ which awk
+ script_helper=false
++ alias log-error=log_error
+ [[ true == true ]]
+ [[ false == true ]]
++ alias log-info=log_info
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias log-warn=log_warn
+ [[ -z .cache/ips.list ]]
+ search_terms=()
++ alias print-message=message
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ declare -a search_terms
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ [[ -f .cache/ips.list ]]
++ alias print-newline=newline
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
++ alias pause=pause
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-line=print
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ echo -e --platform=cisco
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ newline
+ declare -a execute
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ 6 -eq 0 ]]
+ (( i++ ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ [[ false == true ]]
+ [[ false == true ]]
++ export actions_logfile=./logs/console/run.console
+ [[ true == true ]]
+ oIFS=' 	
'
++ actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
++ touch ./logs/console/run.console
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local target_platform=cisco
++ export targets_location=targets
+ [[ platform =~ ^(search|s)$ ]]
++ targets_location=targets
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform == \v\e\r\b\o\s\e ]]
++ targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--branch-isr-02.cfg.console
++ printf '%*s' 12 ''
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ local search_pattern=.cache/ips.list
+ local count=1
+ [[ search == \h\e\l\p ]]
+++ date +%s%N
+ [[ search == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+++ base64
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+++ tr -dc a-zA-Z0-9
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ mktemp -d
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfgvRWE1OE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfgvRWE1OE
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODgzMzYwMjM1MDcyODAwMAo--
+ for xitem in "${@}"
++ divisor=--MTc0ODgzMzYwMjM1MDcyODAwMAo--
+ IFS==
+ source ./scripts/devops-helpers.shell
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --verbose
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ output_dir=.cache/resources/cisco
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.laMahGSzDH
+ [[ ! -d .cache/resources/cisco ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.laMahGSzDH
+ local 'extracted_configuration={
  "vendor": "cisco",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ export 'nl=\n'
version 12.2
+ nl='\n'
hostname campus-sw-access01

interface Vlan1
+ source ./scripts/devops-resources.shell
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
++ [[ -n '' ]]
+ [[ -n {
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
  "vendor": "cisco",
++ [[ 5 -lt 4 ]]
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ alias detect-vendor=detect_vendor

version 12.2
hostname campus-sw-access01
++ alias exit-error=exit_error

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ command -v -- ./scripts/network-extract.shell
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias system-metrics=system_metrics
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias validate-address=validate_address
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
++ alias warning-message=warning
}

version 12.2
++ export LC_ALL=C
hostname campus-sw-access01
++ LC_ALL=C

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
++ export 'nl=\n'
 network-object host 192.168.0.100
++ nl='\n'
 network-object host 10.10.10.10 ]]
++ export cache_location=.cache
++ cache_location=.cache
+ echo -en '{
  "vendor": "cisco",
++ export logs_location=logs
  "model": "",
++ logs_location=logs
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

++ mkdir -p logs/console logs/jobs
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ script_filename=network-extract.shell
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ script_filename=network-extract
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z '' ]]
+ script_helper=false
+ network_extract__console=logs/console/network-extract.console
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ touch logs/console/network-extract.console
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ newline 2
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ grep -v '^\s*$'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=2
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ true == true ]]
++ touch ./logs/console/run.console
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
++ which awk
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
++ export targets_location=targets
+ local last_search_entry=203.0.113.25
++ targets_location=targets
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ true == true ]]
++ targets_logfile=logs/jobs/targets.jobs
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ false == true ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+++ date +%s%N
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+++ base64
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--campus-sw-access01.cfg.console
++ export divisor=--MTc0ODgzMzYwMjM2ODkzODAwMAo--
++ divisor=--MTc0ODgzMzYwMjM2ODkzODAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ printf '%*s' 12 ''
+ alias serialize-object=serialize_objects
+ local 'indent=            '
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ alias parse-cisco=main
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ [[ -z x ]]
+ (( i = 0 ))
+ export logs_location=logs
+ (( i < count ))
+ logs_location=logs
+ echo
+ mkdir -p logs/console
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ config =~ ^(config|c)$ ]]
+ exit 0
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9NqaGG4RuB ]]
+ [[ config =~ ^(console|o)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9NqaGG4RuB
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ mktemp -d
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ output_dir=.cache/resources/cisco
+ script_filename=network-extract.shell
+ [[ ! -d .cache/resources/cisco ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
++ command -v -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zveRFA9nag
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zveRFA9nag
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ grep -v '^\s*$'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local 'extracted_configuration={
++ alias print-message=message
++ grep -v '^#'
+ [[ 6 -eq 0 ]]
  "vendor": "cisco",
+ [[ extract =~ ^(config|c)$ ]]
  "model": "ASA",
  "version": "9.12(4)",
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ [[ extract =~ ^(console|o)$ ]]
++ alias print-newline=newline
hostname dmz-fw2-backup
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console --verbose
domain-name global.dmz.example.net
+ [[ extract =~ ^(export|r)$ ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ [[ extract =~ ^(extract|x)$ ]]
 description Guest access interface
++ alias pause=pause

interface GigabitEthernet0/1
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 nameif inside
++ alias print-line=print
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ oIFS=' 	
+ [[ extract =~ ^(logger|l)$ ]]

'
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
++ alias print-file=print_file
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
+ IFS==
 host 192.168.100.100
+ read -r key value
 description Backup inside NAT IP

+ [[ extract =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
object network Shield-WiFi-Alias
 host 10.10.10.10
+ [[ extract == \h\e\l\p ]]
 description Guest NAT

+ [[ extract == \d\e\b\u\g ]]
object network Sentinel-NAT
+ [[ extract == \d\r\y\-\r\u\n ]]
 host 203.0.113.25
+ [[ extract == \v\e\r\b\o\s\e ]]
 description Corporate NAT edge
+ for xitem in "${@}"

object-group network Sector-Wireless
+ IFS==
 description Staff WiFi clients
+ read -r key value
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
++ alias system-metrics=system_metrics
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
++ alias validate-address=validate_address
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
++ alias warning-message=warning
 description Backup inside NAT IP

++ export LC_ALL=C
object network Shield-WiFi-Alias
++ LC_ALL=C
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge
++ export 'nl=\n'

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
++ nl='\n'
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local SCRIPT_DIR=./scripts
++ echo -e --search=.cache/ips.list
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ which awk
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10
+ local first_search_entry=10.0.0.1

object-group network Watchtower-DMZ
 description Global secure relay
+ local last_search_entry=203.0.113.25
 network-object host 192.0.2.50 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
+ message 'Search Pattern: [ .cache/ips.list ]'
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]

interface GigabitEthernet0/2
+ local 'message=Search Pattern: [ .cache/ips.list ]'
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface
+ echo -e 'Search Pattern: [ .cache/ips.list ]'

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ local count=17

+ ((  count == 0  ))
object network Shield-WiFi-Alias
 host 10.10.10.10
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 description Guest NAT

+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
object network Sentinel-NAT
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 host 203.0.113.25
 description Corporate NAT edge
+ newline

object-group network Sector-Wireless
+ local count=1
 description Staff WiFi clients
+ (( i = 0 ))
 network-object host 192.168.100.100
+ (( i < count ))
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ platform == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ newline 2
+ declare -a execute
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ local count=2
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
++ printf '%*s' 12 ''
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ echo -e --verbose
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzYwMjM5NDMwMjAwMAo--
++ divisor=--MTc0ODgzMzYwMjM5NDMwMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ LC_ALL=C
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--dmz-fw2-backup.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export logs_location=logs
+ [[ verbose =~ ^(console|o)$ ]]
+ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
++ mktemp -d
+ mkdir -p logs/console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ local verbose=true
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
++ grep -v '^#'
 description Internal Network Interface

object network NAT-Edge
+ result=0
 host 203.0.113.25
 description Internet-bound IP NAT
+ exit 0

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZstnflJiX ]]
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZstnflJiX
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
+ local SCRIPT_DIR=./scripts
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ local script_filename=fortinet-configs.awk
}

+ local script_filepath=./scripts/extract/fortinet-configs.awk
ASA Version 9.14(3)
hostname perimeter-fw1
+ script_filename=network-extract.shell
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
domain-name edge.dc.example.com
+ script_filename=network-extract

interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ export network_extract__console=logs/console/network-extract.console
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ network_extract__console=logs/console/network-extract.console

interface GigabitEthernet0/1
 nameif inside
 security-level 100
+ touch logs/console/network-extract.console
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N3l9tiVIQu
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N3l9tiVIQu
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ which awk
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
++ alias log-warn=log_warn
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
++ alias print-message=message
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
++ alias print-newline=newline
 nameif outside
 security-level 0
+ [[ platform =~ ^(config|c)$ ]]
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
++ alias pause=pause
+ [[ platform =~ ^(console|o)$ ]]
 description Internal Network Interface
++ alias print-line=print

+ [[ platform =~ ^(export|r)$ ]]
object network NAT-Edge
 host 203.0.113.25
+ [[ platform =~ ^(extract|x)$ ]]
 description Internet-bound IP NAT
++ alias print-file=print_file

object network Stark-Tower
+ [[ platform =~ ^(logger|l)$ ]]
 host 10.0.0.1
 description Core services gateway

+ [[ platform =~ ^(platform|p)$ ]]
object-group network Avengers-DMZ
 description Public access layer
+ local target_platform=fortinet
 network-object host 192.0.2.50
++ alias relative-configpath=relative_configpath
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ platform =~ ^(search|s)$ ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ platform == \h\e\l\p ]]
 network-object host 172.16.0.5

+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
++ alias validate-address=validate_address
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
++ alias warning-message=warning
hostname perimeter-fw1
domain-name edge.dc.example.com
++ export LC_ALL=C

++ LC_ALL=C
interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
++ export 'nl=\n'
 description External Internet-facing Interface
++ nl='\n'

interface GigabitEthernet0/1
++ export cache_location=.cache
 nameif inside
++ cache_location=.cache
 security-level 100
++ export logs_location=logs
++ logs_location=logs
+ local first_search_entry=10.0.0.1
++ mkdir -p logs/console logs/jobs
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ local last_search_entry=203.0.113.25

object network NAT-Edge
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 host 203.0.113.25
 description Internet-bound IP NAT
+ [[ true == true ]]

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ echo -en '{
  "vendor": "cisco",
+ local 'message=Search Pattern: [ .cache/ips.list ]'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ local count=17
interface GigabitEthernet0/0
+ ((  count == 0  ))
 nameif outside
 security-level 0
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 ip address 203.0.113.25 255.255.255.0
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
 description External Internet-facing Interface

+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ newline

object network NAT-Edge
+ local count=1
 host 203.0.113.25
+ (( i = 0 ))
+ (( i < count ))
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
+ [[ 6 -eq 0 ]]
 description Public access layer
+ echo
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i++ ))

+ (( i < count ))
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console --verbose
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ newline 2
+ declare -a execute
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --search=.cache/ips.list
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
++ export targets_location=targets
+ [[ search == \h\e\l\p ]]
++ targets_location=targets
+ [[ search == \d\e\b\u\g ]]
++ echo -e --verbose
+ [[ search == \d\r\y\-\r\u\n ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
++ targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ local 'indent=            '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --config=configs/misc/fw1.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+++ tr -dc a-zA-Z0-9
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ output_dir=.cache/resources/fortinet
+ [[ -z .cache/ips.list ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export divisor=--MTc0ODgzMzYwMjQxOTU2MTAwMAo--
+ read -r key value
++ divisor=--MTc0ODgzMzYwMjQxOTU2MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
++ dirname -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ set -euo pipefail
+ [[ -z x ]]
+ export LC_ALL=C
+ export logs_location=logs
+ LC_ALL=C
+ logs_location=logs
+ mkdir -p logs/console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bS5bGr79Eh ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bS5bGr79Eh
++ mktemp -d
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
++ which awk
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ newline
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

+ local count=1
config firewall address
+ (( i = 0 ))
 edit "Branch-Gateway"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
+ echo
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
+ (( i++ ))
  set subnet 198.51.100.75 255.255.255.255
+ (( i < count ))
  set comment "Branch NAT"
 next
end

+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
config firewall address
 edit "IronMan-HQ"
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ script_filename=network-extract.shell
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ result=0
+ touch logs/console/network-extract.console
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GUmdM4xP9q
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GUmdM4xP9q
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ print '{
+ export 'nl=\n'
  "vendor": "fortinet",
+ nl='\n'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ source ./scripts/devops-resources.shell
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
++ [[ -n '' ]]
 edit "internal"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
++ [[ 5 -lt 4 ]]
end

config firewall address
 edit "Branch-Gateway"
++ alias detect-vendor=detect_vendor
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
++ alias exit-error=exit_error
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
++ alias list-file=list_file
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
++ alias log-error=log_error
+ sed '1{/^[[:space:]]*$/d;}'
end'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ alias print-newline=newline
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
++ alias pause=pause
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
++ alias print-line=print
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
++ alias print-file=print_file
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
++ alias relative-configpath=relative_configpath
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ alias system-metrics=system_metrics
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
++ alias validate-address=validate_address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
++ alias warning-message=warning
 next
+ [[ 6 -eq 0 ]]
 edit "Spidey-Sandbox"
++ export LC_ALL=C
  set subnet 10.0.1.2 255.255.255.255
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  set comment "QA node in Peter'\''s Lab"
++ LC_ALL=C
 next
++ IFS=,
 edit "Panther-Vault"
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console --verbose
  set subnet 192.168.1.10 255.255.255.255
++ export 'nl=\n'
  set comment "Wakandan data store"
++ nl='\n'
 next
 edit "Public-Test"
++ export cache_location=.cache
  set subnet 203.0.113.25 255.255.255.255
++ cache_location=.cache
  set comment "Public NAT exposure for Red Skull trap"
 next
++ export logs_location=logs
 edit "Guardians-Relay"
++ logs_location=logs
  set subnet 192.168.0.1 255.255.255.255
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set comment "Backup uplink for Milano crew"
++ mkdir -p logs/console logs/jobs
 next
end'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ declare -a execute
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ newline 2
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=./logs/console/run.console
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
++ export targets_location=targets
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
++ targets_location=targets
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
++ export targets_logfile=logs/jobs/targets.jobs
+ newline
++ targets_logfile=logs/jobs/targets.jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=configs/misc/fw3.cfg
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --verbose
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
+ [[ verbose =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-branch-vpn-01.cfg.console
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzYwMjQ0NjA5MzAwMAo--
++ divisor=--MTc0ODgzMzYwMjQ0NjA5MzAwMAo--
+ source ./scripts/devops-helpers.shell
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
++ grep -v '^#'
 edit "core"
+ [[ -z x ]]
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ export logs_location=logs
 next
+ logs_location=logs
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ mkdir -p logs/console
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ set -euo pipefail
+ result=0
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NozZVLkJdj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NozZVLkJdj
++ mktemp -d
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract =~ ^(config|c)$ ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ extract =~ ^(console|o)$ ]]
  "domain": ""
  "hostname": "fg-campus-core"
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
}

+ [[ extract =~ ^(export|r)$ ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ declare -a execute
config system interface
 edit "core"
+ [[ extract =~ ^(extract|x)$ ]]
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ local extract_location=.cache/resources/misc/fw3.cfg
 next
 edit "wifi"
+ [[ extract =~ ^(logger|l)$ ]]
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ [[ extract =~ ^(platform|p)$ ]]
end
+ [[ extract =~ ^(search|s)$ ]]

+ [[ extract == \h\e\l\p ]]
config firewall address
+ [[ extract == \d\e\b\u\g ]]
 edit "Shield-WiFi"
+ [[ extract == \d\r\y\-\r\u\n ]]
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ [[ extract == \v\e\r\b\o\s\e ]]
 edit "Titan-WLAN-Host"
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
  set subnet 192.168.100.100 255.255.255.255
+ read -r key value
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
+ local first_search_entry=10.0.0.1
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ local last_search_entry=203.0.113.25
  set alias "Campus Core Transit"
++ which awk
 next
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ [[ true == true ]]
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ message 'Search Pattern: [ .cache/ips.list ]'
end

+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
config firewall address
 edit "Cap-HQ"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ script_filename=network-extract.shell
  set subnet 192.168.1.11 255.255.255.255
+ script_filename=network-extract
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
  set comment "Captain America’s secure endpoint"
 next
+ export network_extract__console=logs/console/network-extract.console
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ network_extract__console=logs/console/network-extract.console
+ local count=17
 next
 edit "Hawkeye-Nest"
+ touch logs/console/network-extract.console
+ ((  count == 0  ))
  set subnet 172.16.1.6 255.255.255.255
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
 next
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
end ]]
++ echo -e --platform=cisco
+ newline
+ local count=1
+ echo -en '{
+ (( i = 0 ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ (( i < count ))
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ echo
  set comment "Wireless AP Gateway"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ (( i < count ))
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
+ local 'prompt_message=Enter configuration file to be parsed: '
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ [[ -z configs/misc/fw1.cfg ]]
 edit "Hawkeye-Nest"
+ [[ -z cisco ]]
  set subnet 172.16.1.6 255.255.255.255
+ [[ true == true ]]
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1cj8scUpp
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1cj8scUpp
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ export 'nl=\n'
+ ls -al --color=auto configs/misc/fw1.cfg
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ newline 2
++ alias print-message=message
++ alias print-newline=newline
+ local count=2
++ alias pause=pause
+ (( i = 0 ))
+ (( i < count ))
++ alias print-line=print
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
+ echo
++ alias relative-configpath=relative_configpath
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias validate-address=validate_address
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ [[ 6 -eq 0 ]]
++ alias warning-message=warning
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export LC_ALL=C
+ local 'indent=            '
++ LC_ALL=C
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console --verbose
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ newline
++ mkdir -p logs/console logs/jobs
+ local count=1
+ oIFS=' 	
'
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ read -r key value
+ (( i++ ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_platform=cisco
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform == \h\e\l\p ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ for xitem in "${@}"
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
++ dirname .cache/resources/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console ]]
+ [[ search =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
++ export targets_location=targets
  set dstaddr "203.0.113.10"
++ echo -e --config=configs/misc/switch1.conf
  set action accept
++ targets_location=targets
  set logtraffic all
 next
end ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
+++ date +%s%N

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ command -v -- ./scripts/network-extract.shell
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+++ base64
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-campus-core.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export divisor=--MTc0ODgzMzYwMjQ3Mjk0MzAwMAo--
++ divisor=--MTc0ODgzMzYwMjQ3Mjk0MzAwMAo--
+ source ./scripts/devops-helpers.shell
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=1
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ result=0
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lP2I7iiASB ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lP2I7iiASB
++ grep -v '^\s*$'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ alias serialize-object=serialize_objects
++ which awk
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ newline
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ false == true ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ false == true ]]
+ [[ true == true ]]
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ newline
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
++ IFS=,
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ echo -e --platform=cisco
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fg-testing-config.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console --verbose
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ oIFS=' 	
'
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ [[ cfg == \c\f\g ]]
+ echo -e '                configs/misc/fw1.cfg'
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --search=.cache/ips.list
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw3.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.laMahGSzDH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.laMahGSzDH
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ output_dir=.cache/resources/misc
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ ! -d .cache/resources/misc ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local search_pattern=.cache/ips.list
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --config=configs/misc/switch3.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
+ local SCRIPT_DIR=./scripts
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

+ local script_filename=cisco-configs.awk
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ which awk
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ newline 2
+ local count=2
++ grep -v '^\s*$'
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
++ echo -e --platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ false == true ]]
+ ls -al --color=auto configs/misc/switch1.conf
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw1.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ exit 0
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zveRFA9nag ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zveRFA9nag
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ command -v -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ local SCRIPT_PATH=./scripts/network-extract.shell
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ tr -d '\r'
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ IFS=,
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ declare -a execute
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N3l9tiVIQu ]]
++ dirname .cache/resources/misc/switch3.conf
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N3l9tiVIQu
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GUmdM4xP9q ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GUmdM4xP9q
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Grtmrpvxi/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1cj8scUpp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1cj8scUpp
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u3JrBUsqJ4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u3JrBUsqJ4
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.unBfc3L0jO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.unBfc3L0jO
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ alias warning-message=warning
++ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4cqXSKT9R
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export 'nl=\n'
++ logs_location=logs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4cqXSKT9R
++ nl='\n'
++ mkdir -p logs/console logs/jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export cache_location=.cache
++ cache_location=.cache
+ export 'nl=\n'
++ export logs_location=logs
+ nl='\n'
++ logs_location=logs
+ source ./scripts/devops-resources.shell
++ mkdir -p logs/console logs/jobs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZ6IHmiyo6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZ6IHmiyo6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44CFfsjGpC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44CFfsjGpC
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-warn=log_warn
++ alias print-message=message
+++ date +%s%N
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias pause=pause
++ alias detect-vendor=detect_vendor
++ alias print-line=print
++ alias exit-error=exit_error
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias list-file=list_file
++ alias system-metrics=system_metrics
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ alias pause=pause
++ export targets_location=targets
++ LC_ALL=C
++ targets_location=targets
++ alias print-line=print
++ export 'nl=\n'
++ nl='\n'
++ export targets_logfile=logs/jobs/targets.jobs
+++ base64
++ targets_logfile=logs/jobs/targets.jobs
++ export cache_location=.cache
++ alias print-file=print_file
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
+++ base64
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p1iu7U90uz
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p1iu7U90uz
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ export divisor=--MTc0ODgzMzYwMzQ5MDE5NDAwMAo--
++ alias log-info=log_info
++ divisor=--MTc0ODgzMzYwMzQ5MDE5NDAwMAo--
++ alias log-warn=log_warn
+ source ./scripts/devops-helpers.shell
++ alias print-message=message
++ alias print-newline=newline
++ export actions_logfile=./logs/console/run.console
++ [[ -n '' ]]
++ actions_logfile=./logs/console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ touch ./logs/console/run.console
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
++ export LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODgzMzYwMzQ5Mjg5MTAwMAo--
++ divisor=--MTc0ODgzMzYwMzQ5Mjg5MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ alias serialize-object=serialize_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMJJBIDCzf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMJJBIDCzf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export divisor=--MTc0ODgzMzYwMzQ5NTk0MDAwMAo--
++ divisor=--MTc0ODgzMzYwMzQ5NTk0MDAwMAo--
+ alias parse-cisco=main
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ [[ -n '' ]]
+ mkdir -p logs/console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export targets_location=targets
++ alias parse-listings--helper=parse_listings__helper
++ alias log-error=log_error
++ targets_location=targets
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias print-message=message
++ alias print-newline=newline
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
+ alias serialize-object=serialize_objects
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ alias parse-cisco=main
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ date +%s%N
+++ date +%s%N
+++ base64
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ base64
+++ tr -dc a-zA-Z0-9
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ touch ./logs/console/run.console
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ set -euo pipefail
+ touch logs/console/network-extract.console
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--MTc0ODgzMzYwMzUwODU4NjAwMAo--
++ divisor=--MTc0ODgzMzYwMzUwODU4NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ mktemp -d
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+++ date +%s%N
+ LC_ALL=C
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODgzMzYwMzUwOTg5NjAwMAo--
++ divisor=--MTc0ODgzMzYwMzUwOTg5NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ alias parse-listings--helper=parse_listings__helper
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias network-configs--helper=network_configs__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jl2budq7fx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fjzwrxmlzt/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
++ mktemp -d
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console --export --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ oIFS=' 	
'
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ IFS==
+++ tr -dc a-zA-Z0-9
+ read -r key value
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hi12o9zj6o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
+ alias parse-cisco=main
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Kjo7d9XTW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Kjo7d9XTW
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ date +%s%N
++ alias system-metrics=system_metrics
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list
++ alias validate-address=validate_address
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
++ alias warning-message=warning
+ script_filename=network-extract.shell
++ export LC_ALL=C
++ LC_ALL=C
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ export 'nl=\n'
+ network_extract__console=logs/console/network-extract.console
++ nl='\n'
++ export cache_location=.cache
+ touch logs/console/network-extract.console
++ cache_location=.cache
++ export logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ base64
++ export divisor=--MTc0ODgzMzYwMzUxNzQzMTAwMAo--
++ divisor=--MTc0ODgzMzYwMzUxNzQzMTAwMAo--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ABpC23hXIt
++ alias parse-listings--helper=parse_listings__helper
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ABpC23hXIt
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ script_filename=network-extract.shell
+ alias serialize-object=serialize_objects
++ alias print-newline=newline
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ set -euo pipefail
+ export LC_ALL=C
+ alias parse-cisco=main
+ LC_ALL=C
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wsd2bixuog/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0ODgzMzYwMzUyNDY2NTAwMAo--
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
++ divisor=--MTc0ODgzMzYwMzUyNDY2NTAwMAo--
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ oIFS=' 	
'
+ [[ search =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
++ touch ./logs/console/run.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console --export --verbose
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ oIFS=' 	
'
+ for xitem in "${@}"
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YVDuDW7mrv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YVDuDW7mrv
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.djvnamztrk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console --export --verbose
++ export targets_location=targets
+ [[ config =~ ^(config|c)$ ]]
++ targets_location=targets
+ oIFS=' 	
'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ IFS==
++ targets_logfile=logs/jobs/targets.jobs
+ read -r key value
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ export actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
++ actions_logfile=./logs/console/run.console
+ IFS==
+ read -r key value
++ touch ./logs/console/run.console
+++ date +%s%N
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zau2e7qvl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ config =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODgzMzYwMzU0NjQ5NDAwMAo--
++ divisor=--MTc0ODgzMzYwMzU0NjQ5NDAwMAo--
+ oIFS=' 	
'
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ date +%s%N
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export divisor=--MTc0ODgzMzYwMzU0OTk3NzAwMAo--
+ [[ extract =~ ^(export|r)$ ]]
+ alias parse-cisco=main
++ divisor=--MTc0ODgzMzYwMzU0OTk3NzAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zWU7rrx7m5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zWU7rrx7m5
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ extract =~ ^(search|s)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ [[ extract == \h\e\l\p ]]
+ export logs_location=logs
+ [[ extract == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias parse-listings--helper=parse_listings__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qDnYPSdKp
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NfmlOPuVU9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NfmlOPuVU9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qDnYPSdKp
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export divisor=--MTc0ODgzMzYwMzU1NjE3NzAwMAo--
++ divisor=--MTc0ODgzMzYwMzU1NjE3NzAwMAo--
++ alias relative-configpath=relative_configpath
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias system-metrics=system_metrics
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias parse-listings--helper=parse_listings__helper
++ export LC_ALL=C
++ alias warning-message=warning
++ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
+ alias parse-cisco=main
++ export logs_location=logs
++ logs_location=logs
++ export logs_location=logs
++ mkdir -p logs/console logs/jobs
++ logs_location=logs
++ alias network-configs--helper=network_configs__helper
++ mkdir -p logs/console logs/jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ alias parse-cisco=main
+ [[ search =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ IFS==
+ read -r key value
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export actions_logfile=./logs/console/run.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ actions_logfile=./logs/console/run.console
+ IFS==
+ read -r key value
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
++ echo -e --platform=fortinet
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ 7 -eq 0 ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.thiitwa4gl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NpDijpCuBd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NpDijpCuBd
++ export targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZlUkvzjm01
++ targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZQj1rSt7TP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZlUkvzjm01
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZQj1rSt7TP
++ export targets_logfile=logs/jobs/targets.jobs
+ export 'nl=\n'
++ targets_logfile=logs/jobs/targets.jobs
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
++ export targets_location=targets
+ nl='\n'
++ targets_location=targets
+ nl='\n'
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list
++ alias log-error=log_error
+ [[ config =~ ^(export|r)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(logger|l)$ ]]
++ alias list-file=list_file
++ alias list-file=list_file
++ alias print-message=message
++ alias log-error=log_error
++ alias log-error=log_error
+ [[ 7 -eq 0 ]]
++ alias print-newline=newline
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-info=log_info
++ alias log-info=log_info
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hi12o9zj6o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
++ alias print-message=message
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
++ alias log-warn=log_warn
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias pause=pause
+ [[ platform =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ platform =~ ^(extract|x)$ ]]
++ alias print-line=print
++ alias print-message=message
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ oIFS=' 	
++ alias print-file=print_file
'
++ alias print-file=print_file
++ alias pause=pause
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
++ alias relative-configpath=relative_configpath
+ read -r key value
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ [[ 7 -eq 0 ]]
+++ base64
+ local target_platform=fortinet
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gemcj2kutm/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias warning-message=warning
+ oIFS=' 	
++ export LC_ALL=C
'
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
+ for xitem in "${@}"
++ LC_ALL=C
+ IFS==
++ alias warning-message=warning
+ read -r key value
++ export 'nl=\n'
++ export 'nl=\n'
++ export LC_ALL=C
++ nl='\n'
++ LC_ALL=C
++ export cache_location=.cache
++ nl='\n'
++ export 'nl=\n'
++ cache_location=.cache
++ export cache_location=.cache
++ export logs_location=logs
++ nl='\n'
++ logs_location=logs
++ cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ export cache_location=.cache
++ export logs_location=logs
++ cache_location=.cache
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ date +%s%N
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+++ base64
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODgzMzYwMzU3OTQ2MTAwMAo--
++ divisor=--MTc0ODgzMzYwMzU3OTQ2MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=./logs/console/run.console
+ [[ search == \d\e\b\u\g ]]
++ actions_logfile=./logs/console/run.console
+ [[ search == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
++ export actions_logfile=./logs/console/run.console
+ [[ platform == \h\e\l\p ]]
++ actions_logfile=./logs/console/run.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0ODgzMzYwMzU4MjU4MjAwMAo--
++ export actions_logfile=./logs/console/run.console
++ divisor=--MTc0ODgzMzYwMzU4MjU4MjAwMAo--
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ source ./scripts/devops-helpers.shell
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODgzMzYwMzU4Mjc5MzAwMAo--
+ [[ platform =~ ^(console|o)$ ]]
++ divisor=--MTc0ODgzMzYwMzU4Mjc5MzAwMAo--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
+ source ./scripts/devops-helpers.shell
+ export logs_location=logs
++ [[ 5 -lt 4 ]]
+ logs_location=logs
+ mkdir -p logs/console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --config=.cache/resources/misc/switch1.conf
+ mkdir -p logs/console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ export targets_logfile=logs/jobs/targets.jobs
+ IFS==
++ echo -e --platform=cisco
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ platform =~ ^(extract|x)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(logger|l)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
++ mktemp -d
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
+++ date +%s%N
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fjzwrxmlzt/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console --export --verbose
+ export network_extract__console=logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F3kRhza7Lm
+ oIFS=' 	
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F3kRhza7Lm
'
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ for xitem in "${@}"
+ touch logs/console/network-extract.console
+ export 'nl=\n'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS==
+ nl='\n'
+ [[ config =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODgzMzYwMzYwMTAxMTAwMAo--
+ read -r key value
++ divisor=--MTc0ODgzMzYwMzYwMTAxMTAwMAo--
+ local target_config=.cache/resources/misc/switch1.conf
++ export divisor=--MTc0ODgzMzYwMzYwMTkxOTAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(platform|p)$ ]]
++ divisor=--MTc0ODgzMzYwMzYwMTkxOTAwMAo--
++ [[ -n '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias exit-error=exit_error
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias log-error=log_error
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ for xitem in "${@}"
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=--MTc0ODgzMzYwMzYwMjQ5ODAwMAo--
++ alias log-warn=log_warn
++ divisor=--MTc0ODgzMzYwMzYwMjQ5ODAwMAo--
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ alias print-newline=newline
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias pause=pause
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
++ alias print-line=print
+ [[ config =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ alias serialize-object=serialize_objects
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
++ export LC_ALL=C
+ [[ config == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export 'nl=\n'
+ alias parse-cisco=main
++ nl='\n'
++ export cache_location=.cache
+ alias parse-cisco=main
++ cache_location=.cache
++ export logs_location=logs
+ alias serialize-object=serialize_objects
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs/console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rekduionqw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
++ echo -e --platform=cisco
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.opx3teyb4d/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console --export --verbose
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zflfi7fEmk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zflfi7fEmk
++ export actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ actions_logfile=./logs/console/run.console
+ export 'nl=\n'
+ nl='\n'
++ touch ./logs/console/run.console
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ [[ search =~ ^(config|c)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
++ alias list-file=list_file
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-error=log_error
+ IFS==
+ read -r key value
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ export LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
+ LC_ALL=C
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ extract == \d\e\b\u\g ]]
+ set -euo pipefail
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export LC_ALL=C
+ [[ extract == \v\e\r\b\o\s\e ]]
+ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ platform =~ ^(config|c)$ ]]
++ export logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(export|r)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(extract|x)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.s53c3pitqa/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbgddf57gs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
++ export targets_location=targets
+ for xitem in "${@}"
+ oIFS=' 	
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ targets_location=targets
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
+ [[ search =~ ^(config|c)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list
+ [[ search =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ 7 -eq 0 ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jl2budq7fx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console --export --verbose
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ oIFS=' 	
+ IFS==
'
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovDDDOCZ1S
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ihYiXqT0t8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovDDDOCZ1S
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ihYiXqT0t8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(platform|p)$ ]]
+++ date +%s%N
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias list-file=list_file
++ alias list-file=list_file
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
++ alias log-error=log_error
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
++ alias log-error=log_error
+ for xitem in "${@}"
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ alias log-info=log_info
+ read -r key value
++ alias log-warn=log_warn
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+++ base64
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ nl='\n'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mkdir -p logs/console logs/jobs
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_platform=cisco
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
+ [[ search =~ ^(config|c)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ export LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_platform=fortinet
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ LC_ALL=C
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvkvglbOPC
+ [[ search == \d\e\b\u\g ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvkvglbOPC
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ local target_platform=cisco
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ set -euo pipefail
++ alias log-error=log_error
+ export LC_ALL=C
+ LC_ALL=C
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export divisor=--MTc0ODgzMzYwMzYzMzY2OTAwMAo--
++ divisor=--MTc0ODgzMzYwMzYzMzY2OTAwMAo--
++ alias pause=pause
+ source ./scripts/devops-helpers.shell
++ alias print-line=print
++ [[ -n '' ]]
++ mktemp -d
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ alias print-file=print_file
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ read -r key value
+++ date +%s%N
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ alias parse-cisco=main
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
++ export 'nl=\n'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+++ base64
+ [[ -z x ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export logs_location=logs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
+ logs_location=logs
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
++ nl='\n'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ export cache_location=.cache
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ mkdir -p logs/console logs/jobs
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5I1QeAxLug
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dSopRyo1vM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5I1QeAxLug
++ targets_location=targets
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dSopRyo1vM
++ export targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_location=targets
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
+ [[ logger == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
++ alias log-error=log_error
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias exit-error=exit_error
++ alias log-info=log_info
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ config =~ ^(export|r)$ ]]
++ alias log-error=log_error
++ alias print-message=message
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-newline=newline
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ config =~ ^(platform|p)$ ]]
++ alias pause=pause
++ alias print-newline=newline
+ [[ config =~ ^(search|s)$ ]]
++ export divisor=--MTc0ODgzMzYwMzY0Mzk2MzAwMAo--
++ alias print-line=print
++ divisor=--MTc0ODgzMzYwMzY0Mzk2MzAwMAo--
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
++ alias pause=pause
++ alias print-file=print_file
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-line=print
+ IFS==
++ alias relative-configpath=relative_configpath
++ echo -e --platform=cisco
+ read -r key value
++ [[ -n '' ]]
++ alias print-file=print_file
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --export
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CnWbhqmV9i
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CnWbhqmV9i
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ logger == \h\e\l\p ]]
+ nl='\n'
++ alias warning-message=warning
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ export LC_ALL=C
+ source ./scripts/devops-resources.shell
++ LC_ALL=C
+ [[ logger =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ logger == \d\e\b\u\g ]]
++ export 'nl=\n'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
++ nl='\n'
+ script_filename=network-extract.shell
++ export cache_location=.cache
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ script_filename=network-extract
++ cache_location=.cache
++ alias warning-message=warning
+ [[ logger =~ ^(search|s)$ ]]
++ export LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export network_extract__console=logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ network_extract__console=logs/console/network-extract.console
++ LC_ALL=C
+ [[ logger == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ for xitem in "${@}"
++ export logs_location=logs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ touch logs/console/network-extract.console
+ IFS==
+ export LC_ALL=C
+ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ [[ 5 -lt 4 ]]
++ logs_location=logs
++ alias network-extract--helper=network_extract__helper
+++ date +%s%N
++ alias detect-vendor=detect_vendor
+ read -r key value
++ mkdir -p logs/console logs/jobs
++ alias exit-error=exit_error
+ [[ platform =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ [[ platform =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-message=message
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
++ alias print-file=print_file
+ alias parse-cisco=main
+ read -r key value
+++ base64
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+++ base64
+ [[ -z x ]]
+ [[ config =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ mkdir -p logs/console
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ local export_objects=true
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.djvnamztrk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ export actions_logfile=./logs/console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console --export --verbose
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ export == \d\r\y\-\r\u\n ]]
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ extract == \d\e\b\u\g ]]
++ export divisor=--MTc0ODgzMzYwMzY1MzE1ODAwMAo--
++ alias warning-message=warning
++ divisor=--MTc0ODgzMzYwMzY1MzE1ODAwMAo--
++ export LC_ALL=C
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ [[ -n '' ]]
++ logs_location=logs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ mkdir -p logs/console logs/jobs
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --platform=cisco
++ alias network-configs--helper=network_configs__helper
++ export divisor=--MTc0ODgzMzYwMzY1NDIxODAwMAo--
++ divisor=--MTc0ODgzMzYwMzY1NDIxODAwMAo--
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFfKUufNef
+ [[ extract =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFfKUufNef
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ export 'nl=\n'
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
+ source ./scripts/devops-resources.shell
+ alias serialize-object=serialize_objects
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
++ alias list-file=list_file
+ script_filename=network-extract.shell
++ alias log-error=log_error
+ script_filename=network-extract
++ alias log-info=log_info
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
++ echo -e --verbose
++ alias log-warn=log_warn
+ export network_extract__console=logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list
+ network_extract__console=logs/console/network-extract.console
+ [[ -z x ]]
+ touch logs/console/network-extract.console
++ alias print-message=message
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ alias serialize-object=serialize_objects
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
+ [[ export =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ export =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ targets_location=targets
++ export targets_location=targets
++ alias warning-message=warning
++ export LC_ALL=C
++ targets_location=targets
++ LC_ALL=C
++ export targets_logfile=logs/jobs/targets.jobs
++ export 'nl=\n'
++ targets_logfile=logs/jobs/targets.jobs
++ nl='\n'
++ export targets_logfile=logs/jobs/targets.jobs
++ export cache_location=.cache
+ alias parse-cisco=main
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=cisco
++ echo -e --platform=fortinet
++ cache_location=.cache
+ [[ export =~ ^(export|r)$ ]]
++ export logs_location=logs
+ [[ export =~ ^(console|o)$ ]]
++ logs_location=logs
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ [[ export =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ mkdir -p logs/console
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ export == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ local export_objects=true
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ export =~ ^(extract|x)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ [[ platform =~ ^(export|r)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+++ date +%s%N
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pfmyrz8zcn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+++ date +%s%N
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export network_extract__console=logs/console/network-extract.console
+ oIFS=' 	
+ network_extract__console=logs/console/network-extract.console
'
+++ date +%s%N
+ touch logs/console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+++ base64
+ read -r key value
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ local verbose=true
+ IFS=' 	
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+++ base64
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+++ base64
+ export console_output=false
+ [[ platform =~ ^(console|o)$ ]]
+ console_output=false
++ export actions_logfile=./logs/console/run.console
+ [[ -z true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ local target_platform=cisco
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ local target_platform=fortinet
++ echo -e --verbose
++ actions_logfile=./logs/console/run.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ script_helper=false
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
+ touch logs/console/network-extract.console
+ [[ false == true ]]
+++ tr -dc a-zA-Z0-9
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]]
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list
++ export divisor=--MTc0ODgzMzYwMzY3MDkwOTAwMAo--
++ divisor=--MTc0ODgzMzYwMzY3MDkwOTAwMAo--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wsd2bixuog/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODgzMzYwMzY3MTgzNTAwMAo--
++ __DEVOPS_HELPERS_SOURCED=1
++ divisor=--MTc0ODgzMzYwMzY3MTgzNTAwMAo--
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NuMB1GT887
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NuMB1GT887
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console --export --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ nl='\n'
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODgzMzYwMzY3MjE5OTAwMAo--
+ [[ logger =~ ^(search|s)$ ]]
++ divisor=--MTc0ODgzMzYwMzY3MjE5OTAwMAo--
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias network-configs--helper=network_configs__helper
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias network-extract--helper=network_extract__helper
++ alias print-newline=newline
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ export targets_location=targets
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-file=print_file
++ tr -d '\r'
+ [[ verbose =~ ^(export|r)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(export|r)$ ]]
++ targets_location=targets
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(console|o)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(extract|x)$ ]]
++ export LC_ALL=C
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ LC_ALL=C
+ [[ logger =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ [[ platform == \h\e\l\p ]]
++ export 'nl=\n'
+ [[ platform == \d\e\b\u\g ]]
++ nl='\n'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ platform == \v\e\r\b\o\s\e ]]
++ cache_location=.cache
+ for xitem in "${@}"
++ export logs_location=logs
++ logs_location=logs
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ export logs_location=logs
+ logs_location=logs
+ [[ logger =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ mkdir -p logs/console logs/jobs
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ [[ export =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ export == \h\e\l\p ]]
+ export logs_location=logs
+ [[ export == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ mkdir -p logs/console
+ for xitem in "${@}"
++ export targets_location=targets
+ [[ 7 -eq 0 ]]
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gemcj2kutm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ read -r key value
++ targets_location=targets
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
+ [[ verbose == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ search =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ dry_run=false
++ echo -e --export
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+++ base64
++ echo -e --export
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODgzMzYwMzY4NjUwNDAwMAo--
++ divisor=--MTc0ODgzMzYwMzY4NjUwNDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+++ date +%s%N
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
+++ base64
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ [[ logger == \d\e\b\u\g ]]
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --export
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzYwMzY5NTkxNzAwMAo--
++ divisor=--MTc0ODgzMzYwMzY5NTkxNzAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ set -euo pipefail
+ [[ logger =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ alias serialize-object=serialize_objects
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
++ export divisor=--MTc0ODgzMzYwMzcwMjE1MzAwMAo--
++ divisor=--MTc0ODgzMzYwMzcwMjE1MzAwMAo--
++ mktemp -d
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ mkdir -p logs/console
+ export network_extract__console=logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ read -r key value
+ network_extract__console=logs/console/network-extract.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ touch logs/console/network-extract.console
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ local export_objects=true
+ logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
+ mkdir -p logs/console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ [[ logger =~ ^(search|s)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mktemp -d
++ echo -e --verbose
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DiR973jEY0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DiR973jEY0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ touch logs/console/network-extract.console
+ for xitem in "${@}"
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
++ alias validate-address=validate_address
++ alias warning-message=warning
+ script_filename=network-extract.shell
++ export LC_ALL=C
++ LC_ALL=C
+ script_filename=network-extract
++ export 'nl=\n'
+ [[ export == \d\e\b\u\g ]]
+ export network_extract__console=logs/console/network-extract.console
++ nl='\n'
+ read -r key value
+ network_extract__console=logs/console/network-extract.console
+ [[ export == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
++ cache_location=.cache
+ touch logs/console/network-extract.console
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EfnTlLm6a2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EfnTlLm6a2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export actions_logfile=./logs/console/run.console
+ [[ 7 -eq 0 ]]
++ actions_logfile=./logs/console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.euahr3qx52/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ touch ./logs/console/run.console
++ alias pause=pause
++ alias print-line=print
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
++ export LC_ALL=C
+ [[ verbose == \h\e\l\p ]]
++ LC_ALL=C
+ [[ verbose == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.euahr3qx52/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export 'nl=\n'
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ echo -e --export
++ echo -e --export
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ oIFS=' 	
+ local verbose=true
++ export targets_location=targets
'
++ targets_location=targets
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ set -euo pipefail
+ [[ -z '' ]]
+ export LC_ALL=C
+ dry_run=false
+ LC_ALL=C
+ set -euo pipefail
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fVV8pymaRG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fVV8pymaRG
+ export LC_ALL=C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export actions_logfile=./logs/console/run.console
+ LC_ALL=C
+ export 'nl=\n'
++ actions_logfile=./logs/console/run.console
+ nl='\n'
+ set -euo pipefail
+ source ./scripts/devops-resources.shell
++ touch ./logs/console/run.console
+ export LC_ALL=C
+ set -euo pipefail
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ mktemp -d
++ alias log-info=log_info
++ alias log-warn=log_warn
+ for xitem in "${@}"
++ alias print-message=message
+ IFS==
++ alias print-newline=newline
+ read -r key value
+ [[ -z true ]]
++ alias pause=pause
++ alias print-line=print
+ [[ export =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias relative-configpath=relative_configpath
+ local export_objects=true
+ [[ -z '' ]]
+ export console_output=false
+ [[ export =~ ^(extract|x)$ ]]
+ console_output=false
+ [[ -z true ]]
+ script_filename=network-extract.shell
++ alias system-metrics=system_metrics
+ [[ export =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ touch logs/console/network-extract.console
++ echo -e --export
+ local export_objects=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
++ alias validate-address=validate_address
+ [[ export =~ ^(logger|l)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ mktemp -d
++ export logs_location=logs
++ logs_location=logs
++ mktemp -d
++ mktemp -d
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+++ date +%s%N
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ search_terms=()
+ [[ search =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ local verbose=true
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ IFS==
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xZiA6gKuSX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xZiA6gKuSX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ export 'nl=\n'
+ nl='\n'
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xAssNfY2Fl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xAssNfY2Fl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zkoLUz1ItP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zkoLUz1ItP
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias exit-error=exit_error
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias log-info=log_info
++ alias print-line=print
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-file=print_file
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ alias print-newline=newline
++ alias print-file=print_file
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias system-metrics=system_metrics
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias validate-address=validate_address
++ mkdir -p logs/console logs/jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ alias validate-address=validate_address
++ LC_ALL=C
++ export 'nl=\n'
++ alias warning-message=warning
++ nl='\n'
++ export LC_ALL=C
++ LC_ALL=C
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export 'nl=\n'
++ logs_location=logs
++ nl='\n'
++ export cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vrxZMjB20
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vrxZMjB20
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZomjUYp0c
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZomjUYp0c
+ export 'nl=\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
++ export divisor=--MTc0ODgzMzYwMzczODEyMzAwMAo--
+ export 'nl=\n'
++ divisor=--MTc0ODgzMzYwMzczODEyMzAwMAo--
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
++ alias detect-vendor=detect_vendor
+ nl='\n'
++ [[ -n '' ]]
++ alias exit-error=exit_error
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
+ debug=false
+ [[ -z '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list != *,* ]]
+ dry_run=false
+ mapfile -t search_terms
+ [[ -z true ]]
++ alias list-file=list_file
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z true ]]
++ alias detect-vendor=detect_vendor
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console ]]
++ alias log-error=log_error
+ [[ -z '' ]]
+ script_helper=false
++ alias exit-error=exit_error
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ export actions_logfile=./logs/console/run.console
++ alias log-info=log_info
++ actions_logfile=./logs/console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]]
++ touch ./logs/console/run.console
+ search_terms=()
+ declare -a search_terms
++ alias list-file=list_file
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list != *,* ]]
++ alias network-configs--helper=network_configs__helper
++ alias log-error=log_error
++ alias log-warn=log_warn
+ mapfile -t search_terms
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ for xitem in "${@}"
++ alias print-message=message
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ alias pause=pause
+ [[ verbose == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ 7 -eq 0 ]]
++ alias print-line=print
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias print-line=print
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
+ IFS=' 	
'
++ export actions_logfile=./logs/console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z '' ]]
++ alias print-file=print_file
++ actions_logfile=./logs/console/run.console
+ debug=false
++ alias print-file=print_file
+ [[ -z '' ]]
++ touch ./logs/console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console --export --verbose
+ dry_run=false
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ alias serialize-object=serialize_objects
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(config|c)$ ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ export =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ touch ./logs/console/run.console
++ alias system-metrics=system_metrics
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias validate-address=validate_address
+ [[ export =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+++ date +%s%N
+ [[ export =~ ^(logger|l)$ ]]
+ oIFS=' 	
++ alias warning-message=warning
'
+ [[ export =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
++ export 'nl=\n'
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
++ nl='\n'
+ read -r key value
++ alias warning-message=warning
+ [[ -z '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pfmyrz8zcn/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export cache_location=.cache
++ export 'nl=\n'
++ cache_location=.cache
++ nl='\n'
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ export logs_location=logs
++ mkdir -p logs/console logs/jobs
++ logs_location=logs
+ alias parse-cisco=main
++ mkdir -p logs/console logs/jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ local export_objects=true
+ [[ -z x ]]
+++ date +%s%N
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ export =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ [[ export =~ ^(logger|l)$ ]]
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
+ oIFS=' 	
'
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ IFS==
+ for xitem in "${@}"
+ console_output=false
+ [[ -z true ]]
+++ base64
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]]
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ tr -d '\r'
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ tr -d '\r'
++ grep -v '^\s*$'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --verbose
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_logfile=logs/jobs/targets.jobs
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ config =~ ^(logger|l)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ touch ./logs/console/run.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export divisor=--MTc0ODgzMzYwMzc1NDU4NjAwMAo--
+ read -r key value
+ script_filename=network-extract.shell
++ divisor=--MTc0ODgzMzYwMzc1NDU4NjAwMAo--
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ [[ -n '' ]]
+ network_extract__console=logs/console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzYwMzc1NTIxMzAwMAo--
++ divisor=--MTc0ODgzMzYwMzc1NTIxMzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias parse-listings--helper=parse_listings__helper
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
+++ date +%s%N
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+++ base64
+++ base64
+++ base64
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local first_search_entry=10.0.2.3
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local last_search_entry=10.0.2.3
+ [[ verbose =~ ^(logger|l)$ ]]
+ local first_search_entry=172.16.0.5
+ [[ verbose =~ ^(platform|p)$ ]]
+ local last_search_entry=172.16.0.5
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
++ export divisor=--MTc0ODgzMzYwMzc2MzkxNTAwMAo--
++ divisor=--MTc0ODgzMzYwMzc2MzkxNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODgzMzYwMzc2NDQ0MTAwMAo--
++ divisor=--MTc0ODgzMzYwMzc2NDQ0MTAwMAo--
++ export divisor=--MTc0ODgzMzYwMzc2NDEwOTAwMAo--
++ divisor=--MTc0ODgzMzYwMzc2NDEwOTAwMAo--
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-helpers.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
+ [[ 7 -eq 0 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r8pj4k8wfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console --export --verbose
+ local count=1
+ ((  count == 0  ))
++ alias network-configs--helper=network_configs__helper
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ IFS=' 	
'
++ alias parse-listings--helper=parse_listings__helper
+ oIFS=' 	
'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ touch logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ echo
+ alias serialize-object=serialize_objects
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ search =~ ^(platform|p)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ debug=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ extract =~ ^(search|s)$ ]]
+++ date +%s%N
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ search == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search == \d\e\b\u\g ]]
++ export targets_location=targets
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
++ targets_location=targets
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ] ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ set -euo pipefail
++ targets_logfile=logs/jobs/targets.jobs
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local count=1
+ export LC_ALL=C
+ mkdir -p logs/console
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ alias parse-cisco=main
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z x ]]
+ [[ -z '' ]]
+ export logs_location=logs
+ script_helper=false
+ logs_location=logs
+++ base64
+ mkdir -p logs/console
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ local verbose=true
+ mkdir -p logs/console
+ IFS=' 	
'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ search == \h\e\l\p ]]
+ dry_run=false
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ ((  count == 0  ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ search =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ newline
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ touch logs/console/network-extract.console
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search == \h\e\l\p ]]
+ [[ -z cisco ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^\s*$'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo -e --platform=fortinet
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ for xitem in "${@}"
+++ date +%s%N
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hi12o9zj6o/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console --export --verbose
+++ base64
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ verbose == \h\e\l\p ]]
+ declare -a search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ script_filename=network-extract.shell
+ [[ -z '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list != *,* ]]
+ script_filename=network-extract
+ debug=false
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ IFS==
+ touch logs/console/network-extract.console
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ export divisor=--MTc0ODgzMzYwMzc3MzQ0ODAwMAo--
+ script_filename=network-extract.shell
++ divisor=--MTc0ODgzMzYwMzc3MzQ0ODAwMAo--
+ touch logs/console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ mktemp -d
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
+ IFS==
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias parse-listings--helper=parse_listings__helper
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zau2e7qvl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
'
+ local target_platform=fortinet
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ alias parse-cisco=main
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
+ [[ -z x ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list != *,* ]]
+ export logs_location=logs
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzYwMzc3ODEyMzAwMAo--
+ logs_location=logs
++ divisor=--MTc0ODgzMzYwMzc3ODEyMzAwMAo--
+ mkdir -p logs/console
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local verbose=true
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ IFS=' 	
++ alias parse-listings--helper=parse_listings__helper
+ [[ 7 -eq 0 ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.opx3teyb4d/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ [[ -z '' ]]
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
+ debug=false
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.s53c3pitqa/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbgddf57gs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console --export --verbose
+ alias serialize-object=serialize_objects
+ oIFS=' 	
+ oIFS=' 	
'
'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ local first_search_entry=10.0.1.2
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ -z '' ]]
+ [[ true == true ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
+ script_helper=false
+ [[ false == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ] ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wogqtIMVNI
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wogqtIMVNI
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ alias parse-cisco=main
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]]
+ export 'nl=\n'
+ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ [[ -z x ]]
++ tr -d '\r'
+ export LC_ALL=C
+ source ./scripts/devops-resources.shell
+ export logs_location=logs
+ LC_ALL=C
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ mktemp -d
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ IFS==
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ [[ logger == \v\e\r\b\o\s\e ]]
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ script_filename=network-extract
+ [[ search =~ ^(console|o)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ touch logs/console/network-extract.console
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local first_search_entry=10.10.10.10
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ config =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.0.1
+ ((  count == 0  ))
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]]
+ local last_search_entry=10.10.10.10
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ search =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(logger|l)$ ]]
+ local last_search_entry=10.0.0.1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ set -euo pipefail
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local first_search_entry=172.16.1.6
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ export LC_ALL=C
+ [[ search == \d\e\b\u\g ]]
+ LC_ALL=C
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ local count=1
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ ((  count == 0  ))
+ [[ config == \h\e\l\p ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ alias log-error=log_error
+ local last_search_entry=172.16.1.6
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
++ alias log-warn=log_warn
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ [[ config == \d\e\b\u\g ]]
++ alias print-message=message
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ] ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ [[ config == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ newline
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ IFS==
+ echo
+ local count=1
++ alias pause=pause
+ for xitem in "${@}"
+ ((  count == 0  ))
+ read -r key value
+ (( i < count ))
+ (( i++ ))
+ IFS==
+ IFS==
++ alias print-line=print
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ] ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ alias print-file=print_file
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3QwVHjIugI
++ echo -e --export
+ local 'prompt_message=Enter configuration file to be parsed: '
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3QwVHjIugI
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z cisco ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local count=1
+ [[ -z fortinet ]]
+ ((  count == 0  ))
+ export 'nl=\n'
+ [[ true == true ]]
+ script_filename=network-extract
+ echo
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ alias system-metrics=system_metrics
+ (( i++ ))
+ nl='\n'
+ (( i < count ))
+ newline
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ source ./scripts/devops-resources.shell
+ local count=1
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ newline
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ newline
+ echo
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias detect-vendor=detect_vendor
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ 7 -eq 0 ]]
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rekduionqw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias exit-error=exit_error
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console --export --verbose
++ alias list-file=list_file
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias log-error=log_error
+ oIFS=' 	
'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
+ [[ 7 -eq 0 ]]
+ local count=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fjzwrxmlzt/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-line=print
++ grep -v '^#'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console --export --verbose
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local count=1
+ (( i = 0 ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
+ [[ -z cisco ]]
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvQxsTdoqR
+ [[ export =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvQxsTdoqR
+ [[ export == \h\e\l\p ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ export == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4zkp8eef8/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ alias exit-error=exit_error
+ touch logs/console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias validate-address=validate_address
++ alias list-file=list_file
++ alias warning-message=warning
++ alias log-error=log_error
++ export LC_ALL=C
+ [[ -z true ]]
+ oIFS=' 	
'
++ alias log-info=log_info
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
++ LC_ALL=C
+ for xitem in "${@}"
+ local verbose=true
+ [[ export =~ ^(console|o)$ ]]
+ IFS=' 	
'
++ alias log-warn=log_warn
+ [[ -z '' ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ alias print-message=message
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list
+ [[ logger =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
++ alias print-line=print
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ local export_objects=true
++ alias validate-address=validate_address
+ [[ export =~ ^(extract|x)$ ]]
++ alias warning-message=warning
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ export LC_ALL=C
+ [[ export =~ ^(logger|l)$ ]]
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local first_search_entry=192.0.2.50
+ [[ verbose =~ ^(export|r)$ ]]
+ local last_search_entry=192.0.2.50
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ export console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ] ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ IFS==
+ ((  count == 0  ))
+ local export_objects=true
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ verbose == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ IFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ debug=false
++ export 'nl=\n'
+ [[ -z true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
+ [[ -z true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ export console_output=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ nl='\n'
+ [[ -z true ]]
++ export cache_location=.cache
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console ]]
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r8pj4k8wfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console ]]
+ script_helper=false
+ [[ -z '' ]]
+ oIFS=' 	
+ [[ false == true ]]
'
+ script_helper=false
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list
+ console_output=false
+ [[ search == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ search_terms=()
+ declare -a search_terms
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ]]
+ [[ -z cisco ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
++ export actions_logfile=./logs/console/run.console
+ IFS==
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ for xitem in "${@}"
+ declare -a search_terms
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ newline
++ touch ./logs/console/run.console
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ echo
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --verbose
++ echo -e --export
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(platform|p)$ ]]
++ tr -d '\r'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ export actions_logfile=./logs/console/run.console
+ [[ search == \d\r\y\-\r\u\n ]]
++ actions_logfile=./logs/console/run.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
++ tr -d '\r'
++ export targets_location=targets
++ grep -v '^\s*$'
++ grep -v '^#'
++ mktemp -d
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ IFS==
+ read -r key value
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ export == \d\r\y\-\r\u\n ]]
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ read -r key value
++ targets_location=targets
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ export =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ cfg == \c\f\g ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ export =~ ^(export|r)$ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local first_search_entry=172.31.255.254
+ debug=false
+ [[ verbose =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ dry_run=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z true ]]
+ set -euo pipefail
+ [[ -z '' ]]
+ export LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ local last_search_entry=172.31.255.254
+ [[ config =~ ^(export|r)$ ]]
+ local export_objects=true
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ export =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ export console_output=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local first_search_entry=10.0.2.3
+ local verbose=true
+ [[ export =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
'
+ local last_search_entry=10.0.2.3
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ]'
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ script_helper=false
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ] ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ]'
+ [[ false == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ output_dir=reports/10.0.2.3/cisco
+ [[ config == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+++ date +%s%N
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ debug=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RMYKj146tI
+ [[ export == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RMYKj146tI
+ [[ -z '' ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ] ]]
+ dry_run=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ -z true ]]
+ for xitem in "${@}"
+ (( i < count ))
++ [[ -n '' ]]
+ local first_search_entry=10.0.0.1
+ search_terms=()
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
++ [[ 5 -lt 4 ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list != *,* ]]
+ local count=1
++ alias detect-vendor=detect_vendor
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ alias exit-error=exit_error
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+++ base64
+ [[ extract =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ -z '' ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
+ IFS==
+ read -r key value
+ export console_output=false
+ console_output=false
++ alias log-error=log_error
+ [[ -z true ]]
+ local last_search_entry=10.0.0.1
++ alias log-info=log_info
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ alias log-warn=log_warn
+ [[ -z '' ]]
+ mapfile -t search_terms
+ (( i = 0 ))
++ alias print-message=message
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
++ alias print-newline=newline
+ (( i++ ))
+ script_helper=false
++ echo -e --platform=cisco
+ [[ false == true ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias pause=pause
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]]
+ for xitem in "${@}"
+ (( i++ ))
++ alias print-line=print
+ IFS==
+ (( i < count ))
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ search_terms=()
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
++ alias print-file=print_file
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias relative-configpath=relative_configpath
++ echo -e --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ declare -a search_terms
+ [[ -z cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]]
+ [[ true == true ]]
++ export targets_location=targets
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ] ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list != *,* ]]
++ targets_location=targets
+ mapfile -t search_terms
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
++ alias validate-address=validate_address
+ local count=1
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --verbose
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ (( i < count ))
++ targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ read -r key value
+ newline
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ export divisor=--MTc0ODgzMzYwMzgzMzY4NjAwMAo--
+ newline
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ divisor=--MTc0ODgzMzYwMzgzMzY4NjAwMAo--
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \h\e\l\p ]]
+ echo
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
++ [[ -n '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ output_dir=reports/192.0.2.50/cisco
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.62huhOd6Qv
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.62huhOd6Qv
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
++ tr -d '\r'
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ output_dir=reports/172.16.0.5/cisco
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
++ [[ -n '' ]]
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ echo -e --platform=cisco
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(platform|p)$ ]]
+ local verbose=true
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ touch ./logs/console/run.console
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ [[ 5 -lt 4 ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ export divisor=--MTc0ODgzMzYwMzgzNjQ5ODAwMAo--
+ alias parse-cisco=main
++ divisor=--MTc0ODgzMzYwMzgzNjQ5ODAwMAo--
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias detect-vendor=detect_vendor
++ grep -v '^\s*$'
+ [[ verbose =~ ^(config|c)$ ]]
+++ date +%s%N
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ export logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS=' 	
+ [[ config == \v\e\r\b\o\s\e ]]
+ logs_location=logs
++ alias exit-error=exit_error
+ source ./scripts/devops-helpers.shell
'
+ [[ verbose =~ ^(export|r)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ mkdir -p logs/console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ [[ verbose =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ alias print-newline=newline
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ debug=false
++ tr -d '\r'
++ alias pause=pause
++ grep -v '^#'
+ [[ verbose == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+++ base64
+ [[ verbose == \d\e\b\u\g ]]
++ alias print-file=print_file
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ [[ extract =~ ^(config|c)$ ]]
+ IFS=' 	
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(console|o)$ ]]
+ dry_run=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ local verbose=true
+ export console_output=false
+ console_output=false
+ IFS=' 	
+ [[ -z '' ]]
+ [[ -z true ]]
+ debug=false
'
+ [[ -z '' ]]
+ dry_run=false
++ alias system-metrics=system_metrics
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export console_output=false
+ console_output=false
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z true ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
++ alias warning-message=warning
+ [[ extract =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export 'nl=\n'
+ [[ extract =~ ^(platform|p)$ ]]
++ nl='\n'
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export cache_location=.cache
+ [[ extract =~ ^(logger|l)$ ]]
++ cache_location=.cache
+ [[ extract =~ ^(platform|p)$ ]]
++ export logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ mkdir -p logs/console logs/jobs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ search_terms=()
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ declare -a search_terms
+ [[ extract == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ touch logs/console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list != *,* ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]]
+ search_terms=()
+ debug=false
+ declare -a search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=192.168.0.1
+ [[ platform =~ ^(config|c)$ ]]
+ local last_search_entry=192.168.0.1
+ [[ extract =~ ^(config|c)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ platform =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ conf == \c\o\n\f ]]
+ dry_run=false
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ -z true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ -z '' ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(platform|p)$ ]]
+ export console_output=false
+ console_output=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODgzMzYwMzg0NTE4MTAwMAo--
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]]
+ IFS==
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ local first_search_entry=192.168.100.100
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ local target_platform=cisco
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list != *,* ]]
+ local last_search_entry=192.168.100.100
++ divisor=--MTc0ODgzMzYwMzg0NTE4MTAwMAo--
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ] ]]
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ platform == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ date +%s%N
++ [[ -n '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ ((  count == 0  ))
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ logger =~ ^(console|o)$ ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ [[ 5 -lt 4 ]]
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ newline
+ local first_search_entry=172.18.1.20
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ alias parse-cisco=main
+ [[ logger =~ ^(export|r)$ ]]
+ local last_search_entry=172.18.1.20
+ (( i = 0 ))
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ [[ logger =~ ^(search|s)$ ]]
+ export logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ logs_location=logs
+ [[ logger == \h\e\l\p ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ dirname reports/172.31.255.254/misc/switch1.conf
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ [[ -z cisco ]]
+ mkdir -p logs/console
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+++ base64
++ alias network-extract--helper=network_extract__helper
++ echo -e --platform=cisco
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ alias serialize-object=serialize_objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ export divisor=--MTc0ODgzMzYwMzg1NTUzNTAwMAo--
++ divisor=--MTc0ODgzMzYwMzg1NTUzNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export actions_logfile=./logs/console/run.console
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
++ actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ output_dir=reports/10.0.0.1/fortinet
+ read -r key value
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ local script_filename=cisco-configs.awk
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ export LC_ALL=C
+ LC_ALL=C
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ output_dir=reports/172.31.255.254/misc
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
++ tr -d '\r'
+ [[ ! -d reports/172.31.255.254/misc ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ touch ./logs/console/run.console
+ local first_search_entry=192.168.0.100
+ alias parse-cisco=main
+ [[ extract == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local last_search_entry=192.168.0.100
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ local count=1
+ [[ -z x ]]
+ export logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ logs_location=logs
+ [[ logger =~ ^(config|c)$ ]]
+ ((  count == 0  ))
+ mkdir -p logs/console
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ grep -v '^\s*$'
++ echo -e --export
+ newline
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ logger =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.1.2
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ mktemp -d
+ local last_search_entry=10.0.1.2
+ [[ platform == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ platform == \d\e\b\u\g ]]
+ script_filename=network-extract
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-configs--ips.list ]'
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ local count=1
+ [[ logger == \h\e\l\p ]]
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
++ grep -v '^#'
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z cisco ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local count=1
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ script_filename=network-extract.shell
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ script_filename=network-extract
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ export network_extract__console=logs/console/network-extract.console
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ network_extract__console=logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --export
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local first_search_entry=192.168.1.10
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ local last_search_entry=192.168.1.10
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ script_filename=network-extract
+ [[ cfg == \c\f\g ]]
+ local export_objects=true
+ export network_extract__console=logs/console/network-extract.console
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ network_extract__console=logs/console/network-extract.console
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4gJp8CMt8A
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4gJp8CMt8A
+ [[ 7 -eq 0 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbgddf57gs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ export =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console --export --verbose
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ [[ -n '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ [[ export == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
++ [[ 5 -lt 4 ]]
'
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
++ alias exit-error=exit_error
+ IFS==
+ local count=1
+ read -r key value
+ ((  count == 0  ))
+ read -r key value
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias list-file=list_file
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ alias log-error=log_error
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
++ alias log-info=log_info
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-message=message
+ echo
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-newline=newline
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias pause=pause
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
++ alias print-line=print
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ alias print-file=print_file
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local SCRIPT_DIR=./scripts
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ newline
+ local script_filename=fortinet-configs.awk
+ local count=1
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ (( i = 0 ))
++ cache_location=.cache
+ (( i < count ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ export logs_location=logs
+ echo
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i++ ))
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ IFS=,
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ echo 192.0.2.50
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ base64
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local SCRIPT_DIR=./scripts
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ 7 -eq 0 ]]
+ declare -a execute
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.opx3teyb4d/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ which awk
+ output_dir=reports/192.168.0.1/cisco
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ output_dir=reports/192.168.100.100/cisco
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3zau2e7qvl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console --export --verbose
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
'
++ which awk
+ local target_platform=cisco
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ platform == \d\e\b\u\g ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ IFS==
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ echo -e --export
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ which awk
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
++ which awk
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODgzMzYwMzg3Nzk3NTAwMAo--
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ divisor=--MTc0ODgzMzYwMzg3Nzk3NTAwMAo--
+ [[ export =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ local export_objects=true
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(extract|x)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
++ alias network-configs--helper=network_configs__helper
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ echo -e --verbose
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ export targets_location=targets
+ console_output=false
++ IFS=,
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo 10.0.0.1
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ script_helper=false
++ echo -e --export
+ [[ false == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'indent=            '
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ local export_objects=true
+ declare -a execute
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 172.31.255.254
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ search =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list != *,* ]]
+ alias parse-cisco=main
+ newline
+ mapfile -t search_terms
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ declare -a execute
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ output_dir=reports/10.0.1.2/misc
+ echo
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ export logs_location=logs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list
+ output_dir=reports/192.168.0.100/cisco
+ logs_location=logs
+ [[ ! -d reports/10.0.1.2/misc ]]
+ [[ search == \h\e\l\p ]]
+ (( i++ ))
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ mkdir -p logs/console
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.2.3
++ echo -e --config=.cache/resources/misc/fw3.cfg
+++ date +%s%N
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local SCRIPT_DIR=./scripts
+ declare -a execute
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local SCRIPT_DIR=./scripts
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local script_filename=cisco-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local count=1
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list
++ echo -e --verbose
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ IFS==
+ read -r key value
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
++ tr -d '\r'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(extract|x)$ ]]
++ which awk
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ export == \d\e\b\u\g ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
++ grep -v '^#'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ which awk
++ export divisor=--MTc0ODgzMzYwMzg5Mzc4NTAwMAo--
+ dry_run=false
++ divisor=--MTc0ODgzMzYwMzg5Mzc4NTAwMAo--
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ source ./scripts/devops-helpers.shell
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ script_helper=false
++ [[ -n '' ]]
+ [[ false == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ output_dir=reports/192.168.1.10/fortinet
+ search_terms=()
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ set -euo pipefail
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ script_filename=network-extract.shell
+ export LC_ALL=C
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ script_filename=network-extract
+ LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list != *,* ]]
+ [[ logger == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --platform=cisco
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
++ dirname -- ./scripts/network-extract.shell
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local verbose=true
+ [[ config =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ debug=false
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ search_terms=()
+ declare -a search_terms
++ dirname -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ -z x ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ printf '%*s' 12 ''
++ tr -d '\r'
+ local first_search_entry=172.18.1.20
+ local last_search_entry=172.18.1.20
+ local 'indent=            '
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ IFS=,
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
++ echo 192.168.100.100
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
+ newline
+ local count=1
++ echo -e --export
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i = 0 ))
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ echo -e --verbose
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
+ declare -a execute
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ local 'indent=            '
+ local SCRIPT_DIR=./scripts
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local target_platform=cisco
++ grep -v '^\s*$'
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -z cisco ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifhViV8sHq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifhViV8sHq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract.shell
++ grep -v '^#'
+ export 'nl=\n'
+ script_filename=network-extract
+ nl='\n'
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-resources.shell
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
++ [[ -n '' ]]
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ [[ 5 -lt 4 ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias detect-vendor=detect_vendor
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filename=cisco-configs.awk
++ alias exit-error=exit_error
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ dirname -- ./scripts/network-extract.shell
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ message '                .cache/resources/misc/switch1.conf'
++ alias print-file=print_file
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
++ alias relative-configpath=relative_configpath
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ echo
+ [[ 7 -eq 0 ]]
+ (( i++ ))
++ alias system-metrics=system_metrics
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local first_search_entry=198.51.100.75
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ local last_search_entry=198.51.100.75
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ config == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
++ alias warning-message=warning
+ newline
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
++ logs_location=logs
+ local 'extracted_configuration={
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ] ]]
++ mkdir -p logs/console logs/jobs
  "vendor": "cisco",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hi12o9zj6o/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ IFS=,
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
++ which awk
+ [[ export =~ ^(config|c)$ ]]
++ echo 192.168.0.1
+ local count=1
+ ((  count == 0  ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console --export --verbose
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ config == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
+ local export_objects=true
+ declare -a execute
+ for xitem in "${@}"
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
  "model": "ASA",
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ echo
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
  "version": "9.12(4)",
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
  "domain": "global.dmz.example.net",
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
++ which awk
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ read -r key value
+ IFS==
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local count=1
+ [[ -z cisco ]]
+ read -r key value
  "hostname": "dmz-fw2-backup"
}
+ [[ true == true ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
+ local first_search_entry=192.168.1.11
++ which awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 description Global secure relay
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local last_search_entry=192.168.1.11
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ newline
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i++ ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 192.0.2.50'
+ (( i = 0 ))
+ (( i = 0 ))
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ export == \h\e\l\p ]]
+ echo
+ result=0
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ (( i++ ))
+ newline
+ [[ -n {
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "vendor": "cisco",
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
  "model": "ASA",
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
  "version": "9.12(4)",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ true == true ]]
+ local verbose=true
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ] ]]
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i < count ))
+ IFS=' 	
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
+ [[ extract =~ ^(extract|x)$ ]]
'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
  "domain": "global.dmz.example.net",
+ [[ extract =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
+ local first_search_entry=203.0.113.25
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local last_search_entry=203.0.113.25
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ debug=false
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ which awk
+ for xitem in "${@}"
  "hostname": "dmz-fw2-backup"
}

+ IFS==
ASA Version 9.12(4)
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ] ]]
+ echo
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ (( i++ ))
+ ((  count == 0  ))
+ [[ 7 -eq 0 ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4zkp8eef8/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local script_filename=fortinet-configs.awk
+ local count=1
+ [[ -z '' ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console --export --verbose
hostname dmz-fw2-backup
+ ((  count == 0  ))
+ dry_run=false
+ [[ extract =~ ^(platform|p)$ ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -z true ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -z '' ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ export console_output=false
+ [[ extract =~ ^(search|s)$ ]]
+ console_output=false
domain-name global.dmz.example.net
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline

+ oIFS=' 	
+ [[ -z '' ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ echo
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(extract|x)$ ]]
object-group network Watchtower-DMZ
+ local count=1
+ (( i = 0 ))
+ local count=1
 description Global secure relay
+ (( i = 0 ))
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ script_helper=false
+ [[ extract == \d\e\b\u\g ]]
'
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
 network-object host 192.0.2.50 ]]
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]]
+ echo
+ search_terms=()
+ newline
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local count=1
+ declare -a search_terms
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
+ [[ -z cisco ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ export actions_logfile=./logs/console/run.console
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ actions_logfile=./logs/console/run.console
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ touch ./logs/console/run.console
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --platform=fortinet
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ read -r key value
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ printf '%*s' 12 ''
++ IFS=,
++ echo 10.0.1.2
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
++ echo -e --verbose
+ declare -a execute
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local 'indent=            '
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ IFS=,
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
++ echo 192.168.0.100
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ which awk
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ IFS==
+ local 'extracted_configuration={
+ declare -a execute
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ newline
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ (( i = 0 ))
  "vendor": "cisco",
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ search =~ ^(console|o)$ ]]
  "version": "v7.2.5.F",
+ [[ search =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
  "model": "",
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ echo
  "version": "",
  "domain": ""
  "domain": "",
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
  "hostname": ""
+ (( i < count ))
}
+ [[ search =~ ^(platform|p)$ ]]
  "hostname": "fg-branch-vpn-01"
++ echo -e --platform=cisco
}
+ [[ extract == \h\e\l\p ]]


++ which awk
+ [[ search =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(search|s)$ ]]
+ local 'indent=            '
+ local SCRIPT_DIR=./scripts
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ extract == \d\e\b\u\g ]]
#model="FortiGate-60F"
object-group network Metropolis-Internal
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 description Core internal LAN for application clusters

 network-object host 10.0.2.3
config firewall address
 network-object 192.168.2.0 255.255.255.0
+ [[ extract == \d\r\y\-\r\u\n ]]
 edit "IronMan-HQ"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ for xitem in "${@}"
+ print '{
+ [[ cfg == \c\f\g ]]
  "vendor": "cisco",
+++ date +%s%N
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 192.168.2.12

+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
  set subnet 10.0.0.1 255.255.255.255
object network Kent-Server
+ IFS==
+ [[ -n {
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ read -r key value
  "vendor": "cisco",
  "model": "",
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list
  "version": "",
+ [[ search == \h\e\l\p ]]
  set comment "Main node at Stark Tower"
+ [[ search == \d\e\b\u\g ]]
++ tr -d '\r'
 host 10.0.2.3
 next
  "domain": "",
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
end'
  "hostname": ""
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
 description Internal mail & identity services'
+ [[ search == \v\e\r\b\o\s\e ]]
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ which awk
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+++ base64
+ [[ verbose =~ ^(platform|p)$ ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ result=0
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ result=0
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n {
+ (( i < count ))
+ for xitem in "${@}"
  "vendor": "cisco",
+ [[ -n {
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ grep -v '^\s*$'
+ newline 2
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ output_dir=reports/198.51.100.75/cisco
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ (( i < count ))
+ local export_objects=true
+ IFS==
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
  "model": "",
+ [[ export =~ ^(search|s)$ ]]
+ local count=2
  "version": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \h\e\l\p ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ export == \d\e\b\u\g ]]
  "version": "v7.2.5.F",
+ [[ export == \d\r\y\-\r\u\n ]]
  "domain": ""
+ [[ export == \v\e\r\b\o\s\e ]]
  "hostname": "fg-branch-vpn-01"
}
+ for xitem in "${@}"

#hostname="fg-branch-vpn-01"
+ IFS==
#model="FortiGate-60F"
+ read -r key value
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ (( i = 0 ))
 next
end ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS==
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z cisco ]]
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ (( i++ ))
+ local count=1
+ [[ search == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo
+ local count=1
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ config =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ which awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --platform=fortinet
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ IFS=,
++ echo 172.16.0.5
+ [[ config =~ ^(logger|l)$ ]]
++ which awk
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --verbose
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_platform=fortinet
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ platform == \h\e\l\p ]]
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
++ mktemp -d
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ which awk
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.10.10.10/cisco
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ output_dir=reports/10.0.1.2/fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ [[ ! -d reports/10.0.1.2/fortinet ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
++ IFS=,
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ echo 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.18.1.20/cisco
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ output_dir=reports/10.0.0.1/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYmzNy7bAA
+ [[ verbose =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYmzNy7bAA
+ [[ verbose =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ verbose =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export divisor=--MTc0ODgzMzYwMzkzMDQwODAwMAo--
+ [[ verbose =~ ^(search|s)$ ]]
++ divisor=--MTc0ODgzMzYwMzkzMDQwODAwMAo--
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ debug=false
+ source ./scripts/devops-resources.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ [[ -n '' ]]
+ IFS=' 	
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ command -v -- ./scripts/network-extract.shell
'
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
++ printf '%*s' 12 ''
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ command -v -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
++ alias print-file=print_file
+ [[ -z '' ]]
+ debug=false
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ command -v -- ./scripts/network-extract.shell
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ search_terms=()
++ alias system-metrics=system_metrics
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias validate-address=validate_address
++ alias warning-message=warning
+ newline
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ export LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local count=1
++ mkdir -p logs/console logs/jobs
+ (( i = 0 ))
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ dry_run=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ tr -d '\r'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ extract == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
++ export actions_logfile=./logs/console/run.console
+ local script_filename=cisco-configs.awk
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filename=fortinet-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --platform=cisco
++ actions_logfile=./logs/console/run.console
+ set -euo pipefail
++ touch ./logs/console/run.console
+ export LC_ALL=C
+ LC_ALL=C
+ local SCRIPT_DIR=./scripts
++ grep -v '^#'
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
++ echo -e --export
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ local 'indent=            '
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
++ which awk
++ which awk
+ echo
++ which awk
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ for xitem in "${@}"
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ IFS==
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ export targets_location=targets
domain-name edge.dc.example.com
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs

object-group network Panther-Edge
+ [[ platform =~ ^(config|c)$ ]]
 description Internet-facing proxy systems
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ export =~ ^(config|c)$ ]]
+ result=0
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ platform =~ ^(platform|p)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ export =~ ^(export|r)$ ]]
  "hostname": "perimeter-fw1"
+ local export_objects=true
+ local target_platform=cisco
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
}

+ [[ export =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
ASA Version 9.14(3)
+ [[ export =~ ^(console|o)$ ]]
hostname perimeter-fw1
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
domain-name edge.dc.example.com
+ [[ export == \h\e\l\p ]]

object-group network Panther-Edge
+ [[ export == \d\e\b\u\g ]]
 description Internet-facing proxy systems
+ [[ export =~ ^(export|r)$ ]]
 network-object host 203.0.113.25
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
 network-object host 172.16.0.5
+ [[ export =~ ^(extract|x)$ ]]

+ for xitem in "${@}"
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ read -r key value
object network Magneto-Core
+ IFS==
 host 172.16.0.5
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
 description WAN firewall entry point ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Hkr0obGeG
+ [[ export == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Hkr0obGeG
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local first_search_entry=192.168.2.12
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ [[ -n '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.2.12
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ IFS=,
++ alias print-newline=newline
++ echo 10.10.10.10
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ IFS=,
++ IFS=,
++ IFS=,
++ echo 172.16.1.6
++ echo 172.18.1.20
++ alias validate-address=validate_address
+ print '{
  "vendor": "cisco",
++ echo 10.0.0.1
  "model": "ASA",
+++ date +%s%N
  "version": "9.14(3)",
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ logs_location=logs

++ mkdir -p logs/console logs/jobs
ASA Version 9.14(3)
++ echo -e --platform=fortinet
hostname perimeter-fw1
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ declare -a execute
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
}

++ echo -e --platform=cisco
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ declare -a execute
 network-object host 172.16.0.5

+ declare -a execute
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ declare -a execute
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ IFS=,
  "hostname": "perimeter-fw1"
}
+++ base64

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ echo 10.0.1.2

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+++ tr -dc a-zA-Z0-9
+ declare -a execute
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ newline 2

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ export divisor=--MTc0ODgzMzYwMzk3NzU1MzAwMAo--
  "domain": "",
++ divisor=--MTc0ODgzMzYwMzk3NzU1MzAwMAo--
  "hostname": "branch-isr-02"
+ set -euo pipefail
}

version 16.9
+ export LC_ALL=C
+ source ./scripts/devops-helpers.shell
+ LC_ALL=C
hostname branch-isr-02
+ local count=2

+ (( i = 0 ))
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ (( i < count ))
 description Dev VLAN
++ [[ -n '' ]]
+ echo

++ readonly __DEVOPS_HELPERS_SOURCED=1
object network Panther-Gateway
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
 host 10.0.2.3
+ (( i < count ))
 description Secure outbound concentrator ]]
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local awk_bin=/usr/bin/awk
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local awk_bin=/usr/bin/awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ [[ logger =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ (( i = 0 ))
++ alias network-configs--helper=network_configs__helper
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ ((  count == 0  ))
+ IFS=' 	
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ IFS=' 	
'
+ dry_run=false
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ print '{
+ [[ -z true ]]
  "vendor": "cisco",
+ [[ -z '' ]]
  "model": "",
+ export console_output=false
+ [[ -z true ]]
  "version": "16.9",
+ console_output=false
  "domain": "",
  "hostname": "branch-isr-02"
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console ]]
}
+ [[ -z '' ]]
+ local target_platform=cisco
+ script_helper=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ false == true ]]
+ export console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

+ [[ verbose =~ ^(config|c)$ ]]
version 16.9
hostname branch-isr-02
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ alias parse-cisco=main

+ [[ verbose =~ ^(console|o)$ ]]
+ search_terms=()
interface GigabitEthernet0/0/2
+ declare -a search_terms
+ [[ verbose =~ ^(export|r)$ ]]
 ip address 10.0.2.3 255.255.255.0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ console_output=false
 description Dev VLAN
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list != *,* ]]

++ printf '%*s' 12 ''
+ mapfile -t search_terms
+ [[ -z true ]]
object network Panther-Gateway
+ [[ -z x ]]
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console ]]
+ export logs_location=logs
+ [[ -z '' ]]
+ logs_location=logs
+ script_helper=false
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
+ [[ false == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ verbose == \h\e\l\p ]]
  "model": "",
++ printf '%*s' 12 ''
  "version": "16.9",
  "domain": "",
+ [[ verbose == \d\e\b\u\g ]]
  "hostname": "branch-isr-02"
}
+ [[ verbose == \d\r\y\-\r\u\n ]]

++ printf '%*s' 12 ''
+ [[ verbose == \v\e\r\b\o\s\e ]]
version 16.9
+ local verbose=true
hostname branch-isr-02

interface GigabitEthernet0/0/2
+ IFS=' 	
 ip address 10.0.2.3 255.255.255.0
'
 description Dev VLAN

+ [[ -z '' ]]
object network Panther-Gateway
+ debug=false
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ echo -en '{
+ search_terms=()
  "vendor": "cisco",
+ declare -a search_terms
  "model": "",
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
  "version": "16.9",
+ [[ true == true ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ local 'indent=            '
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ local 'indent=            '
 description Dev VLAN
+ local 'indent=            '
+ [[ -z '' ]]

+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
object network Panther-Gateway
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
+ dry_run=false
+ [[ true == true ]]
 host 10.0.2.3
 description Secure outbound concentrator'
+ mapfile -t search_terms
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
++ echo -e --platform=cisco
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ newline
+ newline
+ [[ false == true ]]
+ echo
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]]
+ (( i++ ))
+ (( i++ ))
+ search_terms=()
+ declare -a search_terms
+ (( i < count ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]]
+ echo
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list != *,* ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mapfile -t search_terms
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
++ export targets_location=targets
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
++ targets_location=targets
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
++ export targets_logfile=logs/jobs/targets.jobs
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_logfile=logs/jobs/targets.jobs
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local 'indent=            '
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ echo
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ (( i++ ))
+ echo
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --export
+ newline
+ newline
+ newline
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ local count=1
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
++ tr -d '\r'
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGvDBL0Xz
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGvDBL0Xz
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --platform=cisco
++ tr -d '\r'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+++ date +%s%N
++ alias log-warn=log_warn
++ alias print-message=message
++ tr -d '\r'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ grep -v '^#'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ script_filename=network-extract.shell
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ export 'nl=\n'
+ script_filename=network-extract
++ nl='\n'
+ newline
++ export cache_location=.cache
++ cache_location=.cache
+ local count=1
+++ base64
+ export network_extract__console=logs/console/network-extract.console
+ (( i = 0 ))
++ export logs_location=logs
+ (( i < count ))
++ grep -v '^\s*$'
++ logs_location=logs
+ network_extract__console=logs/console/network-extract.console
+ echo
++ mkdir -p logs/console logs/jobs
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ newline 2
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ local export_objects=true
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local count=2
+ local first_search_entry=192.168.2.12
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ (( i = 0 ))
+ local last_search_entry=192.168.2.12
+ [[ export =~ ^(logger|l)$ ]]
+ serialize_objects
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ set -euo pipefail
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ export LC_ALL=C
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ LC_ALL=C
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ true == true ]]
+ read -r key value
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ] ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ ((  count == 0  ))
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local first_search_entry=10.10.10.10
+ echo
+ local count=1
+ local last_search_entry=10.10.10.10
+ (( i = 0 ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ (( i < count ))
  "vendor": "cisco",
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
  "model": "",
+ [[ platform == \v\e\r\b\o\s\e ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
  "version": "16.9",
+ [[ platform =~ ^(platform|p)$ ]]
  "domain": "",
+ for xitem in "${@}"
+ (( i++ ))
+ echo
++ export divisor=--MTc0ODgzMzYwMzk5NTEzODAwMAo--
+ [[ logger =~ ^(search|s)$ ]]
  "hostname": "branch-isr-02"
+ local first_search_entry=192.168.1.11
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
++ divisor=--MTc0ODgzMzYwMzk5NTEzODAwMAo--
+ (( i++ ))
}
+ (( i < count ))

version 16.9
hostname branch-isr-02
+ [[ platform =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell

+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.1.11
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ [[ -n '' ]]
++ export actions_logfile=./logs/console/run.console
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
++ actions_logfile=./logs/console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ true == true ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ touch ./logs/console/run.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
++ [[ 5 -lt 4 ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
interface GigabitEthernet0/0/0
+ local count=1
 ip address 172.16.1.6 255.255.255.0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ] ]]
 description ISP uplink
+ ((  count == 0  ))
+ [[ -z cisco ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ 7 -eq 0 ]]
+ [[ true == true ]]

+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-configs--ips.list ]'
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
object network BlackWidow-Core
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4zkp8eef8/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ platform =~ ^(logger|l)$ ]]
 host 172.16.1.6
+ local count=1
 description Branch router uplink NAT'
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console --export --verbose
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ ((  count == 0  ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ newline
++ alias network-configs--helper=network_configs__helper
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ oIFS=' 	
+ (( i = 0 ))
+ echo
+ result=0
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ (( i < count ))
+ local target_platform=cisco
+ read -r key value
+ echo
'
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n {
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ [[ logger =~ ^(console|o)$ ]]
  "vendor": "cisco",
+ IFS==
  "model": "",
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i++ ))
+ local target_platform=cisco
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ echo
+ read -r key value
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'

version 16.9
hostname branch-isr-02

+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
interface GigabitEthernet0/0/0
+ (( i < count ))
 ip address 172.16.1.6 255.255.255.0
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
 description ISP uplink

+ local 'prompt_message=Enter configuration file to be parsed: '
object network BlackWidow-Core
 host 172.16.1.6
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
 description Branch router uplink NAT ]]
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ newline
+ [[ -z fortinet ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ export LC_ALL=C
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ echo -e --verbose
+ (( i = 0 ))
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i < count ))
+ [[ -z fortinet ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ LC_ALL=C
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ -z x ]]
  "model": "",
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
  "version": "12.4",
  "domain": "",
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ local 'extracted_configuration={
  "hostname": "access-sw1-west"
  "version": "16.9",
}
  "domain": "",

  "hostname": "branch-isr-02"
version 12.4
}
hostname access-sw1-west


++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
version 16.9
object-group network MGMT-ACCESS
  "vendor": "cisco",
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
hostname branch-isr-02
 description Management objects
 network-object host 192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.100

  "model": "ASA",
 network-object host 10.10.10.10
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ result=0
  "hostname": "perimeter-fw1"
}
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list


+ [[ -n {
object-group network Mutant-WiFi
 description Controlled guest devices
ASA Version 9.14(3)
 network-object host 10.10.10.10'
hostname perimeter-fw1
domain-name edge.dc.example.com
  "vendor": "cisco",
+ local parent_dir=reports/172.16.0.5/cisco
  "model": "",
+ result=0

  "version": "16.9",
interface GigabitEthernet0/1
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ -n {
}
 nameif inside

 security-level 100
version 16.9
 ip address 10.0.0.1 255.255.255.0
hostname branch-isr-02
 description Internal Network Interface

  "vendor": "cisco",
  "model": "",
object-group network Lantern-DMZ
  "version": "12.4",
 description Protected but public-facing zone
 network-object host 172.18.1.20

 network-object host 192.168.1.11 ]]
  "domain": "",
++ export targets_location=targets
+ newline
object network Stark-Tower
++ targets_location=targets
 host 10.0.0.1
 description Core services gateway'
++ export targets_logfile=logs/jobs/targets.jobs
+ local count=1
++ targets_logfile=logs/jobs/targets.jobs
  "hostname": "access-sw1-west"
+ result=0
}
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
+ echo

  "vendor": "cisco",
+ (( i++ ))
version 12.4
+ local 'extracted_configuration={
hostname access-sw1-west
  "vendor": "fortinet",
+ (( i < count ))
  "model": "ASA",
  "model": "FortiGate-60F",
  "version": "9.14(3)",

  "domain": "edge.dc.example.com",
  "version": "v7.2.5.F",
object-group network MGMT-ACCESS
  "hostname": "perimeter-fw1"
+ [[ platform == \h\e\l\p ]]
 description Management objects
}
+ [[ platform == \d\e\b\u\g ]]
  "domain": ""
+ [[ false == true ]]

 network-object host 192.168.0.1
+ [[ true == true ]]
ASA Version 9.14(3)
  "hostname": "fg-branch-vpn-01"
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.100
hostname perimeter-fw1
domain-name edge.dc.example.com
 network-object host 10.10.10.10


}
interface GigabitEthernet0/1
object-group network Mutant-WiFi
 nameif inside

+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
 security-level 100
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
 ip address 10.0.0.1 255.255.255.0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 description Controlled guest devices
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
 description Internal Network Interface

+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'

 network-object host 10.10.10.10 ]]
object network Stark-Tower
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
config firewall address
 edit "Spidey-Sandbox"
 host 10.0.0.1
+ serialize_objects
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 description Core services gateway ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ print '{
+ script_filename=network-extract.shell
  "vendor": "cisco",
  "model": "",
+ script_filename=network-extract
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "16.9",
+ export network_extract__console=logs/console/network-extract.console
  "domain": "",
  "hostname": "branch-isr-02"
+ network_extract__console=logs/console/network-extract.console
}

version 16.9
hostname branch-isr-02
+ touch logs/console/network-extract.console

+ [[ verbose =~ ^(console|o)$ ]]
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
++ mktemp -d
 description Protected but public-facing zone
+ print '{
  "vendor": "cisco",
 network-object host 172.18.1.20
  "model": "",
 network-object host 192.168.1.11 ]]
  "version": "12.4",
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
  "domain": "",
  "hostname": "access-sw1-west"
}

+ echo -en '{
  "vendor": "cisco",
version 12.4
  "model": "",
hostname access-sw1-west
  "version": "16.9",

  "domain": "",
object-group network MGMT-ACCESS
  "hostname": "branch-isr-02"
 description Management objects
}
 network-object host 192.168.0.1

 network-object host 192.168.0.100
version 16.9
 network-object host 10.10.10.10
hostname branch-isr-02
+++ date +%s%N


object-group network Mutant-WiFi
object-group network Lantern-DMZ
 description Protected but public-facing zone
 description Controlled guest devices
 network-object host 172.18.1.20
+ print '{
  "vendor": "cisco",
 network-object host 10.10.10.10'
 network-object host 192.168.1.11'
+ [[ verbose =~ ^(export|r)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ [[ verbose =~ ^(extract|x)$ ]]

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n {
+ [[ verbose =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",

  "version": "12.4",
interface GigabitEthernet0/1
  "domain": "",
 nameif inside
  "hostname": "access-sw1-west"
 security-level 100
}
 ip address 10.0.0.1 255.255.255.0

 description Internal Network Interface

version 12.4
object network Stark-Tower
 host 10.0.0.1
hostname access-sw1-west
 description Core services gateway'

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 10.10.10.10 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ verbose == \h\e\l\p ]]
  "version": "9.14(3)",
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"

}
version 12.4
hostname access-sw1-west


ASA Version 9.14(3)
hostname perimeter-fw1
object-group network MGMT-ACCESS
domain-name edge.dc.example.com
 description Management objects

 network-object host 192.168.0.1
interface GigabitEthernet0/1
 network-object host 192.168.0.100
 nameif inside
 network-object host 10.10.10.10
 security-level 100

+ [[ verbose == \d\e\b\u\g ]]
 ip address 10.0.0.1 255.255.255.0
object-group network Mutant-WiFi
+ [[ verbose == \d\r\y\-\r\u\n ]]
 description Controlled guest devices
+ [[ platform == \h\e\l\p ]]
 description Internal Network Interface
 network-object host 10.10.10.10'

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+++ base64
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ local verbose=true
  set comment "QA node in Peter's Lab"
+ [[ search =~ ^(config|c)$ ]]
 next
end ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ echo -en '{
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(logger|l)$ ]]
+ IFS=' 	
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(platform|p)$ ]]
  "vendor": "fortinet",
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
  "model": "FortiGate-60F",
+ [[ search =~ ^(search|s)$ ]]
  "version": "v7.2.5.F",
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
}
+ [[ search == \d\r\y\-\r\u\n ]]

#hostname="fg-branch-vpn-01"
+ [[ search == \v\e\r\b\o\s\e ]]
#model="FortiGate-60F"
+ for xitem in "${@}"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+++ tr -dc a-zA-Z0-9
+ IFS==
config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '1{/^[[:space:]]*$/d;}'
'
+ [[ -z '' ]]
+ debug=false
+ newline 2
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ export console_output=false
+ console_output=false
+ [[ cfg == \c\f\g ]]
+ [[ -z true ]]
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ [[ false == true ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ search_terms=()
+ sed '1{/^[[:space:]]*$/d;}'
+ declare -a search_terms
+ [[ cfg == \c\f\g ]]
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list != *,* ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ mapfile -t search_terms
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ read -r key value
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local parent_dir=reports/10.0.2.3/cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.euahr3qx52/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ItOGwUx72
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ItOGwUx72
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9YMM2e6yLr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9YMM2e6yLr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export divisor=--MTc0ODgzMzYwNDAxNDE4MDAwMAo--
++ divisor=--MTc0ODgzMzYwNDAxNDE4MDAwMAo--
++ alias print-newline=newline
+ source ./scripts/devops-helpers.shell
++ alias pause=pause
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline 2
+ newline 2
+ output_dir=reports/192.168.2.12/cisco
++ grep -v '^\s*$'
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ newline 2
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ local count=2
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ echo
+ echo
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ true == true ]]
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ output_dir=reports/192.168.1.11/fortinet
+ (( i < count ))
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
++ mktemp -d
+ output_dir=reports/10.10.10.10/cisco
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ platform == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ case "${target_platform}" in
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ newline
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ awk -v divisor=--MTc0ODgzMzYwMzUwODU4NjAwMAo-- '
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
                  BEGIN {
+ local count=1
+ newline
+ (( i = 0 ))
                    in_json_header = 0;
+ (( i < count ))
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ echo
                    blk = "";
+ newline
+ (( i++ ))
                  }
+ (( i < count ))

+ mkdir -p reports/10.0.2.3/cisco/.objects
+ newline
                  /^[[:space:]]*$/ { next }
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ local count=1
                    if (in_json_header == 1) {
+ local count=1
                      in_json_header = 0;
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
                      next;
+ (( i < count ))
                    }
+ (( i < count ))
                  }

++ command -v -- ./scripts/network-extract.shell
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_config=.cache/resources/misc/fw1.cfg
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ serialize_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ local first_search_entry=10.0.2.3
+ IFS==
+ read -r key value
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hQe7dk3p5T
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hQe7dk3p5T
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-configs--ips.list ]'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ newline
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo
+ echo
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i = 0 ))
+ IFS==
+ (( i++ ))
+ (( i < count ))
+ newline
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ newline
+ for xitem in "${@}"
+ local count=1
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ result=0
+ echo
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ local count=1
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ [[ false == true ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 0 -ne 0 ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ false == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z cisco ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ (( i = 0 ))
+ newline
+ local SCRIPT_DIR=./scripts
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ serialize_objects
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ serialize_objects
+ echo
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ serialize_objects
+ echo
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i++ ))
+ serialize_objects
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ case "${target_platform}" in
+ local count=1
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cg2t34huCC
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ awk -v divisor=--MTc0ODgzMzYwMzQ5MDE5NDAwMAo-- '
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbgddf57gs/network-configs--ips.list =~ ^-*(h|help)$ ]]
                  BEGIN {
+ [[ extract == \d\r\y\-\r\u\n ]]
                    in_json_header = 0;
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
                    blk = "";
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
                  }
+ [[ logger == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console --export --verbose
+ [[ logger == \d\e\b\u\g ]]

+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cg2t34huCC
                  /^[[:space:]]*$/ { next }

+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
+ oIFS=' 	
'
                  /^}$/ {
+ (( i < count ))
+ for xitem in "${@}"
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ IFS==
                    }
+ read -r key value
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ which awk
++ echo -e --export
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ extract =~ ^(search|s)$ ]]
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ which awk
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ date +%s%N
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/172.16.1.6/cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(export|r)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/10.0.0.1/cisco
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local parent_dir=reports/10.0.1.2/fortinet
+ local parent_dir=reports/10.10.10.10/cisco
+ local parent_dir=reports/172.18.1.20/cisco
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ echo -e --platform=cisco
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
++ IFS=,
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
++ IFS=,
++ basename reports/10.10.10.10/cisco/access-sw1-west
++ echo 192.168.2.12
++ echo 192.168.1.11
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export divisor=--MTc0ODgzMzYwNDA0MDU4NDAwMAo--
++ divisor=--MTc0ODgzMzYwNDA0MDU4NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ alias parse-listings--helper=parse_listings__helper
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ declare -a execute
+ declare -a execute
+ [[ logger =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ cat -n
++ alias network-extract--helper=network_extract__helper
++ which awk
+ alias serialize-object=serialize_objects
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hfv99uKBPt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hfv99uKBPt
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ date +%s%N
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ alias print-message=message
++ alias print-newline=newline
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ alias pause=pause
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ alias print-line=print
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ extract =~ ^(config|c)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
++ alias print-file=print_file
+ [[ extract =~ ^(console|o)$ ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
++ alias relative-configpath=relative_configpath
+ case "${target_file}" in
+ [[ extract =~ ^(extract|x)$ ]]
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ which awk
+ [[ extract =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ read -r key value
+++ base64
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
++ alias validate-address=validate_address
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
++ alias warning-message=warning
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
++ export LC_ALL=C
+ [[ logger == \d\e\b\u\g ]]
+ return 0
++ LC_ALL=C
+ local target_platform=cisco
+ [[ logger == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ for xitem in "${@}"
++ export 'nl=\n'
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
++ nl='\n'
+ [[ true == true ]]
++ export cache_location=.cache
+ [[ platform == \h\e\l\p ]]
++ cache_location=.cache
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ platform == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ platform == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console ]]
+ read -r key value
++ mkdir -p logs/console logs/jobs
++ which awk
+ cat -n
++ echo -e --config=.cache/resources/misc/switch1.conf
+++ tr -dc a-zA-Z0-9
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.10.10.10
++ echo -e --platform=fortinet
++ echo -e --platform=fortinet
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias exit-error=exit_error
+ export 'nl=\n'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ [[ 5 -lt 4 ]]
+ read -r key value
+ nl='\n'
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias list-file=list_file
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ -z true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
+ [[ -z '' ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias log-info=log_info
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ export console_output=false
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ console_output=false
+ [[ logger =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ local awk_bin=/usr/bin/awk
+ [[ logger == \v\e\r\b\o\s\e ]]
+ output_dir=reports/172.18.1.20/misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ ! -d reports/172.18.1.20/misc ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ newline 2
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ local first_search_entry=172.16.0.5
+ (( i < count ))
+ local last_search_entry=172.16.0.5
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ alias log-warn=log_warn
+ source ./scripts/devops-resources.shell
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ true == true ]]
+ [[ -z true ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console ]]
+ [[ cfg == \c\f\g ]]
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ platform =~ ^(console|o)$ ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=2
++ [[ -n '' ]]
+ for xitem in "${@}"
+ newline
  "domain": "",
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-message=message
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ newline
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ IFS==
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias print-newline=newline
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ echo
+ read -r key value
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z '' ]]
++ alias pause=pause
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ alias detect-vendor=detect_vendor
+ echo
++ alias print-line=print
+ (( i++ ))
+ newline
++ alias exit-error=exit_error
+ local count=1
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
+ (( i = 0 ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ alias serialize-object=serialize_objects
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ] ]]
++ alias print-file=print_file
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-configs--ips.list ]'
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
++ alias list-file=list_file
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
++ alias log-error=log_error
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ alias log-info=log_info

config firewall address
++ command -v -- ./scripts/network-extract.shell
 edit "IronMan-HQ"
++ alias log-warn=log_warn
  set subnet 10.0.0.1 255.255.255.255
+ (( i < count ))
  set comment "Main node at Stark Tower"
++ alias print-message=message
+ echo
+ echo
 next
++ alias print-newline=newline
end'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]]
+ search_terms=()
++ alias relative-configpath=relative_configpath
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]]
+ [[ -n {
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list != *,* ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ platform =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
}
++ IFS=,
+ local target_platform=cisco
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console

+ [[ platform =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=1
++ echo 192.168.1.10
+ [[ platform == \h\e\l\p ]]

config firewall address
+ ((  count == 0  ))
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
  set comment "Main node at Stark Tower"
 next
+ alias parse-cisco=main
end ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ alias validate-address=validate_address
+ echo -en '{
+ (( i++ ))
+ newline
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ -z x ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ platform == \d\e\b\u\g ]]
+ export logs_location=logs
++ alias pause=pause
+ [[ platform == \d\r\y\-\r\u\n ]]
}

+ (( i++ ))
#hostname="fg-branch-vpn-01"
+ logs_location=logs
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ mkdir -p logs/console
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
+ local count=1
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ export LC_ALL=C
+ (( i = 0 ))
++ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ alias print-line=print
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
++ cache_location=.cache
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ read -r key value
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ declare -a execute
+ local 'indent=            '
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ echo
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(console|o)$ ]]
++ mkdir -p logs/console logs/jobs
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z cisco ]]
++ alias validate-address=validate_address
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
++ alias warning-message=warning
+ [[ platform =~ ^(extract|x)$ ]]
++ export LC_ALL=C
  "hostname": ""
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ LC_ALL=C
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --export
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ export 'nl=\n'
+ cat -n reports/172.31.255.254/misc/switch1.conf
++ nl='\n'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export cache_location=.cache
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'indent=            '
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ cache_location=.cache
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ newline
++ export logs_location=logs
+ message '                .cache/resources/misc/switch1.conf'
++ logs_location=logs
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch1.conf'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
++ echo -e --export
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ (( i = 0 ))
++ tr -d '\r'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ config =~ ^(export|r)$ ]]
++ which awk
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
++ grep -v '^\s*$'
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ grep -v '^#'
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.1.11/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
+ newline
+ [[ export =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ local export_objects=true
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ local 'extracted_configuration={
+ [[ export =~ ^(logger|l)$ ]]
++ touch ./logs/console/run.console
  "vendor": "cisco",
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
  "model": "",
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ output_dir=reports/203.0.113.25/cisco
+ [[ export =~ ^(logger|l)$ ]]
  "version": "12.4",
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
+ (( i < count ))
+ newline
  "vendor": "cisco",
  "domain": "",
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
  "hostname": "access-sw1-west"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(search|s)$ ]]
+ echo
+ [[ export =~ ^(search|s)$ ]]
}
  "model": "ASA",
+ [[ logger =~ ^(logger|l)$ ]]

+ [[ export == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
  "version": "9.12(4)",
+ local count=1
  "domain": "global.dmz.example.net",
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
version 12.4
hostname access-sw1-west
+ [[ logger == \d\e\b\u\g ]]

+ [[ export == \d\r\y\-\r\u\n ]]
interface Vlan1
}
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
 ip address 192.168.0.1 255.255.255.0

+ [[ logger == \d\r\y\-\r\u\n ]]
++ export actions_logfile=./logs/console/run.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ for xitem in "${@}"
ASA Version 9.12(4)
++ export actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
++ actions_logfile=./logs/console/run.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
hostname dmz-fw2-backup
+ IFS==
+ IFS==
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ for xitem in "${@}"
domain-name global.dmz.example.net
+ [[ export =~ ^(console|o)$ ]]

+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
++ touch ./logs/console/run.console
+ read -r key value
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ IFS==
+ IFS==
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
 description Management Interface
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ read -r key value
interface GigabitEthernet0/1
+ serialize_objects
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
 nameif inside
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'

+ [[ logger == \h\e\l\p ]]
object-group network MGMT-ACCESS
+ [[ logger == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
 ip address 192.168.100.100 255.255.255.0
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ local export_objects=true
+ [[ logger == \d\r\y\-\r\u\n ]]
 description Management objects
+ [[ export =~ ^(extract|x)$ ]]
 description Inside LAN segment
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ export =~ ^(logger|l)$ ]]
 network-object host 10.10.10.10'
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
+ for xitem in "${@}"
 description Staff WiFi clients
+ result=0
+ IFS==
 network-object host 192.168.100.100
+ read -r key value
 network-object host 10.10.10.10'
+ local first_search_entry=192.0.2.50
+ [[ -n {
  "vendor": "cisco",
+ local last_search_entry=192.0.2.50
+ result=0
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
  "model": "",
+ set -euo pipefail
+ [[ true == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n {
}
  "version": "12.4",
+ for xitem in "${@}"
+ export LC_ALL=C
  "vendor": "cisco",

+ [[ export == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ LC_ALL=C
  "domain": "",
  "model": "ASA",
  "version": "9.12(4)",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ] ]]
++ printf '%*s' 12 ''
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
}
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
++ which awk
+ local count=1
  "hostname": "access-sw1-west"
+ ((  count == 0  ))
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ for xitem in "${@}"
object network Titan-WLAN-Host
+ echo
 host 192.168.100.100
 description Backup inside NAT IP
+ IFS==
+ local 'indent=            '
+ (( i++ ))

+ read -r key value
object-group network Sector-Wireless
+ (( i < count ))
 description Staff WiFi clients
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ newline
interface Vlan10
+ [[ 7 -eq 0 ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4zkp8eef8/network-configs--ips.list =~ ^-*(h|help)$ ]]
 ip address 10.0.1.2 255.255.255.0'
+ echo
+ (( i < count ))
+ result=0
+ (( i++ ))
+ echo
+ [[ -n {
  "vendor": "cisco",
+ [[ verbose =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ (( i < count ))
++ echo -e --verbose
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ oIFS=' 	
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
'
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ echo -e --export
+ IFS==
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ dirname -- ./scripts/network-extract.shell
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
++ echo -e --verbose

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ echo -e --export
 network-object host 10.10.10.10 ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ echo -en '{
  "vendor": "cisco",

  "model": "",
ASA Version 9.12(4)
  "version": "12.4",
hostname dmz-fw2-backup
  "domain": "",
domain-name global.dmz.example.net
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "access-sw1-west"

}
interface GigabitEthernet0/1

 nameif inside
version 12.4
 ip address 192.168.100.100 255.255.255.0
hostname access-sw1-west
+ message '             -f ./scripts/extract/fortinet-configs.awk \'

 description Inside LAN segment
interface Vlan1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
 ip address 192.168.0.1 255.255.255.0

+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
 description Management Interface
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
object network Titan-WLAN-Host
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'

 host 192.168.100.100
object-group network MGMT-ACCESS
 description Backup inside NAT IP

 description Management objects
 network-object host 192.168.0.1
object-group network Sector-Wireless
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
 network-object host 10.10.10.10'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ output_dir=reports/192.168.2.12/fortinet
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ ! -d reports/192.168.2.12/fortinet ]]
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ sed -e '1s|^\(-\)\{1,\}||'
}

+ print '{
  "vendor": "cisco",
ASA Version 9.12(4)
  "model": "",
hostname dmz-fw2-backup
  "version": "",
domain-name global.dmz.example.net
  "domain": "",

  "hostname": ""
interface GigabitEthernet0/1
}
 nameif inside

 ip address 192.168.100.100 255.255.255.0
interface Vlan10
 description Inside LAN segment
 ip address 10.0.1.2 255.255.255.0'

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
++ echo -e --verbose
  "vendor": "cisco",
  "model": "",
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ export targets_location=targets
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ sed '1{/^[[:space:]]*$/d;}'
++ targets_logfile=logs/jobs/targets.jobs
+ (( i++ ))
+ local parent_dir=reports/192.0.2.50/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ local parent_dir=reports/172.31.255.254/misc
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local 'extracted_configuration={
+ [[ logger =~ ^(config|c)$ ]]
  "vendor": "cisco",
  "model": "",
++ echo -e --export
+ [[ logger =~ ^(console|o)$ ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ logger =~ ^(export|r)$ ]]
}

version 12.4
+ [[ logger =~ ^(extract|x)$ ]]
hostname access-sw1-west
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]

+ [[ config == \v\e\r\b\o\s\e ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ local SCRIPT_DIR=./scripts
+ [[ -n {
+ [[ platform =~ ^(extract|x)$ ]]
  "vendor": "cisco",
+ local script_filename=cisco-configs.awk
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
++ IFS=,
++ echo 172.18.1.20
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '1{/^[[:space:]]*$/d;}'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0BBWLuRCti
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0BBWLuRCti
  "model": "",
  "version": "12.4",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+++ date +%s%N
+ source ./scripts/devops-resources.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
  "domain": "",
  "hostname": "access-sw1-west"
}
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ alias detect-vendor=detect_vendor
+ declare -a execute

++ alias exit-error=exit_error
version 12.4
hostname access-sw1-west

++ sed -e '1s|^\(-\)\{1,\}||'
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ [[ export =~ ^(config|c)$ ]]
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ alias log-info=log_info
+ [[ export =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ export =~ ^(export|r)$ ]]
++ alias print-message=message
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ local export_objects=true
++ alias print-file=print_file
+++ base64
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
++ alias relative-configpath=relative_configpath
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ basename reports/172.31.255.254/misc/switch1
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ IFS=' 	
'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z true ]]
++ alias validate-address=validate_address
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias warning-message=warning
+ [[ -z true ]]
++ export LC_ALL=C
+ [[ export == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console ]]
++ LC_ALL=C
+ [[ verbose =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ verbose =~ ^(search|s)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ which awk
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ local verbose=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ IFS==
++ dirname -- ./scripts/network-extract.shell
++ which awk
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+++ base64
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ verbose =~ ^(export|r)$ ]]

version 12.4
+ [[ verbose =~ ^(extract|x)$ ]]
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ verbose =~ ^(logger|l)$ ]]
 network-object host 10.10.10.10 ]]
+ [[ -z '' ]]
+ script_helper=false
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ newline 2
+ [[ false == true ]]
  "hostname": "access-sw1-west"
+ [[ verbose =~ ^(platform|p)$ ]]
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local count=2
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ export console_output=false
+ newline 2
+ console_output=false
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ newline 2
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list
+ script_helper=false
+ [[ export =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ local export_objects=true
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ IFS==
+ [[ false == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local count=2
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ (( i = 0 ))
+ output_dir=reports/172.16.0.5/misc
+ local count=2
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ echo
+ read -r key value
+ search_terms=()
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ [[ ! -d reports/172.16.0.5/misc ]]
+ echo
+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ echo
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ IFS=' 	
+ mkdir -p reports/172.31.255.254/misc/.objects
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(search|s)$ ]]
+ declare -a search_terms
+ echo
+ search_terms=()
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
'
+ [[ -z '' ]]
+ debug=false
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ dry_run=false
+ declare -a search_terms
++ export divisor=--MTc0ODgzMzYwNDA4NjQzMzAwMAo--
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
++ divisor=--MTc0ODgzMzYwNDA4NjQzMzAwMAo--
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
++ echo -e --verbose
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ source ./scripts/devops-helpers.shell
+ newline
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ [[ true == true ]]
+ newline
+ local script_filename=fortinet-configs.awk
++ [[ -n '' ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ export console_output=false
+ echo
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local count=1
+ console_output=false
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local awk_bin=/usr/bin/awk
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ newline 2
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ -z true ]]
++ export actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console ]]
++ actions_logfile=./logs/console/run.console
+ [[ -z '' ]]
+ script_helper=false
++ touch ./logs/console/run.console
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list != *,* ]]
++ alias parse-listings--helper=parse_listings__helper
+ mapfile -t search_terms
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
+ IFS==
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ read -r key value
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ echo
+ newline
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ alias serialize-object=serialize_objects
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
++ IFS=,
end ]]
++ dirname -- ./scripts/network-extract.shell
++ echo 192.168.1.11
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=--MTc0ODgzMzYwNDA4ODkwMDAwMAo--
++ divisor=--MTc0ODgzMzYwNDA4ODkwMDAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
+ mkdir -p logs/console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local 'indent=            '
+ declare -a execute
+ [[ true == true ]]
++ which awk
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ tr -d '\r'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ tr -d '\r'
+ local count=2
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ echo
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
object-group network Metropolis-Internal
+ local 'message=                .cache/resources/misc/fw1.cfg'
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ echo -e '                .cache/resources/misc/fw1.cfg'
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ newline
+ local count=1
+ (( i++ ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
++ echo -e --verbose
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
++ grep -v '^\s*$'
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch3.conf
++ grep -v '^#'
++ grep -v '^#'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ config =~ ^(logger|l)$ ]]
+++ date +%s%N
+ [[ config =~ ^(platform|p)$ ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ config =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ local count=1
+ local script_filename=cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ [[ -z '' ]]
+ debug=false
+ newline
+ [[ -z '' ]]
+ alias parse-cisco=main
+++ base64
+ (( i < count ))
+ local count=1
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ [[ false == true ]]
+ [[ -z x ]]
+ [[ true == true ]]
+ (( i++ ))
+ export logs_location=logs
+ [[ verbose =~ ^(console|o)$ ]]
+ logs_location=logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ mkdir -p logs/console
++ which awk
+ [[ verbose =~ ^(extract|x)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list != *,* ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ case "${target_platform}" in
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ awk -v divisor=--MTc0ODgzMzYwMzU1NjE3NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
+ local verbose=true
+++ tr -dc a-zA-Z0-9
                  /^}$/ {
                    if (in_json_header == 1) {
+ (( i = 0 ))
+ IFS=' 	
                      in_json_header = 0;
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
                      next;
                    }
                  }
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))

                  (in_json_header == 1) { next }

+ echo
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
+ (( i++ ))
                    blk = $0;
+ (( i < count ))
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local verbose=true
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ IFS=' 	
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ serialize_objects
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=192.168.1.10
'
+ local last_search_entry=192.168.1.10
+ [[ -z '' ]]
+ case "${target_platform}" in
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ debug=false
+ [[ true == true ]]
+ [[ -z '' ]]
+ awk -v divisor=--MTc0ODgzMzYwMzU0NjQ5NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

+ newline
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ sed '1{/^[[:space:]]*$/d;}'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local count=1
                      next;
+ (( i = 0 ))
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ [[ true == true ]]
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
'
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ -z '' ]]
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local first_search_entry=203.0.113.25
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local last_search_entry=203.0.113.25
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ serialize_objects
+ dry_run=false
++ IFS=,
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo 192.168.2.12
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ (( i < count ))
+ script_filename=network-extract.shell
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ] ]]
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ which awk
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ debug=false
+ serialize_objects
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list != *,* ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ] ]]
+ script_filename=network-extract
+ search_terms=()
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ declare -a search_terms
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local awk_bin=/usr/bin/awk
+ mapfile -t search_terms
+ declare -a execute
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ ((  count == 0  ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ newline
+ local count=1
+ local count=1
+ local count=1
+ (( i = 0 ))
+ export network_extract__console=logs/console/network-extract.console
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ ((  count == 0  ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzYwNDEwNTUzNzAwMAo--
++ divisor=--MTc0ODgzMzYwNDEwNTUzNzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ dirname -- ./scripts/network-extract.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias parse-listings--helper=parse_listings__helper
++ dirname reports/10.0.1.2/misc/switch1.conf
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ tr -d '\r'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ (( i = 0 ))
+ (( i < count ))
+ network_extract__console=logs/console/network-extract.console
++ grep -v '^\s*$'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ touch logs/console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ script_filename=network-extract.shell
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ newline 2
+ [[ -z fortinet ]]
+ script_filename=network-extract
+ [[ true == true ]]
+ export network_extract__console=logs/console/network-extract.console
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ network_extract__console=logs/console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ result=0
+ local count=2
  "version": "",
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ touch logs/console/network-extract.console
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ result=0
+ [[ -z cisco ]]
+ local SCRIPT_DIR=./scripts
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local parent_dir=reports/192.168.100.100/cisco
+ local script_filename=cisco-configs.awk
+ local parent_dir=reports/10.0.1.2/misc
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
  "domain": "",
+ (( i++ ))
  "hostname": ""
+ (( i < count ))
+ (( i++ ))
}
+ (( i < count ))

object-group network Fortress-Wireless
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
 description Secure wireless access layer
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'indent=            '
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ tr -d '\r'
++ echo -e --platform=fortinet
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ touch logs/console/network-extract.console
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
 network-object host 172.18.1.20
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ platform =~ ^(console|o)$ ]]
++ IFS=,
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local first_search_entry=192.168.0.1
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
++ echo 172.16.0.5
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console --export --verbose
+ local target_platform=fortinet
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ oIFS=' 	
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console --export --verbose
'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
 network-object host 192.168.1.10'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ result=0
+ read -r key value
+ (( i < count ))
+ IFS==
++ which awk
+ [[ -n {
+ read -r key value
  "vendor": "cisco",
  "model": "",
  "version": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ basename reports/10.0.1.2/misc/switch1
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local count=1
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local last_search_entry=192.168.0.1
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local first_search_entry=192.168.100.100
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a execute
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ oIFS=' 	
'
  "hostname": ""
}
+ for xitem in "${@}"

object-group network Fortress-Wireless
+ IFS==
 description Secure wireless access layer
+ (( i = 0 ))
+ (( i < count ))
 network-object host 172.18.1.20
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ (( i < count ))
+ local last_search_entry=192.168.100.100
+ echo
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ echo
 network-object host 192.168.1.10 ]]
+ [[ true == true ]]
+ (( i++ ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
+ (( i < count ))
+ local first_search_entry=192.168.1.10
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-configs--ips.list ]'
+ (( i++ ))
object network Kent-Server
 host 10.0.2.3
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ local last_search_entry=192.168.1.10
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ false == true ]]
+ for xitem in "${@}"
+ local count=1
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ] ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ ((  count == 0  ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_platform=cisco
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ true == true ]]
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ local count=1
+ ((  count == 0  ))
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ basename reports/192.168.0.1/cisco/access-sw1-west
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ 7 -eq 0 ]]
+ cat -n
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r8pj4k8wfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
  "domain": "",
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ newline
  "hostname": ""
}

object-group network Fortress-Wireless
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ which awk
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ mkdir -p reports/10.0.1.2/misc/.objects
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ mkdir -p reports/192.168.100.100/cisco/.objects
++ printf '%*s' 12 ''
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ newline
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ logger =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local count=1
+ [[ search == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i < count ))
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local 'indent=            '
+ echo
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ IFS==
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ echo
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ (( i++ ))
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
++ IFS=,
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ (( i < count ))
+ [[ false == true ]]
++ echo 192.0.2.50
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ return 0
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
++ echo -e --export
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ cat -n
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
+ local parent_dir=reports/192.168.0.100/cisco
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ search =~ ^(config|c)$ ]]
+ newline 2
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'extracted_configuration={
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "vendor": "cisco",
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'indent=            '
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ true == true ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ [[ search =~ ^(extract|x)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local count=2
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local target_config=.cache/resources/misc/fw3.cfg
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ echo
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ (( i = 0 ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ case "${target_platform}" in
+ [[ export == \h\e\l\p ]]
++ which awk
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ awk -v divisor=--MTc0ODgzMzYwMzU4Mjc5MzAwMAo-- '
                  BEGIN {
+ IFS==
                    in_json_header = 0;
+ read -r key value
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
+ [[ search =~ ^(config|c)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ search =~ ^(platform|p)$ ]]
+ case "${target_platform}" in
+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ awk -v divisor=--MTc0ODgzMzYwMzYwMjQ5ODAwMAo-- '
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
                  BEGIN {
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                    in_json_header = 0;
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
                    blk = "";
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ output_dir=reports/172.16.1.6/fortinet
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ search == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ [[ search == \d\e\b\u\g ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ local parent_dir=reports/192.168.1.10/fortinet
+ (( i < count ))
+ [[ true == true ]]
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ output_dir=reports/203.0.113.25/cisco
+ sed '/^[[:space:]]*$/d'
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ awk -v divisor=--MTc0ODgzMzYwMzU4MjU4MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
++ echo -e --verbose

                  /^[[:space:]]*$/ { next }
+ [[ -n {
  "vendor": "cisco",
  "model": "",

  "version": "16.9",
                  /^{$/ { in_json_header = 1; next }
  "domain": "",
                  /^}$/ {
  "hostname": "branch-isr-02"
                    if (in_json_header == 1) {
}
                      in_json_header = 0;

                      next;
version 16.9
                    }
hostname branch-isr-02
                  }


object-group network Lantern-DMZ
                  (in_json_header == 1) { next }
 description Protected but public-facing zone

 network-object host 172.18.1.20
                  /^[^[:space:]]/ {
 network-object host 192.168.1.11 ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

+ echo -en '{
                  {
  "vendor": "cisco",
                    blk = blk divisor " " $0;
  "model": "",
                  }
  "version": "16.9",

  "domain": "",
                  END {
  "hostname": "branch-isr-02"
                    if (blk != "" && !seen[blk]++) print blk "\n";
}
                  }

++ sed -e '1s|^\(-\)\{1,\}||'
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ [[ cfg == \c\f\g ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ true == true ]]
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console ]]
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ newline
+ output_dir=reports/192.168.1.10/misc
+ local count=1
+ (( i = 0 ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ extract =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
++ dirname reports/192.168.1.10/misc/fw3.cfg
++ printf '%*s' 12 ''
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ sed '/^[[:space:]]*$/d'
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ local 'extracted_configuration={
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i++ ))
  "domain": ""
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
  "hostname": "fg-branch-vpn-01"
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline

config system interface
+ local count=1
 edit "internal"
+ (( i = 0 ))
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ (( i < count ))
end
+ newline

++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ echo
+ (( i = 0 ))
config firewall address
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ (( i++ ))
  set comment "Primary LAN gateway"
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
 next
++ dirname -- ./scripts/network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
end'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.100.100/fortinet
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n {
  "vendor": "fortinet",
+ [[ config =~ ^(console|o)$ ]]
  "model": "FortiGate-60F",
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
  "version": "v7.2.5.F",
  "domain": ""
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
  "hostname": "fg-branch-vpn-01"
}
+ [[ config =~ ^(extract|x)$ ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'

+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ message '             -f ./scripts/extract/cisco-configs.awk \'
end

config firewall address
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 edit "Branch-Gateway"
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ config =~ ^(logger|l)$ ]]
  set subnet 192.168.2.12 255.255.255.255
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
  set comment "Primary LAN gateway"
+ [[ config =~ ^(platform|p)$ ]]
 next
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ config == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ config == \d\e\b\u\g ]]
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
end ]]
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/192.168.1.10/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ [[ ! -d reports/192.168.1.10/misc ]]
+ newline 2
+ echo
++ echo -e --platform=cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console ]]
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ result=0
+ echo
+ case "${target_file}" in
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ThiItwA4Gl/network-extract--switch1.conf.console
+ [[ true == true ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ exit 0
+ echo
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YVDuDW7mrv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YVDuDW7mrv
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ cat -n
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ (( i++ ))
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ tr -d '\r'
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

+ local 'extracted_configuration={
  "vendor": "cisco",
#hostname="fg-branch-vpn-01"
+ awk -v divisor=--MTc0ODgzMzYwMzYwMTAxMTAwMAo-- '
#model="FortiGate-60F"
  "model": "",
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                  BEGIN {

                    in_json_header = 0;
config system interface
                    blk = "";
 edit "internal"
                  }
  set ip 192.168.2.12 255.255.255.0

  set alias "User LAN"
                  /^[[:space:]]*$/ { next }
 next

end
                  /^{$/ { in_json_header = 1; next }

+ output_dir=reports/192.168.0.1/cisco
                  /^}$/ {
config firewall address
                    if (in_json_header == 1) {
 edit "Branch-Gateway"
++ grep -v '^\s*$'
                      in_json_header = 0;
  set subnet 192.168.2.12 255.255.255.255
                      next;
+ [[ ! -d reports/192.168.0.1/cisco ]]
                    }
  set comment "Primary LAN gateway"
                  }
 next

end ]]
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }
+ echo -en '{

  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ cat -n
+ [[ config =~ ^(config|c)$ ]]
  "version": "v7.2.5.F",
                  END {
++ echo -e --export
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "domain": ""
                  }
  "hostname": "fg-branch-vpn-01"
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local SCRIPT_PATH=./scripts/network-extract.shell

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

+ local SCRIPT_DIR=./scripts
config firewall address
+ local script_filename=fortinet-configs.awk
 edit "Branch-Gateway"
+ local SCRIPT_DIR=./scripts
  "version": "",
  set subnet 192.168.2.12 255.255.255.255
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  set comment "Primary LAN gateway"
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
 next
end'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
  "domain": "",
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "hostname": ""
++ grep -v '^#'
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
}

object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
 network-object host 203.0.113.25
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
+ IFS==
 description Internet firewall handoff'
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
++ dirname reports/172.18.1.20/misc/fw1.cfg
  "domain": "",
+ [[ platform =~ ^(console|o)$ ]]
  "hostname": ""
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ sed '/^[[:space:]]*$/d'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ local first_search_entry=198.51.100.75
+ (( i < count ))
+ echo
+ local last_search_entry=198.51.100.75
+ (( i++ ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ (( i < count ))
+ [[ true == true ]]
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
 network-object host 172.16.0.5
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ] ]]

object network Edge-Terminal
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ which awk
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ newline
+ local count=1
++ which awk
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ return 0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ result=0
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ exit 0
+ local parent_dir=reports/172.18.1.20/misc
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Kjo7d9XTW ]]
+ local 'extracted_configuration={
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
  "vendor": "cisco",
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
  "model": "ASA",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Kjo7d9XTW
+ [[ -z fortinet ]]
+ local script_filename=fortinet-configs.awk
+ [[ true == true ]]
+ (( i++ ))
+ return 0
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ true == true ]]
  "version": "9.14(3)",
+ [[ extract =~ ^(extract|x)$ ]]
  "domain": "edge.dc.example.com",
+ newline 2
+ newline
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local count=1
  "hostname": "perimeter-fw1"
+ result=0
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ false == true ]]
+ echo
}
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]

ASA Version 9.14(3)
+ (( i++ ))
hostname perimeter-fw1
+ local SCRIPT_DIR=./scripts
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ (( i < count ))
domain-name edge.dc.example.com
+ local count=2
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console ]]
+ [[ true == true ]]

object-group network Avengers-DMZ
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local script_filename=cisco-configs.awk
+ awk -v divisor=--MTc0ODgzMzYwMzYwMTkxOTAwMAo-- '
 description Public access layer
+ [[ extract =~ ^(platform|p)$ ]]
                    BEGIN {
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
                      in_json_header = 0;
+ [[ config =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
 network-object host 192.0.2.50
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
                      blk = "";
+ local SCRIPT_PATH=./scripts/network-extract.shell
                    }
+ case "${target_file}" in

+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
                    /^[[:space:]]*$/ { next }
 network-object host 203.0.113.25
+ (( i++ ))
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'

+ case "${target_file}" in
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
                    /^{$/ { in_json_header = 1; next }
 description Internal mail & identity services ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ extract == \d\e\b\u\g ]]
 network-object 192.168.2.0 255.255.255.0'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
                    /^}$/ {
+ print '{
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ result=0
                      if (in_json_header == 1) {
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
                        in_json_header = 0;
+ (( i < count ))
  "model": "ASA",
  "model": "",
  "version": "",
                        next;
+ local count=1
  "domain": "",
                      }
  "hostname": ""
                    }
}
+ serialize_objects

+ newline
+ IFS==
object-group network Panther-Edge
+ read -r key value
 description Internet-facing proxy systems
+ (( i = 0 ))
  "version": "9.14(3)",

  "domain": "edge.dc.example.com",
 network-object host 203.0.113.25
                    (in_json_header == 1) { next }
+ [[ true == true ]]

 network-object host 172.16.0.5
                    /^#(hostname|model|config-version)=/ { next }


object network Edge-Terminal
                    /^config / { print $0; next }
 host 172.16.0.5
+ local count=1
 description Internet firewall handoff'
                    /^end$/    { print $0 "\n"; next }
+ (( i < count ))
+ (( i = 0 ))
  "hostname": "perimeter-fw1"
+ (( i < count ))

+ echo
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ -n {
  "vendor": "cisco",
                      blk = "";
  "model": "",
}

                      next;
  "version": "",
                    }
ASA Version 9.14(3)
+ echo
+ (( i++ ))
hostname perimeter-fw1

++ basename reports/172.18.1.20/misc/fw1
domain-name edge.dc.example.com
  "domain": "",
+ (( i++ ))
+ (( i < count ))
  "hostname": ""
                    {

+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(export|r)$ ]]
                      blk = blk divisor " " $0;
+ IFS==
++ export targets_location=targets
                    }
}
object-group network Avengers-DMZ
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'

 description Public access layer
+ return 0
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg

 network-object host 192.0.2.50
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
                    END {
object-group network Panther-Edge
                      if (blk != "" && !seen[blk]++) print blk;
++ which awk
                    }
 description Internet-facing proxy systems
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '/^[[:space:]]*$/d'
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
object network Edge-Terminal
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
++ echo -e --verbose
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
++ which awk
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ local export_objects=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ export == \d\e\b\u\g ]]
 network-object host 10.0.2.3
+ [[ export == \d\r\y\-\r\u\n ]]
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ [[ export == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
object network Kent-Server
 host 10.0.2.3
+ IFS==
 description Internal mail & identity services'
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
object network Kent-Server
+ case "${target_file}" in
 host 10.0.2.3
+ [[ verbose == \h\e\l\p ]]
 description Internal mail & identity services ]]
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -en '{
+ local verbose=true
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ IFS=' 	
  "hostname": ""
'
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ -z '' ]]
+ read -r key value
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ debug=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
 network-object host 192.168.2.12
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
++ echo -e --platform=fortinet
++ export divisor=--MTc0ODgzMzYwNDA1MzI0NjAwMAo--
++ divisor=--MTc0ODgzMzYwNDA1MzI0NjAwMAo--
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z true ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ script_helper=false
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ false == true ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ search_terms=()
+ read -r key value
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ dirname -- ./scripts/network-extract.shell
+ declare -a execute
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ alias parse-cisco=main
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z x ]]
+ [[ -z true ]]
+ export logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console ]]
+ logs_location=logs
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ mkdir -p logs/console
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list != *,* ]]
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ mapfile -t search_terms
++ echo -e --verbose
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--MTc0ODgzMzYwMzQ5Mjg5MTAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }

++ echo -e --export
                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
++ printf '%*s' 12 ''
                      if (blk != "" && !seen[blk]++) print blk;
++ sed -e '1s|^\(-\)\{1,\}||'
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
++ tr -d '\r'
++ grep -v '^#'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ cat -n reports/10.0.2.3/misc/fw1.cfg
++ IFS=,
++ echo 198.51.100.75
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ declare -a execute
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(export|r)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ 7 -eq 0 ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ touch logs/console/network-extract.console
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ serialize_objects
++ grep -v '^#'
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
+ read -r key value
+ local verbose=true
+ [[ export =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ export == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ export == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODgzMzYwNDE5MjYyMTAwMAo--
+ for xitem in "${@}"
++ divisor=--MTc0ODgzMzYwNDE5MjYyMTAwMAo--
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ dry_run=false
+ source ./scripts/devops-helpers.shell
+ [[ -z true ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ export console_output=false
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.euahr3qx52/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ (( i = 0 ))
++ [[ -n '' ]]
+ local awk_bin=/usr/bin/awk
+ console_output=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ -z true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ output_dir=reports/10.0.2.3/misc
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ extract =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console ]]
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console --export --verbose
+ read -r key value
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ [[ 5 -lt 4 ]]
+ script_helper=false
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]]
+ [[ extract =~ ^(search|s)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ extract == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ oIFS=' 	
+ [[ extract == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ for xitem in "${@}"
+ IFS==
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ alias network-configs--helper=network_configs__helper
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local awk_bin=/usr/bin/awk
++ which awk
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local first_search_entry=10.10.10.10
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ newline
+ local last_search_entry=10.10.10.10
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ alias network-extract--helper=network_extract__helper
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ true == true ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ config =~ ^(config|c)$ ]]
+ newline
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ alias serialize-object=serialize_objects
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i++ ))
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ alias parse-cisco=main
+ [[ -z cisco ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ [[ -z x ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ export logs_location=logs
+ case "${target_platform}" in
+ local count=1
+ (( i = 0 ))
+ logs_location=logs
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODgzMzYwMzQ5NTk0MDAwMAo-- '
+ mkdir -p logs/console
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
                      next;
                    }
+ local 'indent=            '
                  }
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ echo -e --platform=cisco
                    blk = $0;
                    next;
                  }
+ [[ logger =~ ^(search|s)$ ]]

                  {
                    blk = blk divisor " " $0;
+ [[ logger == \h\e\l\p ]]
                  }
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]

+ [[ logger == \v\e\r\b\o\s\e ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ local first_search_entry=10.0.0.1
++ echo -e --verbose
+ read -r key value
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ config =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ echo -e --export
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ newline
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ tr -d '\r'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ case "${target_platform}" in
++ echo -e --platform=cisco
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ awk -v divisor=--MTc0ODgzMzYwMzUxNzQzMTAwMAo-- '
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ false == true ]]
                  BEGIN {
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
                    in_json_header = 0;
                    blk = "";
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
                  }
+ newline
+ [[ 7 -eq 0 ]]

+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ndptpacops/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ result=0

                  /^{$/ { in_json_header = 1; next }
+ [[ 0 -ne 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console --export --verbose
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
                  /^}$/ {
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local awk_bin=/usr/bin/awk
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local parent_dir=reports/10.0.0.1/fortinet
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ oIFS=' 	
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
                      next;
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
                    }
                  }
'

+ (( i++ ))
                  (in_json_header == 1) { next }
+ (( i < count ))
+ for xitem in "${@}"

                  /^[^[:space:]]/ {
+ IFS==
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ read -r key value
                    next;
+ local 'prompt_message=Enter configuration file to be parsed: '
                  }
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ -z .cache/resources/misc/switch1.conf ]]

                  {
+ [[ -z cisco ]]
++ grep -v '^\s*$'
                    blk = blk divisor " " $0;
+ serialize_objects
                  }
+ [[ true == true ]]
++ IFS=,

+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo 203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ case "${target_platform}" in
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ newline
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ awk -v divisor=--MTc0ODgzMzYwMzUwOTg5NjAwMAo-- '
+ (( i < count ))
+ newline
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo
                  BEGIN {
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
                    in_json_header = 0;
                    blk = "";
+ local count=1
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
                  }
+ echo
+ declare -a execute
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo

+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
+ (( i < count ))

+ local target_platform=fortinet
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ grep -v '^#'
++ printf '%*s' 12 ''
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ which awk
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ printf '%*s' 12 ''
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local export_objects=true
+ script_filename=network-extract.shell
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ local target_platform=cisco
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ touch logs/console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local first_search_entry=192.168.0.100
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local verbose=true
+ local last_search_entry=192.168.0.100
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ IFS=' 	
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ IFS==
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ true == true ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ debug=false
+ read -r key value
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ search =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ [[ -z true ]]
+ [[ search =~ ^(export|r)$ ]]
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-configs--ips.list ]'
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ script_helper=false
+ [[ false == true ]]
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ cfg == \c\f\g ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ ((  count == 0  ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(search|s)$ ]]
+ search_terms=()
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ declare -a search_terms
+ local parent_dir=reports/10.0.2.3/misc
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list != *,* ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ mapfile -t search_terms
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'extracted_configuration={
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list
+ local count=1
+ [[ search == \h\e\l\p ]]
  "vendor": "fortinet",
+ [[ search == \d\e\b\u\g ]]
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

+ IFS==
#hostname="fg-campus-core"
+ read -r key value
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat -n
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ newline
 next
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
end'
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ result=0
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwMzUyNDY2NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
++ basename reports/10.0.2.3/misc/fw1
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ search =~ ^(search|s)$ ]]
+ extract_location=reports/10.0.0.1/misc/switch1.conf
++ printf '%*s' 12 ''
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ result=0
+ read -r key value
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo -e --verbose
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
+ newline
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

++ tr -d '\r'
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ local count=1
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
+ echo
  "vendor": "fortinet",
+ [[ platform == \v\e\r\b\o\s\e ]]
  "model": "FortiGate-200F",
+ for xitem in "${@}"
  "version": "",
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ IFS==
  "domain": ""
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ extract =~ ^(config|c)$ ]]

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
end ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -en '{
  "vendor": "fortinet",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "FortiGate-200F",
+ [[ 7 -eq 0 ]]
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r8pj4k8wfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
}

+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
#hostname="fg-campus-core"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
#model="FortiGate-200F"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console --export --verbose

config firewall address
 edit "Cap-HQ"
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ sed -e '1s|^\(-\)\{1,\}||'
  set subnet 192.168.1.11 255.255.255.255
++ dirname reports/10.0.0.1/misc/switch1.conf
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  set comment "Captain America’s secure endpoint"
 next
end'
++ grep -v '^\s*$'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ oIFS=' 	
'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ for xitem in "${@}"
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ read -r key value
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^#'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ extract =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console ]]
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwMzU0OTk3NzAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }

                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.0.0.1/misc
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ logger == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ logger == \d\e\b\u\g ]]
  "vendor": "cisco",
+ IFS=' 	
+ [[ logger =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
  "model": "",
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
'
  "version": "16.9",
+ [[ logger == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "domain": "",
+ [[ -z '' ]]
+ [[ logger =~ ^(export|r)$ ]]
+ debug=false
  "hostname": "branch-isr-02"
+ newline 2
+ [[ config =~ ^(config|c)$ ]]
  "model": "",
}
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false

  "version": "12.2",
version 16.9
hostname branch-isr-02
+ [[ -z true ]]

+ [[ logger =~ ^(extract|x)$ ]]
  "domain": "",
object network Hydra-Link
+ IFS==
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ -z '' ]]
 host 198.51.100.75
+ export console_output=false
 description Branch NAT egress
+ console_output=false

+ [[ -z true ]]
object-group network Hydra-Edge
 description Remote site uplink
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console ]]
 network-object host 192.168.2.12
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 198.51.100.75'
+ [[ -z '' ]]
+ script_helper=false
+ result=0
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ -n {
  "vendor": "cisco",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "model": "",
  "version": "16.9",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
  "domain": "",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
  "hostname": "branch-isr-02"
}

  "hostname": "campus-sw-access01"
+ [[ logger =~ ^(search|s)$ ]]
+ search_terms=()
}
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
version 16.9
+ [[ logger == \d\e\b\u\g ]]
hostname branch-isr-02
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'

+ [[ logger == \d\r\y\-\r\u\n ]]
+ local first_search_entry=192.168.0.1
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ local last_search_entry=192.168.0.1
+ [[ config =~ ^(export|r)$ ]]
version 12.2
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
+ declare -a search_terms

+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]]
hostname campus-sw-access01
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
object network Hydra-Link
+ [[ true == true ]]

+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(logger|l)$ ]]
 host 198.51.100.75
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
object-group network Floor-Networks
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list != *,* ]]
 description Branch NAT egress
+ IFS==
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ read -r key value

+ (( i = 0 ))
+ mapfile -t search_terms
object-group network Hydra-Edge
 description End-user and service devices
 description Remote site uplink
 network-object host 192.168.0.1
+ [[ config =~ ^(platform|p)$ ]]
 network-object host 192.168.2.12
+ (( i < count ))
 network-object host 198.51.100.75 ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ] ]]
+ result=0
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ config == \h\e\l\p ]]
  "vendor": "cisco",
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-configs--ips.list ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
  "model": "",
  "version": "12.2",
+ (( i++ ))
  "domain": "",
+ local count=1
+ (( i < count ))
+ case "${target_file}" in
  "hostname": "campus-sw-access01"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ ((  count == 0  ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
}
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'

version 12.2
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
++ dirname -- ./scripts/network-extract.shell
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
hostname campus-sw-access01
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline

object-group network Floor-Networks
+ local count=1
 description End-user and service devices
+ [[ true == true ]]
+ (( i = 0 ))
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
 network-object host 10.10.10.10 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(export|r)$ ]]
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --export
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ config =~ ^(extract|x)$ ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --export
}

+ [[ config =~ ^(platform|p)$ ]]
version 16.9
hostname branch-isr-02
+ [[ config =~ ^(search|s)$ ]]

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
+ [[ config == \h\e\l\p ]]
 network-object host 192.168.2.12
+ [[ config == \d\e\b\u\g ]]
 network-object host 198.51.100.75'
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
  "version": "9.12(4)",
+ result=0
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
  "domain": "global.dmz.example.net",
+ [[ search =~ ^(config|c)$ ]]
  "hostname": "dmz-fw2-backup"
+ [[ 0 -ne 0 ]]
}

ASA Version 9.12(4)
+ awk -v divisor=--MTc0ODgzMzYwMzU3OTQ2MTAwMAo-- '
                  BEGIN {
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ tr -d '\r'
hostname dmz-fw2-backup
                    in_json_header = 0;
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ search =~ ^(console|o)$ ]]
                    blk = "";
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
                  }

+ newline
domain-name global.dmz.example.net
                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

+ [[ search =~ ^(export|r)$ ]]
                  (in_json_header == 1) { next }
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'


+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
object network Sentinel-NAT
 host 203.0.113.25
+ local count=1
 description Corporate NAT edge ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ search =~ ^(extract|x)$ ]]
                  /^[^[:space:]]/ {
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ (( i < count ))
+ newline
                  }
+ [[ search =~ ^(logger|l)$ ]]
+ echo
+ [[ true == true ]]

                  {
                    blk = blk divisor " " $0;
+ [[ search =~ ^(platform|p)$ ]]
                  }
+ local count=1

                  END {
+ (( i = 0 ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
                  }
+ echo
++ echo -e --export
                ' reports/10.0.2.3/misc/fw1.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ local script_filename=cisco-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ extract == \h\e\l\p ]]
++ grep -v '^\s*$'
+ [[ extract == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ sed '/^[[:space:]]*$/d'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/192.168.0.100/cisco
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
++ sed -e '1s|^\(-\)\{1,\}||'
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

++ grep -v '^#'
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
+ print '{
  "vendor": "cisco",
hostname campus-sw-access01
  "model": "ASA",

  "version": "9.12(4)",
object-group network Floor-Networks
  "domain": "global.dmz.example.net",
 description End-user and service devices
  "hostname": "dmz-fw2-backup"
 network-object host 192.168.0.1
}
 network-object host 192.168.0.100

 network-object host 10.10.10.10'
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline 2
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ local count=2
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ newline
++ which awk
+ local count=1
+ [[ export =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ cat -n
+ [[ export =~ ^(export|r)$ ]]
+ echo
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ result=0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ] ]]
+ [[ 0 -ne 0 ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-configs--ips.list ]'
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ ((  count == 0  ))
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ local count=1
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ set -euo pipefail
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ export LC_ALL=C
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ [[ extract =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ false == true ]]
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ newline
++ IFS=,
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local count=1
+ case "${target_file}" in
+ [[ config =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ newline 2
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
++ echo -e --verbose
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ echo
+ newline
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ [[ config == \d\e\b\u\g ]]
+ echo
+ return 0
+ serialize_objects
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ cat -n
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ result=0
+ exit 0
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.unBfc3L0jO ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.unBfc3L0jO
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
++ IFS=,
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ newline
++ echo 10.0.0.1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo -e --platform=fortinet
+ [[ false == true ]]
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ output_dir=reports/192.168.0.1/fortinet
+ serialize_objects
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
++ echo -e --platform=cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ newline
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ console_output=false
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BsVbX0vTWC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BsVbX0vTWC
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ export 'nl=\n'
+ [[ verbose =~ ^(extract|x)$ ]]
+ script_helper=false
+ nl='\n'
+ return 0
+ [[ false == true ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console ]]
+ search_terms=()
+ declare -a search_terms
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console ]]
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ result=0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list != *,* ]]
+ [[ 0 -ne 0 ]]
+ mapfile -t search_terms
++ [[ 5 -lt 4 ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local parent_dir=reports/192.168.1.11/fortinet
++ alias detect-vendor=detect_vendor
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console ]]
+ local verbose=true
+ case "${target_file}" in
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ IFS=' 	
'
+ [[ conf == \c\o\n\f ]]
+ [[ -z '' ]]
+ debug=false
++ alias list-file=list_file
+ [[ -z '' ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ dry_run=false
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
++ alias log-error=log_error
+ [[ -z '' ]]
+ export console_output=false
+ extract_location=reports/172.16.1.6/misc/switch3.conf
++ alias log-info=log_info
+ console_output=false
+ [[ -z true ]]
++ alias log-warn=log_warn
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console ]]
+ newline
++ alias print-message=message
+ [[ -z '' ]]
++ alias print-newline=newline
+ script_helper=false
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias pause=pause
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
+ for xitem in "${@}"
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ search_terms=()
++ alias print-line=print
+ local SCRIPT_DIR=./scripts
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ (( i < count ))
+ declare -a search_terms
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]]
++ alias print-file=print_file
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list != *,* ]]
+ [[ false == true ]]
+ mapfile -t search_terms
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ local awk_bin=/usr/bin/awk
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
++ alias system-metrics=system_metrics
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ serialize_objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console ]]
++ dirname -- ./scripts/network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
++ alias validate-address=validate_address
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ platform =~ ^(config|c)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
++ LC_ALL=C
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
++ export 'nl=\n'
+ [[ platform =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ [[ platform =~ ^(logger|l)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ [[ platform =~ ^(platform|p)$ ]]
++ logs_location=logs
+ local target_platform=fortinet
++ mkdir -p logs/console logs/jobs
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--perimeter-fw1.cfg.console
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ 0 -ne 0 ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(logger|l)$ ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ IFS==
++ tr -d '\r'
+ newline
+ [[ extract =~ ^(console|o)$ ]]
++ IFS=,
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
++ printf '%*s' 12 ''
+ [[ extract =~ ^(export|r)$ ]]
++ echo 192.168.0.100
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ read -r key value
+ local 'indent=            '
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ declare -a execute
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ tr -d '\r'
++ grep -v '^\s*$'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ printf '%*s' 12 ''
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local SCRIPT_DIR=./scripts
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^#'
+ local 'indent=            '
++ grep -v '^\s*$'
+ [[ true == true ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ newline
+ output_dir=reports/172.16.1.6/misc
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ ! -d reports/172.16.1.6/misc ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ newline
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ local parent_dir=reports/203.0.113.25/cisco
+ result=0
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ exit 0
+ local 'message=                .cache/resources/misc/switch1.conf'
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ABpC23hXIt ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ABpC23hXIt
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ echo -e --platform=cisco
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ false == true ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ mkdir -p reports/198.51.100.75/cisco/.objects
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ newline
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ] ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ serialize_objects
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ ((  count == 0  ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ export targets_location=targets
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ logger =~ ^(platform|p)$ ]]
++ targets_location=targets
+ newline
++ export targets_logfile=logs/jobs/targets.jobs
+ local count=1
++ targets_logfile=logs/jobs/targets.jobs
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ (( i = 0 ))
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ] ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zWU7rrx7m5 ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zWU7rrx7m5
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ newline
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -z cisco ]]
+ local target_platform=cisco
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ local 'extracted_configuration={
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
  "vendor": "cisco",
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ local count=1
  "model": "ASA",
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i < count ))
  "version": "9.12(4)",
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ newline
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
  "domain": "global.dmz.example.net",
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ [[ true == true ]]
+ (( i = 0 ))
}
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i < count ))
+ (( i++ ))
++ IFS=,

+ (( i < count ))
+ read -r key value
ASA Version 9.12(4)
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i = 0 ))
+++ date +%s%N
++ echo 192.168.0.1
+ echo
+ [[ logger =~ ^(config|c)$ ]]
hostname dmz-fw2-backup
+ (( i < count ))
domain-name global.dmz.example.net

+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
++ which awk
interface GigabitEthernet0/0
+ (( i++ ))
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ (( i < count ))
 description Guest access interface

object network Shield-WiFi-Alias
+ [[ logger =~ ^(platform|p)$ ]]
 host 10.10.10.10
+ [[ logger =~ ^(search|s)$ ]]
 description Guest NAT

object-group network Sector-Wireless
+ [[ logger == \h\e\l\p ]]
 description Staff WiFi clients
 network-object host 192.168.100.100
+ [[ logger == \d\e\b\u\g ]]
 network-object host 10.10.10.10'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ IFS==
+ result=0
+ read -r key value
+ declare -a execute
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local 'extracted_configuration={
  "hostname": "dmz-fw2-backup"
  "vendor": "cisco",
}
  "model": "",

  "version": "",
ASA Version 9.12(4)
  "domain": "",
hostname dmz-fw2-backup
  "hostname": ""
domain-name global.dmz.example.net
}


interface GigabitEthernet0/0
object-group network Avengers-Office
 nameif guest
 description VLAN access layer
 ip address 10.10.10.10 255.255.255.0
 network-object host 10.0.0.1
 description Guest access interface
 network-object 192.168.12.0 255.255.255.0'

object network Shield-WiFi-Alias
 host 10.10.10.10
+ result=0
 description Guest NAT

object-group network Sector-Wireless
+ case "${target_platform}" in
+ [[ -n {
 description Staff WiFi clients
 network-object host 192.168.100.100
  "vendor": "cisco",
 network-object host 10.10.10.10 ]]
+ local SCRIPT_DIR=./scripts
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local script_filename=cisco-configs.awk

object-group network Avengers-Office
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ awk -v divisor=--MTc0ODgzMzYwMzY3MDkwOTAwMAo-- '
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 description VLAN access layer
                  BEGIN {
                    in_json_header = 0;
+++ base64
                    blk = "";
 network-object host 10.0.0.1
                  }
 network-object 192.168.12.0 255.255.255.0 ]]

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ case "${target_platform}" in
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

+ awk -v divisor=--MTc0ODgzMzYwMzY5NTkxNzAwMAo-- '
                    BEGIN {
                  END {
                      in_json_header = 0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = "";
                  }
                    }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg

                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --export
++ which awk
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

++ which awk
+ print '{
object-group network Sector-Wireless
  "vendor": "cisco",
 description Staff WiFi clients
  "model": "",
 network-object host 192.168.100.100
  "version": "",
 network-object host 10.10.10.10'
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ -n {
  "vendor": "cisco",
  "hostname": "dmz-fw2-backup"
}
  "model": "",

  "version": "",
ASA Version 9.12(4)
  "domain": "",
hostname dmz-fw2-backup
  "hostname": ""
domain-name global.dmz.example.net
}


interface GigabitEthernet0/0
object-group network Avengers-Office
 nameif guest
 description VLAN access layer
 ip address 10.10.10.10 255.255.255.0
 network-object host 10.0.0.1
 description Guest access interface
 network-object 192.168.12.0 255.255.255.0 ]]

++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
object network Shield-WiFi-Alias
 host 10.10.10.10
  "model": "",
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ echo -en '{
 network-object 192.168.12.0 255.255.255.0'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local parent_dir=reports/10.10.10.10/cisco
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export divisor=--MTc0ODgzMzYwNDI3MTAzNzAwMAo--
+ sed '/^[[:space:]]*$/d'
++ divisor=--MTc0ODgzMzYwNDI3MTAzNzAwMAo--
+ sed '1{/^[[:space:]]*$/d;}'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
++ alias parse-listings--helper=parse_listings__helper
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ result=0
+ exit 0
++ alias network-configs--helper=network_configs__helper
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZ6IHmiyo6 ]]
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
++ alias network-extract--helper=network_extract__helper
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZ6IHmiyo6
+ result=0
+ case "${target_platform}" in
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
+ alias serialize-object=serialize_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console ]]
+ awk -v divisor=--MTc0ODgzMzYwMzY3MTgzNTAwMAo-- '
                  BEGIN {
++ echo -e --export
+ echo
                    in_json_header = 0;
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
                    blk = "";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
                  }
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console ]]
                  /^[[:space:]]*$/ { next }
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'

+ case "${target_file}" in
                  /^{$/ { in_json_header = 1; next }
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
                  /^}$/ {
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--branch-isr-02.cfg.console
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ newline
                    }
                  }
+ local count=1
+ [[ export =~ ^(config|c)$ ]]

+ (( i = 0 ))
                  (in_json_header == 1) { next }
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
+ echo

                  /^[^[:space:]]/ {
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ (( i++ ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ local export_objects=true
                    next;
                  }

+ echo
                  {
                    blk = blk divisor " " $0;
                  }
+ (( i++ ))

+ (( i < count ))
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
                  END {
+ [[ export =~ ^(extract|x)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ [[ export =~ ^(platform|p)$ ]]
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ export == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ read -r key value
++ basename reports/10.10.10.10/cisco/campus-sw-access01
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
  "version": "12.2",
  "domain": "",
++ IFS=,
+ [[ logger =~ ^(export|r)$ ]]
  "hostname": "campus-sw-access01"
}

+ [[ logger =~ ^(extract|x)$ ]]
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ [[ logger =~ ^(logger|l)$ ]]
 description End-user and service devices
++ printf '%*s' 12 ''
+ (( i < count ))
 network-object host 192.168.0.1
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
++ echo 172.16.1.6
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ sed '/^[[:space:]]*$/d'

object-group network Floor-Networks
 description End-user and service devices
+ [[ logger =~ ^(config|c)$ ]]
 network-object host 192.168.0.1
+ local 'indent=            '
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ declare -a execute
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ logger == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
++ echo -e --platform=cisco
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ newline 2
+ for xitem in "${@}"
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ IFS==
+ read -r key value
+ result=0
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ 0 -ne 0 ]]
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local count=2
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
++ dirname reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ echo -e --verbose
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ newline 2
  "hostname": "campus-sw-access01"
}

+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
version 12.2
+ newline
hostname campus-sw-access01
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]

object-group network Floor-Networks
 description End-user and service devices
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ local count=1
 network-object host 192.168.0.1
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ (( i < count ))
  "hostname": "campus-sw-access01"
}

version 12.2
+ cat -n reports/10.0.0.1/misc/switch1.conf
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
++ which awk
  "hostname": "campus-sw-access01"
++ echo -e --verbose
}

version 12.2
hostname campus-sw-access01
+ (( i = 0 ))

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local count=2
+ (( i < count ))
 network-object host 10.10.10.10'
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ output_dir=reports/198.51.100.75/cisco
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ newline
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local export_objects=true
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ export =~ ^(extract|x)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ newline
+ [[ export == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
++ echo -e --export
+ [[ export == \v\e\r\b\o\s\e ]]
+ export network_extract__console=logs/console/network-extract.console
+ (( i = 0 ))
+ network_extract__console=logs/console/network-extract.console
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ touch logs/console/network-extract.console
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ output_dir=reports/10.0.0.1/misc
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ newline
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ result=0
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u3JrBUsqJ4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u3JrBUsqJ4
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ newline
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local count=1
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ IFS=,
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ (( i = 0 ))
+ (( i < count ))
++ echo 10.0.2.3
+ echo
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ return 0
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ cat -n
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ newline 2
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local count=2
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ echo
+ IFS=' 	
'
+ (( i++ ))
+ [[ -z '' ]]
+ debug=false
+ (( i < count ))
+ cat -n
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -z true ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ 7 -eq 0 ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.r8pj4k8wfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console --export --verbose
+ local count=1
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ search_terms=()
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ declare -a search_terms
+ newline
+ serialize_objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ (( i < count ))
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
'
+ echo
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ newline
++ dirname -- ./scripts/network-extract.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat -n
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(export|r)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local export_objects=true
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ export == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ IFS==
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ serialize_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'extracted_configuration={
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ newline
  set comment "Backup uplink for Milano crew"
+ local count=1
 next
+ (( i = 0 ))
+ (( i < count ))
end ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ echo
+ local 'extracted_configuration={
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_platform}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ true == true ]]
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
+ awk -v divisor=--MTc0ODgzMzYwMzY4NjUwNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console ]]
                  }

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
                  /^[[:space:]]*$/ { next }
+ declare -a execute
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console ]]

+ case "${target_file}" in
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
                  /^{$/ { in_json_header = 1; next }
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
                  /^}$/ {
                    if (in_json_header == 1) {
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
                      in_json_header = 0;
                      next;
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
                    }
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local script_filename=cisco-configs.awk
+ case "${target_file}" in
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ which awk
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
  "vendor": "cisco",
++ tr -d '\r'
  "model": "",
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
  "version": "16.9",
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
  "domain": "",
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local verbose=true
  "hostname": "branch-isr-02"
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
}
+ local target_platform=cisco
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ platform =~ ^(search|s)$ ]]
'
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ debug=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ dry_run=false
+ local verbose=true
+ [[ -z true ]]
+ [[ -z '' ]]
+ IFS=' 	
+ export console_output=false
'
+ console_output=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
+ cat -n
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ grep -v '^\s*$'
  "version": "v7.2.5.F",
  "domain": ""
+ cat -n
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ script_helper=false
+ [[ false == true ]]
+ local parent_dir=reports/10.0.0.1/misc
++ which awk
++ grep -v '^#'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ serialize_objects
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5I1QeAxLug ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5I1QeAxLug
+ [[ platform == \v\e\r\b\o\s\e ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ IFS==
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list != *,* ]]
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
++ basename reports/10.0.0.1/misc/switch1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console ]]
+ mapfile -t search_terms
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))

+ echo
+ (( i < count ))
version 16.9
+ [[ verbose =~ ^(console|o)$ ]]
+ dry_run=false
+ result=0
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i++ ))
+ (( i < count ))
+ IFS=' 	
'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -z '' ]]
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ return 0
+ debug=false
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ dry_run=false
+ (( i < count ))
+ echo
+ [[ -z true ]]
hostname branch-isr-02
+ [[ -z '' ]]
+ [[ true == true ]]
+ [[ -z true ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ cat -n
+ export console_output=false
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ console_output=false
++ which awk
+ [[ true == true ]]
+ (( i++ ))
+ [[ -z true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ return 0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(export|r)$ ]]
+ local count=1

+ [[ -z '' ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ script_helper=false
+ (( i < count ))
++ IFS=,
+ [[ false == true ]]
+ local first_search_entry=10.10.10.10
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline 2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ local 'extracted_configuration={
+ local last_search_entry=10.10.10.10
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
++ echo 198.51.100.75
+ search_terms=()
  "domain": "",
+ (( i++ ))
  "hostname": ""
+ declare -a search_terms
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]

interface Vlan2
+ local count=2
+ [[ true == true ]]
+ (( i < count ))
 ip address 172.16.1.6 255.255.255.0'
+ case "${target_file}" in
+ return 0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list != *,* ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ result=0
+ mapfile -t search_terms
+ (( i < count ))
+ [[ -n {
interface GigabitEthernet0/0/1
+ [[ true == true ]]
+ export console_output=false
  "vendor": "cisco",
 ip address 192.168.2.12 255.255.255.0
+ console_output=false
+ echo
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local export_objects=true
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
  "model": "",
+ [[ true == true ]]
 description Workstation LAN
+ (( i++ ))
+ declare -a execute
  "version": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
  "domain": "",
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'

  "hostname": ""
object-group network Hydra-Edge
+ [[ -z true ]]
 description Remote site uplink
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
}
+ [[ export =~ ^(extract|x)$ ]]
 network-object host 192.168.2.12
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console ]]
+ echo

+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console ]]
+ ((  count == 0  ))
+ [[ export =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
 network-object host 198.51.100.75'
+ (( i++ ))
interface Vlan2
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console ]]
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
 ip address 172.16.1.6 255.255.255.0 ]]
+ local script_filename=cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ export =~ ^(search|s)$ ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console ]]
+ [[ export == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ export == \d\e\b\u\g ]]
+ script_helper=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n {
+ [[ export == \v\e\r\b\o\s\e ]]
++ IFS=,
+ newline
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ echo 10.0.0.1
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console ]]
++ IFS=,
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo
+ newline
++ echo 203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
  "vendor": "cisco",
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ case "${target_file}" in
  "model": "",
  "version": "16.9",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
++ tr -d '\r'
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ declare -a execute
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JL2buDq7fx/network-extract--switch1.conf.console
+ mkdir -p reports/172.18.1.20/misc/.objects
++ grep -v '^\s*$'
+ print '{
  "vendor": "cisco",
+ newline 2
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ local parent_dir=reports/192.168.1.11/cisco
+ [[ extract =~ ^(config|c)$ ]]
object-group network Avengers-DMZ
+ newline
++ tr -d '\r'
 description Public access layer
+ [[ extract =~ ^(console|o)$ ]]
 network-object host 192.0.2.50
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -n {
+ [[ 0 -ne 0 ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ true == true ]]
  "version": "9.14(3)",
+ return 0
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
+ local awk_bin=/usr/bin/awk
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
  "domain": "edge.dc.example.com",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
++ IFS=,
++ grep -v '^#'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
++ echo 192.168.1.10
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console ]]
+ cat -n
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ case "${target_file}" in
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
++ IFS=,
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
++ grep -v '^\s*$'
++ which awk
++ echo 172.16.1.6
+ newline
+ local count=1
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ IFS=,
++ IFS=,
++ echo 192.168.100.100
++ echo 192.168.1.10
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ echo
+ declare -a execute
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ declare -a execute
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ sed '1{/^[[:space:]]*$/d;}'
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
++ printf '%*s' 12 ''
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ which awk
+ [[ false == true ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ newline
+ case "${target_file}" in
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--access-sw1-west.cfg.console
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
++ which awk
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(export|r)$ ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ [[ logger =~ ^(logger|l)$ ]]
++ which awk
+ case "${target_file}" in
+ (( i = 0 ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ return 0
+ [[ logger =~ ^(search|s)$ ]]
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ [[ logger == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--access-sw1-west.cfg.console
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ serialize_objects
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
++ which awk
++ echo -e --platform=fortinet
+ [[ false == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwMzYzMzY2OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
++ printf '%*s' 12 ''
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qDnYPSdKp ]]
+ newline 2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qDnYPSdKp
+ local awk_bin=/usr/bin/awk
+ result=0
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZQj1rSt7TP ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local awk_bin=/usr/bin/awk
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZQj1rSt7TP
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--branch-isr-02.cfg.console
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local count=2
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ echo
++ echo -e --export
+ newline 2
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4cqXSKT9R ]]
+ result=0
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4cqXSKT9R
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NfmlOPuVU9 ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NfmlOPuVU9
+ local count=2
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMJJBIDCzf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bMJJBIDCzf
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ (( i++ ))
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ local count=1
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
++ printf '%*s' 12 ''
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44CFfsjGpC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.44CFfsjGpC
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ IFS=,
++ printf '%*s' 12 ''
+ [[ platform =~ ^(platform|p)$ ]]
++ echo 192.168.0.1
+ [[ true == true ]]
+ echo
++ printf '%*s' 12 ''
+ local target_platform=fortinet
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ return 0
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'indent=            '
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ newline
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ true == true ]]
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ declare -a execute
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ newline
+ newline
+ local count=1
+ case "${target_file}" in
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ newline
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ result=0
+ local count=1
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ 0 -ne 0 ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console ]]
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ echo
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i = 0 ))
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--access-sw1-west.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ export =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/misc/fw3.cfg'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ false == true ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo
+ local export_objects=true
+ [[ true == true ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ read -r key value
+ local count=1
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ result=0
+ [[ export =~ ^(extract|x)$ ]]
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ local 'extracted_configuration={
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "vendor": "cisco",
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
++ which awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
  "model": "",
+ exit 0
+ echo
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p1iu7U90uz ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
}

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p1iu7U90uz
object-group network Wakanda-Core
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ serialize_objects
 description National Core Routing Zone
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
 network-object host 192.168.1.10
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i < count ))
+ IFS==
+ read -r key value
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ case "${target_platform}" in
+ newline
+ local 'message=                .cache/resources/misc/fw1.cfg'

+ local count=1
+ (( i = 0 ))
object network Panther-Gateway
 host 10.0.2.3
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw1.cfg'
 description Secure outbound concentrator'
+ echo
+ newline
+ awk -v divisor=--MTc0ODgzMzYwMzY0Mzk2MzAwMAo-- '
+ (( i++ ))
                  BEGIN {
+ local count=1
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
+ (( i < count ))
                  }
+ result=0
+ (( i < count ))

+ echo
+ [[ -n {
  "vendor": "cisco",
+ [[ logger =~ ^(console|o)$ ]]
                  /^[[:space:]]*$/ { next }
  "model": "",
+ (( i++ ))

                  /^{$/ { in_json_header = 1; next }
  "version": "",
                  /^}$/ {
  "domain": "",
+ (( i < count ))
                    if (in_json_header == 1) {
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "hostname": ""
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
}

                    blk = $0;
object-group network Wakanda-Core
                    next;
 description National Core Routing Zone
                  }
 network-object host 192.168.1.10

 network-object host 10.0.2.3
                  {
 network-object 10.0.0.0 255.255.255.0
                    blk = blk divisor " " $0;

                  }
object network Panther-Gateway

 host 10.0.2.3
                  END {
 description Secure outbound concentrator ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ platform =~ ^(export|r)$ ]]
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ platform == \d\e\b\u\g ]]
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/192.168.2.12/fortinet/.objects
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "",
  "domain": "",
+ (( i = 0 ))
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
  "hostname": ""
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ echo
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
+ (( i++ ))
 host 10.0.2.3
+ (( i < count ))
 description Secure outbound concentrator'
+ local awk_bin=/usr/bin/awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
 description National Core Routing Zone
+ [[ false == true ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ cat -n
 network-object 10.0.0.0 255.255.255.0
+ [[ logger =~ ^(extract|x)$ ]]

object network Panther-Gateway
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -en '{
+ [[ logger =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
++ echo -e --verbose
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZlUkvzjm01 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZlUkvzjm01
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
+ [[ false == true ]]
++ echo -e --verbose
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
  "model": "ASA",
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ local 'indent=            '
+ local parent_dir=reports/172.16.0.5/misc
 security-level 0
+ [[ true == true ]]
+ serialize_objects
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ result=0
+ [[ logger =~ ^(console|o)$ ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -n {
+ [[ logger =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ newline
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
domain-name edge.dc.example.com
+ [[ logger =~ ^(logger|l)$ ]]

+ (( i = 0 ))
interface GigabitEthernet0/0
+ result=0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
 nameif outside
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
 security-level 0
+ echo
+ search_terms=()
 ip address 203.0.113.25 255.255.255.0
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
 description External Internet-facing Interface
+ (( i++ ))

+ [[ logger == \h\e\l\p ]]
object network NAT-Edge
+ (( i < count ))
 host 203.0.113.25
+ [[ logger == \d\e\b\u\g ]]
 description Internet-bound IP NAT
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]

+ [[ logger == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
object-group network Avengers-DMZ
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
 description Public access layer
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ newline
 network-object host 192.0.2.50
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'extracted_configuration={
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ newline

config system interface
+ local count=1
 edit "wifi"
++ basename reports/172.16.0.5/misc/fw3
object-group network Panther-Edge
+ (( i = 0 ))
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ (( i < count ))
 network-object host 172.16.0.5 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ newline
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ (( i++ ))
 next
+ (( i < count ))
end

config firewall address
+ local 'extracted_configuration={
  "vendor": "cisco",
 edit "Titan-WLAN-Host"
  "model": "",
+ return 0
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ result=0
 next
end
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -n {

  "vendor": "cisco",
config firewall address
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]]
  "model": "",
  "version": "",
+ local 'extracted_configuration={
 edit "Wanda-Field"
  "vendor": "cisco",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
  "domain": "",
+ IFS==
  "hostname": ""
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console ]]
  set subnet 192.168.100.100 255.255.255.255
  "model": "",
}
  set comment "Wanda’s chaos relay"
+ [[ logger == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list != *,* ]]
  "version": "",

  "domain": "",
 next
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
  "hostname": ""
object-group network Wakanda-Core
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
}
 description National Core Routing Zone
end'

 network-object host 192.168.1.10
object-group network Fortress-Wireless
 network-object host 10.0.2.3
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console ]]
 description Secure wireless access layer
 network-object 10.0.0.0 255.255.255.0 ]]
+ result=0
+ case "${target_file}" in
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -n {
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
  "vendor": "fortinet",
+ newline 2
  "model": "FortiGate-200F",
  "version": "",
+ result=0
  "domain": ""
  "hostname": "fg-campus-core"
}
+ [[ -n {
+ [[ logger == \v\e\r\b\o\s\e ]]

+ mapfile -t search_terms
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local count=2
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
config firewall address
+ [[ verbose =~ ^(logger|l)$ ]]
 edit "Titan-WLAN-Host"
+ (( i++ ))
  set subnet 192.168.100.100 255.255.255.255
+ (( i < count ))
  set comment "Guest WiFi node"
+ [[ verbose =~ ^(platform|p)$ ]]
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ local 'extracted_configuration={
+ echo
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
  "vendor": "fortinet",
end ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
  "model": "FortiGate-200F",
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
  "version": "",
+ [[ verbose == \d\e\b\u\g ]]
+ local parent_dir=reports/192.0.2.50/cisco
+ print '{
  "domain": ""
+ [[ true == true ]]
  "vendor": "cisco",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "model": "ASA",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "9.14(3)",
+ local verbose=true
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
  "domain": "edge.dc.example.com",
+ IFS=' 	
'
  "hostname": "perimeter-fw1"
+ [[ -z '' ]]
+ case "${target_platform}" in
}
+ debug=false
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'

+ [[ -z '' ]]
  "hostname": "fg-campus-core"
+ case "${target_file}" in
ASA Version 9.14(3)
}
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list

#hostname="fg-campus-core"
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ awk -v divisor=--MTc0ODgzMzYwMzcwMjE1MzAwMAo-- '
                    BEGIN {
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ dry_run=false
+ result=0
#model="FortiGate-200F"
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
                      in_json_header = 0;
 security-level 0
+ exit 0
 ip address 203.0.113.25 255.255.255.0
+ [[ -z true ]]
 description External Internet-facing Interface
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NpDijpCuBd ]]
                      blk = "";
                    }

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NpDijpCuBd
                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }


object network NAT-Edge
                    (in_json_header == 1) { next }
 host 203.0.113.25

++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
 description Internet-bound IP NAT
                    /^#(hostname|model|config-version)=/ { next }


                    /^config / { print $0; next }
object-group network Avengers-DMZ
+ print '{
  "vendor": "cisco",
                    /^end$/    { print $0 "\n"; next }
  "model": "",
 description Public access layer
  "version": "",


  "domain": "",
 network-object host 192.0.2.50
                    /^ edit / {
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -z '' ]]
config firewall address
                      if (blk != "" && !seen[blk]++) print blk;
 network-object host 203.0.113.25
                      blk = $0;
  "hostname": ""
                      next;
+ export console_output=false
}
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
                    }

+ print '{
  set comment "Remote sniper node"
+ console_output=false
  "vendor": "cisco",
object-group network Wakanda-Core
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console ]]
 description National Core Routing Zone
+ [[ -z '' ]]
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.1.10
+ script_helper=false

 next
 network-object host 10.0.2.3
  "model": "",
                    /^ next$/ {
 network-object 10.0.0.0 255.255.255.0'
  "version": "",
+ local count=1
                      blk = blk divisor " " $0;
  "domain": "",

+ (( i = 0 ))
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ false == true ]]
  "hostname": ""
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
                      blk = "";
+ [[ -n {
+ cat -n
object-group network Panther-Edge
end'
  "vendor": "cisco",
                      next;
 description Internet-facing proxy systems
  "model": "",
                    }

 network-object host 203.0.113.25
}
 network-object host 172.16.0.5'
                    {

  "version": "",
  "domain": "",
+ (( i < count ))
object-group network Fortress-Wireless
                      blk = blk divisor " " $0;
 description Secure wireless access layer
  "hostname": ""
 network-object host 172.18.1.20
}
 network-object host 192.168.1.10'
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ print '{

  "vendor": "fortinet",
+ [[ -n {
  "model": "FortiGate-200F",
+ result=0
+ mkdir -p reports/172.16.0.5/misc/.objects
  "version": "",
                    }
  "vendor": "cisco",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
  "domain": ""
+ sed '/^[[:space:]]*$/d'
+ [[ -n {
  "hostname": "fg-campus-core"
+ local parent_dir=reports/192.168.2.12/cisco
object-group network Wakanda-Core

+ search_terms=()
+ echo
}
  "model": "ASA",
                    END {
 description National Core Routing Zone
  "version": "9.14(3)",
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ [[ -n {
  "domain": "edge.dc.example.com",
  "vendor": "cisco",
 network-object host 192.168.1.10
+ declare -a search_terms
                      if (blk != "" && !seen[blk]++) print blk;
  "hostname": "perimeter-fw1"
  "model": "",
}

  "version": "",
ASA Version 9.14(3)
                    }
  "domain": "",
+ (( i++ ))
  "vendor": "fortinet",
 network-object host 10.0.2.3
hostname perimeter-fw1

 network-object 10.0.0.0 255.255.255.0 ]]
  "model": "FortiGate-200F",
#hostname="fg-campus-core"
  "hostname": ""
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]]
#model="FortiGate-200F"
  "domain": ""
domain-name edge.dc.example.com
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list != *,* ]]

+ (( i < count ))
}


config system interface
+ echo -en '{
  "hostname": "fg-campus-core"
  "vendor": "cisco",
object-group network Fortress-Wireless
interface GigabitEthernet0/0
  "model": "",
 description Secure wireless access layer
  "version": "",
  "domain": "",
+ mapfile -t search_terms
 edit "wifi"
}
+ cat -n reports/10.0.2.3/misc/fw3.cfg
 nameif outside
  "hostname": ""
  set ip 192.168.100.100 255.255.255.0
}
  set alias "Wireless VLAN"
++ echo -e --export
 security-level 0
 network-object host 172.18.1.20
 next
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.1.10 ]]
 ip address 203.0.113.25 255.255.255.0

end
 description External Internet-facing Interface
object-group network Wakanda-Core

 description National Core Routing Zone
object network NAT-Edge
 network-object host 192.168.1.10
 host 203.0.113.25


 description Internet-bound IP NAT
 network-object host 10.0.2.3
+ sed '1{/^[[:space:]]*$/d;}'

config firewall address
 edit "Titan-WLAN-Host"
+ echo -en '{
 network-object 10.0.0.0 255.255.255.0'
  set subnet 192.168.100.100 255.255.255.255
  "vendor": "cisco",
object-group network Avengers-DMZ
  "model": "",
 description Public access layer
  "version": "",
  set comment "Guest WiFi node"
 network-object host 192.0.2.50
  "domain": "",
 next
end
  "hostname": ""
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
}



object-group network Panther-Edge
 description Internet-facing proxy systems
object-group network Fortress-Wireless
config firewall address
 network-object host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
 description Secure wireless access layer
 edit "Wanda-Field"
 network-object host 172.16.0.5 ]]
#hostname="fg-campus-core"
  set subnet 192.168.100.100 255.255.255.255
 network-object host 172.18.1.20
  set comment "Wanda’s chaos relay"
 network-object host 192.168.1.10'
 next
end'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n {
  "vendor": "fortinet",

  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
interface GigabitEthernet0/0
 nameif outside
  "hostname": "fg-campus-core"
 security-level 0
}
 ip address 203.0.113.25 255.255.255.0

 description External Internet-facing Interface
#hostname="fg-campus-core"

#model="FortiGate-200F"
object network NAT-Edge

 host 203.0.113.25
config system interface
 description Internet-bound IP NAT
 edit "wifi"

  set ip 192.168.100.100 255.255.255.0
object-group network Avengers-DMZ
  set alias "Wireless VLAN"
 description Public access layer
 next
 network-object host 192.0.2.50
end
 network-object host 203.0.113.25

 network-object 192.168.2.0 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
config firewall address

 edit "Titan-WLAN-Host"
object-group network Panther-Edge
  set subnet 192.168.100.100 255.255.255.255
 description Internet-facing proxy systems
  set comment "Guest WiFi node"
 network-object host 203.0.113.25
 next
 network-object host 172.16.0.5'
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ [[ verbose =~ ^(config|c)$ ]]
  set comment "Remote sniper node"
  "hostname": "fg-campus-core"
 next
}
end ]]

#hostname="fg-campus-core"
+ [[ verbose =~ ^(console|o)$ ]]
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djVnaMZtrk/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ (( i = 0 ))
+ newline 2
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local count=2
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ (( i = 0 ))
  "hostname": "fg-campus-core"
}
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ true == true ]]

+ echo
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
+ echo
  "version": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
  "domain": ""
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
  "hostname": "fg-campus-core"
+ local 'extracted_configuration={
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ output_dir=reports/198.51.100.75/fortinet
+ newline 2
}
  "vendor": "cisco",
+ [[ ! -d reports/198.51.100.75/fortinet ]]

+ case "${target_file}" in
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline 2
#hostname="fg-campus-core"
+ IFS==
+ [[ true == true ]]
  "model": "",
#model="FortiGate-200F"

config firewall address
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
 edit "Hawkeye-Nest"
+ local count=2
  set subnet 172.16.1.6 255.255.255.255
+ (( i = 0 ))
  set comment "Remote sniper node"
+ (( i < count ))
 next
end ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
}

+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
#hostname="fg-campus-core"
  "version": "12.2",
#model="FortiGate-200F"
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'

+ (( i++ ))
config firewall address
+ local count=2
  "domain": "",
 edit "Hawkeye-Nest"
++ tr -d '\r'
  "hostname": "campus-sw-access01"
+ (( i < count ))
+ (( i = 0 ))
+ newline
+ [[ export =~ ^(config|c)$ ]]
}
  set subnet 172.16.1.6 255.255.255.255
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
  set comment "Remote sniper node"
+ newline 2
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ local count=1

+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
version 12.2
+ (( i = 0 ))
 next
+ (( i < count ))
+ [[ true == true ]]
+ echo
end'
hostname campus-sw-access01
+ local export_objects=true

+ read -r key value
+ local count=2
interface Vlan1
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
 ip address 192.168.0.1 255.255.255.0
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ (( i < count ))
 description Switch Mgmt
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))

+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ echo
object-group network Floor-Networks
 description End-user and service devices
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo
 network-object host 192.168.0.100
+ result=0
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ export =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ -n {
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
  "vendor": "cisco",
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ true == true ]]
+ (( i < count ))
  "model": "",
+ newline
++ which awk
+ local count=1
  "version": "12.2",
+ newline
++ grep -v '^\s*$'
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": "campus-sw-access01"
+ local count=1
}
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'

+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ (( i++ ))
version 12.2
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
hostname campus-sw-access01

interface Vlan1
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ newline
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ local count=1
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
object-group network Floor-Networks
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODgzMzYwMzY1MzE1ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ false == true ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ true == true ]]
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

 description End-user and service devices
++ command -v -- ./scripts/network-extract.shell
 network-object host 192.168.0.1
+ (( i < count ))
                  {
 network-object host 192.168.0.100
                    blk = blk divisor " " $0;
 network-object host 10.10.10.10 ]]
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
++ grep -v '^#'
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ serialize_objects
+ sed '/^[[:space:]]*$/d'
+ result=0
+ exit 0
++ grep -v '^\s*$'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F3kRhza7Lm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F3kRhza7Lm
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ newline 2
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
++ dirname reports/10.0.2.3/misc/fw3.cfg
}

++ grep -v '^#'
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
+ echo
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ echo
+ (( i++ ))
  "hostname": "campus-sw-access01"
}
+ (( i < count ))

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ cat -n
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwMzY1NDIxODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console ]]
+ local first_search_entry=192.168.1.10
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ case "${target_file}" in
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfMyRZ8Zcn/network-extract--branch-isr-02.cfg.console
+ local last_search_entry=192.168.1.10
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ newline
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ newline
+ local count=1
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i = 0 ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ local count=1
+ [[ true == true ]]
+ (( i < count ))
+ (( i++ ))
+ (( i = 0 ))
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ false == true ]]
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ false == true ]]
+ (( i < count ))
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ] ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-configs--ips.list ]'
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ false == true ]]
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ local count=1
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ serialize_objects
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ newline
+ serialize_objects
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ result=0
+ local count=1
+ serialize_objects
+ (( i = 0 ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local parent_dir=reports/10.0.2.3/misc
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_platform}" in
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -z cisco ]]
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ newline
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ awk -v divisor=--MTc0ODgzMzYwMzY3MjE5OTAwMAo-- '
                  BEGIN {
+ (( i < count ))
+ (( i < count ))
                    in_json_header = 0;
+ echo
                    blk = "";
                  }
+ newline

+ (( i++ ))
                  /^[[:space:]]*$/ { next }
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1

+ [[ false == true ]]
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
+ [[ logger =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local verbose=true
+ [[ true == true ]]
+ (( i = 0 ))
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ (( i < count ))

                  {
+ echo
                    blk = blk divisor " " $0;
                  }

                  END {
+ (( i++ ))
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ newline
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ echo -e --export
+ local count=1
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo
+ serialize_objects
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ return 0
+ [[ verbose =~ ^(export|r)$ ]]
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local first_search_entry=198.51.100.75
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ sed '/^[[:space:]]*$/d'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console ]]
'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ local last_search_entry=198.51.100.75
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -z '' ]]
+ [[ true == true ]]
+ case "${target_file}" in
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ debug=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z '' ]]
+ dry_run=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ] ]]
+ export console_output=false
+ console_output=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ IFS=' 	
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ basename reports/10.0.2.3/misc/fw3
++ sed -e '1s|^\(-\)\{1,\}||'
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ export console_output=false
+ ((  count == 0  ))
+ local awk_bin=/usr/bin/awk
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ newline 2
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local count=2
+ (( i = 0 ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ console_output=false
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ newline
+ newline
+ result=0
+ local count=1
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ exit 0
+ local count=1
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ newline
+ (( i++ ))
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zflfi7fEmk ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ false == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zflfi7fEmk
+ local parent_dir=reports/203.0.113.25/cisco
+ newline
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ serialize_objects
+ local parent_dir=reports/192.168.1.10/misc
+ local parent_dir=reports/192.168.1.10/misc
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -z '' ]]
+ script_helper=false
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]]
+ (( i = 0 ))
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ local parent_dir=reports/192.168.100.100/fortinet
+ result=0
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ basename reports/192.168.1.10/misc/fw1
++ grep -v '^\s*$'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
++ basename reports/192.168.1.10/misc/fw3
+ newline
+ local count=1
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ newline
+ cat -n
++ grep -v '^#'
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ return 0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ (( i < count ))
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ false == true ]]
+ [[ true == true ]]
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ (( i < count ))
+ local parent_dir=reports/172.16.1.6/fortinet
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ echo
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ serialize_objects
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local script_filename=fortinet-configs.awk
+ IFS==
+ read -r key value
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local export_objects=true
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z cisco ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
++ dirname reports/192.168.1.10/misc/switch1.conf
+ mkdir -p reports/192.168.1.10/misc/.objects
+ IFS==
+ read -r key value
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ echo
+ (( i++ ))
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ case "${target_platform}" in
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ [[ true == true ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
+ awk -v divisor=--MTc0ODgzMzYwMzc3ODEyMzAwMAo-- '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console ]]
                  BEGIN {
                    in_json_header = 0;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
                    blk = "";
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console ]]
                  }
+ case "${target_file}" in

                  /^[[:space:]]*$/ { next }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ cat -n
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
++ which awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ] ]]
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --export
++ tr -d '\r'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ result=0
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ exit 0
+ output_dir=reports/192.168.1.10/misc
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NuMB1GT887 ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NuMB1GT887
+ [[ true == true ]]
++ echo -e --verbose
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console ]]
+ local parent_dir=reports/192.168.0.1/cisco
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console ]]
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsD2BIxuOg/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ declare -a execute
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ newline
+ awk -v divisor=--MTc0ODgzMzYwMzczODEyMzAwMAo-- '
++ command -v -- ./scripts/network-extract.shell
                  BEGIN {
++ grep -v '^#'
                    in_json_header = 0;
+ local count=1
                    blk = "";
                  }

+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }

+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ echo
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ return 0
+ case "${target_platform}" in
+ [[ true == true ]]
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODgzMzYwMzc2NDQ0MTAwMAo-- '
                  BEGIN {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console ]]

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
                    if (in_json_header == 1) {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console ]]
                      in_json_header = 0;
                      next;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
                    }
+ sed '/^[[:space:]]*$/d'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console ]]
                  }

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GEmcJ2KUTM/network-extract--perimeter-fw1.cfg.console
+ case "${target_file}" in
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console

+ case "${target_platform}" in
                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
+ awk -v divisor=--MTc0ODgzMzYwMzgzNjQ5ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ result=0
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ 0 -ne 0 ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ true == true ]]
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
++ IFS=,
+ awk -v divisor=--MTc0ODgzMzYwMzc3MzQ0ODAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }

                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
++ echo 198.51.100.75
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
                    }
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]

                    /^ next$/ {
+ case "${target_file}" in
                      blk = blk divisor " " $0;
+ cat reports/10.0.2.3/misc/.objects/fw3.list
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovDDDOCZ1S ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovDDDOCZ1S
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ sed '/^[[:space:]]*$/d'
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local SCRIPT_DIR=./scripts
+ cat -n
+ IFS=' 	
+ result=0
+ case "${target_platform}" in
'
+ [[ export =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ 0 -ne 0 ]]
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local export_objects=true
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ debug=false
+ [[ cfg == \c\f\g ]]
+ [[ -z '' ]]
+ ((  count == 0  ))
+ dry_run=false
+ awk -v divisor=--MTc0ODgzMzYwMzc1NDU4NjAwMAo-- '
+ [[ -z true ]]
                    BEGIN {
                      in_json_header = 0;
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
                      blk = "";
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
                    }
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg

+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ export console_output=false
                    /^[[:space:]]*$/ { next }
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(logger|l)$ ]]

+ newline
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ exit 0
                    /^{$/ { in_json_header = 1; next }
+ [[ export =~ ^(platform|p)$ ]]
                    /^}$/ {
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ihYiXqT0t8 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
+ local count=1
                      if (in_json_header == 1) {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ihYiXqT0t8
+ local count=1
                        in_json_header = 0;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
                        next;
+ (( i < count ))
+ (( i = 0 ))
+ [[ -z true ]]
                      }
+ (( i < count ))
+ case "${target_file}" in
+ echo
                    }

+ result=0
+ (( i++ ))
                    (in_json_header == 1) { next }
+ (( i < count ))

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--branch-isr-02.cfg.console
+ [[ 0 -ne 0 ]]
                    /^#(hostname|model|config-version)=/ { next }
++ dirname reports/198.51.100.75/misc/fw1.cfg

                    /^config / { print $0; next }
+ [[ true == true ]]
+ echo
                    /^end$/    { print $0 "\n"; next }

+ (( i++ ))
                    /^ edit / {
+ (( i < count ))
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ local 'prompt_message=Enter configuration file to be parsed: '
                      blk = "";
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ which awk
                      next;
+ result=0
                    }

+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ 0 -ne 0 ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ [[ true == true ]]
+ [[ export =~ ^(search|s)$ ]]
                    {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console ]]
                      blk = blk divisor " " $0;
++ printf '%*s' 12 ''
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -z fortinet ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ export == \h\e\l\p ]]
+ newline
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ -z '' ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ local count=1
+ (( i = 0 ))
+ newline
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ echo
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ read -r key value
++ which awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ cat -n
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ mapfile -t search_terms
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ output_dir=reports/198.51.100.75/misc
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ [[ ! -d reports/198.51.100.75/misc ]]
+ local awk_bin=/usr/bin/awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ cat -n
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ] ]]
+ local 'indent=            '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-configs--ips.list ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ which awk
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ cat -n
+ case "${target_platform}" in
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvkvglbOPC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvkvglbOPC
+ awk -v divisor=--MTc0ODgzMzYwMzc2MzkxNTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ cat -n
++ tr -d '\r'
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
++ echo 192.168.1.10
++ echo -e --verbose
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ newline
+ (( i < count ))
++ grep -v '^\s*$'
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ return 0
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ (( i < count ))
+ local count=1
+ echo
+ [[ true == true ]]
+ return 0
+ (( i = 0 ))
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ local first_search_entry=203.0.113.25
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console ]]
+ local count=1
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
+ local last_search_entry=203.0.113.25
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ echo
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "",
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
  "version": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
  "hostname": ""
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console ]]
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
}
+ case "${target_file}" in
+ case "${target_file}" in

interface Vlan2
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
 ip address 172.16.1.6 255.255.255.0'
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ return 0
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ echo -en '{
  "vendor": "cisco",
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
+ [[ true == true ]]
 ip address 172.16.1.6 255.255.255.0'
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fJzwrXmlZt/network-extract--fw3.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ (( i++ ))
+ result=0
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ 0 -ne 0 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ return 0
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ local count=1
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -z cisco ]]
+ mkdir -p reports/10.0.0.1/misc/.objects
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(extract|x)$ ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ local parent_dir=reports/192.168.0.100/cisco
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ return 0
+ [[ verbose == \h\e\l\p ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filename=fortinet-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local verbose=true
+ IFS=' 	
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console ]]
+ local first_search_entry=10.10.10.10
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console ]]
+ local last_search_entry=10.10.10.10
+ [[ true == true ]]
+ debug=false
+ case "${target_file}" in
+ [[ -z '' ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ export console_output=false
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ console_output=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ newline
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
++ printf '%*s' 12 ''
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ -z '' ]]
+ local count=1
+ script_helper=false
+ local SCRIPT_DIR=./scripts
+ ((  count == 0  ))
+ [[ false == true ]]
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ newline
+ search_terms=()
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local count=1
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ declare -a search_terms
+ local 'indent=            '
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list != *,* ]]
+ local count=1
+ (( i < count ))
+ mapfile -t search_terms
+ echo
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ true == true ]]
+ newline
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ case "${target_file}" in
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ result=0
+ newline
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFfKUufNef ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console ]]
++ printf '%*s' 12 ''
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ cat -n
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--fw3.cfg.console
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ result=0
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ exit 0
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZomjUYp0c ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZomjUYp0c
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ newline
++ which awk
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ result=0
+ (( i < count ))
+ local target_config=.cache/resources/misc/fw3.cfg
+ exit 0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dSopRyo1vM ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '                .cache/resources/misc/switch3.conf'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dSopRyo1vM
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/misc/switch3.conf'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFfKUufNef
+ echo -e '                .cache/resources/misc/switch3.conf'
+ [[ config =~ ^(console|o)$ ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ -z fortinet ]]
+ [[ config =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config == \h\e\l\p ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ newline
+ local count=1
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console ]]
++ tr -d '\r'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rEKdUionQw/network-extract--fg-campus-core.cfg.console
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console ]]
+ result=0
+ result=0
+ exit 0
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
++ grep -v '^#'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DiR973jEY0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xZiA6gKuSX ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DiR973jEY0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xZiA6gKuSX
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--fg-campus-core.cfg.console
++ IFS=,
++ echo 203.0.113.25
+ result=0
+ [[ config == \d\r\y\-\r\u\n ]]
+ exit 0
+ local 'extracted_configuration={
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3QwVHjIugI ]]
  "vendor": "fortinet",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3QwVHjIugI
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ result=0
++ IFS=,
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ config == \v\e\r\b\o\s\e ]]
++ echo 198.51.100.75
+ for xitem in "${@}"
}
+ IFS==

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ command -v -- ./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')

config system interface
+ declare -a execute
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ read -r key value
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
++ which awk
++ which awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ local first_search_entry=10.10.10.10
+ [[ cfg == \c\f\g ]]
+ local last_search_entry=10.10.10.10
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
+ result=0
  set ip 198.51.100.75 255.255.255.0
+ exit 0
  set alias "Branch ISP"
 next
end

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vrxZMjB20 ]]
config firewall address
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vrxZMjB20
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
  set comment "Branch NAT"
 next
+ [[ cfg == \c\f\g ]]
end ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ] ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
hostname dmz-fw2-backup
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ [[ true == true ]]
+ local 'extracted_configuration={
+ result=0
  "vendor": "cisco",
+ exit 0
  "model": "",
  "version": "",
  "domain": "",
domain-name global.dmz.example.net
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EfnTlLm6a2 ]]
+ local count=1

  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EfnTlLm6a2
+ (( i = 0 ))
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console ]]

interface Vlan20
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
 ip address 192.168.1.10 255.255.255.0'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--campus-sw-access01.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ (( i < count ))
interface GigabitEthernet0/2
}

 nameif outside
interface Vlan20
 ip address 198.51.100.75 255.255.255.0
 ip address 192.168.1.10 255.255.255.0 ]]
 description Outbound Internet NAT interface'
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ] ]]
  "version": "9.12(4)",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
  "domain": "global.dmz.example.net",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
  "hostname": "dmz-fw2-backup"
}
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]

+ [[ -z fortinet ]]
ASA Version 9.12(4)
+ newline
+ [[ true == true ]]
hostname dmz-fw2-backup
+ local count=1
+ result=0
+ (( i = 0 ))
domain-name global.dmz.example.net
+ exit 0

+ (( i < count ))
+ (( i < count ))
interface GigabitEthernet0/2
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CnWbhqmV9i ]]
 nameif outside
+ newline 2
 ip address 198.51.100.75 255.255.255.0
+ echo
+ local awk_bin=/usr/bin/awk
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CnWbhqmV9i
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ newline
+ (( i++ ))
+ local count=1
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ ((  count == 0  ))
 description Outbound Internet NAT interface ]]
+ local count=1
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ newline
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local count=1
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo
}
+ (( i++ ))

+ (( i < count ))
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=2
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ result=0
+ (( i = 0 ))
+ [[ -z cisco ]]
+ [[ -n {
+ case "${target_platform}" in
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ [[ false == true ]]
  "vendor": "cisco",
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
  "model": "",
+ [[ true == true ]]
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
+ local awk_bin=/usr/bin/awk
+ print '{
+ awk -v divisor=--MTc0ODgzMzYwMzc1NTIxMzAwMAo-- '
+ echo
  "vendor": "cisco",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "model": "",
  "version": "",
  "version": "",
  "domain": "",
                  BEGIN {
  "hostname": ""
                    in_json_header = 0;
                    blk = "";
}
                  }


interface Vlan20
                  /^[[:space:]]*$/ { next }
 ip address 192.168.1.10 255.255.255.0'

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
                      next;
                    }
                  }
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'

                  (in_json_header == 1) { next }
+ [[ -n {
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'

  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "model": "",
                    blk = $0;
  "version": "",
                    next;
  "domain": "",
                  }
  "hostname": ""

}
                  {

                    blk = blk divisor " " $0;
interface Vlan20
                  }
 ip address 192.168.1.10 255.255.255.0'

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ printf '%*s' 12 ''
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ output_dir=reports/10.10.10.10/misc
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ ! -d reports/10.10.10.10/misc ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
++ printf '%*s' 12 ''
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ local count=1
+ output_dir=reports/192.168.2.12/misc
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/192.168.2.12/misc ]]
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ (( i++ ))
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ serialize_objects
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
++ which awk
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
  "hostname": "dmz-fw2-backup"
}
+ newline

+ local count=1
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
  "domain": "",
  "hostname": ""
domain-name global.dmz.example.net
}
+ (( i = 0 ))


+ (( i < count ))
interface Vlan1
interface GigabitEthernet0/2
+ echo
 ip address 10.0.0.1 255.255.255.0
+ newline 2
+ (( i++ ))

+ (( i < count ))
+ local 'indent=            '
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ sed '/^[[:space:]]*$/d'
+ cat -n reports/172.16.1.6/misc/switch3.conf
 nameif outside
object-group network Spider-Net
 ip address 198.51.100.75 255.255.255.0
 description Web access switches
 description Outbound Internet NAT interface'
+ [[ true == true ]]
+ local count=2
 network-object host 10.0.0.1
+ (( i = 0 ))
+ (( i < count ))
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ newline
+ [[ -n {
+ local count=1
  "vendor": "cisco",
  "model": "ASA",
+ (( i = 0 ))
  "version": "9.12(4)",
+ (( i < count ))
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
+ (( i++ ))
+ case "${target_platform}" in
  "vendor": "cisco",
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ echo
+ result=0
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ command -v -- ./scripts/network-extract.shell
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
+ sed '1{/^[[:space:]]*$/d;}'
+ awk -v divisor=--MTc0ODgzMzYwMzgzMzY4NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
 nameif outside
 ip address 198.51.100.75 255.255.255.0
                  }
 description Outbound Internet NAT interface'

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }
+ mkdir -p reports/192.168.0.100/cisco/.objects

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
                  }
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ sed '/^[[:space:]]*$/d'
+ print '{
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "vendor": "cisco",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xAssNfY2Fl ]]
  "model": "",
+ newline 2
  "version": "",
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
  "domain": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xAssNfY2Fl
  "hostname": ""
+ message '                .cache/resources/misc/fw1.cfg'
+ newline
}
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]

interface Vlan1
+ local 'message=                .cache/resources/misc/fw1.cfg'
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
+ echo -e '                .cache/resources/misc/fw1.cfg'
 description Web access switches
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
  "model": "",
  "version": "",
+ [[ extract =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ extract == \h\e\l\p ]]
  "version": "",
+ [[ extract == \d\e\b\u\g ]]
  "domain": "",
  "hostname": ""
+ [[ extract == \d\r\y\-\r\u\n ]]
}

+ [[ extract == \v\e\r\b\o\s\e ]]
interface Vlan1
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i = 0 ))
 ip address 10.0.0.1 255.255.255.0
+ (( i < count ))

+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
object-group network Spider-Net
 description Web access switches
+ IFS==
+ (( i < count ))
+ newline
 network-object host 10.0.0.1
+ echo
+ echo
+ read -r key value
+ local count=1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ local count=2
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ (( i < count ))
+ (( i++ ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ dirname -- ./scripts/network-extract.shell
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ (( i++ ))
+ (( i < count ))
+ newline
+ (( i++ ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
++ echo 192.168.2.12
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local parent_dir=reports/192.168.0.1/fortinet
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ [[ cfg == \c\f\g ]]
+ declare -a execute
+ newline
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ serialize_objects
+ newline 2
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ (( i++ ))
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ cfg == \c\f\g ]]
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ case "${target_file}" in
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ echo -e --platform=cisco
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local SCRIPT_DIR=./scripts
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ cat -n
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ newline
+ local script_filename=cisco-configs.awk
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
++ which awk
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ awk -v divisor=--MTc0ODgzMzYwMzc2NDEwOTAwMAo-- '
+ echo
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ (( i++ ))

+ (( i < count ))
                  /^[[:space:]]*$/ { next }

+ echo
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ (( i++ ))
                      in_json_header = 0;
+ (( i < count ))
                      next;
                    }
                  }

++ dirname reports/203.0.113.25/misc/fw1.cfg
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ true == true ]]
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
++ which awk
++ which awk
+ sed '/^[[:space:]]*$/d'
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local parent_dir=reports/172.16.1.6/misc
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ (( i < count ))
+ output_dir=reports/10.10.10.10/fortinet
+ [[ true == true ]]
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console ]]
+ output_dir=reports/203.0.113.25/misc
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console ]]
+ [[ ! -d reports/203.0.113.25/misc ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ platform == \h\e\l\p ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ platform == \d\e\b\u\g ]]
+ cat -n
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
  "model": "",
+ local awk_bin=/usr/bin/awk
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ for xitem in "${@}"
+ local 'extracted_configuration={
+ local count=1
  "version": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ IFS==
  "vendor": "fortinet",
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
  "domain": "",
  "hostname": ""
+ read -r key value
}
  "model": "FortiGate-60F",

  "version": "v7.2.5.F",
object-group network Krypton-Cloud
+ (( i = 0 ))
  "domain": ""
 description Cloud-facing external nodes
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
 network-object host 198.51.100.75
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ serialize_objects
  "hostname": "fg-branch-vpn-01"
+ (( i < count ))
++ basename reports/172.16.1.6/misc/switch3
}
+ result=0

+ echo
#hostname="fg-branch-vpn-01"
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
#model="FortiGate-60F"
  "model": "",
+ [[ false == true ]]
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
#config-version=FGT_60F-v7.2.5.F-build1517-230421

}
config firewall address

object-group network Krypton-Cloud
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
 description Cloud-facing external nodes
  set comment "Public NAT exposure for Red Skull trap"
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 next
end'
 host 198.51.100.75
++ command -v -- ./scripts/network-extract.shell
 description Secondary outbound route for edge ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
++ IFS=,
+ result=0
++ printf '%*s' 12 ''
+ [[ -n {
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
  "vendor": "fortinet",
++ echo 192.168.2.12
+ local count=1
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ newline
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local count=1
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i++ ))
+ echo
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ serialize_objects
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
++ IFS=,
++ echo 10.10.10.10
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ false == true ]]
+ [[ true == true ]]
  "model": "FortiGate-60F",
+ newline
  "version": "v7.2.5.F",
+ local count=1
+ (( i = 0 ))
  "domain": ""
+ newline
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
}
+ (( i = 0 ))
+ echo
+ declare -a execute
+ (( i < count ))
+ print '{
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ echo
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
  "hostname": ""

+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
#hostname="fg-branch-vpn-01"
 network-object host 203.0.113.25
+ [[ false == true ]]

+ serialize_objects
object network External-Failover
#model="FortiGate-60F"
+ [[ true == true ]]
+ (( i++ ))
 host 198.51.100.75
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))
 description Secondary outbound route for edge'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ (( i++ ))
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
  "vendor": "cisco",
  "model": "",
++ dirname -- ./scripts/network-extract.shell
  "version": "",
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
+ return 0
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ true == true ]]
  "domain": "",
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ mkdir -p reports/172.16.1.6/misc/.objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console ]]
}

+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
config firewall address
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
++ dirname -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console ]]
 network-object host 203.0.113.25
++ which awk

object network External-Failover
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ case "${target_file}" in
 host 198.51.100.75
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
 description Secondary outbound route for edge'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ serialize_objects
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
 edit "Public-Test"
+ case "${target_file}" in
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
end ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch1.conf.console
+ (( i = 0 ))
+ case "${target_platform}" in
++ dirname reports/192.168.1.10/misc/switch1.conf
+ awk -v divisor=--MTc0ODgzMzYwMzg1NTUzNTAwMAo-- '
                    BEGIN {
++ which awk
                      in_json_header = 0;
                      blk = "";
                    }

                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
+ cat -n
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/198.51.100.75/fortinet
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ dirname reports/10.0.0.1/misc/switch3.conf
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ local SCRIPT_DIR=./scripts
 next
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local script_filename=cisco-configs.awk
end'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local awk_bin=/usr/bin/awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ newline 2
+ [[ logger =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ logger =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ return 0
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ true == true ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ case "${target_file}" in
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console ]]
+ result=0
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_file}" in
+ exit 0
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fVV8pymaRG ]]
+ local parent_dir=reports/10.0.0.1/misc
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fVV8pymaRG
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
++ which awk
+ newline
+ local 'indent=            '
+ local count=1
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ awk -v divisor=--MTc0ODgzMzYwMzg0NTE4MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                  }
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

                  /^[[:space:]]*$/ { next }

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
                      next;
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
                    }
                  }
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'

                  (in_json_header == 1) { next }
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message '             -f ./scripts/extract/cisco-configs.awk \'
                    blk = $0;
                    next;
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                  }

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
                  {
                    blk = blk divisor " " $0;
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ message '                .cache/resources/misc/fw1.cfg'
                ' reports/172.16.1.6/misc/switch3.conf
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
++ which awk
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
++ basename reports/10.0.0.1/misc/switch3
+ newline
+ local 'indent=            '
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/192.168.1.10/misc/switch1
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console ]]
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ case "${target_file}" in
+ local 'extracted_configuration={
+ cat -n
  "vendor": "fortinet",
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s53C3PITqA/network-extract--campus-sw-access01.cfg.console
+ result=0
+ mkdir -p reports/10.0.0.1/misc/.objects
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvQxsTdoqR ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FvQxsTdoqR
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ newline

+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
#hostname="fg-campus-core"
+ (( i++ ))
#model="FortiGate-200F"
+ (( i < count ))

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ false == true ]]
++ IFS=,
+ [[ true == true ]]
+ result=0
+ local count=2
+ [[ -n {
  "vendor": "fortinet",
++ IFS=,
  "model": "FortiGate-200F",
+ (( i = 0 ))
++ echo 10.10.10.10
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ (( i < count ))
+ mkdir -p reports/192.168.1.10/misc/.objects
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
++ echo 203.0.113.25
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
  "version": "",
++ IFS=,
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ result=0
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ 0 -ne 0 ]]
++ echo 10.10.10.10
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ [[ true == true ]]
+ serialize_objects
}
+ echo
+ declare -a execute

+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i++ ))
+ declare -a execute
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'

config firewall address
 edit "Vision-Link"
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ (( i < count ))
+ declare -a execute
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ dirname reports/198.51.100.75/misc/fw1.cfg
++ which awk
+ newline
+ local 'extracted_configuration={
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ print '{
  "vendor": "fortinet",
++ which awk
}
  "model": "FortiGate-200F",
  "version": "",
+ local count=1
  "domain": ""
  "hostname": "fg-campus-core"
+ (( i = 0 ))
}

+ (( i < count ))
#hostname="fg-campus-core"
+ echo
#model="FortiGate-200F"

config firewall address
+ (( i++ ))
 edit "Vision-Link"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'

object-group network Metropolis-Internal
+ return 0
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ result=0
  "domain": ""
+ [[ true == true ]]
+ [[ -n {
  "hostname": "fg-campus-core"
  "vendor": "cisco",
}
  "model": "",

  "version": "",
#hostname="fg-campus-core"
  "domain": "",
#model="FortiGate-200F"
  "hostname": ""

}
config firewall address

 edit "Vision-Link"
object-group network Metropolis-Internal
  set subnet 192.168.2.12 255.255.255.255
 description Core internal LAN for application clusters
  set comment "Vision’s quantum channel"
 network-object host 10.0.2.3
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console ]]
 network-object 192.168.2.0 255.255.255.0
 next
 network-object host 192.168.2.12 ]]
end'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zkoLUz1ItP ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zkoLUz1ItP
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ cat -n
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/198.51.100.75/misc
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwMzg5Mzc4NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
+ awk -v divisor=--MTc0ODgzMzYwMzkzMDQwODAwMAo-- '
                    BEGIN {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                      in_json_header = 0;
                      blk = "";
                    next;
+ case "${target_platform}" in
                  }
                    }


                  {
                    /^[[:space:]]*$/ { next }
                    blk = blk divisor " " $0;

                  }
                    /^{$/ { in_json_header = 1; next }

                    /^}$/ {
                  END {
+ sed '1{/^[[:space:]]*$/d;}'
                      if (in_json_header == 1) {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                        in_json_header = 0;
                  }
                        next;
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                      }
                    }
+ awk -v divisor=--MTc0ODgzMzYwMzg3Nzk3NTAwMAo-- '

                    (in_json_header == 1) { next }
                  BEGIN {
                    in_json_header = 0;

                    /^#(hostname|model|config-version)=/ { next }
                    blk = "";

                  }
                    /^config / { print $0; next }

                    /^end$/    { print $0 "\n"; next }
                  /^[[:space:]]*$/ { next }
++ printf '%*s' 12 ''


                  /^{$/ { in_json_header = 1; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                  /^}$/ {
                      blk = $0;
                    if (in_json_header == 1) {
                      next;
                      in_json_header = 0;
                    }
                      next;
+ print '{
  "vendor": "cisco",
                    }

  "model": "",
                    /^ next$/ {
  "version": "",
++ printf '%*s' 12 ''
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                  }
  "domain": "",
                      blk = "";
                      next;
                    }

++ basename reports/198.51.100.75/misc/fw1
  "hostname": ""
}

                  (in_json_header == 1) { next }


                  /^[^[:space:]]/ {
                    {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
object-group network Shield-WiFi
                      blk = blk divisor " " $0;
                    }
                    next;

                  }

 description Shield-controlled wireless network
                    END {
 network-object host 10.10.10.10
                  {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
 network-object 192.168.100.0 255.255.255.0
+ local awk_bin=/usr/bin/awk
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
                    blk = blk divisor " " $0;
+ local 'indent=            '

+ local 'indent=            '
                  }
+ [[ true == true ]]

+ [[ true == true ]]
object-group network Shield-WiFi
                  END {
 description Shield-controlled wireless network
 network-object host 10.10.10.10
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object 192.168.100.0 255.255.255.0
                  }

                ' reports/10.0.0.1/misc/switch3.conf
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ case "${target_platform}" in
 network-object 192.168.100.0 255.255.255.0

+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ newline
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ awk -v divisor=--MTc0ODgzMzYwNDAxNDE4MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ -n {
  "vendor": "cisco",
                      next;
                    }
  "model": "",
                  }
+ (( i < count ))

  "version": "",
+ newline
                  (in_json_header == 1) { next }
  "domain": "",
+ local count=1

+ (( i = 0 ))
  "hostname": ""
+ echo
                  /^[^[:space:]]/ {
}
+ (( i < count ))
+ local count=1
+ sed '/^[[:space:]]*$/d'
                    if (blk != "" && !seen[blk]++) print blk "\n";

                    blk = $0;
object-group network Shield-WiFi
+ (( i = 0 ))
 description Shield-controlled wireless network
                    next;
+ (( i++ ))
 network-object host 10.10.10.10
+ echo
+ (( i < count ))
                  }
+ echo
 network-object 192.168.100.0 255.255.255.0

+ (( i++ ))
+ (( i < count ))
                  {
+ (( i < count ))

object-group network Shield-WiFi
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
 description Shield-controlled wireless network
                    blk = blk divisor " " $0;
 network-object host 10.10.10.10
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                  }
 network-object 192.168.100.0 255.255.255.0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ return 0

                  END {
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object-group network Shield-WiFi
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description Shield-controlled wireless network
                  }
 network-object host 10.10.10.10
                ' reports/192.168.1.10/misc/switch1.conf
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
+ sed '/^[[:space:]]*$/d'
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ true == true ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
object network Shield-WiFi-Alias
 host 10.10.10.10
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ case "${target_file}" in
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opX3TeYB4d/network-extract--fg-branch-vpn-01.cfg.console
+ newline 2
+ IFS=' 	
+ local count=2
'
+ (( i = 0 ))
+ (( i < count ))
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ echo
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local count=2
+ dry_run=false
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ [[ -z true ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ export console_output=false
+ console_output=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ script_helper=false
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ local 'indent=            '
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i < count ))
+ newline
+ echo
+ mapfile -t search_terms
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ result=0
+ [[ 0 -ne 0 ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ false == true ]]
+ newline
+ newline
+ [[ true == true ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ newline 2
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=2
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i < count ))
+ (( i++ ))
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i < count ))
+ echo
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ (( i++ ))
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
++ tr -d '\r'
+ [[ true == true ]]
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3zAU2E7qVl/network-extract--switch3.conf.console
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RMYKj146tI ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RMYKj146tI
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
++ grep -v '^\s*$'
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ result=0
+ cat -n
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ cat -n
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ (( i = 0 ))
+ [[ false == true ]]
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
 host 203.0.113.25
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
 description Secure NAT boundary for cloud access'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
  "hostname": "fg-branch-vpn-01"
+ result=0
+ case "${target_platform}" in
}
+ serialize_objects
+ [[ -n {
  "vendor": "cisco",

  "model": "",
  "version": "",
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "domain": "",

  "hostname": ""
}
+ awk -v divisor=--MTc0ODgzMzYwMzk3NzU1MzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }


                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
config firewall policy
object-group network Krypton-Cloud
                      next;
 description Cloud-facing external nodes
                    }
 network-object host 198.51.100.75
                  }
 network-object host 203.0.113.25
 edit 13


object network Krypton-Gateway
 host 203.0.113.25
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
 description Secure NAT boundary for cloud access ]]
  set name "Remote NAT"
                ' reports/198.51.100.75/misc/fw1.cfg
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ newline
+ local count=1
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ echo
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ newline
+ (( i++ ))
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ local parent_dir=reports/203.0.113.25/fortinet
+ (( i < count ))
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ result=0
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ return 0
+ exit 0
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wogqtIMVNI ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wogqtIMVNI
+ print '{
  "vendor": "cisco",
+ serialize_objects
  "model": "",
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ local first_search_entry=203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console ]]
+ local last_search_entry=203.0.113.25
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n {
  "vendor": "cisco",
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ print '{
  "vendor": "fortinet",
object network Krypton-Gateway
  "model": "FortiGate-60F",
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
  "version": "v7.2.5.F",
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
  "domain": ""
+ newline
  "hostname": "fg-branch-vpn-01"
}
+ echo -en '{

+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ] ]]
+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ local count=1
#model="FortiGate-60F"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'
+ (( i < count ))
+ (( i = 0 ))
  "vendor": "cisco",
#config-version=FGT_60F-v7.2.5.F-build1517-230421

  "model": "",
  "version": "",
config firewall policy
  "domain": "",
 edit 13
  "hostname": ""
  set name "Remote NAT"
}
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-configs--ips.list ]'

object-group network Krypton-Cloud
+ echo
 description Cloud-facing external nodes
+ local 'extracted_configuration={
 network-object host 198.51.100.75
  set srcintf "dmz"
 network-object host 203.0.113.25
+ local count=1
  set dstintf "wan1"

  set srcaddr "10.10.10.10"
  "vendor": "fortinet",
object network Krypton-Gateway
  set dstaddr "203.0.113.10"
 host 203.0.113.25
+ ((  count == 0  ))
+ (( i++ ))
  "model": "FortiGate-200F",
 description Secure NAT boundary for cloud access'
  set action accept
+ (( i < count ))
  set logtraffic all
 next
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
end'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ (( i < count ))
+ [[ -n {
+ local count=1
  "version": "",
  "vendor": "fortinet",
+ sed '1{/^[[:space:]]*$/d;}'
  "model": "FortiGate-60F",
+ return 0
+ echo
  "version": "v7.2.5.F",
  "domain": ""
+ (( i = 0 ))
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ (( i++ ))
}

#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
  "hostname": "fg-campus-core"
}
 next
+ cat -n
+ echo

end ]]
#hostname="fg-campus-core"
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
  "vendor": "fortinet",
+ (( i < count ))
+ [[ true == true ]]
#model="FortiGate-200F"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ return 0
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ -z .cache/resources/misc/fw3.cfg ]]

+ [[ -z cisco ]]
config system interface
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
++ dirname reports/10.10.10.10/misc/fw3.cfg
 edit "core"
+ [[ true == true ]]
}
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
 next

end
#hostname="fg-branch-vpn-01"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console ]]

#model="FortiGate-60F"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console ]]
+ newline
#config-version=FGT_60F-v7.2.5.F-build1517-230421
config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console

+ local count=1
config firewall policy
 edit 13
+ (( i = 0 ))
  set name "Remote NAT"
+ (( i < count ))
  set srcintf "dmz"
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
  set comment "Wireless AP Gateway"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console ]]
  set dstintf "wan1"
+ echo
+ case "${target_file}" in
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console ]]
  set srcaddr "10.10.10.10"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
+ (( i++ ))
end'
  set dstaddr "203.0.113.10"
+ case "${target_file}" in
+ (( i < count ))
  set action accept
  set logtraffic all
 next
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
end'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ local parent_dir=reports/192.168.2.12/misc
  "domain": ""
+ local parent_dir=reports/192.168.2.12/fortinet
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/192.168.2.12/misc/fw1
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ newline
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ print '{
+ (( i < count ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ local parent_dir=reports/10.10.10.10/misc
+ return 0
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ newline 2

config system interface
 edit "core"
+ [[ true == true ]]
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console

+ local count=2
config firewall address
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i = 0 ))
 edit "Shield-WiFi"
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
  set subnet 10.10.10.10 255.255.255.255
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console ]]
  set comment "Wireless AP Gateway"
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ newline 2
end'
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local count=2
+ case "${target_file}" in
+ [[ -n {
+ (( i = 0 ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ [[ true == true ]]
+ echo
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
end
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]

config firewall address
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
 edit "Shield-WiFi"
+ (( i++ ))
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
  set subnet 10.10.10.10 255.255.255.255
+ (( i < count ))
  set comment "Wireless AP Gateway"
+ newline
 next
+ local count=1
end ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ echo -en '{
+ (( i++ ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ (( i < count ))
  "hostname": "fg-campus-core"
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ cat -n reports/203.0.113.25/misc/fw1.cfg
}

+ print_file reports/198.51.100.75/misc/.objects/fw1.list
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
  set comment "Wireless AP Gateway"
 next
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
end'
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ basename reports/10.10.10.10/misc/fw3
+ cat -n
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hi12O9zJ6O/network-extract--switch3.conf.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fg-branch-vpn-01.cfg.console
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ mkdir -p reports/192.168.2.12/misc/.objects
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ newline 2
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ mkdir -p reports/10.10.10.10/misc/.objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4gJp8CMt8A ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4gJp8CMt8A
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbGdDF57GS/network-extract--switch1.conf.console
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ return 0
+ case "${target_platform}" in
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ awk -v divisor=--MTc0ODgzMzYwNDA4ODkwMDAwMAo-- '
+ serialize_objects
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console

                    /^[[:space:]]*$/ { next }
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console ]]

                    /^{$/ { in_json_header = 1; next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console
                    /^}$/ {
                      if (in_json_header == 1) {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console ]]
                        in_json_header = 0;
                        next;
+ local count=1
+ case "${target_file}" in
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ (( i = 0 ))
                      }
                    }
+ (( i < count ))

+ echo
                    (in_json_header == 1) { next }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console

                    /^#(hostname|model|config-version)=/ { next }
+ (( i++ ))

+ (( i < count ))
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
+ [[ false == true ]]

+ [[ true == true ]]
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ sed '/^[[:space:]]*$/d'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.62huhOd6Qv ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifhViV8sHq ]]
+ case "${target_platform}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.62huhOd6Qv
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifhViV8sHq
+ awk -v divisor=--MTc0ODgzMzYwMzk5NTEzODAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }

                    /^[[:space:]]*$/ { next }

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ case "${target_platform}" in
+ output_dir=reports/203.0.113.25/misc
+ awk -v divisor=--MTc0ODgzMzYwNDA0MDU4NDAwMAo-- '
+ [[ ! -d reports/203.0.113.25/misc ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }

+ sed '/^[[:space:]]*$/d'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ newline
+ result=0
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGvDBL0Xz ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGvDBL0Xz
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local parent_dir=reports/203.0.113.25/misc
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwNDEwNTUzNzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ [[ true == true ]]

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
++ command -v -- ./scripts/network-extract.shell
                    if (in_json_header == 1) {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console
                      in_json_header = 0;
                      next;
                    }
                  }

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console ]]
                  (in_json_header == 1) { next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console ]]
                    blk = $0;
                    next;
                  }

                  {
                    blk = blk divisor " " $0;
                  }
+ case "${target_file}" in

                  END {
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4zKp8Eef8/network-extract--fw1.cfg.console
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ sed '/^[[:space:]]*$/d'
+ local parent_dir=reports/10.10.10.10/fortinet
++ basename reports/203.0.113.25/misc/fw1
++ dirname -- ./scripts/network-extract.shell
+ serialize_objects
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYmzNy7bAA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYmzNy7bAA
++ basename reports/10.10.10.10/fortinet/fg-testing-config
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ cat -n
+ cat -n
+ cat -n
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ mkdir -p reports/203.0.113.25/misc/.objects
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local parent_dir=reports/10.10.10.10/fortinet
+ mkdir -p reports/10.10.10.10/fortinet/.objects
++ which awk
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ newline
+ local count=1
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ (( i = 0 ))
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ (( i < count ))
+ echo
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ return 0
+ [[ true == true ]]
+ cat -n
+ newline
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ case "${target_platform}" in
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwNDE5MjYyMTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ awk -v divisor=--MTc0ODgzMzYwNDA1MzI0NjAwMAo-- '
                    BEGIN {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      in_json_header = 0;
                      blk = "";
                      next;
                    }
                    }
                  }


                    /^[[:space:]]*$/ { next }
                  (in_json_header == 1) { next }


                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    /^{$/ { in_json_header = 1; next }
                    blk = $0;
+ newline
                    next;
                    /^}$/ {
                      if (in_json_header == 1) {
                  }
                        in_json_header = 0;

                        next;
                      }
                  {
+ local count=1
                    }

                    blk = blk divisor " " $0;
                  }
                    (in_json_header == 1) { next }

+ (( i = 0 ))

+ (( i < count ))
                  END {
                    /^#(hostname|model|config-version)=/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo
                  }

                ' reports/203.0.113.25/misc/fw1.cfg
+ (( i++ ))
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

+ (( i < count ))
                    /^ edit / {
++ IFS=,
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
++ echo 203.0.113.25
                    }
+ return 0

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console ]]
+ declare -a execute
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.euAHr3qx52/network-extract--fw1.cfg.console
++ which awk
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ result=0
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ exit 0
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cg2t34huCC ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cg2t34huCC
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ exit 0
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Hkr0obGeG ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ case "${target_platform}" in
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Hkr0obGeG
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console
+ (( i < count ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console ]]
+ (( i++ ))
+ result=0
+ (( i < count ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9YMM2e6yLr ]]
+ awk -v divisor=--MTc0ODgzMzYwNDA4NjQzMzAwMAo-- '
                    BEGIN {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9YMM2e6yLr
                      in_json_header = 0;
                      blk = "";
+ case "${target_file}" in
                    }

                    /^[[:space:]]*$/ { next }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fw3.cfg.console

                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }

                    (in_json_header == 1) { next }

                    /^#(hostname|model|config-version)=/ { next }

                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }

                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }

                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
+ sed '/^[[:space:]]*$/d'
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ printf '%*s' 12 ''
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ case "${target_file}" in
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ case "${target_file}" in
+ local 'indent=            '
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ cat -n
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ cat -n
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0BBWLuRCti ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0BBWLuRCti
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console ]]
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ cat -n
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-testing-config.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw1.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
  "hostname": ""
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console ]]

object-group network Panther-Edge
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console ]]
 network-object host 172.16.0.5'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hfv99uKBPt ]]
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hfv99uKBPt
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hQe7dk3p5T ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hQe7dk3p5T
+ [[ true == true ]]
+ newline 2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NdptpacOpS/network-extract--fg-campus-core.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ItOGwUx72 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7ItOGwUx72
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzYwNDI3MTAzNzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }

                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ sed '/^[[:space:]]*$/d'

                  {
                    blk = blk divisor " " $0;
                  }

                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ cat -n
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8pj4k8WfH/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BsVbX0vTWC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BsVbX0vTWC
