+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnYvPYm0jq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnYvPYm0jq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODk0MjE4NzA5MzQyNTAwMAo--
++ divisor=--MTc0ODk0MjE4NzA5MzQyNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gQevTGb41K
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gQevTGb41K
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ 6 -eq 0 ]]
++ export 'nl=\n'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console --verbose
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODk0MjE4NzExMTE4ODAwMAo--
++ divisor=--MTc0ODk0MjE4NzExMTE4ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6vxNoPoS2N
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6vxNoPoS2N
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console --verbose
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
+ [[ platform == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ config =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ config == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ [[ -z '' ]]
+ IFS==
+ local export_objects=false
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODk0MjE4NzEyOTA5NzAwMAo--
++ divisor=--MTc0ODk0MjE4NzEyOTA5NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ alias parse-cisco=main
++ grep -v '^#'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ network_extract__console=logs/console/network-extract.console
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ touch logs/console/network-extract.console
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HqLlcq8D1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HqLlcq8D1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ logger =~ ^(export|r)$ ]]
++ targets_location=targets
+ [[ logger =~ ^(extract|x)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+++ date +%s%N
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
+++ base64
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ export divisor=--MTc0ODk0MjE4NzE0OTQ0MDAwMAo--
+ [[ config == \h\e\l\p ]]
++ divisor=--MTc0ODk0MjE4NzE0OTQ0MDAwMAo--
+ IFS=' 	
+ [[ config == \d\e\b\u\g ]]
'
+ [[ config == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
+ debug=false
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ dry_run=false
+ IFS==
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ [[ -n '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
++ [[ 5 -lt 4 ]]
+ mapfile -t search_terms
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ which awk
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ declare -a execute
+ script_filename=network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(logger|l)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console --verbose
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mWyzmejv4U
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mWyzmejv4U
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ oIFS=' 	
'
+ export 'nl=\n'
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ IFS==
+ read -r key value
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ printf '%*s' 12 ''
++ alias print-line=print
++ echo -e --search=.cache/ips.list
++ alias print-file=print_file
+ [[ platform =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ platform =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
++ alias validate-address=validate_address
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias warning-message=warning
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export LC_ALL=C
++ LC_ALL=C
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ export 'nl=\n'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ nl='\n'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export cache_location=.cache
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ cache_location=.cache
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ export logs_location=logs
++ logs_location=logs
+ message '                configs/cisco/access-sw1-west.cfg'
++ mkdir -p logs/console logs/jobs
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
++ echo -e --verbose
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
++ command -v -- ./scripts/network-extract.shell

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ dirname -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ [[ config =~ ^(config|c)$ ]]
version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
 description Management Interface

+ [[ config =~ ^(console|o)$ ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ [[ config =~ ^(export|r)$ ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ set -euo pipefail

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(logger|l)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ config =~ ^(platform|p)$ ]]

version 12.4
hostname access-sw1-west
+ [[ config =~ ^(search|s)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ [[ config == \h\e\l\p ]]

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ [[ config == \d\e\b\u\g ]]
 description Guest VLAN Gateway

+ [[ config == \d\r\y\-\r\u\n ]]
object-group network MGMT-ACCESS
 description Management objects
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ for xitem in "${@}"
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ IFS==
+ read -r key value
+++ date +%s%N
++ mktemp -d
+++ base64
+ [[ verbose =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local SCRIPT_DIR=./scripts
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_filename=cisco-configs.awk
+ debug=false
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ dry_run=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ tr -d '\r'
++ export divisor=--MTc0ODk0MjE4NzE3NzAwODAwMAo--
++ divisor=--MTc0ODk0MjE4NzE3NzAwODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E5fubd6Szp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E5fubd6Szp
+ [[ extract =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ nl='\n'
+ [[ extract =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(platform|p)$ ]]
++ grep -v '^#'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias network-extract--helper=network_extract__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ alias serialize-object=serialize_objects
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ -z x ]]
++ nl='\n'
+ export logs_location=logs
++ export cache_location=.cache
+ logs_location=logs
++ cache_location=.cache
+ mkdir -p logs/console
++ export logs_location=logs
++ echo -e --platform=cisco
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ [[ false == true ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console ]]
+ local count=17
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ local target_platform=cisco
++ actions_logfile=./logs/console/run.console
+ [[ platform =~ ^(search|s)$ ]]
++ touch ./logs/console/run.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
+ read -r key value
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--access-sw1-west.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ (( i < count ))
+ [[ 6 -eq 0 ]]
+ echo
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console --verbose
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ oIFS=' 	
'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS==
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+++ base64
+ [[ logger =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ for xitem in "${@}"
+ [[ cfg == \c\f\g ]]
+++ tr -dc a-zA-Z0-9
+ IFS==
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ read -r key value
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --search=.cache/ips.list
+ result=0
+ exit 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnYvPYm0jq ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnYvPYm0jq
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--MTc0ODk0MjE4NzE5NDUwNzAwMAo--
++ divisor=--MTc0ODk0MjE4NzE5NDUwNzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ search =~ ^(export|r)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
++ mktemp -d
+ [[ search == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ [[ verbose =~ ^(export|r)$ ]]
interface GigabitEthernet0/0/0
+ [[ verbose =~ ^(extract|x)$ ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

+ [[ verbose =~ ^(logger|l)$ ]]
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

+ [[ verbose =~ ^(platform|p)$ ]]
interface GigabitEthernet0/0/2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(search|s)$ ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

+ [[ verbose == \h\e\l\p ]]
object network BlackWidow-Core
 host 172.16.1.6
+ [[ verbose == \d\e\b\u\g ]]
 description Branch router uplink NAT
+ [[ verbose == \d\r\y\-\r\u\n ]]

+ [[ verbose == \v\e\r\b\o\s\e ]]
object network Hydra-Link
+ local verbose=true
 host 198.51.100.75
+ alias parse-cisco=main
+ IFS=' 	
 description Branch NAT egress
'

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ -z '' ]]
 network-object host 198.51.100.75
+ [[ -z x ]]
+ debug=false
+ export logs_location=logs
+ [[ -z '' ]]

+ dry_run=false
+ logs_location=logs
+ [[ -z true ]]
object network Panther-Gateway
+ [[ -z '' ]]
+ mkdir -p logs/console
+ export console_output=false
 host 10.0.2.3
+ console_output=false
 description Secure outbound concentrator

+ [[ -z '' ]]
object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local export_objects=false
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ result=0
+ [[ false == true ]]
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n {
+ [[ -z .cache/ips.list ]]
  "vendor": "cisco",
  "model": "",
+ search_terms=()
  "version": "16.9",
+ declare -a search_terms
  "domain": "",
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
  "hostname": "branch-isr-02"
}
+ mapfile -t search_terms

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
++ sed -e '1s|^\(-\)\{1,\}||'

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ tr -d '\r'
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ grep -v '^\s*$'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75
++ grep -v '^#'

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iDVdOYjpuE
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iDVdOYjpuE
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract.shell
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
+ network_extract__console=logs/console/network-extract.console
++ alias exit-error=exit_error
+ touch logs/console/network-extract.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
++ alias log-warn=log_warn
+ local target_config=configs/cisco/perimeter-fw1.cfg
++ alias print-message=message
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ config =~ ^(extract|x)$ ]]
++ alias print-line=print
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias relative-configpath=relative_configpath
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ which awk
++ mkdir -p logs/console logs/jobs
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local first_search_entry=10.0.0.1
+ (( i++ ))
+ (( i < count ))
+ local last_search_entry=203.0.113.25
+ echo
+ (( i++ ))
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ local count=17
+ ((  count == 0  ))
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ 6 -eq 0 ]]
+ echo
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i++ ))
+ (( i < count ))
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ oIFS=' 	
'
+ newline
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ echo -e --search=.cache/ips.list
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
++ export targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console ]]
++ targets_location=targets
+ case "${target_file}" in
++ export targets_logfile=logs/jobs/targets.jobs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+++ date +%s%N
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ mktemp -d
++ export divisor=--MTc0ODk0MjE4NzIxNjc1MTAwMAo--
++ divisor=--MTc0ODk0MjE4NzIxNjc1MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ output_dir=.cache/resources/cisco
++ alias parse-listings--helper=parse_listings__helper
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gQevTGb41K ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gQevTGb41K
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ mkdir -p logs/console
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pOqK9QzC5a
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ logger =~ ^(search|s)$ ]]
  "model": "",
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pOqK9QzC5a
+ [[ logger == \h\e\l\p ]]
  "version": "12.2",
+ [[ logger == \d\e\b\u\g ]]
  "domain": "",
+ [[ logger == \d\r\y\-\r\u\n ]]
  "hostname": "campus-sw-access01"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
}
+ [[ logger == \v\e\r\b\o\s\e ]]

+ export 'nl=\n'
+ for xitem in "${@}"
+ nl='\n'
+ IFS==
version 12.2
++ sed -e '1s|^\(-\)\{1,\}||'
hostname campus-sw-access01

+ read -r key value
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ source ./scripts/devops-resources.shell
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ [[ -n '' ]]
+ result=0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ [[ 5 -lt 4 ]]
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
++ alias detect-vendor=detect_vendor
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

++ alias exit-error=exit_error
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ print '{
  "vendor": "cisco",
++ alias system-metrics=system_metrics
  "model": "",
++ echo -e --verbose
  "version": "12.2",
+ script_filename=network-extract.shell
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
+ script_filename=network-extract
hostname campus-sw-access01

interface Vlan1
+ export network_extract__console=logs/console/network-extract.console
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ network_extract__console=logs/console/network-extract.console

++ alias validate-address=validate_address
object-group network Floor-Networks
+ touch logs/console/network-extract.console
 description End-user and service devices
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ alias warning-message=warning
 network-object host 10.10.10.10'
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ [[ -n {
+ local SCRIPT_DIR=./scripts
++ cache_location=.cache
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
++ export logs_location=logs
  "hostname": "campus-sw-access01"
++ logs_location=logs
+ local script_filename=cisco-configs.awk
+ sed '1{/^[[:space:]]*$/d;}'
}
++ mkdir -p logs/console logs/jobs

+ local script_filepath=./scripts/extract/cisco-configs.awk
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 description Switch Mgmt

+ [[ extract =~ ^(config|c)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ extract =~ ^(extract|x)$ ]]
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
}

+ [[ extract =~ ^(logger|l)$ ]]
version 12.2
hostname campus-sw-access01

+ [[ extract =~ ^(platform|p)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ extract =~ ^(search|s)$ ]]

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ extract == \h\e\l\p ]]
 network-object host 10.10.10.10'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ echo -e --platform=fortinet
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console --verbose
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
'
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ export actions_logfile=./logs/console/run.console
+ dry_run=false
++ actions_logfile=./logs/console/run.console
+ [[ -z true ]]
+ [[ -z '' ]]
++ touch ./logs/console/run.console
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ newline 2
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ local count=2
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ tr -d '\r'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
++ grep -v '^\s*$'
+ [[ platform =~ ^(config|c)$ ]]
++ grep -v '^#'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
+++ date +%s%N
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local first_search_entry=10.0.0.1
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+++ tr -dc a-zA-Z0-9
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
++ printf '%*s' 12 ''
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console ]]
++ export divisor=--MTc0ODk0MjE4NzIzOTU3NTAwMAo--
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
++ divisor=--MTc0ODk0MjE4NzIzOTU3NTAwMAo--
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--campus-sw-access01.cfg.console
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --verbose
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ result=0
+ exit 0
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6vxNoPoS2N ]]
+ [[ cfg == \c\f\g ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6vxNoPoS2N
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ script_helper=false
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ [[ false == true ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
domain-name global.dmz.example.net
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell

+ [[ -z .cache/ips.list ]]
interface GigabitEthernet0/0
 nameif guest
+ script_filename=network-extract
 ip address 10.10.10.10 255.255.255.0
+ [[ extract =~ ^(console|o)$ ]]
 description Guest access interface
+ export network_extract__console=logs/console/network-extract.console

interface GigabitEthernet0/1
+ search_terms=()
+ [[ extract =~ ^(export|r)$ ]]
 nameif inside
+ network_extract__console=logs/console/network-extract.console
+ declare -a search_terms
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -f .cache/ips.list ]]
+ touch logs/console/network-extract.console
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ .cache/ips.list != *,* ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(platform|p)$ ]]
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ extract =~ ^(search|s)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface
+ [[ extract == \h\e\l\p ]]

object network Titan-WLAN-Host
+ [[ extract == \d\e\b\u\g ]]
 host 192.168.100.100
 description Backup inside NAT IP
+ [[ extract == \d\r\y\-\r\u\n ]]

object network Shield-WiFi-Alias
+ [[ extract == \v\e\r\b\o\s\e ]]
 host 10.10.10.10
+ for xitem in "${@}"
 description Guest NAT

+ IFS==
object network Sentinel-NAT
+ read -r key value
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zmwZc53INh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zmwZc53INh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ tr -d '\r'
++ alias list-file=list_file
++ echo -e --platform=fortinet
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ print '{
++ grep -v '^\s*$'
  "vendor": "cisco",
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ alias pause=pause
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
++ alias print-line=print
+ output_dir=.cache/resources/cisco
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ [[ ! -d .cache/resources/cisco ]]
++ grep -v '^#'
interface GigabitEthernet0/1
++ alias print-file=print_file
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface
++ alias relative-configpath=relative_configpath

object network Titan-WLAN-Host
 host 192.168.100.100
+ sed '1{/^[[:space:]]*$/d;}'
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
++ alias system-metrics=system_metrics
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ alias validate-address=validate_address
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ alias warning-message=warning
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

++ export LC_ALL=C
interface GigabitEthernet0/1
++ LC_ALL=C
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
++ export 'nl=\n'
 ip address 198.51.100.75 255.255.255.0
++ nl='\n'
 description Outbound Internet NAT interface

++ export cache_location=.cache
object network Titan-WLAN-Host
++ cache_location=.cache
 host 192.168.100.100
 description Backup inside NAT IP
++ export logs_location=logs

++ logs_location=logs
object network Shield-WiFi-Alias
+ [[ 6 -eq 0 ]]
++ mkdir -p logs/console logs/jobs
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console --verbose

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ oIFS=' 	
+ echo -en '{
'
++ command -v -- ./scripts/network-extract.shell
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "ASA",
+ IFS==
  "version": "9.12(4)",
+ read -r key value
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

+ local SCRIPT_PATH=./scripts/network-extract.shell
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ dirname -- ./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ echo -e --search=.cache/ips.list
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ IFS==
+ read -r key value
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline 2
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export actions_logfile=./logs/console/run.console
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
++ actions_logfile=./logs/console/run.console
+ [[ -z fortinet ]]
++ touch ./logs/console/run.console
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ which awk
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ newline
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+++ date +%s%N
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+++ base64
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ echo -e --verbose
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ declare -a execute
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--dmz-fw2-backup.cfg.console
++ export divisor=--MTc0ODk0MjE4NzI2NDQ3MjAwMAo--
++ divisor=--MTc0ODk0MjE4NzI2NDQ3MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ [[ verbose =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -z '' ]]
+ local export_objects=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console ]]
+ output_dir=.cache/resources/fortinet
+ [[ -z '' ]]
+ script_helper=false
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ alias parse-cisco=main
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HqLlcq8D1 ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HqLlcq8D1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VGxYtICr8i
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VGxYtICr8i
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_DIR=./scripts
++ alias list-file=list_file
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ alias log-error=log_error
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local first_search_entry=10.0.0.1
++ alias pause=pause
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ alias print-line=print
+ [[ true == true ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
++ alias system-metrics=system_metrics
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
++ alias warning-message=warning
+ (( i++ ))
+ (( i < count ))
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ nl='\n'
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
++ export cache_location=.cache
++ which awk
+ [[ -z fortinet ]]
++ cache_location=.cache
+ [[ true == true ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
++ IFS=,
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
+ sed '1{/^[[:space:]]*$/d;}'
 description WAN firewall entry point'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ declare -a execute
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ which awk
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ export targets_location=targets
+ local search_pattern=.cache/ips.list
++ targets_location=targets
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ search == \d\r\y\-\r\u\n ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+++ date +%s%N
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+++ base64
++ echo -e --config=configs/misc/fw1.cfg
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ debug=false
+ [[ false == true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ false == true ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
++ command -v -- ./scripts/network-extract.shell
+ export console_output=false
++ export divisor=--MTc0ODk0MjE4NzI5MDI3NzAwMAo--
+ console_output=false
++ divisor=--MTc0ODk0MjE4NzI5MDI3NzAwMAo--
+ [[ -z '' ]]
+ local export_objects=false
+ source ./scripts/devops-helpers.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console ]]
++ [[ -n '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ case "${target_file}" in
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z .cache/ips.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
++ __DEVOPS_HELPERS_SOURCED=1
+ search_terms=()
+ declare -a search_terms
++ [[ 5 -lt 4 ]]
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ dirname -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--perimeter-fw1.cfg.console
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ script_filename=network-extract.shell
+ local count=17
+ ((  count == 0  ))
+ script_filename=network-extract
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ export network_extract__console=logs/console/network-extract.console
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ network_extract__console=logs/console/network-extract.console
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ touch logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local 'prompt_message=Enter configuration file to be parsed: '
}
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]

+ [[ -z fortinet ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
++ echo -e --platform=cisco
+ newline
 edit "internal"
+ local count=1
  set ip 192.168.2.12 255.255.255.0
+ (( i = 0 ))
  set alias "User LAN"
+ (( i < count ))
 next
+ echo
end

config firewall address
+ (( i++ ))
 edit "Branch-Gateway"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
  set comment "Branch NAT"
 next
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
end

+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sSrJxEYATu
+ [[ -n {
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sSrJxEYATu
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "hostname": "fg-branch-vpn-01"
}

+ result=0
#hostname="fg-branch-vpn-01"
+ export 'nl=\n'
#model="FortiGate-60F"
+ exit 0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ nl='\n'

config system interface
 edit "wan1"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mWyzmejv4U ]]
  set ip 198.51.100.75 255.255.255.0
+ source ./scripts/devops-resources.shell
  set alias "Branch ISP"
 next
 edit "internal"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mWyzmejv4U
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

++ [[ -n '' ]]
config firewall address
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
++ [[ 5 -lt 4 ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
++ alias detect-vendor=detect_vendor
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
++ alias exit-error=exit_error
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ print '{
++ export 'nl=\n'
  "vendor": "fortinet",
++ nl='\n'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ export cache_location=.cache
  "domain": "",
++ cache_location=.cache
  "hostname": "fg-branch-vpn-01"
}
++ export logs_location=logs

++ logs_location=logs
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ mkdir -p logs/console logs/jobs
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
++ IFS=,
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ [[ 6 -eq 0 ]]
 next
 edit "Guardians-Relay"
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console --verbose
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ oIFS=' 	
'
+ declare -a execute
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ for xitem in "${@}"
}

#hostname="fg-branch-vpn-01"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ [[ platform =~ ^(console|o)$ ]]
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ [[ platform =~ ^(export|r)$ ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ [[ platform =~ ^(extract|x)$ ]]
end

config firewall address
+ [[ platform =~ ^(logger|l)$ ]]
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ [[ platform =~ ^(platform|p)$ ]]
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ local target_platform=cisco
 next
end
+ [[ platform =~ ^(search|s)$ ]]

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ platform == \h\e\l\p ]]
  set comment "Main node at Stark Tower"
 next
+ [[ platform == \d\e\b\u\g ]]
 edit "Spidey-Sandbox"
+ [[ platform == \d\r\y\-\r\u\n ]]
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
+ [[ platform == \v\e\r\b\o\s\e ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ for xitem in "${@}"
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ IFS==
+ read -r key value
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
++ which awk
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ newline
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ local search_pattern=.cache/ips.list
+ (( i++ ))
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ IFS==
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ logger =~ ^(export|r)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ [[ logger == \h\e\l\p ]]
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export targets_location=targets
+ local count=1
++ targets_location=targets
+ (( i = 0 ))
+ IFS==
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ echo -e --config=configs/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+++ date +%s%N
+++ base64
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ config == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ config == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODk0MjE4NzMxMzk4MjAwMAo--
++ divisor=--MTc0ODk0MjE4NzMxMzk4MjAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ echo -e --extract=.cache/resources/misc/fw3.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=fortinet-configs.awk
++ [[ 5 -lt 4 ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
++ alias network-configs--helper=network_configs__helper
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-extract--helper=network_extract__helper
++ which awk
+ alias serialize-object=serialize_objects
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ [[ true == true ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ alias parse-cisco=main
+ set -euo pipefail
  set alias "Wireless VLAN"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
 next
end
+ export LC_ALL=C

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console ]]
config firewall address
+ LC_ALL=C
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
 edit "Shield-WiFi"
+ [[ -z x ]]
  set subnet 10.10.10.10 255.255.255.255
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console ]]
+ export logs_location=logs
  set comment "Wireless AP Gateway"
+ logs_location=logs
 next
+ case "${target_file}" in
+ mkdir -p logs/console
 edit "Titan-WLAN-Host"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-branch-vpn-01.cfg.console
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ tr -d '\r'
++ mktemp -d
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ IFS==
  "version": "",
+ read -r key value
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ sed '1{/^[[:space:]]*$/d;}'
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
++ IFS=,
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 next
end'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E5fubd6Szp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E5fubd6Szp
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9QJwqpR64z
+ (( i++ ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9QJwqpR64z
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo
+ [[ -z cisco ]]
+ (( i++ ))
+ export 'nl=\n'
+ [[ true == true ]]
+ (( i < count ))
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
+ local count=1
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ echo
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ (( i++ ))
++ alias detect-vendor=detect_vendor
+ (( i < count ))
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
++ alias exit-error=exit_error
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto configs/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias list-file=list_file
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ local awk_bin=/usr/bin/awk
++ alias print-line=print
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias print-file=print_file
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias warning-message=warning
+ local target_platform=cisco
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(search|s)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console --verbose
++ export 'nl=\n'
+ [[ platform == \h\e\l\p ]]
++ nl='\n'
+ [[ platform == \d\e\b\u\g ]]
++ export cache_location=.cache
+ [[ platform == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
++ echo -e --search=.cache/ips.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ extract_location=.cache/resources/misc/fw1.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw1.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --verbose
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console ]]
+++ tr -dc a-zA-Z0-9
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-campus-core.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ output_dir=.cache/resources/misc
  "hostname": "fg-branch-vpn-01"
}

+ [[ ! -d .cache/resources/misc ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
+ [[ config =~ ^(config|c)$ ]]
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ echo -en '{
+ [[ verbose =~ ^(config|c)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ verbose =~ ^(export|r)$ ]]
}
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]

#hostname="fg-branch-vpn-01"
+ [[ verbose =~ ^(logger|l)$ ]]
#model="FortiGate-60F"
+ [[ config =~ ^(extract|x)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose =~ ^(platform|p)$ ]]

+ [[ config =~ ^(logger|l)$ ]]
config firewall policy
+ [[ verbose =~ ^(search|s)$ ]]
 edit 13
+ [[ config =~ ^(platform|p)$ ]]
  set name "Remote NAT"
+ [[ verbose == \h\e\l\p ]]
  set srcintf "dmz"
+ [[ config =~ ^(search|s)$ ]]
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
+ [[ config == \d\e\b\u\g ]]
 next
+ [[ verbose == \d\r\y\-\r\u\n ]]
end'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS=' 	
+ IFS==
'
+ read -r key value
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODk0MjE4NzMzNTY4MzAwMAo--
++ divisor=--MTc0ODk0MjE4NzMzNTY4MzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iDVdOYjpuE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iDVdOYjpuE
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ newline 2
+ alias parse-cisco=main
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ [[ -z x ]]
+ local script_filename=cisco-configs.awk
+ local count=2
+ export logs_location=logs
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ logs_location=logs
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ mkdir -p logs/console
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ (( i++ ))
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
++ echo -e --platform=cisco
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
++ IFS=,
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fg-testing-config.cfg.console
++ echo -e --search=.cache/ips.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ message '                configs/misc/fw1.cfg'
+ extract_location=.cache/resources/misc/fw3.cfg
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/misc/fw3.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ result=0
+ [[ search == \h\e\l\p ]]
+ exit 0
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pOqK9QzC5a ]]
+ for xitem in "${@}"
+ IFS==
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pOqK9QzC5a
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ config =~ ^(config|c)$ ]]
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ local target_config=configs/misc/switch3.conf

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

+ [[ config =~ ^(console|o)$ ]]
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

+ [[ config =~ ^(export|r)$ ]]
object network Krypton-Gateway
++ dirname -- ./scripts/network-extract.shell
 host 203.0.113.25
+ [[ config =~ ^(extract|x)$ ]]
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
+ [[ config =~ ^(logger|l)$ ]]
 description Secondary outbound route for edge ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ print '{
+ [[ verbose =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
+ [[ verbose =~ ^(extract|x)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ verbose =~ ^(logger|l)$ ]]
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ [[ verbose =~ ^(search|s)$ ]]

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ [[ verbose == \h\e\l\p ]]
 network-object host 192.168.1.10

+ [[ verbose == \d\e\b\u\g ]]
object network Kent-Server
 host 10.0.2.3
+ [[ verbose == \d\r\y\-\r\u\n ]]
 description Internal mail & identity services

+ [[ verbose == \v\e\r\b\o\s\e ]]
object network Krypton-Gateway
 host 203.0.113.25
+ local verbose=true
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
+ IFS=' 	
 description Secondary outbound route for edge'
'
+ [[ -z '' ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ [[ -n {
  "vendor": "cisco",
+ script_helper=false
  "model": "",
  "version": "",
+ [[ false == true ]]
  "domain": "",
  "hostname": ""
}

+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
object-group network Metropolis-Internal
+ [[ -z .cache/ips.list ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ search_terms=()
 network-object host 192.168.2.12
+ declare -a search_terms

+ [[ -f .cache/ips.list ]]
object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ [[ .cache/ips.list != *,* ]]
 network-object host 198.51.100.75
+ mapfile -t search_terms
 network-object host 203.0.113.25

++ echo -e --extract=.cache/resources/misc/switch3.conf
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ tr -d '\r'
++ grep -v '^\s*$'
++ which awk
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ IFS==
+ read -r key value
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ echo -e --platform=cisco
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
++ IFS=,
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ conf == \c\o\n\f ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ final_output=.cache/resources/misc/switch1.conf
+ for xitem in "${@}"
+ extract_location=.cache/resources/misc/switch1.conf
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ dirname .cache/resources/misc/switch1.conf
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ [[ true == true ]]
+ output_dir=.cache/resources/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ [[ ! -d .cache/resources/misc ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zmwZc53INh ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zmwZc53INh
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local SCRIPT_DIR=./scripts
+ result=0
+ [[ -n {
+ local script_filename=cisco-configs.awk
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "domain": "",
  "hostname": ""
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ verbose =~ ^(console|o)$ ]]
  "model": "",
  "version": "",
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
  "hostname": ""
}

+ [[ verbose =~ ^(extract|x)$ ]]
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ verbose =~ ^(logger|l)$ ]]
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
+ [[ verbose =~ ^(search|s)$ ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ [[ verbose == \h\e\l\p ]]
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ [[ verbose == \d\r\y\-\r\u\n ]]

object network Panther-Gateway
+ [[ verbose == \v\e\r\b\o\s\e ]]
 host 10.0.2.3
 description Secure outbound concentrator
+ local verbose=true

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff
+ IFS=' 	

'
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ -z '' ]]
 network-object host 10.10.10.10
+ debug=false
 network-object 192.168.100.0 255.255.255.0

+ [[ -z '' ]]
object network Shield-WiFi-Alias
+ dry_run=false
 host 10.10.10.10
 description Guest NAT'
+ [[ -z true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n {
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "version": "",
  "domain": "",
+ [[ -z .cache/ips.list ]]
  "hostname": ""
}

+ search_terms=()
object-group network Wakanda-Core
+ declare -a search_terms
 description National Core Routing Zone
 network-object host 192.168.1.10
+ [[ -f .cache/ips.list ]]
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ [[ .cache/ips.list != *,* ]]

+ mapfile -t search_terms
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
+ newline 2
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ [[ true == true ]]
+ declare -a execute
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--fw3.cfg.console
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VGxYtICr8i ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VGxYtICr8i
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ command -v -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sSrJxEYATu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sSrJxEYATu
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AimJmkQvho/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9QJwqpR64z ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9QJwqpR64z
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vi4kC272Jc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vi4kC272Jc
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O6LWrUzHaf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O6LWrUzHaf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias print-line=print
++ alias print-newline=newline
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eTCatpHlAv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eTCatpHlAv
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZcEULDOF05
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZcEULDOF05
+ set -euo pipefail
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export LC_ALL=C
+ nl='\n'
+ LC_ALL=C
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export LC_ALL=C
++ mktemp -d
++ export cache_location=.cache
++ LC_ALL=C
++ cache_location=.cache
++ export targets_location=targets
++ export targets_location=targets
++ export logs_location=logs
++ targets_location=targets
++ export 'nl=\n'
++ logs_location=logs
++ nl='\n'
++ targets_location=targets
++ export cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ cache_location=.cache
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ date +%s%N
+++ date +%s%N
+++ base64
+++ base64
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zNiQZmpU6y
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zNiQZmpU6y
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ tr -dc a-zA-Z0-9
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ tr -dc a-zA-Z0-9
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export divisor=--MTc0ODk0MjE4ODI3NTgzNzAwMAo--
++ divisor=--MTc0ODk0MjE4ODI3NTgzNzAwMAo--
+ source ./scripts/devops-helpers.shell
++ export divisor=--MTc0ODk0MjE4ODI3NTkwODAwMAo--
++ divisor=--MTc0ODk0MjE4ODI3NTkwODAwMAo--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ export targets_location=targets
++ alias network-extract--helper=network_extract__helper
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ export targets_location=targets
+ network_extract__console=logs/console/network-extract.console
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ mktemp -d
++ export divisor=--MTc0ODk0MjE4ODI4OTUwOTAwMAo--
++ divisor=--MTc0ODk0MjE4ODI4OTUwOTAwMAo--
+ set -euo pipefail
+ source ./scripts/devops-helpers.shell
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ export divisor=--MTc0ODk0MjE4ODI4OTMwMzAwMAo--
++ divisor=--MTc0ODk0MjE4ODI4OTMwMzAwMAo--
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yP23LXmHdR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yP23LXmHdR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ alias parse-cisco=main
++ alias print-file=print_file
+ alias parse-cisco=main
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias system-metrics=system_metrics
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.frmuatbfyv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.li3u2meb2a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ oIFS=' 	
+ read -r key value
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t2O1Nlhh6E
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t2O1Nlhh6E
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.THrNmwJsGC
++ export divisor=--MTc0ODk0MjE4ODI5OTI3MzAwMAo--
++ divisor=--MTc0ODk0MjE4ODI5OTI3MzAwMAo--
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.THrNmwJsGC
+ script_filename=network-extract.shell
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ network_extract__console=logs/console/network-extract.console
++ [[ -n '' ]]
+ export 'nl=\n'
+ touch logs/console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ set -euo pipefail
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ export LC_ALL=C
+ LC_ALL=C
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias detect-vendor=detect_vendor
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ set -euo pipefail
++ alias log-warn=log_warn
++ alias network-extract--helper=network_extract__helper
+ export LC_ALL=C
++ alias log-error=log_error
++ alias print-message=message
+ LC_ALL=C
++ alias print-newline=newline
++ alias log-info=log_info
++ alias pause=pause
++ alias log-warn=log_warn
++ alias print-line=print
+ alias serialize-object=serialize_objects
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ alias print-message=message
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ alias pause=pause
++ mktemp -d
++ alias validate-address=validate_address
++ alias print-line=print
+ alias parse-cisco=main
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias print-file=print_file
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias relative-configpath=relative_configpath
++ export logs_location=logs
+ [[ -z x ]]
++ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ 7 -eq 0 ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gqrqfgr0ko/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console --export --verbose
++ export targets_location=targets
++ targets_location=targets
+ set -euo pipefail
+ export LC_ALL=C
++ export targets_logfile=logs/jobs/targets.jobs
+ LC_ALL=C
+ oIFS=' 	
'
++ targets_logfile=logs/jobs/targets.jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RJ0VrxeotO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RJ0VrxeotO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.saPO8S7G7W
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.saPO8S7G7W
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5du58emiwk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5du58emiwk
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
+++ date +%s%N
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
++ alias list-file=list_file
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias print-message=message
++ alias relative-configpath=relative_configpath
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FdMHsj3W5y
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FdMHsj3W5y
++ alias system-metrics=system_metrics
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ base64
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ alias validate-address=validate_address
++ alias print-line=print
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias warning-message=warning
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias system-metrics=system_metrics
++ export 'nl=\n'
++ alias print-file=print_file
++ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ export logs_location=logs
++ logs_location=logs
++ alias exit-error=exit_error
++ mkdir -p logs/console logs/jobs
++ alias validate-address=validate_address
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias warning-message=warning
++ alias print-message=message
++ export LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias print-newline=newline
++ LC_ALL=C
++ export 'nl=\n'
++ alias pause=pause
++ alias print-line=print
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ nl='\n'
++ export cache_location=.cache
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ cache_location=.cache
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g8h96s3kk1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g8h96s3kk1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ export 'nl=\n'
+ source ./scripts/devops-resources.shell
++ nl='\n'
++ export cache_location=.cache
+ [[ 7 -eq 0 ]]
++ cache_location=.cache
++ [[ -n '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9z5dqt6k4p/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export logs_location=logs
++ [[ 5 -lt 4 ]]
++ logs_location=logs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console --export --verbose
++ alias detect-vendor=detect_vendor
++ mkdir -p logs/console logs/jobs
++ alias exit-error=exit_error
++ export targets_location=targets
++ targets_location=targets
+ oIFS=' 	
'
+ for xitem in "${@}"
++ export targets_logfile=logs/jobs/targets.jobs
+ IFS==
++ targets_logfile=logs/jobs/targets.jobs
++ alias list-file=list_file
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ alias log-error=log_error
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ search == \h\e\l\p ]]
++ export LC_ALL=C
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ LC_ALL=C
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
++ nl='\n'
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
++ export cache_location=.cache
+ [[ search == \h\e\l\p ]]
++ cache_location=.cache
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
++ export logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
++ export divisor=--MTc0ODk0MjE4ODMxODM4OTAwMAo--
++ logs_location=logs
+ for xitem in "${@}"
++ divisor=--MTc0ODk0MjE4ODMxODM4OTAwMAo--
++ mkdir -p logs/console logs/jobs
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ config == \h\e\l\p ]]
++ actions_logfile=./logs/console/run.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+++ date +%s%N
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=./logs/console/run.console
+ [[ config =~ ^(console|o)$ ]]
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ config =~ ^(export|r)$ ]]
++ mktemp -d
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=./logs/console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(search|s)$ ]]
++ touch ./logs/console/run.console
+ [[ config == \h\e\l\p ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(extract|x)$ ]]
++ targets_location=targets
+ [[ search =~ ^(logger|l)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BUh0hm9YGO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BUh0hm9YGO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ date +%s%N
+ script_filename=network-extract.shell
+ export 'nl=\n'
+ script_filename=network-extract
+ nl='\n'
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-resources.shell
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export divisor=--MTc0ODk0MjE4ODMyODUyNjAwMAo--
++ divisor=--MTc0ODk0MjE4ODMyODUyNjAwMAo--
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
++ targets_location=targets
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ __DEVOPS_HELPERS_SOURCED=1
++ targets_logfile=logs/jobs/targets.jobs
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias log-error=log_error
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias log-info=log_info
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ [[ config =~ ^(console|o)$ ]]
++ export targets_location=targets
+ IFS==
++ alias print-message=message
+++ date +%s%N
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(extract|x)$ ]]
++ targets_location=targets
+++ base64
+ [[ config =~ ^(logger|l)$ ]]
++ alias pause=pause
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ targets_logfile=logs/jobs/targets.jobs
++ alias print-line=print
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias warning-message=warning
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
+ [[ extract == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
++ export 'nl=\n'
+ read -r key value
++ nl='\n'
++ export targets_location=targets
++ export cache_location=.cache
++ targets_location=targets
++ cache_location=.cache
++ export logs_location=logs
++ export targets_logfile=logs/jobs/targets.jobs
++ logs_location=logs
++ targets_logfile=logs/jobs/targets.jobs
+++ base64
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
+ alias serialize-object=serialize_objects
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ alias parse-cisco=main
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.li3u2meb2a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
+ [[ -z x ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(extract|x)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
+++ base64
+++ base64
++ export divisor=--MTc0ODk0MjE4ODMzNzQyMDAwMAo--
++ divisor=--MTc0ODk0MjE4ODMzNzQyMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ [[ -n '' ]]
++ touch ./logs/console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODk0MjE4ODMzOTU4ODAwMAo--
+ [[ config =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
++ divisor=--MTc0ODk0MjE4ODMzOTU4ODAwMAo--
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --platform=fortinet
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ mkdir -p logs/console
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODk0MjE4ODM0MTI3ODAwMAo--
+ [[ extract =~ ^(search|s)$ ]]
++ divisor=--MTc0ODk0MjE4ODM0MTI3ODAwMAo--
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ [[ -n '' ]]
+ network_extract__console=logs/console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export divisor=--MTc0ODk0MjE4ODMzNjEyNTAwMAo--
+ touch logs/console/network-extract.console
++ divisor=--MTc0ODk0MjE4ODMzNjEyNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--MTc0ODk0MjE4ODM0MjYzNjAwMAo--
++ alias network-configs--helper=network_configs__helper
++ divisor=--MTc0ODk0MjE4ODM0MjYzNjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODk0MjE4ODM0MzgzOTAwMAo--
++ divisor=--MTc0ODk0MjE4ODM0MzgzOTAwMAo--
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-helpers.shell
++ export targets_location=targets
++ [[ -n '' ]]
++ targets_location=targets
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z x ]]
++ echo -e --platform=cisco
+ local target_platform=cisco
++ alias network-configs--helper=network_configs__helper
+ export logs_location=logs
+ logs_location=logs
+ [[ platform =~ ^(search|s)$ ]]
+ mkdir -p logs/console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
+ [[ search =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ search =~ ^(search|s)$ ]]
+ mkdir -p logs/console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ date +%s%N
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ 7 -eq 0 ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wsmwtiqcph/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ mkdir -p logs/console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ base64
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ export divisor=--MTc0ODk0MjE4ODM1NTk1MzAwMAo--
+ touch logs/console/network-extract.console
++ divisor=--MTc0ODk0MjE4ODM1NTk1MzAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ source ./scripts/devops-helpers.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.frmuatbfyv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console --export --verbose
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ script_filename=network-extract.shell
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ platform == \h\e\l\p ]]
+ network_extract__console=logs/console/network-extract.console
+ oIFS=' 	
'
+ [[ platform == \d\e\b\u\g ]]
+ touch logs/console/network-extract.console
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.8dhiyepm8r/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hnc3xrb0c9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v8udfgnv7h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ oIFS=' 	
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
'
+ alias parse-cisco=main
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ oIFS=' 	
+ set -euo pipefail
+ [[ search == \d\e\b\u\g ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ 7 -eq 0 ]]
+ mkdir -p logs/console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.p0dbcb5zfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ read -r key value
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LSf3uNnD3d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LSf3uNnD3d
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ for xitem in "${@}"
+ IFS==
+ export 'nl=\n'
+ oIFS=' 	
'
+ read -r key value
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cqbyb25rgw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console --export --verbose
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list
++ alias exit-error=exit_error
++ alias list-file=list_file
+ oIFS=' 	
'
++ alias log-error=log_error
+ for xitem in "${@}"
++ alias log-info=log_info
+ IFS==
+ read -r key value
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ mktemp -d
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ set -euo pipefail
+ export LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lkaiREMDS8
+ [[ search == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lkaiREMDS8
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
++ export actions_logfile=./logs/console/run.console
++ mktemp -d
++ actions_logfile=./logs/console/run.console
+ [[ search =~ ^(extract|x)$ ]]
++ touch ./logs/console/run.console
+ [[ search =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ set -euo pipefail
++ alias print-message=message
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ mktemp -d
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bxquu4yn8m/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qfBaZLWwJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qfBaZLWwJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/misc/switch1.conf
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LW9eVSKCkh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LW9eVSKCkh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uJCnEM81Uf
+ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ nl='\n'
++ alias print-newline=newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uJCnEM81Uf
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export 'nl=\n'
++ alias pause=pause
+ nl='\n'
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ alias print-line=print
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias relative-configpath=relative_configpath
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fw1hto06zq
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fw1hto06zq
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ alias exit-error=exit_error
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias system-metrics=system_metrics
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ [[ -n '' ]]
+ [[ config =~ ^(config|c)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_config=.cache/resources/misc/switch1.conf
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(config|c)$ ]]
++ alias log-error=log_error
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ alias exit-error=exit_error
++ export LC_ALL=C
++ alias list-file=list_file
++ LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-info=log_info
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ alias log-warn=log_warn
++ export 'nl=\n'
++ mktemp -d
++ alias print-message=message
++ alias print-newline=newline
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ nl='\n'
++ alias system-metrics=system_metrics
++ export cache_location=.cache
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ cache_location=.cache
++ export logs_location=logs
++ alias print-file=print_file
++ logs_location=logs
++ alias validate-address=validate_address
++ mkdir -p logs/console logs/jobs
++ alias relative-configpath=relative_configpath
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias system-metrics=system_metrics
+ [[ config =~ ^(platform|p)$ ]]
++ alias pause=pause
++ export targets_location=targets
++ targets_location=targets
+ [[ config =~ ^(search|s)$ ]]
++ alias print-line=print
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ IFS==
++ export cache_location=.cache
+ read -r key value
++ cache_location=.cache
++ alias print-file=print_file
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ extract =~ ^(config|c)$ ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(console|o)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(export|r)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5gedxK6m3h
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5gedxK6m3h
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
++ [[ -n '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODk0MjE4ODM5MTMyODAwMAo--
++ divisor=--MTc0ODk0MjE4ODM5MTMyODAwMAo--
++ alias exit-error=exit_error
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kklwvkDMai
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kklwvkDMai
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias log-error=log_error
++ [[ -n '' ]]
++ alias network-configs--helper=network_configs__helper
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ alias serialize-object=serialize_objects
+++ base64
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export actions_logfile=./logs/console/run.console
++ alias pause=pause
++ actions_logfile=./logs/console/run.console
++ alias print-line=print
++ touch ./logs/console/run.console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias log-warn=log_warn
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ alias parse-cisco=main
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ alias validate-address=validate_address
+ [[ -z x ]]
+ export logs_location=logs
++ alias warning-message=warning
+ logs_location=logs
++ export LC_ALL=C
+ mkdir -p logs/console
++ LC_ALL=C
++ alias print-message=message
++ export 'nl=\n'
++ alias print-newline=newline
++ nl='\n'
++ export cache_location=.cache
++ export actions_logfile=./logs/console/run.console
++ cache_location=.cache
++ actions_logfile=./logs/console/run.console
++ export logs_location=logs
++ logs_location=logs
++ touch ./logs/console/run.console
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
+ [[ search =~ ^(logger|l)$ ]]
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export divisor=--MTc0ODk0MjE4ODM5OTMxMDAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--MTc0ODk0MjE4ODM5OTMxMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ export targets_location=targets
++ alias parse-listings--helper=parse_listings__helper
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias network-configs--helper=network_configs__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export targets_location=targets
++ targets_location=targets
++ export actions_logfile=./logs/console/run.console
++ alias network-extract--helper=network_extract__helper
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ logger =~ ^(console|o)$ ]]
+ LC_ALL=C
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
++ mktemp -d
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ mktemp -d
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ mktemp -d
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+++ base64
+++ base64
+ [[ 7 -eq 0 ]]
+++ base64
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v8udfgnv7h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ extract =~ ^(platform|p)$ ]]
++ touch ./logs/console/run.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
++ export targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
++ targets_location=targets
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.amPVdkg5qO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.amPVdkg5qO
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6DyLEsVvKX
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bSCmEpnqlA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6DyLEsVvKX
+++ date +%s%N
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bSCmEpnqlA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ export 'nl=\n'
++ export targets_logfile=logs/jobs/targets.jobs
+ nl='\n'
++ targets_logfile=logs/jobs/targets.jobs
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ [[ extract == \d\e\b\u\g ]]
+ nl='\n'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias log-error=log_error
++ alias list-file=list_file
++ export divisor=--MTc0ODk0MjE4ODQxMzI4NDAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--MTc0ODk0MjE4ODQxMzI4NDAwMAo--
++ alias log-info=log_info
++ alias log-error=log_error
+ source ./scripts/devops-helpers.shell
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ alias print-newline=newline
++ alias print-message=message
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export divisor=--MTc0ODk0MjE4ODQxMzAxNDAwMAo--
++ alias print-newline=newline
+ [[ extract =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
+++ base64
+ [[ extract == \h\e\l\p ]]
++ divisor=--MTc0ODk0MjE4ODQxMzAxNDAwMAo--
++ alias pause=pause
++ alias log-error=log_error
+ [[ extract == \d\e\b\u\g ]]
++ alias pause=pause
+ for xitem in "${@}"
++ alias log-info=log_info
+ source ./scripts/devops-helpers.shell
+ IFS==
++ alias print-line=print
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-line=print
++ alias print-newline=newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODk0MjE4ODQxMzE0MDAwMAo--
++ divisor=--MTc0ODk0MjE4ODQxMzE0MDAwMAo--
++ alias validate-address=validate_address
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export 'nl=\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
+++ tr -dc a-zA-Z0-9
++ export cache_location=.cache
++ cache_location=.cache
++ alias system-metrics=system_metrics
++ [[ 5 -lt 4 ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias validate-address=validate_address
++ export logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ logs_location=logs
++ alias warning-message=warning
++ mkdir -p logs/console logs/jobs
++ export LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ LC_ALL=C
++ export 'nl=\n'
++ alias network-extract--helper=network_extract__helper
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ 7 -eq 0 ]]
++ mkdir -p logs/console logs/jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.p0dbcb5zfh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(search|s)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ extract == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ [[ -z x ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ [[ platform =~ ^(console|o)$ ]]
+ export logs_location=logs
++ export targets_location=targets
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
++ targets_location=targets
+ [[ search == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ mkdir -p logs/console
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ local target_platform=cisco
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform =~ ^(logger|l)$ ]]
+ mkdir -p logs/console
+ [[ platform =~ ^(platform|p)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_platform=cisco
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ export divisor=--MTc0ODk0MjE4ODQyMDMxODAwMAo--
++ divisor=--MTc0ODk0MjE4ODQyMDMxODAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --platform=fortinet
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch ./logs/console/run.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ alias serialize-object=serialize_objects
++ echo -e --platform=cisco
++ export actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ touch logs/console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ local target_config=.cache/resources/misc/fw1.cfg
++ export targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(export|r)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ touch logs/console/network-extract.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0ODk0MjE4ODQyODk2NzAwMAo--
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ divisor=--MTc0ODk0MjE4ODQyODk2NzAwMAo--
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ platform =~ ^(console|o)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
++ export divisor=--MTc0ODk0MjE4ODQzMjMzMzAwMAo--
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ divisor=--MTc0ODk0MjE4ODQzMjMzMzAwMAo--
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\r\y\-\r\u\n ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+++ date +%s%N
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+ [[ 7 -eq 0 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gqrqfgr0ko/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.d181t1wb3o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
+ oIFS=' 	
+ oIFS=' 	
'
'
+ for xitem in "${@}"
+ for xitem in "${@}"
+++ base64
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9z5dqt6k4p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ date +%s%N
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console --export --verbose
+++ tr -dc a-zA-Z0-9
+ oIFS=' 	
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MLhHu76H1F
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MLhHu76H1F
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ config == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ alias serialize-object=serialize_objects
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export divisor=--MTc0ODk0MjE4ODQ0MTA0MTAwMAo--
++ alias parse-listings--helper=parse_listings__helper
++ alias pause=pause
++ divisor=--MTc0ODk0MjE4ODQ0MTA0MTAwMAo--
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list
++ alias validate-address=validate_address
++ export divisor=--MTc0ODk0MjE4ODQ0MjAwMjAwMAo--
+ [[ extract =~ ^(config|c)$ ]]
++ divisor=--MTc0ODk0MjE4ODQ0MjAwMjAwMAo--
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
++ export 'nl=\n'
+ [[ extract =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
++ cache_location=.cache
+ [[ extract =~ ^(logger|l)$ ]]
++ export logs_location=logs
++ [[ -n '' ]]
++ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
+ alias serialize-object=serialize_objects
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ local target_platform=cisco
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ [[ platform =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -z x ]]
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ logger =~ ^(console|o)$ ]]
+ mkdir -p logs/console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODk0MjE4ODQ0NTAxNjAwMAo--
++ divisor=--MTc0ODk0MjE4ODQ0NTAxNjAwMAo--
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ alias parse-cisco=main
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ read -r key value
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ alias parse-cisco=main
+ mkdir -p logs/console
++ echo -e --export
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias network-configs--helper=network_configs__helper
+ mkdir -p logs/console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ [[ search =~ ^(export|r)$ ]]
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
+ [[ -z x ]]
++ touch ./logs/console/run.console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ echo -e --export
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t74Xp1YGyo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t74Xp1YGyo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ echo -e --export
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rayahqxsn9/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ oIFS=' 	
'
++ alias print-newline=newline
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
++ alias warning-message=warning
+ script_filename=network-extract.shell
++ export LC_ALL=C
+ script_filename=network-extract
+ script_filename=network-extract
++ LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ config =~ ^(config|c)$ ]]
++ export 'nl=\n'
+ script_filename=network-extract.shell
+ touch logs/console/network-extract.console
++ nl='\n'
+ local target_config=.cache/resources/misc/fw3.cfg
+ script_filename=network-extract
++ export cache_location=.cache
+ [[ config =~ ^(console|o)$ ]]
++ cache_location=.cache
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(export|r)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wsmwtiqcph/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local export_objects=true
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console --export --verbose
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ for xitem in "${@}"
+ export network_extract__console=logs/console/network-extract.console
+ IFS==
+ [[ export =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
'
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ read -r key value
+ local export_objects=true
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+++ base64
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ 7 -eq 0 ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cqbyb25rgw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console --export --verbose
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ IFS==
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value
+ oIFS=' 	
+ [[ export =~ ^(console|o)$ ]]
'
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local export_objects=true
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ 7 -eq 0 ]]
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4xxgouqksf/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ export divisor=--MTc0ODk0MjE4ODQ2ODgyODAwMAo--
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console --export --verbose
++ divisor=--MTc0ODk0MjE4ODQ2ODgyODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ oIFS=' 	
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
'
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ set -euo pipefail
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --verbose
+ [[ logger =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ export logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+++ date +%s%N
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ogCyOOviCK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ogCyOOviCK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(platform|p)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ platform =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELVxOydz54
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELVxOydz54
++ logs_location=logs
+ [[ platform =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ mkdir -p logs/console logs/jobs
+ local target_platform=cisco
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \h\e\l\p ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export divisor=--MTc0ODk0MjE4ODQ4NTc2NDAwMAo--
++ alias print-newline=newline
++ alias pause=pause
++ divisor=--MTc0ODk0MjE4ODQ4NTc2NDAwMAo--
++ alias print-line=print
+ source ./scripts/devops-helpers.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(extract|x)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ echo -e --export
+ logs_location=logs
+ [[ logger =~ ^(logger|l)$ ]]
+ mkdir -p logs/console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ export =~ ^(platform|p)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ export =~ ^(search|s)$ ]]
++ touch ./logs/console/run.console
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ touch logs/console/network-extract.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ [[ export =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
+ [[ export =~ ^(console|o)$ ]]
++ targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local export_objects=true
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ IFS==
++ mktemp -d
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.plt3plztya/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.psYxOgFiYg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.psYxOgFiYg
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ mktemp -d
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODk0MjE4ODUxMjk0MzAwMAo--
++ divisor=--MTc0ODk0MjE4ODUxMjk0MzAwMAo--
++ alias validate-address=validate_address
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ export cache_location=.cache
++ cache_location=.cache
+ [[ logger =~ ^(config|c)$ ]]
++ export logs_location=logs
++ [[ 5 -lt 4 ]]
++ logs_location=logs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ local verbose=true
++ alias network-extract--helper=network_extract__helper
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ echo -e --export
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODk0MjE4ODUzMDYxODAwMAo--
++ divisor=--MTc0ODk0MjE4ODUzMDYxODAwMAo--
+ set -euo pipefail
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ export LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ LC_ALL=C
++ __DEVOPS_HELPERS_SOURCED=1
+ script_helper=false
++ [[ 5 -lt 4 ]]
+ [[ false == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
++ echo -e --export
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ alias serialize-object=serialize_objects
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(export|r)$ ]]
+ logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ local export_objects=true
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ [[ export =~ ^(logger|l)$ ]]
++ mktemp -d
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --export
+ mkdir -p logs/console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.klA8s2G1wM
+ mkdir -p logs/console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.klA8s2G1wM
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ alias pause=pause
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias print-line=print
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(export|r)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ verbose == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ export =~ ^(logger|l)$ ]]
+ touch logs/console/network-extract.console
+ IFS=' 	
+ [[ export =~ ^(platform|p)$ ]]
'
+ [[ -z '' ]]
+ [[ export =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ dry_run=false
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]]
+ IFS==
+ read -r key value
+ search_terms=()
++ echo -e --verbose
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]]
++ grep -v '^\s*$'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9W3HsHg6u
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9W3HsHg6u
+ script_filename=network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract
+ [[ export =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ export network_extract__console=logs/console/network-extract.console
+ nl='\n'
+ network_extract__console=logs/console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ grep -v '^#'
++ alias detect-vendor=detect_vendor
+ local export_objects=true
+ [[ logger =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ export =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ alias log-error=log_error
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
++ alias print-message=message
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ export targets_location=targets
++ targets_location=targets
++ alias print-file=print_file
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias relative-configpath=relative_configpath
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
++ echo -e --verbose
++ grep -v '^\s*$'
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wsmwtiqcph/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console --export --verbose
+++ date +%s%N
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rayahqxsn9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+++ base64
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export targets_location=targets
+ [[ config == \h\e\l\p ]]
++ targets_location=targets
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config == \v\e\r\b\o\s\e ]]
++ targets_logfile=logs/jobs/targets.jobs
+ local first_search_entry=10.0.0.1
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ verbose == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
++ export actions_logfile=./logs/console/run.console
+ [[ verbose == \d\e\b\u\g ]]
+ dry_run=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
+ local first_search_entry=10.0.1.2
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local last_search_entry=10.0.1.2
++ touch ./logs/console/run.console
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ local verbose=true
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ] ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ local verbose=true
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ IFS=' 	
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ export console_output=false
+ IFS=' 	
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
'
+ local count=1
+ [[ -z '' ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ debug=false
+ ((  count == 0  ))
+ [[ -z '' ]]
+ local count=1
+ debug=false
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ local verbose=true
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console ]]
+ dry_run=false
+ ((  count == 0  ))
+ [[ -z '' ]]
+ set -euo pipefail
+ newline
+ [[ -z '' ]]
+ export LC_ALL=C
+ [[ -z true ]]
+ script_helper=false
+ LC_ALL=C
+ [[ -z '' ]]
+ IFS=' 	
+ export console_output=false
'
+ console_output=false
+ [[ -z '' ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ dry_run=false
+ debug=false
+ [[ -z true ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ [[ false == true ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ export divisor=--MTc0ODk0MjE4ODU3MjQ0MTAwMAo--
+ export console_output=false
+ console_output=false
+ newline
++ divisor=--MTc0ODk0MjE4ODU3MjQ0MTAwMAo--
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console ]]
+ search_terms=()
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ (( i = 0 ))
+ source ./scripts/devops-helpers.shell
+ dry_run=false
+ [[ -z '' ]]
+ (( i < count ))
+ echo
+ declare -a search_terms
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list != *,* ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z true ]]
+ script_helper=false
+ [[ -z '' ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
+ export console_output=false
+ [[ false == true ]]
++ [[ 5 -lt 4 ]]
+ mapfile -t search_terms
+ console_output=false
+ (( i++ ))
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ declare -a search_terms
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ date +%s%N
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
+ alias serialize-object=serialize_objects
++ echo -e --export
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]]
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list != *,* ]]
+ [[ -z x ]]
+ mapfile -t search_terms
+ export logs_location=logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
++ export targets_location=targets
+ IFS==
+ read -r key value
++ targets_location=targets
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(logger|l)$ ]]
+ echo
++ tr -d '\r'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ grep -v '^\s*$'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CqO3fCSqHG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CqO3fCSqHG
+ [[ extract =~ ^(export|r)$ ]]
++ grep -v '^#'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODk0MjE4ODU4MDk2MDAwMAo--
++ divisor=--MTc0ODk0MjE4ODU4MDk2MDAwMAo--
+ [[ extract =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/misc/switch3.conf
+ source ./scripts/devops-helpers.shell
++ grep -v '^\s*$'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ grep -v '^#'
++ [[ 5 -lt 4 ]]
+ [[ extract == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias network-extract--helper=network_extract__helper
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ grep -v '^#'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias print-newline=newline
+ alias serialize-object=serialize_objects
++ alias pause=pause
+ set -euo pipefail
++ alias print-line=print
+ set -euo pipefail
+ export LC_ALL=C
+++ base64
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ echo
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+++ tr -dc a-zA-Z0-9
++ export logs_location=logs
++ logs_location=logs
++ echo -e --platform=cisco
++ mkdir -p logs/console logs/jobs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
++ mktemp -d
++ mktemp -d
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ] ]]
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hnc3xrb0c9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console --export --verbose
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ oIFS=' 	
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
'
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ for xitem in "${@}"
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
++ grep -v '^\s*$'
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local first_search_entry=10.0.2.3
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ config == \d\e\b\u\g ]]
+ local last_search_entry=10.0.2.3
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ newline
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ (( i < count ))
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
++ export divisor=--MTc0ODk0MjE4ODU5MDg5NTAwMAo--
++ divisor=--MTc0ODk0MjE4ODU5MDg5NTAwMAo--
+ source ./scripts/devops-helpers.shell
+ IFS==
+ read -r key value
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ echo
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ echo
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f2mpsRHXyX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f2mpsRHXyX
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rAMYC9GAkl
+ [[ platform =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rAMYC9GAkl
+ export 'nl=\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list
+ nl='\n'
++ export actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
++ actions_logfile=./logs/console/run.console
+ export 'nl=\n'
++ touch ./logs/console/run.console
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
++ [[ -n '' ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ local target_platform=cisco
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z cisco ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ] ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \d\e\b\u\g ]]
++ alias exit-error=exit_error
+ newline
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
++ alias exit-error=exit_error
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ IFS==
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
+ set -euo pipefail
+ export LC_ALL=C
++ alias pause=pause
+ local count=1
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
+ (( i = 0 ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ echo
++ alias relative-configpath=relative_configpath
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ echo
+ alias parse-cisco=main
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias validate-address=validate_address
+ [[ -z cisco ]]
++ alias validate-address=validate_address
+ [[ true == true ]]
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
+ [[ -z x ]]
++ LC_ALL=C
+ newline
++ LC_ALL=C
+ export logs_location=logs
+ logs_location=logs
+ local count=1
++ export 'nl=\n'
++ export 'nl=\n'
+ mkdir -p logs/console
+ (( i = 0 ))
++ nl='\n'
++ nl='\n'
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.plt3plztya/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ oIFS=' 	
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ dry_run=false
+ script_filename=network-extract
+ [[ search =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
'
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
++ echo -e --verbose
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dUcUsUSIX
+ [[ extract == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dUcUsUSIX
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ console_output=false
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ alias log-error=log_error
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias print-message=message
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --verbose
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias system-metrics=system_metrics
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
+ [[ export == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
+ [[ -z true ]]
+ [[ search == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console ]]
++ alias warning-message=warning
+ [[ -z '' ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
++ export LC_ALL=C
+ script_helper=false
++ LC_ALL=C
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
++ export 'nl=\n'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ nl='\n'
+ [[ export =~ ^(console|o)$ ]]
++ export cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(export|r)$ ]]
++ mkdir -p logs/console logs/jobs
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ IFS=' 	
'
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ 7 -eq 0 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6IAFhv2xiK
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nfq3aorpqn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ debug=false
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6IAFhv2xiK
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ export 'nl=\n'
+ nl='\n'
+ IFS=' 	
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ source ./scripts/devops-resources.shell
'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ oIFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]
'
+ search_terms=()
+ for xitem in "${@}"
+ declare -a search_terms
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list != *,* ]]
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
++ alias log-error=log_error
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
++ alias pause=pause
+ dry_run=false
+ read -r key value
++ alias print-line=print
++ echo -e --platform=cisco
+ [[ -z true ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ export console_output=false
++ alias print-file=print_file
+ dry_run=false
++ alias relative-configpath=relative_configpath
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]]
+ export console_output=false
+ search_terms=()
+ [[ verbose =~ ^(export|r)$ ]]
+ declare -a search_terms
+ console_output=false
++ export actions_logfile=./logs/console/run.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]]
+ [[ extract =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list != *,* ]]
++ touch ./logs/console/run.console
+ mapfile -t search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ touch ./logs/console/run.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ search_terms=()
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ declare -a search_terms
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]]
+ for xitem in "${@}"
+ local target_platform=cisco
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ read -r key value
+ [[ -z '' ]]
+ local verbose=true
+ [[ verbose =~ ^(logger|l)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
+ local target_platform=cisco
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ echo -e --verbose
+ [[ verbose =~ ^(search|s)$ ]]
++ tr -d '\r'
+ dry_run=false
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ echo -e --verbose
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ tr -d '\r'
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
++ grep -v '^\s*$'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ local verbose=true
+ [[ -z '' ]]
+ IFS=' 	
+ export console_output=false
'
+ console_output=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ -z true ]]
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ grep -v '^#'
+ for xitem in "${@}"
+ IFS==
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+++ date +%s%N
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ debug=false
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ export console_output=false
+ script_helper=false
+ [[ false == true ]]
++ export targets_location=targets
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ targets_location=targets
+++ base64
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]]
+ search_terms=()
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ console_output=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local export_objects=true
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ targets_location=targets
+ declare -a search_terms
+ [[ export =~ ^(platform|p)$ ]]
++ grep -v '^#'
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(extract|x)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+++ tr -dc a-zA-Z0-9
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ config =~ ^(config|c)$ ]]
+ console_output=false
+ [[ extract =~ ^(config|c)$ ]]
++ export targets_location=targets
+ [[ -z true ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ script_helper=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list != *,* ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ local first_search_entry=192.168.0.100
+ local count=1
+ ((  count == 0  ))
+ local last_search_entry=192.168.0.100
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ] ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
+ for xitem in "${@}"
++ targets_location=targets
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ [[ false == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ script_helper=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local verbose=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ [[ false == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ]]
+ IFS=' 	
'
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ declare -a search_terms
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ logger == \h\e\l\p ]]
+ IFS=' 	
+ [[ logger == \d\e\b\u\g ]]
'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ echo -e --platform=cisco
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
++ export divisor=--MTc0ODk0MjE4ODY0MjUyODAwMAo--
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console ]]
+++ base64
+ [[ -z '' ]]
++ divisor=--MTc0ODk0MjE4ODY0MjUyODAwMAo--
+ script_helper=false
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local first_search_entry=10.0.1.2
+ IFS=' 	
+ ((  count == 0  ))
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+ search_terms=()
+ [[ extract =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ (( i++ ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local last_search_entry=10.0.1.2
+ set -euo pipefail
+ debug=false
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ export LC_ALL=C
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ search_terms=()
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ IFS==
+ read -r key value
'
+ [[ -z '' ]]
+ debug=false
+++ base64
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ declare -a search_terms
++ alias network-extract--helper=network_extract__helper
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ]]
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z true ]]
+ LC_ALL=C
+ [[ -z cisco ]]
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-configs--ips.list ]'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ local count=1
+ export console_output=false
+ ((  count == 0  ))
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+++ tr -dc a-zA-Z0-9
+ console_output=false
+ [[ config =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ extract == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ tr -d '\r'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list != *,* ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ script_helper=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
++ echo -e --verbose
+ mkdir -p logs/console
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ newline
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
++ grep -v '^\s*$'
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ mapfile -t search_terms
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODk0MjE4ODY0ODMwNTAwMAo--
+ [[ logger =~ ^(search|s)$ ]]
+++ date +%s%N
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
++ divisor=--MTc0ODk0MjE4ODY0ODMwNTAwMAo--
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ grep -v '^#'
++ [[ -n '' ]]
+ echo
++ mktemp -d
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]]
+ [[ config =~ ^(export|r)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list != *,* ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo -e --export
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+++ base64
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias network-extract--helper=network_extract__helper
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]]
+ alias serialize-object=serialize_objects
++ tr -d '\r'
+++ tr -dc a-zA-Z0-9
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ tr -d '\r'
+ echo
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ -z x ]]
++ echo -e --export
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ grep -v '^\s*$'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local 'prompt_message=Enter configuration file to be parsed: '
++ grep -v '^#'
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
++ grep -v '^#'
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ export divisor=--MTc0ODk0MjE4ODY1MDMyNjAwMAo--
+ [[ verbose =~ ^(config|c)$ ]]
+ local first_search_entry=192.0.2.50
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ verbose == \d\e\b\u\g ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ export =~ ^(console|o)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ export =~ ^(export|r)$ ]]
+ debug=false
+ [[ -z '' ]]
+ local export_objects=true
+ dry_run=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgVz76rH6x
++ export divisor=--MTc0ODk0MjE4ODY1NjI3OTAwMAo--
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgVz76rH6x
+ set -euo pipefail
+ export console_output=false
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
++ echo -e --platform=fortinet
++ divisor=--MTc0ODk0MjE4ODY1MDMyNjAwMAo--
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ] ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ [[ export =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
++ [[ -n '' ]]
+ local count=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ((  count == 0  ))
++ __DEVOPS_HELPERS_SOURCED=1
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local first_search_entry=172.31.255.254
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
++ [[ 5 -lt 4 ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local last_search_entry=192.0.2.50
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
++ mktemp -d
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ console_output=false
++ divisor=--MTc0ODk0MjE4ODY1NjI3OTAwMAo--
+ [[ 7 -eq 0 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z true ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.li3u2meb2a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ nl='\n'
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ source ./scripts/devops-resources.shell
+ [[ cfg == \c\f\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console --export --verbose
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ oIFS=' 	
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=172.31.255.254
+ ((  count == 0  ))
'
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ IFS==
+ read -r key value
++ echo -e --export
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ] ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/devops-helpers.shell
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]]
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
++ tr -d '\r'
++ echo -e --export
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
+ [[ export =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.d181t1wb3o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console --export --verbose
++ grep -v '^#'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Fmr59VuMX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Fmr59VuMX
+ [[ platform =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ [[ platform =~ ^(console|o)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ newline
++ alias validate-address=validate_address
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
++ alias warning-message=warning
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
+ local first_search_entry=172.18.1.20
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ local last_search_entry=172.18.1.20
++ export logs_location=logs
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
++ logs_location=logs
+ [[ -z x ]]
+ [[ true == true ]]
+ export logs_location=logs
++ mkdir -p logs/console logs/jobs
+ logs_location=logs
+ mkdir -p logs/console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]
+ IFS==
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
+ local first_search_entry=192.168.1.11
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias exit-error=exit_error
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ echo
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ IFS==
+ read -r key value
+ local first_search_entry=192.168.1.10
+ (( i < count ))
+ newline
++ alias list-file=list_file
+ local last_search_entry=192.168.1.10
+ local count=1
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i = 0 ))
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ local export_objects=true
+ IFS==
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ] ]]
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ local last_search_entry=192.168.1.11
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=cisco
++ alias log-error=log_error
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
++ alias log-info=log_info
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
++ alias log-warn=log_warn
+ [[ true == true ]]
+ echo
+ alias serialize-object=serialize_objects
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ (( i < count ))
++ alias print-newline=newline
+ local count=1
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ((  count == 0  ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z x ]]
++ alias pause=pause
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias print-line=print
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias print-file=print_file
++ tr -d '\r'
+ local count=1
+ ((  count == 0  ))
++ alias relative-configpath=relative_configpath
++ echo -e --verbose
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
++ alias system-metrics=system_metrics
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+ [[ export == \h\e\l\p ]]
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
+ IFS==
++ export actions_logfile=./logs/console/run.console
+ local count=1
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias warning-message=warning
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ export LC_ALL=C
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
++ actions_logfile=./logs/console/run.console
++ LC_ALL=C
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch3.conf
++ grep -v '^\s*$'
+ newline
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ (( i < count ))
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --platform=cisco
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ conf == \c\o\n\f ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export 'nl=\n'
+ IFS==
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ search =~ ^(platform|p)$ ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
++ mkdir -p logs/console logs/jobs
+ IFS==
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ IFS==
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ extract_location=reports/10.0.1.2/misc/switch1.conf
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i < count ))
+ script_filename=network-extract.shell
+ newline
+ echo
+ script_filename=network-extract
+ local count=1
+ (( i++ ))
+ output_dir=reports/172.16.1.6/cisco
+ export network_extract__console=logs/console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ export targets_location=targets
+ echo
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS=' 	
+ network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(platform|p)$ ]]
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ touch logs/console/network-extract.console
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ (( i++ ))
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ [[ -z true ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local first_search_entry=192.0.2.50
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local last_search_entry=192.0.2.50
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z cisco ]]
+ script_helper=false
+ [[ verbose == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ [[ false == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export network_extract__console=logs/console/network-extract.console
++ echo -e --export
++ dirname reports/10.0.1.2/misc/switch1.conf
+ network_extract__console=logs/console/network-extract.console
+++ date +%s%N
+ touch logs/console/network-extract.console
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ extract =~ ^(export|r)$ ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ echo -e --export
+ IFS=' 	
+++ tr -dc a-zA-Z0-9
'
+ [[ logger =~ ^(platform|p)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z cisco ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --verbose
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ dirname reports/172.31.255.254/misc/switch1.conf
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ debug=false
++ mktemp -d
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ echo
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ dry_run=false
+ echo
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ 7 -eq 0 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ export actions_logfile=./logs/console/run.console
++ export divisor=--MTc0ODk0MjE4ODY5NzU5NzAwMAo--
++ actions_logfile=./logs/console/run.console
++ divisor=--MTc0ODk0MjE4ODY5NzU5NzAwMAo--
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ source ./scripts/devops-helpers.shell
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ touch ./logs/console/run.console
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ search_terms=()
+ [[ verbose =~ ^(search|s)$ ]]
+ declare -a search_terms
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias network-configs--helper=network_configs__helper
+ IFS=' 	
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
'
+ [[ -z '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ 7 -eq 0 ]]
+ [[ -z true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4xxgouqksf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ tr -d '\r'
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list != *,* ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ mapfile -t search_terms
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ export =~ ^(console|o)$ ]]
+ export console_output=false
+ console_output=false
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ -z '' ]]
+ script_helper=false
+ local export_objects=true
++ echo -e --export
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ oIFS=' 	
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --verbose
+ mkdir -p logs/console
++ echo -e --export
++ dirname -- ./scripts/network-extract.shell
+ output_dir=reports/172.31.255.254/misc
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ false == true ]]
+ [[ ! -d reports/172.31.255.254/misc ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]
+ search_terms=()
+ declare -a search_terms
++ echo -e --platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list != *,* ]]
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ mapfile -t search_terms
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ read -r key value
++ tr -d '\r'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfMNXuTvo2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfMNXuTvo2
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS=' 	
'
+ export 'nl=\n'
+ [[ -z '' ]]
+ nl='\n'
+ debug=false
++ export targets_location=targets
+ [[ -z '' ]]
+ source ./scripts/devops-resources.shell
++ targets_location=targets
+ dry_run=false
+ output_dir=reports/192.0.2.50/cisco
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console ]]
+ local SCRIPT_DIR=./scripts
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z '' ]]
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ local script_filename=cisco-configs.awk
+ script_helper=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]]
+ local verbose=true
+ [[ export =~ ^(config|c)$ ]]
+ search_terms=()
+ local first_search_entry=172.16.0.5
+ declare -a search_terms
+ local last_search_entry=172.16.0.5
+ [[ export =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(config|c)$ ]]
++ grep -v '^#'
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ local target_platform=cisco
++ [[ -n '' ]]
+ [[ platform =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \h\e\l\p ]]
+ output_dir=reports/192.168.1.10/fortinet
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ local export_objects=true
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ export console_output=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console ]]
+ read -r key value
+ local target_platform=cisco
+ [[ -z '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ search_terms=()
+ declare -a search_terms
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
+ echo
++ alias exit-error=exit_error
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ -z cisco ]]
+ local export_objects=true
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias list-file=list_file
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ cfg == \c\f\g ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
++ alias pause=pause
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ tr -d '\r'
+ newline
++ alias system-metrics=system_metrics
++ which awk
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v8udfgnv7h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console --export --verbose
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+++ date +%s%N
+ oIFS=' 	
'
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ alias validate-address=validate_address
++ grep -v '^\s*$'
++ alias warning-message=warning
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
+++ base64
++ grep -v '^#'
++ echo -e --verbose
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ export cache_location=.cache
+ [[ platform =~ ^(console|o)$ ]]
++ cache_location=.cache
+ [[ export == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
+ [[ platform =~ ^(export|r)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local first_search_entry=203.0.113.25
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local last_search_entry=203.0.113.25
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ search =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ ((  count == 0  ))
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
++ export targets_location=targets
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
++ targets_location=targets
+ [[ true == true ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
++ tr -d '\r'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ cfg == \c\f\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ newline
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bxquu4yn8m/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z cisco ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
++ grep -v '^\s*$'
++ echo -e --export
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console --export --verbose
+ echo
+ export LC_ALL=C
+ LC_ALL=C
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ oIFS=' 	
'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^#'
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ mktemp -d
+++ date +%s%N
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ output_dir=reports/10.0.0.1/cisco
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --platform=fortinet
+ touch logs/console/network-extract.console
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qrD5sqvRbZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qrD5sqvRbZ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export divisor=--MTc0ODk0MjE4ODczNTUwMjAwMAo--
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
++ alias exit-error=exit_error
++ divisor=--MTc0ODk0MjE4ODczNTUwMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias list-file=list_file
++ __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ output_dir=reports/10.0.0.1/fortinet
++ alias print-message=message
+ [[ ! -d reports/10.0.0.1/fortinet ]]
++ alias print-newline=newline
+ [[ search =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zfGGrMqLMN
++ alias parse-listings--helper=parse_listings__helper
++ alias pause=pause
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zfGGrMqLMN
+ [[ search =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ search =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
++ alias print-file=print_file
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.li3u2meb2a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local script_filename=fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ platform =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console --export --verbose
+ nl='\n'
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ oIFS=' 	
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list
'
++ [[ -n '' ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-extract--helper=network_extract__helper
+ [[ search == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ local SCRIPT_DIR=./scripts
+ [[ search == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
+ [[ platform =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
+ local target_platform=fortinet
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
++ alias validate-address=validate_address
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
++ alias exit-error=exit_error
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ for xitem in "${@}"
++ export cache_location=.cache
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ cache_location=.cache
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ cfg == \c\f\g ]]
++ export logs_location=logs
++ logs_location=logs
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias log-error=log_error
++ mkdir -p logs/console logs/jobs
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ dirname -- ./scripts/network-extract.shell
++ alias print-newline=newline
++ command -v -- ./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
++ alias pause=pause
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias print-line=print
+ [[ search == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ alias parse-cisco=main
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ touch ./logs/console/run.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ export logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ logs_location=logs
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
+ local SCRIPT_DIR=./scripts
++ export LC_ALL=C
++ LC_ALL=C
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
++ export 'nl=\n'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS==
++ nl='\n'
++ export cache_location=.cache
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.1.2
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ output_dir=reports/172.16.0.5/cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
++ dirname -- ./scripts/network-extract.shell
+ output_dir=reports/10.10.10.10/cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ declare -a execute
+ read -r key value
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ logger =~ ^(search|s)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ command -v -- ./scripts/network-extract.shell
++ touch ./logs/console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ which awk
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ script_helper=false
++ IFS=,
+ [[ false == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo 10.0.0.1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
++ which awk
+ [[ logger =~ ^(extract|x)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list != *,* ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ export targets_location=targets
+ [[ logger == \h\e\l\p ]]
++ targets_location=targets
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ export console_output=false
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ console_output=false
++ targets_logfile=logs/jobs/targets.jobs
+ IFS==
++ dirname -- ./scripts/network-extract.shell
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ 7 -eq 0 ]]
++ echo -e --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gqrqfgr0ko/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --export
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/switch1.conf
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
++ IFS=,
+ local awk_bin=/usr/bin/awk
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.1.2
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ config =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]
+ search_terms=()
+ mapfile -t search_terms
+ declare -a search_terms
++ IFS=,
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo 10.0.0.1
++ which awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ IFS=,
++ echo 172.16.0.5
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ which awk
+++ date +%s%N
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ which awk
+ declare -a execute
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ printf '%*s' 12 ''
+ declare -a execute
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --export
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i = 0 ))
++ echo -e --export
+++ base64
++ export divisor=--MTc0ODk0MjE4ODc2NjQ4MTAwMAo--
++ divisor=--MTc0ODk0MjE4ODc2NjQ4MTAwMAo--
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ echo
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ extract =~ ^(search|s)$ ]]
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ alias parse-listings--helper=parse_listings__helper
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract == \h\e\l\p ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ export =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ export divisor=--MTc0ODk0MjE4ODc3MTk0NjAwMAo--
++ divisor=--MTc0ODk0MjE4ODc3MTk0NjAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ [[ config =~ ^(config|c)$ ]]
++ IFS=,
++ echo 10.0.2.3
++ IFS=,
++ echo -e --platform=fortinet
++ echo 10.10.10.10
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ set -euo pipefail
+ declare -a execute
+ export LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
+ LC_ALL=C
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ local 'indent=            '
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
++ IFS=,
++ which awk
++ mktemp -d
++ echo 192.168.1.10
++ echo -e --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
+ logs_location=logs
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ echo
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
+ [[ platform =~ ^(console|o)$ ]]
  "vendor": "cisco",
  "model": "ASA",
+ mkdir -p logs/console
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "9.14(3)",
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ local target_config=.cache/resources/misc/fw3.cfg
  "domain": "edge.dc.example.com",
+ [[ verbose =~ ^(console|o)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ extract =~ ^(platform|p)$ ]]
++ which awk
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
  "hostname": "perimeter-fw1"
+ local export_objects=true
}

+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config =~ ^(console|o)$ ]]
ASA Version 9.14(3)
+ [[ platform =~ ^(logger|l)$ ]]
hostname perimeter-fw1
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ export =~ ^(export|r)$ ]]
domain-name edge.dc.example.com
+ [[ config =~ ^(export|r)$ ]]

+ [[ extract =~ ^(search|s)$ ]]
interface GigabitEthernet0/1
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
 nameif inside
+ [[ config =~ ^(extract|x)$ ]]
 security-level 100
+ local target_platform=fortinet
 ip address 10.0.0.1 255.255.255.0
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config =~ ^(logger|l)$ ]]
+ local 'indent=            '
+ [[ platform =~ ^(search|s)$ ]]
 description Internal Network Interface
+ [[ config =~ ^(platform|p)$ ]]

object network Stark-Tower
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
 host 10.0.0.1
+ local awk_bin=/usr/bin/awk
+ [[ platform == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ config == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ platform == \d\e\b\u\g ]]
 description Core services gateway'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ local count=1
+ result=0
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n {
+ for xitem in "${@}"
++ IFS=,
  "vendor": "cisco",
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ read -r key value
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
  "model": "ASA",
+ (( i = 0 ))
  "version": "9.14(3)",
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
  "domain": "edge.dc.example.com",
+ [[ verbose == \h\e\l\p ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
  "hostname": "perimeter-fw1"
}
++ echo 172.31.255.254
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]

+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ for xitem in "${@}"
domain-name edge.dc.example.com
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]

+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
interface GigabitEthernet0/1
+ (( i < count ))
+ IFS==
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 nameif inside
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
 security-level 100
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
 ip address 10.0.0.1 255.255.255.0
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 description Internal Network Interface
+ [[ verbose == \d\r\y\-\r\u\n ]]

+ [[ verbose == \v\e\r\b\o\s\e ]]
object network Stark-Tower
+ local verbose=true
 host 10.0.0.1
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
 description Core services gateway ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ IFS=' 	
'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ debug=false
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -z '' ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ config =~ ^(console|o)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ export console_output=false
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ console_output=false
+ declare -a execute
+ [[ -z true ]]
+ newline
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ script_helper=false
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ [[ false == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ search_terms=()
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ local export_objects=true
+ (( i = 0 ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4jrCW9tSBY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4jrCW9tSBY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ echo
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.plt3plztya/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
+ (( i++ ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ date +%s%N
+ (( i < count ))
++ printf '%*s' 12 ''
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'indent=            '
++ alias log-info=log_info
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ alias log-warn=log_warn
+ print '{
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ verbose =~ ^(platform|p)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ alias print-message=message

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ alias print-newline=newline
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ alias pause=pause
++ alias print-line=print
+ [[ -n {
  "vendor": "cisco",
++ alias print-file=print_file
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ alias relative-configpath=relative_configpath

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
++ tr -d '\r'
++ alias system-metrics=system_metrics
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+++ base64

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
++ tr -d '\r'
 host 10.0.0.1
++ alias validate-address=validate_address
 description Core services gateway'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ verbose =~ ^(search|s)$ ]]
}

++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 203.0.113.25
++ grep -v '^#'
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
++ grep -v '^#'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ result=0
++ grep -v '^\s*$'
+ IFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ newline 2

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ local count=2
+ [[ extract =~ ^(config|c)$ ]]
object network Magneto-Core
+ [[ -z '' ]]
 host 172.16.0.5
+ debug=false
 description WAN firewall entry point ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
++ export actions_logfile=./logs/console/run.console
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
++ touch ./logs/console/run.console
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ echo
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local awk_bin=/usr/bin/awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ script_filename=network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ dry_run=false
+ script_filename=network-extract
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i = 0 ))
+ [[ -z true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z '' ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export console_output=false
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ console_output=false
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
  "domain": "",
+ [[ platform =~ ^(search|s)$ ]]
  "hostname": "fg-branch-vpn-01"
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
}
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ -z '' ]]

+ [[ logger == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
#hostname="fg-branch-vpn-01"
+ (( i++ ))
#model="FortiGate-60F"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]

+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
config firewall address
+ for xitem in "${@}"
+ script_helper=false
++ IFS=,
+ [[ platform == \v\e\r\b\o\s\e ]]
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
+ print '{
  "vendor": "cisco",
 next
+ [[ search =~ ^(config|c)$ ]]
++ echo 192.0.2.50
  "model": "ASA",
end'
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
  "version": "9.14(3)",
+ IFS==
+ local first_search_entry=192.168.2.12
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ result=0
+ [[ verbose =~ ^(extract|x)$ ]]
  "domain": "edge.dc.example.com",
+ [[ export =~ ^(platform|p)$ ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
hostname perimeter-fw1
+ [[ export == \h\e\l\p ]]
domain-name edge.dc.example.com
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ search_terms=()
+ [[ search =~ ^(extract|x)$ ]]
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
+ [[ search =~ ^(logger|l)$ ]]
 description WAN firewall entry point'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list
  "model": "FortiGate-60F",
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -n {
+ [[ search == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ search == \v\e\r\b\o\s\e ]]
  "version": "9.14(3)",
+ for xitem in "${@}"
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ IFS==
}
+ read -r key value

ASA Version 9.14(3)
  "version": "v7.2.5.F",
  "domain": "",
hostname perimeter-fw1
+ [[ export == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ export == \d\r\y\-\r\u\n ]]
  "hostname": "fg-branch-vpn-01"
domain-name edge.dc.example.com
+ [[ export == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
object-group network Panther-Edge
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]]
}
 description Internet-facing proxy systems
+ IFS==

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list != *,* ]]
 network-object host 203.0.113.25
++ printf '%*s' 12 ''
 network-object host 172.16.0.5
+ mapfile -t search_terms

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -en '{
+ local first_search_entry=192.168.2.12

  "vendor": "cisco",
config firewall address
  "model": "ASA",
 edit "Spidey-Sandbox"
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
ASA Version 9.14(3)
 next
+ local last_search_entry=192.168.2.12
hostname perimeter-fw1
end ]]
domain-name edge.dc.example.com

object-group network Panther-Edge
+ local 'indent=            '
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
+ [[ true == true ]]
 host 172.16.0.5
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
 description WAN firewall entry point'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ local count=1
+ echo
+ ((  count == 0  ))
++ printf '%*s' 12 ''
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
++ echo -e --export
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -en '{
  "vendor": "fortinet",
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
++ tr -d '\r'
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ echo
+ local count=2
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v8udfgnv7h/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z fortinet ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ newline
+ local 'extracted_configuration={
+ set -euo pipefail
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console --export --verbose
  "vendor": "fortinet",
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ declare -a execute
+ export LC_ALL=C
+ [[ true == true ]]
+ local count=1
+ newline
+ (( i = 0 ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ serialize_objects
+ local count=1
  "domain": "",
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
  "hostname": "fg-branch-vpn-01"
}
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]

#hostname="fg-branch-vpn-01"
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
#model="FortiGate-60F"
+ oIFS=' 	
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ (( i++ ))
'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+++ date +%s%N
++ grep -v '^#'

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ (( i < count ))
+ [[ -n {
+ for xitem in "${@}"
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ base64
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
  "version": "v7.2.5.F",
  "domain": "",
+ read -r key value
  "hostname": "fg-branch-vpn-01"
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ export =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ [[ export =~ ^(export|r)$ ]]
+ LC_ALL=C
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
}
+ [[ export =~ ^(search|s)$ ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local first_search_entry=172.16.1.6
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ export == \h\e\l\p ]]
  "model": "",
+ local last_search_entry=172.16.1.6

config firewall address
 edit "IronMan-HQ"
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ logger =~ ^(console|o)$ ]]
  "version": "16.9",
  set subnet 10.0.0.1 255.255.255.255
+ [[ export == \d\e\b\u\g ]]
  "domain": "",
  set comment "Main node at Stark Tower"
+ [[ logger =~ ^(export|r)$ ]]
 next
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local parent_dir=reports/10.0.0.1/cisco
end ]]
+ for xitem in "${@}"
  "hostname": "branch-isr-02"
}

++ export divisor=--MTc0ODk0MjE4ODc5MjA1NjAwMAo--
+ IFS==
version 16.9
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
hostname branch-isr-02

+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ] ]]
interface GigabitEthernet0/0/2
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ [[ logger =~ ^(platform|p)$ ]]

+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ [[ config =~ ^(platform|p)$ ]]
+ local first_search_entry=172.16.1.6
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
object network Panther-Gateway
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
 host 10.0.2.3
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
 description Secure outbound concentrator'
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ [[ logger == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ result=0
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ for xitem in "${@}"
+ [[ -n {
+ declare -a execute
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ (( i < count ))
+ local last_search_entry=192.168.2.12
  "vendor": "cisco",
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
  "model": "",
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ false == true ]]
+ read -r key value
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
  "version": "16.9",
+ [[ true == true ]]
+ local 'indent=            '
  "domain": "",
+ newline
  "hostname": "branch-isr-02"
}
++ mktemp -d
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))

+ (( i < count ))
version 16.9
hostname branch-isr-02
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'

interface GigabitEthernet0/0/2
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ export divisor=--MTc0ODk0MjE4ODgxMTU5NDAwMAo--
++ divisor=--MTc0ODk0MjE4ODgxMTU5NDAwMAo--
+ source ./scripts/devops-helpers.shell
+ echo
++ [[ -n '' ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
+ serialize_objects
++ [[ 5 -lt 4 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ newline 2
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=2

+ (( i = 0 ))
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ (( i < count ))
end'
+ echo
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ -z x ]]
  "hostname": "branch-isr-02"
+ export logs_location=logs
}
+ logs_location=logs

version 16.9
hostname branch-isr-02

+ mkdir -p logs/console
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ true == true ]]
}

version 16.9
hostname branch-isr-02

++ echo -e --verbose
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OtBeYlSYLA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OtBeYlSYLA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ source ./scripts/devops-resources.shell
+ local search_pattern
+ local parent_dir=reports/172.16.0.5/cisco
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ extract =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline
++ alias list-file=list_file
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
  "model": "",
+ (( i < count ))
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
++ alias print-message=message
+ IFS==
++ alias print-newline=newline
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
  "version": "12.4",
+ [[ extract =~ ^(search|s)$ ]]
+ newline 2
++ alias pause=pause
+ [[ extract == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ echo
  "domain": "",
+ (( i++ ))
  "hostname": "access-sw1-west"
++ alias system-metrics=system_metrics
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
}

version 12.4
+ local count=2
hostname access-sw1-west
+ script_filename=network-extract.shell
+ (( i = 0 ))
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg

+ (( i < count ))
+ script_filename=network-extract
+ [[ search =~ ^(config|c)$ ]]
object-group network MGMT-ACCESS
+ export network_extract__console=logs/console/network-extract.console
 description Management objects
 network-object host 192.168.0.1
++ alias validate-address=validate_address
 network-object host 192.168.0.100
+ network_extract__console=logs/console/network-extract.console
 network-object host 10.10.10.10
+ echo
+ touch logs/console/network-extract.console
++ alias warning-message=warning

+ [[ search =~ ^(console|o)$ ]]
++ export LC_ALL=C
object-group network Mutant-WiFi
+ (( i++ ))
 description Controlled guest devices
+ LC_ALL=C
++ LC_ALL=C
 network-object host 10.10.10.10'
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
++ export 'nl=\n'
+ result=0
++ nl='\n'
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local last_search_entry=172.16.1.6
+ [[ -n {
++ export cache_location=.cache
+ echo
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(config|c)$ ]]
  "vendor": "cisco",
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ cache_location=.cache
+ set -euo pipefail
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
  "model": "",
+ [[ export =~ ^(config|c)$ ]]
  "version": "12.4",
++ divisor=--MTc0ODk0MjE4ODc5MjA1NjAwMAo--
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ export =~ ^(export|r)$ ]]
+ IFS=' 	
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
'
+ local export_objects=true
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
  "hostname": "access-sw1-west"
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(logger|l)$ ]]
}

+ [[ export =~ ^(platform|p)$ ]]
version 12.4
+ [[ export =~ ^(search|s)$ ]]
hostname access-sw1-west

+ newline
+ debug=false
+ [[ export == \h\e\l\p ]]
object-group network MGMT-ACCESS
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ dry_run=false
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ echo
 description Management objects
+ console_output=false
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
+ [[ -z true ]]
 network-object host 192.168.0.100
+ [[ conf == \c\o\n\f ]]
 network-object host 10.10.10.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console ]]

+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \v\e\r\b\o\s\e ]]
object-group network Mutant-WiFi
+ final_output=reports/172.16.1.6/misc/switch3.conf
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ script_helper=false
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
 description Controlled guest devices
+ for xitem in "${@}"
+ [[ false == true ]]
 network-object host 10.10.10.10 ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ read -r key value
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ cut -d/ -f2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ echo -e --platform=fortinet
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ local count=2
+ (( i = 0 ))
+ print '{
+ (( i < count ))
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.d181t1wb3o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ (( i++ ))
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ (( i < count ))
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ oIFS=' 	
'
++ export actions_logfile=./logs/console/run.console
+ echo -en '{
  "vendor": "cisco",
++ actions_logfile=./logs/console/run.console
+ echo
  "model": "",
++ touch ./logs/console/run.console
+ for xitem in "${@}"
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
++ echo -e --config=.cache/resources/misc/switch1.conf
}
+ IFS==

+ read -r key value
version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ (( i++ ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ (( i < count ))
 description Controlled guest devices
 network-object host 10.10.10.10'
++ dirname reports/172.16.1.6/misc/switch3.conf
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ search_pattern=10.0.0.1
+ echo
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/192.168.2.12/fortinet
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --verbose
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ false == true ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
++ grep -v '^\s*$'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ which awk
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ local export_objects=true
+ (( i = 0 ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ grep -v '^#'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ cut -d/ -f2
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ newline 2
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local count=2
+ [[ config == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local awk_bin=/usr/bin/awk
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ] ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ echo
+ export LC_ALL=C
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ [[ true == true ]]
++ echo -e --verbose
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ search_pattern=172.16.0.5
+ [[ true == true ]]
+ local first_search_entry=192.168.1.11
+ local last_search_entry=192.168.1.11
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+ case "${target_platform}" in
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-configs--ips.list ]'
+++ date +%s%N
+ local count=1
+ ((  count == 0  ))
+ [[ verbose == \h\e\l\p ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ awk -v divisor=--MTc0ODk0MjE4ODI3NTkwODAwMAo-- '
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ newline
                  }
                  /^[[:space:]]*$/ { next }
+ local count=1
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ (( i = 0 ))
                    if (in_json_header == 1) {
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
                      in_json_header = 0;
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
                      next;
                    }
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
                  }
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
                  (in_json_header == 1) { next }
+ newline
                  /^[^[:space:]]/ {
+ local verbose=true
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ search =~ ^(config|c)$ ]]
                  }
+ newline
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local count=1
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+++ base64
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ IFS=' 	
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ grep -F 10.0.0.1
+ (( i < count ))
'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z '' ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ debug=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z fortinet ]]
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -z '' ]]
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ] ]]
+ local parent_dir=reports/10.0.1.2/fortinet
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ sed '/^[[:space:]]*$/d'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQJeTfp6tQ
+ [[ verbose == \h\e\l\p ]]
+ search_terms=()
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQJeTfp6tQ
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ local verbose=true
+ nl='\n'
+ IFS=' 	
+ source ./scripts/devops-resources.shell
'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -z '' ]]
++ [[ -n '' ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ debug=false
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ local SCRIPT_DIR=./scripts
+ [[ -z true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ declare -a search_terms
+ local script_filename=fortinet-configs.awk
+ export console_output=false
+ local parent_dir=reports/10.0.0.1/fortinet
+ [[ logger =~ ^(export|r)$ ]]
+ console_output=false
++ alias detect-vendor=detect_vendor
+ [[ -z true ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ [[ false == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias list-file=list_file
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ search_terms=()
++ alias log-error=log_error
+ declare -a search_terms
+ [[ logger == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list != *,* ]]
++ alias log-warn=log_warn
+ mapfile -t search_terms
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
++ alias pause=pause
+ IFS==
++ alias print-line=print
+ read -r key value
++ alias print-file=print_file
++ export divisor=--MTc0ODk0MjE4ODg0NjQzNTAwMAo--
++ divisor=--MTc0ODk0MjE4ODg0NjQzNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local first_search_entry=10.0.2.3
+ output_dir=reports/172.18.1.20/cisco
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local last_search_entry=10.0.2.3
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ case "${target_platform}" in
+ [[ true == true ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ awk -v divisor=--MTc0ODk0MjE4ODI5OTI3MzAwMAo-- '
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ export divisor=--MTc0ODk0MjE4ODcyMjQzOTAwMAo--
+ output_dir=reports/192.168.1.10/misc
+ output_dir=reports/192.168.1.11/cisco
+ [[ verbose =~ ^(console|o)$ ]]
                  }
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ verbose =~ ^(export|r)$ ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ verbose =~ ^(extract|x)$ ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ [[ verbose =~ ^(logger|l)$ ]]
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ verbose =~ ^(platform|p)$ ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ verbose =~ ^(search|s)$ ]]
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search == \h\e\l\p ]]
++ divisor=--MTc0ODk0MjE4ODcyMjQzOTAwMAo--
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ] ]]
++ IFS=,
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo 192.168.0.100
+ IFS==
+ read -r key value
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -z true ]]
++ [[ -n '' ]]
+ [[ -z '' ]]
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ export console_output=false
+ console_output=false
++ [[ 5 -lt 4 ]]
+ [[ -z true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
+ echo
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'prompt_message=Enter configuration file to be parsed: '
++ IFS=,
+ [[ -z .cache/resources/misc/fw1.cfg ]]
++ echo 172.16.1.6
++ alias network-configs--helper=network_configs__helper
+ set -euo pipefail
+ [[ -z cisco ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ true == true ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ declare -a execute
+ alias serialize-object=serialize_objects
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-configs--ips.list ]'
+ LC_ALL=C
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ verbose == \d\e\b\u\g ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ newline
+ alias parse-cisco=main
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ local count=1
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export logs_location=logs
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ logs_location=logs
++ mktemp -d
+ mkdir -p logs/console
+ local first_search_entry=10.10.10.10
+ local first_search_entry=192.168.100.100
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(extract|x)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ which awk
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ IFS=' 	
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ output_dir=reports/192.0.2.50/cisco
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ local last_search_entry=192.168.100.100
+ echo
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ ((  count == 0  ))
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
++ grep -v '^\s*$'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ alias network-extract--helper=network_extract__helper
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ local count=1
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
++ mktemp -d
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
++ grep -v '^#'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ alias serialize-object=serialize_objects
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filename=cisco-configs.awk
++ printf '%*s' 12 ''
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local 'indent=            '
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hyvlGfTb8z
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hyvlGfTb8z
+ local 'indent=            '
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export network_extract__console=logs/console/network-extract.console
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ network_extract__console=logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ touch logs/console/network-extract.console
+ local count=1
+ nl='\n'
+ (( i = 0 ))
'
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ [[ -z '' ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ config =~ ^(export|r)$ ]]
+ echo
+ echo
+ local count=1
++ [[ -n '' ]]
+ ((  count == 0  ))
+ [[ config =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i < count ))
+ (( i++ ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias detect-vendor=detect_vendor
+ echo
+ [[ config == \h\e\l\p ]]
+ (( i++ ))
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ alias exit-error=exit_error
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z cisco ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ alias parse-cisco=main
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
++ alias list-file=list_file
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
++ printf '%*s' 12 ''
+ [[ cfg == \c\f\g ]]
++ alias log-error=log_error
+ newline
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
++ alias log-info=log_info
+ local count=1
+ [[ -z x ]]
+ (( i = 0 ))
++ alias log-warn=log_warn
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ alias print-message=message
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
++ alias print-newline=newline
+ export logs_location=logs
++ alias pause=pause
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zTXfNU1drP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zTXfNU1drP
++ which awk
++ alias print-line=print
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ local 'indent=            '
+ (( i = 0 ))
+ local first_search_entry=172.18.1.20
+ source ./scripts/devops-resources.shell
+ local count=1
+ [[ true == true ]]
++ alias print-file=print_file
+ (( i = 0 ))
+ (( i < count ))
+ local last_search_entry=172.18.1.20
++ which awk
+ echo
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ debug=false
+ newline
+ [[ -z '' ]]
+ [[ true == true ]]
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ local count=1
++ which awk
+ dry_run=false
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
+ local verbose=true
+ newline
++ alias system-metrics=system_metrics
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ logs_location=logs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ] ]]
+ IFS=' 	
+ (( i < count ))
+ mkdir -p logs/console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-configs--ips.list ]'
+ echo
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias validate-address=validate_address
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ newline
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
++ alias warning-message=warning
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ export LC_ALL=C
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ LC_ALL=C
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ export 'nl=\n'
++ nl='\n'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ export logs_location=logs
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
++ logs_location=logs
+ (( i = 0 ))
+ (( i < count ))
++ mkdir -p logs/console logs/jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ (( i < count ))
+ newline
+ local 'indent=            '
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ echo
+ echo
+ [[ -z true ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ [[ -z '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ export console_output=false
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ console_output=false
++ [[ 5 -lt 4 ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z true ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -z cisco ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias list-file=list_file
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias log-error=log_error
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias log-info=log_info
+ echo
+ (( i++ ))
++ alias log-warn=log_warn
+ (( i < count ))
++ alias print-message=message
++ alias print-newline=newline
++ echo -e --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
++ alias relative-configpath=relative_configpath
'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias system-metrics=system_metrics
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nfq3aorpqn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SvsCrdCCy1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SvsCrdCCy1
+ [[ -z '' ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console --export --verbose
+ debug=false
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ export 'nl=\n'
+ local 'indent=            '
+ dry_run=false
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
++ alias validate-address=validate_address
+ newline
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i < count ))
+ [[ -z '' ]]
+ (( i < count ))
+ [[ -z true ]]
+ nl='\n'
+ [[ true == true ]]
+ [[ true == true ]]
+ script_helper=false
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
++ alias warning-message=warning
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ extract =~ ^(config|c)$ ]]
++ which awk
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ oIFS=' 	
+ [[ extract =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ echo
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ newline
+ newline
+ echo -e '                .cache/resources/misc/switch1.conf'
+ IFS==
++ export LC_ALL=C
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ local count=1
+ newline
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ export console_output=false
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ search_terms=()
+ (( i < count ))
+ (( i < count ))
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z fortinet ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
++ [[ -n '' ]]
+ echo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i++ ))
++ LC_ALL=C
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ output_dir=reports/10.0.2.3/misc
+ (( i < count ))
+ (( i = 0 ))
+ (( i = 0 ))
++ export 'nl=\n'
+ [[ ! -d reports/10.0.2.3/misc ]]
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ console_output=false
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ declare -a search_terms
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ IFS=,
++ IFS=,
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
++ nl='\n'
+ (( i < count ))
++ echo 192.168.1.10
++ echo 172.18.1.20
++ IFS=,
+ echo
++ alias exit-error=exit_error
+ [[ config =~ ^(extract|x)$ ]]
+ echo
+ [[ -z true ]]
+ (( i++ ))
++ echo 192.168.1.11
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ declare -a execute
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
+ echo
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ (( i++ ))
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
++ export cache_location=.cache
+ (( i < count ))
+ echo
+ [[ config =~ ^(logger|l)$ ]]
++ touch ./logs/console/run.console
+ (( i++ ))
+ (( i < count ))
++ alias list-file=list_file
+ (( i < count ))
++ alias log-error=log_error
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-info=log_info
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ -z '' ]]
++ alias log-warn=log_warn
++ command -v -- ./scripts/network-extract.shell
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ which awk
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "model": "",
+ [[ extract =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ extract =~ ^(console|o)$ ]]
++ which awk
}
+ (( i < count ))

+ [[ extract =~ ^(export|r)$ ]]
++ which awk
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
version 12.4
++ cache_location=.cache
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
hostname access-sw1-west
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
 description Guest VLAN Gateway
+ [[ extract =~ ^(logger|l)$ ]]

+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
object-group network MGMT-ACCESS
+ [[ extract =~ ^(search|s)$ ]]
 description Management objects
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
 network-object host 192.168.0.1
+ [[ extract == \d\e\b\u\g ]]
 network-object host 192.168.0.100
+ [[ extract == \d\r\y\-\r\u\n ]]
 network-object host 10.10.10.10'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ -n {
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
++ alias print-message=message
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "vendor": "cisco",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ config =~ ^(search|s)$ ]]
++ export logs_location=logs
  "hostname": "access-sw1-west"
++ logs_location=logs
}
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ config == \h\e\l\p ]]
++ mkdir -p logs/console logs/jobs

+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
version 12.4
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
hostname access-sw1-west
+ [[ verbose =~ ^(extract|x)$ ]]

++ echo -e --platform=cisco
+ script_filename=network-extract
+ [[ verbose =~ ^(logger|l)$ ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ verbose =~ ^(platform|p)$ ]]
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ search_terms=()
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ declare -a search_terms
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ export network_extract__console=logs/console/network-extract.console
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ network_extract__console=logs/console/network-extract.console
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ touch logs/console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ IFS=,
  "hostname": "branch-isr-02"
++ echo 192.0.2.50
}

version 16.9
hostname branch-isr-02

++ dirname -- ./scripts/network-extract.shell
interface GigabitEthernet0/0/0
++ sed -e '1s|^\(-\)\{1,\}||'
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ tr -d '\r'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')

+ declare -a execute
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ print '{
+ [[ cfg == \c\f\g ]]
  "vendor": "cisco",
  "model": "",
version 16.9
++ grep -v '^\s*$'
+ final_output=reports/172.18.1.20/misc/fw1.cfg
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
hostname branch-isr-02
}

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ local awk_bin=/usr/bin/awk

 description ISP uplink

version 12.4
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ local awk_bin=/usr/bin/awk
object network BlackWidow-Core

object-group network MGMT-ACCESS
 description Management objects
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
 host 172.16.1.6
 network-object host 192.168.0.1
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local awk_bin=/usr/bin/awk
++ export targets_location=targets
++ echo -e --platform=cisco
++ targets_location=targets
 description Branch router uplink NAT ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -n {
++ targets_logfile=logs/jobs/targets.jobs
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
}
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'

version 12.4
hostname access-sw1-west
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ grep -v '^#'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(config|c)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ IFS==
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'indent=            '
+ print '{
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "",
+ message '                .cache/resources/misc/switch1.conf'
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ newline

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ local count=1
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ (( i = 0 ))
++ alias pause=pause
+ (( i < count ))
+ echo
+ [[ -n {
+ [[ verbose =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
+ [[ verbose == \h\e\l\p ]]
  "version": "16.9",
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "",
+ [[ config == \v\e\r\b\o\s\e ]]
  "hostname": "branch-isr-02"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
}
+ local 'indent=            '

+ local 'indent=            '
version 16.9
+ for xitem in "${@}"
hostname branch-isr-02
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
 description ISP uplink
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg

object network BlackWidow-Core
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ newline

+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
version 16.9
+ local count=1
+ (( i = 0 ))
hostname branch-isr-02
+ (( i < count ))

+ echo
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

+ newline
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
object network BlackWidow-Core
+ local count=1
 host 172.16.1.6
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i = 0 ))
 description Branch router uplink NAT'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i++ ))
+ (( i < count ))
++ which awk
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+++ date +%s%N
+ (( i++ ))
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'extracted_configuration={
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias print-line=print
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list != *,* ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local target_config=.cache/resources/misc/fw3.cfg
+ mapfile -t search_terms
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ IFS==
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i < count ))
+ IFS=' 	
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
'
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ newline
+++ base64
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ (( i++ ))
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local target_platform=cisco
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local count=1
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
  "vendor": "cisco",
+ IFS==
  "model": "",
+ output_dir=reports/172.18.1.20/misc
  "version": "",
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ ! -d reports/172.18.1.20/misc ]]
  "domain": "",
+ read -r key value
+ echo
+ [[ config =~ ^(console|o)$ ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ newline 2
++ alias system-metrics=system_metrics
+ local count=2
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local count=1
+ newline 2
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local first_search_entry=198.51.100.75
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local last_search_entry=198.51.100.75
+ (( i < count ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ local count=1
+ local count=2
++ alias validate-address=validate_address
+ [[ true == true ]]
+ echo
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ [[ platform =~ ^(export|r)$ ]]
+ debug=false
  "hostname": ""
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i++ ))
+ echo
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ newline
++ export actions_logfile=./logs/console/run.console
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias warning-message=warning
+ local count=1
++ export LC_ALL=C
++ actions_logfile=./logs/console/run.console
}
+ (( i = 0 ))
+ [[ -z '' ]]
++ LC_ALL=C
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
++ IFS=,
++ echo 10.0.2.3
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ declare -a execute
+ local count=1
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ export divisor=--MTc0ODk0MjE4ODg4OTgzMzAwMAo--
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ divisor=--MTc0ODk0MjE4ODg4OTgzMzAwMAo--
+ [[ platform == \v\e\r\b\o\s\e ]]
+ output_dir=reports/172.16.0.5/misc
+ for xitem in "${@}"
+ IFS==
+ [[ ! -d reports/172.16.0.5/misc ]]
+ read -r key value
++ tr -d '\r'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ mktemp -d
++ grep -v '^#'
++ alias parse-listings--helper=parse_listings__helper
++ which awk
+ local 'extracted_configuration={
+ [[ config =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ local 'extracted_configuration={
  "model": "",
  "version": "16.9",
+ [[ config =~ ^(platform|p)$ ]]
  "vendor": "cisco",
  "domain": "",
  "model": "",
  "hostname": "branch-isr-02"
++ alias network-configs--helper=network_configs__helper
  "version": "",
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
}
+ [[ config == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]

  "domain": "",
  "hostname": ""
version 16.9
hostname branch-isr-02
+ [[ config == \d\e\b\u\g ]]
}


object-group network Fortress-Wireless
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
 description Secure wireless access layer
++ touch ./logs/console/run.console
object-group network Lantern-DMZ
 description Protected but public-facing zone

++ alias network-extract--helper=network_extract__helper
+ [[ config == \d\r\y\-\r\u\n ]]
 network-object host 172.18.1.20
 network-object host 172.18.1.20
+ dry_run=false
 network-object host 192.168.1.10'
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.1.11'
+ for xitem in "${@}"
+ result=0
+ IFS==
++ export 'nl=\n'
+ read -r key value
++ nl='\n'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ result=0
  "version": "",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ alias serialize-object=serialize_objects
  "version": "16.9",
  "domain": "",
+ local 'extracted_configuration={
  "domain": "",
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
  "vendor": "cisco",
+ [[ config =~ ^(logger|l)$ ]]
  "hostname": "branch-isr-02"
  "hostname": ""
+ ((  count == 0  ))
}
+ newline
+ [[ cfg == \c\f\g ]]
}
++ export cache_location=.cache
+ [[ config =~ ^(platform|p)$ ]]
  "model": "",


object-group network Fortress-Wireless
 description Secure wireless access layer
version 16.9
hostname branch-isr-02
 network-object host 172.18.1.20

  "version": "16.9",
+ local count=1
  "domain": "",
  "hostname": "branch-isr-02"
 network-object host 192.168.1.10 ]]
object-group network Lantern-DMZ
+ local SCRIPT_DIR=./scripts
}
+ (( i = 0 ))
 description Protected but public-facing zone
+ (( i < count ))

 network-object host 172.18.1.20
+ local script_filename=cisco-configs.awk
version 16.9
 network-object host 192.168.1.11 ]]
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(console|o)$ ]]
hostname branch-isr-02

+ [[ logger =~ ^(export|r)$ ]]
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ false == true ]]
+ newline
 network-object host 192.168.1.11'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ result=0
interface Vlan10
+ [[ logger =~ ^(logger|l)$ ]]
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -n {
  "vendor": "cisco",
  "domain": "",
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
 ip address 10.0.1.2 255.255.255.0'
  "model": "",
+ [[ 7 -eq 0 ]]
+ echo
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ alias parse-cisco=main
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ -z x ]]
+ (( i++ ))
 network-object host 192.168.1.11 ]]
+ serialize_objects
+ export logs_location=logs
+ logs_location=logs
+ (( i < count ))
+ mkdir -p logs/console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rayahqxsn9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ cache_location=.cache
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "hostname": "fg-branch-vpn-01"
+ oIFS=' 	
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ result=0
}
+ [[ -n {
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "domain": "",
  "hostname": ""
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
}
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ serialize_objects
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ cfg == \c\f\g ]]
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console ]]
+ print '{
  "vendor": "cisco",
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -z '' ]]
  "model": "",
  "version": "",
+ script_helper=false
  "domain": "",
++ export logs_location=logs
  "hostname": ""
++ logs_location=logs
}
+ newline

'
+ [[ config == \d\e\b\u\g ]]
+ local count=1

object-group network Fortress-Wireless
++ mkdir -p logs/console logs/jobs

+ print '{
 description Secure wireless access layer
+ [[ config == \d\r\y\-\r\u\n ]]
 network-object host 172.18.1.20
  "vendor": "cisco",
interface Vlan10
++ which awk
  "model": "",
 network-object host 192.168.1.10'
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ local awk_bin=/usr/bin/awk

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ [[ -n {
+ echo -en '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "",
  "version": "16.9",
  "version": "",
  "domain": "",
  "domain": "",
  "hostname": "branch-isr-02"
  "hostname": ""
}
}


version 16.9
object-group network Fortress-Wireless
hostname branch-isr-02
 description Secure wireless access layer

 network-object host 172.18.1.20
object-group network Lantern-DMZ
 network-object host 192.168.1.10'
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ cfg == \c\f\g ]]

version 16.9
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
hostname branch-isr-02

+ [[ false == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ [[ -n {
  "vendor": "cisco",
+ local 'extracted_configuration={
  "model": "",
  "vendor": "cisco",
  "version": "16.9",
  "model": "ASA",
  "domain": "",
  "hostname": "branch-isr-02"
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
}
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
  "hostname": "perimeter-fw1"

version 16.9
hostname branch-isr-02
}

+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=192.168.0.1
ASA Version 9.14(3)

++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
hostname perimeter-fw1
+ echo -en '{
domain-name edge.dc.example.com
  "vendor": "cisco",

  "model": "",
object-group network Avengers-DMZ
  "version": "16.9",
 description Public access layer
  "domain": "",
+ local last_search_entry=192.168.0.1
+ for xitem in "${@}"
  "hostname": "branch-isr-02"
+ (( i = 0 ))
 network-object host 192.0.2.50
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
}
 network-object host 203.0.113.25
#hostname="fg-branch-vpn-01"

 network-object 192.168.2.0 255.255.255.0'
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ result=0
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
 network-object host 172.18.1.20
+ [[ -n {
 network-object host 192.168.1.11'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZkEKYhuiO
 ip address 10.0.1.2 255.255.255.0 ]]
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZkEKYhuiO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --export
+ export 'nl=\n'
+ nl='\n'
+ local count=1
+ source ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
++ alias detect-vendor=detect_vendor
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
++ alias exit-error=exit_error
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ] ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
++ alias pause=pause
+ local 'message=                .cache/resources/misc/fw1.cfg'
++ alias print-line=print
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
++ alias print-file=print_file
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias relative-configpath=relative_configpath
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
++ alias system-metrics=system_metrics
+ script_filename=network-extract
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
+ export network_extract__console=logs/console/network-extract.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local parent_dir=reports/192.168.0.100/cisco
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
+ search_terms=()
+ (( i < count ))
+ print '{
+ declare -a search_terms
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ alias validate-address=validate_address
+ read -r key value
  "vendor": "cisco",

  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ alias warning-message=warning
+ echo

ASA Version 9.14(3)
+ (( i++ ))
hostname perimeter-fw1
domain-name edge.dc.example.com
+ (( i < count ))

+ local 'extracted_configuration={
++ export LC_ALL=C
object-group network Avengers-DMZ
++ LC_ALL=C
 description Public access layer
++ export targets_location=targets
 network-object host 192.0.2.50
++ export 'nl=\n'
+ newline 2
 network-object host 203.0.113.25
++ targets_location=targets
++ nl='\n'
 network-object 192.168.2.0 255.255.255.0'
+ local parent_dir=reports/172.16.1.6/cisco
++ export cache_location=.cache
++ export targets_logfile=logs/jobs/targets.jobs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ newline 2
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ dirname -- ./scripts/network-extract.shell
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ local count=2
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
 network-object host 203.0.113.25
+ (( i = 0 ))
 network-object 192.168.2.0 255.255.255.0'
+ (( i < count ))
+ local count=2
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ ((  count == 0  ))
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
++ IFS=,
+ newline 2
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
+ newline
++ echo 172.18.1.20
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ echo
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ declare -a execute
+ [[ extract == \d\r\y\-\r\u\n ]]
config firewall address
+ (( i++ ))
  "vendor": "cisco",
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ targets_logfile=logs/jobs/targets.jobs
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
  "model": "ASA",
+ for xitem in "${@}"
+ echo
+ IFS==
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -z cisco ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
  "hostname": ""
}
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
++ which awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ local export_objects=true
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4xxgouqksf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console --export --verbose
+ [[ export =~ ^(search|s)$ ]]
+ newline 2
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ export == \d\r\y\-\r\u\n ]]
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ (( i = 0 ))
+ IFS==
+ read -r key value
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
+ echo
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ actions_logfile=./logs/console/run.console
+ (( i++ ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list != *,* ]]
+ (( i < count ))
++ touch ./logs/console/run.console
+ local search_pattern
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ output_dir=reports/10.10.10.10/cisco
+ [[ true == true ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.100.100/cisco
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ ! -d reports/192.168.100.100/cisco ]]
  "version": "9.12(4)",
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
  set comment "Wakandan data store"
+ newline
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ output_dir=reports/172.16.1.6/fortinet
+ echo
+ newline
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ (( i++ ))
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ local count=1
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'extracted_configuration={
+ (( i = 0 ))
+ local search_pattern
+ output_dir=reports/203.0.113.25/cisco
+ mapfile -t search_terms
+ (( i < count ))
+ newline
+ echo
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local count=1
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
 next
+ (( i = 0 ))
}
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
  "version": "",
+ [[ logger =~ ^(export|r)$ ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
  "domain": "",
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
  "hostname": ""
}

interface Vlan1
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
 ip address 172.31.255.254 255.255.255.0'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
end'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ echo

++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ touch ./logs/console/run.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
++ echo -e --platform=fortinet
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'extracted_configuration={
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": "",
+ result=0
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ date +%s%N
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
++ cut -d/ -f2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ newline
 network-object 192.168.2.0 255.255.255.0
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
 network-object host 192.168.2.12

+ serialize_objects
+++ base64
object network Kent-Server
+ [[ false == true ]]
 host 10.0.2.3
 description Internal mail & identity services ]]
+ [[ true == true ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
++ export targets_location=targets
+ [[ logger == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ targets_location=targets
+ newline
++ export targets_logfile=logs/jobs/targets.jobs
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
  "model": "FortiGate-60F",
+ local count=1
  "version": "v7.2.5.F",
+ [[ logger == \d\e\b\u\g ]]
object-group network Watchtower-DMZ
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
 description Global secure relay
+ [[ logger == \d\r\y\-\r\u\n ]]
  "domain": "",
+ (( i = 0 ))
  "hostname": "fg-branch-vpn-01"
}

+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ echo
 network-object host 192.0.2.50'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ serialize_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ false == true ]]
  "hostname": "dmz-fw2-backup"
+ [[ true == true ]]
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+++ tr -dc a-zA-Z0-9
domain-name global.dmz.example.net
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
++ command -v -- ./scripts/network-extract.shell
+ serialize_objects
++ which awk
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ printf '%*s' 12 ''
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+++ date +%s%N
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ for xitem in "${@}"
+ search_pattern=192.168.0.100
+ IFS==
+ read -r key value
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ newline
+ search_pattern=172.16.1.6
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
++ grep -v '^\s*$'
+ newline
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ [[ -z cisco ]]
+ [[ -n {
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ print '{
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ IFS==
 network-object host 192.168.2.12

+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
object network Kent-Server
 host 10.0.2.3
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
 description Internal mail & identity services'
+++ base64
+ local verbose=true
+ read -r key value
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ newline 2
+ IFS=' 	
'
  "version": "",
+ [[ -z '' ]]
  "domain": "",
+ debug=false
  "hostname": ""
+ [[ -z '' ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
}
+ dry_run=false

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+++ tr -dc a-zA-Z0-9
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ serialize_objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ newline
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ echo
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local parent_dir=reports/192.168.1.11/cisco
+ local parent_dir=reports/192.168.1.10/misc
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local parent_dir=reports/172.18.1.20/cisco
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
#model="FortiGate-60F"
++ targets_location=targets
+ for xitem in "${@}"

+ output_dir=reports/192.168.2.12/cisco
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ command -v -- ./scripts/network-extract.shell
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ platform =~ ^(config|c)$ ]]
interface Vlan1
+ [[ search =~ ^(config|c)$ ]]
 ip address 172.31.255.254 255.255.255.0 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local count=2
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ cfg == \c\f\g ]]
+ IFS==
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export targets_logfile=logs/jobs/targets.jobs
+ echo
object-group network Watchtower-DMZ
+ read -r key value
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
config firewall address
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
++ export divisor=--MTc0ODk0MjE4ODkyNDMzNjAwMAo--
+ local first_search_entry=192.168.0.1
+ (( i < count ))
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export divisor=--MTc0ODk0MjE4ODkzMDQ3NzAwMAo--
++ divisor=--MTc0ODk0MjE4ODkzMDQ3NzAwMAo--
+ local target_platform=cisco
 description Global secure relay
++ targets_logfile=logs/jobs/targets.jobs
 edit "Panther-Vault"
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ source ./scripts/devops-helpers.shell
++ divisor=--MTc0ODk0MjE4ODkyNDMzNjAwMAo--
+ (( i++ ))
+ local last_search_entry=192.168.0.1
+ [[ search =~ ^(platform|p)$ ]]
  set subnet 192.168.1.10 255.255.255.255
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
++ basename reports/192.168.1.10/misc/fw1
+ [[ platform =~ ^(search|s)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
 network-object host 192.0.2.50 ]]
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
+ [[ search =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
  set comment "Wakandan data store"
 next
end ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ [[ -n '' ]]
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ case "${target_platform}" in
++ [[ 5 -lt 4 ]]
++ basename reports/172.18.1.20/cisco/branch-isr-02
++ command -v -- ./scripts/network-extract.shell
+ awk -v divisor=--MTc0ODk0MjE4ODM0MjYzNjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
++ alias network-configs--helper=network_configs__helper
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ [[ platform == \h\e\l\p ]]
                  {
+ [[ platform == \d\e\b\u\g ]]
                    blk = blk divisor " " $0;
+ [[ platform == \d\r\y\-\r\u\n ]]
                  }
                  END {
+ [[ platform == \v\e\r\b\o\s\e ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ for xitem in "${@}"
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
++ tr -d '\r'
+ [[ true == true ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ] ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
+ local parent_dir=reports/192.0.2.50/cisco
++ grep -v '^\s*$'
+ grep -F 192.168.0.100
+ alias parse-cisco=main
+ newline 2
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ local count=2
+ export logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ logs_location=logs
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ mkdir -p logs/console
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ case "${target_platform}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ awk -v divisor=--MTc0ODk0MjE4ODMyODUyNjAwMAo-- '
+ (( i < count ))
                  BEGIN {
+ print '{
  "vendor": "cisco",
  "model": "",
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
                    in_json_header = 0;
  "version": "",
                    blk = "";
  "domain": "",
                  }
  "hostname": ""
++ grep -v '^#'
                  /^[[:space:]]*$/ { next }
}
                  /^{$/ { in_json_header = 1; next }

interface Vlan1
                  /^}$/ {
+ cat -n reports/10.0.2.3/misc/fw1.cfg
 ip address 172.31.255.254 255.255.255.0'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
                      next;
                    }
                  }
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local search_pattern
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ -n {
  "vendor": "cisco",
                    blk = blk divisor " " $0;
  "model": "",
                  }
  "version": "",
  "domain": "",
+ local search_pattern
                  END {
  "hostname": ""
                    if (blk != "" && !seen[blk]++) print blk "\n";
}
                  }

                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ grep -F 172.16.1.6
++ echo -e --export
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ IFS==
  "domain": "",
+ read -r key value
  "hostname": ""
+ local SCRIPT_PATH=./scripts/network-extract.shell
}

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ alias parse-cisco=main
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --export
+ [[ -z x ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
+ export logs_location=logs
+ logs_location=logs
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
+ mkdir -p logs/console
+ print '{
  "vendor": "fortinet",
+ for xitem in "${@}"
  "model": "FortiGate-60F",
+ local count=1
+ IFS==
+ local first_search_entry=198.51.100.75
+ ((  count == 0  ))
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ date +%s%N
+ [[ -n {
  "vendor": "fortinet",
++ IFS=,
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ echo 172.16.0.5
++ sed -e '1s|^\(-\)\{1,\}||'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ local last_search_entry=198.51.100.75
++ cut -d/ -f2
 edit "Panther-Vault"
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
++ echo reports/192.168.1.10/misc/fw1.cfg
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ echo -en '{
+ local search_pattern
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ result=0
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ 0 -ne 0 ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+++ base64
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
++ cut -d/ -f2
+ print '{
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local count=1

+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ] ]]
+ echo
object-group network Fortress-Wireless
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
 description Secure wireless access layer
 network-object host 172.18.1.20
+ newline
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
 network-object host 192.168.1.10'
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ [[ -n {
+ ((  count == 0  ))
+ echo
  "vendor": "cisco",
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ (( i++ ))
  "model": "",
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
  "version": "",
+ (( i < count ))
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
  "domain": "",
  "hostname": ""
}
+ newline

+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local count=1
++ cut -d/ -f2
+ (( i = 0 ))
+ declare -a execute
object-group network Fortress-Wireless
+ read -r key value
+ [[ false == true ]]
+ (( i < count ))
 description Secure wireless access layer
+ [[ true == true ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
 description Secure wireless access layer
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
 network-object host 172.18.1.20
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
 network-object host 192.168.1.10'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ local SCRIPT_DIR=./scripts
+ serialize_objects
+ local SCRIPT_DIR=./scripts
+ result=0
+ local 'prompt_message=Enter configuration file to be parsed: '
+++ tr -dc a-zA-Z0-9
+ local script_filename=cisco-configs.awk
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ 0 -ne 0 ]]
+ local script_filename=fortinet-configs.awk
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z cisco ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ true == true ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
+ output_dir=reports/198.51.100.75/cisco
+ local count=1
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo
+ newline
+ (( i++ ))
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ search_pattern=192.168.1.11
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(console|o)$ ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ cat -n
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ cut -d/ -f2
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ 7 -eq 0 ]]
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local export_objects=true
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rayahqxsn9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ case "${target_file}" in
+ search_pattern=192.168.1.10
+ [[ export =~ ^(extract|x)$ ]]
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console --export --verbose
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ [[ export =~ ^(search|s)$ ]]
'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ search_pattern=172.18.1.20
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ extract =~ ^(export|r)$ ]]
+ cat -n
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n {
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ extract =~ ^(platform|p)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ extract =~ ^(search|s)$ ]]
}

+ [[ extract == \h\e\l\p ]]
ASA Version 9.12(4)
+ [[ extract == \d\e\b\u\g ]]
hostname dmz-fw2-backup
+ [[ extract == \d\r\y\-\r\u\n ]]
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline 2
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/10.0.2.3/misc
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ search_pattern=192.0.2.50
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ local count=1
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i = 0 ))
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ IFS==
+ (( i < count ))
+ local count=1
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ echo -e --verbose
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ [[ -z cisco ]]
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
++ export divisor=--MTc0ODk0MjE4ODk0ODcyMDAwMAo--
+ local script_filename=cisco-configs.awk
++ divisor=--MTc0ODk0MjE4ODk0ODcyMDAwMAo--
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ source ./scripts/devops-helpers.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ script_filename=network-extract.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
+ local script_filename=cisco-configs.awk
++ which awk
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ basename reports/10.0.2.3/misc/fw1
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ touch logs/console/network-extract.console
+ return 0
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODk0MjE4ODM1NTk1MzAwMAo-- '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
                  BEGIN {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console ]]
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
++ echo -e --platform=cisco
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console ]]
                    blk = $0;
+ case "${target_file}" in
                    next;
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4ODM5MTMyODAwMAo-- '
                  BEGIN {
+ grep -F 192.168.1.11
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
                  }
                  {
                    blk = blk divisor " " $0;
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4ODMzNjEyNTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern
+ grep -F 192.168.1.10
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list
+ newline
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ alias network-configs--helper=network_configs__helper
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--access-sw1-west.cfg.console
+ local verbose=true
+ serialize_objects
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console ]]
++ which awk
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ which awk
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]]
+ search_terms=()
+ grep -F 172.18.1.20
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--MTc0ODk0MjE4ODM5OTMxMDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ platform =~ ^(config|c)$ ]]
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ grep -F 192.0.2.50
++ echo reports/10.0.2.3/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ output_dir=reports/198.51.100.75/cisco
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
+ [[ 0 -ne 0 ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--branch-isr-02.cfg.console
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ alias serialize-object=serialize_objects
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ newline 2
+ newline 2
+ (( i < count ))
+ result=0
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ exit 0
++ which awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g8h96s3kk1 ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g8h96s3kk1
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/172.18.1.20/misc
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ echo -e --platform=cisco
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/172.18.1.20/misc/fw1
+ result=0
+ [[ 0 -ne 0 ]]
++ grep -v '^#'
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ search_pattern=10.0.2.3
+ local target_config=.cache/resources/misc/fw1.cfg
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ newline
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local count=1
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ [[ config == \h\e\l\p ]]
+ case "${target_file}" in
+ (( i < count ))
+ newline
+ local script_filename=cisco-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ echo
+ [[ config == \d\e\b\u\g ]]
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ local count=1
+ [[ logger == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ newline 2
+ cat -n
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ export cache_location=.cache
+ [[ logger =~ ^(console|o)$ ]]
++ cache_location=.cache
+ [[ logger =~ ^(export|r)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ logger =~ ^(extract|x)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ local count=2
+ echo
+ (( i = 0 ))
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
+ echo
+ newline
++ [[ 5 -lt 4 ]]
+ local count=2
+ (( i++ ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias parse-listings--helper=parse_listings__helper
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ local SCRIPT_DIR=./scripts
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ local script_filename=cisco-configs.awk
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ local search_pattern
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ serialize_objects
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
+ (( i++ ))
+ echo
+ (( i < count ))
+ set -euo pipefail
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ export LC_ALL=C
+ echo
+ (( i < count ))
+ LC_ALL=C
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
++ IFS=,
+ serialize_objects
+ alias serialize-object=serialize_objects
++ echo 203.0.113.25
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --export
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i = 0 ))
+ local target_platform=cisco
+ (( i < count ))
+ declare -a execute
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ which awk
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ echo -e --export
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'indent=            '
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
++ IFS=,
++ echo 192.168.2.12
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ IFS=,
++ echo 10.10.10.10
++ dirname reports/10.0.1.2/misc/switch1.conf
++ which awk
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ tr -d '\r'
++ which awk
++ cut -d/ -f2
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6xpktlkz0l
+ newline
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ local search_pattern
+ [[ export =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6xpktlkz0l
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ export 'nl=\n'
+ [[ export == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ source ./scripts/devops-resources.shell
+ read -r key value
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ read -r key value
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ verbose =~ ^(console|o)$ ]]
+ local parent_dir=reports/10.0.1.2/misc
+ [[ export =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ local export_objects=true
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ export =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
+ local count=1
+ [[ export =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local count=1
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ alias list-file=list_file
+ (( i++ ))
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
++ alias log-error=log_error
+ [[ cfg == \c\f\g ]]
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ alias log-info=log_info
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ alias log-warn=log_warn
+ declare -a execute
+ declare -a execute
+ [[ verbose =~ ^(export|r)$ ]]
++ alias print-message=message
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ echo
++ alias print-newline=newline
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias pause=pause
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-line=print
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
++ alias print-file=print_file
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ search_pattern=10.0.1.2
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p reports/10.0.1.2/fortinet/.objects
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias relative-configpath=relative_configpath
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias validate-address=validate_address
+ [[ verbose == \d\e\b\u\g ]]
++ alias warning-message=warning
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ IFS=,
++ export LC_ALL=C
++ LC_ALL=C
+ message '                .cache/resources/misc/fw3.cfg'
++ IFS=,
++ echo 192.168.2.12
++ echo 172.16.1.6
++ basename reports/10.0.1.2/misc/switch1
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export logs_location=logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ logs_location=logs
+ local verbose=true
++ IFS=,
++ mkdir -p logs/console logs/jobs
++ echo 192.168.100.100
+ IFS=' 	
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
++ which awk
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ export targets_location=targets
+ dry_run=false
++ targets_location=targets
+ [[ -z true ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ declare -a execute
++ printf '%*s' 12 ''
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console ]]
+ newline
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ cut -d/ -f2
+ [[ -z '' ]]
+ local 'indent=            '
+ script_helper=false
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/cisco
++ basename reports/10.0.2.3/cisco/branch-isr-02
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ date +%s%N
++ which awk
++ which awk
+ [[ false == true ]]
+ newline
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]]
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ search_terms=()
+ declare -a search_terms
+ local search_pattern
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ serialize_objects
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ] ]]
+ local count=1
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
++ which awk
+++ base64
+ local count=1
++ which awk
+ (( i < count ))
++ echo -e --verbose
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]]
+ local count=1
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/192.168.0.1/cisco
+ echo
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose == \d\e\b\u\g ]]
+ local verbose=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ local verbose=true
'
+ [[ -z '' ]]
+ IFS=' 	
+ debug=false
'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ debug=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ export console_output=false
+ [[ -z true ]]
+ console_output=false
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console ]]
+ (( i = 0 ))
+ search_pattern=10.0.0.1
+ (( i < count ))
+ echo
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ [[ -z '' ]]
+ (( i++ ))
+ [[ false == true ]]
+ script_helper=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ [[ false == true ]]
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ declare -a search_terms
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ search_terms=()
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list != *,* ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ mapfile -t search_terms
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list != *,* ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ mapfile -t search_terms
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ false == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ serialize_objects
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local awk_bin=/usr/bin/awk
++ dirname reports/172.31.255.254/misc/switch1.conf
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ newline
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local count=1
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
++ export divisor=--MTc0ODk0MjE4OTAwMzExMzAwMAo--
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ divisor=--MTc0ODk0MjE4OTAwMzExMzAwMAo--
+ local search_pattern
+ source ./scripts/devops-helpers.shell
+ local 'indent=            '
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ tr -d '\r'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ export targets_location=targets
++ [[ 5 -lt 4 ]]
++ targets_location=targets
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(export|r)$ ]]
++ echo reports/10.0.1.2/misc/switch1.conf
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ case "${target_platform}" in
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console --export --verbose
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
++ tr -d '\r'
+ (( i < count ))
++ tr -d '\r'
+ echo
+ awk -v divisor=--MTc0ODk0MjE4ODI3NTgzNzAwMAo-- '
                    BEGIN {
+ (( i++ ))
                      blk = "";
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
                      in_json_header = 0;
                    }
+ oIFS=' 	

'
                    # Skip blank lines
++ printf '%*s' 12 ''
                    /^[[:space:]]*$/ { next }
+ for xitem in "${@}"

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ IFS==
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ read -r key value
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ [[ verbose =~ ^(search|s)$ ]]

++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
++ grep -v '^\s*$'
                      if (blk != "" && !seen[blk]++) print blk;
++ alias network-extract--helper=network_extract__helper
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
++ cut -d/ -f2
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ local verbose=true
++ grep -v '^\s*$'
+ IFS=' 	
++ grep -v '^\s*$'
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
++ grep -v '^#'
+ [[ true == true ]]
++ cut -d/ -f2
+ grep -F 10.0.1.2
++ printf '%*s' 12 ''
++ grep -v '^#'
++ grep -v '^#'
+++ date +%s%N
+ alias parse-cisco=main
++ dirname -- ./scripts/network-extract.shell
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -z true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -z '' ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local parent_dir=reports/172.31.255.254/misc
+ script_helper=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'indent=            '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
+ local 'indent=            '
+ newline
+ [[ true == true ]]
++ echo -e --export
+ local parent_dir=reports/192.0.2.50/cisco
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
  "model": "",
+ search_pattern=10.0.1.2
  "version": "",
  "domain": "",
+ mkdir -p reports/10.0.1.2/misc/.objects
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ newline
  "hostname": ""
+ (( i < count ))
+ local count=1
}
+ local count=1
+ (( i = 0 ))
++ printf '%*s' 12 ''
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ local first_search_entry=203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ search_terms=()
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo

+ declare -a search_terms
+ local first_search_entry=192.168.0.100
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local last_search_entry=203.0.113.25
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
object-group network Panther-Edge
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ search_pattern=10.0.2.3
+ local last_search_entry=10.0.0.1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ local last_search_entry=192.168.0.100
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ] ]]
+ ((  count == 0  ))
+ sed '/^[[:space:]]*$/d'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
 description Internet-facing proxy systems
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ] ]]
+ newline
+ case "${target_platform}" in
+ ((  count == 0  ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ cut -d/ -f2
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ newline
+ (( i = 0 ))
+ awk -v divisor=--MTc0ODk0MjE4ODMxODM4OTAwMAo-- '
+ local count=1
                    BEGIN {
+ (( i = 0 ))
                      blk = "";
                      in_json_header = 0;
+ (( i < count ))
+ (( i < count ))
                    }
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline

                    # Skip blank lines
+ local count=1
                    /^[[:space:]]*$/ { next }

+ (( i = 0 ))
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ (( i < count ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ echo
                    (in_json_header == 1) { next }
+ echo

                    # Skip platform metadata
+ (( i++ ))
                    /^#(hostname|model|config-version)=/ { next }
+ (( i++ ))

                    # Start of a new block
+ echo
+ (( i < count ))
+ echo
                    /^config / {
 network-object host 203.0.113.25
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
                      if (blk != "") print blk;
+ (( i++ ))
+ (( i < count ))
                      blk = $0;
+ (( i < count ))
++ basename reports/172.31.255.254/misc/switch1
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
                      next;
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ [[ conf == \c\o\n\f ]]
                    }
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '

+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 network-object host 172.16.0.5
                    # Add edit line to current block
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
+ [[ -z cisco ]]
                    }

+ [[ true == true ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ [[ -z cisco ]]
                    }
+ local script_filename=cisco-configs.awk
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i++ ))
+ grep -F 10.0.0.1
++ export divisor=--MTc0ODk0MjE4OTAxNTc0MjAwMAo--
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-configs--ips.list ]'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ divisor=--MTc0ODk0MjE4OTAxNTc0MjAwMAo--
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'

+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ source ./scripts/devops-helpers.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
object network Edge-Terminal
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 host 172.16.0.5
+ script_filename=network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Internet firewall handoff'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local count=1
++ [[ -n '' ]]
+ script_filename=network-extract
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ __DEVOPS_HELPERS_SOURCED=1
+ export network_extract__console=logs/console/network-extract.console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ network_extract__console=logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ touch logs/console/network-extract.console
+ result=0
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n {
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "vendor": "cisco",
  "model": "",
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
  "version": "",
  "domain": "",
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "hostname": ""
+ ((  count == 0  ))
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
}
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
++ alias parse-listings--helper=parse_listings__helper
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias network-configs--helper=network_configs__helper
+ message '                .cache/resources/misc/switch3.conf'
++ dirname reports/10.0.0.1/misc/switch1.conf
+ sed '/^[[:space:]]*$/d'
++ tr -d '\r'
++ alias network-extract--helper=network_extract__helper
+ local parent_dir=reports/192.168.1.10/fortinet
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ alias serialize-object=serialize_objects
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]

+ newline
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ local count=1
 network-object host 172.16.0.5
+ search_pattern=10.10.10.10

object network Edge-Terminal
+ local 'extracted_configuration={
+ result=0
  "vendor": "cisco",
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
  "model": "ASA",
 host 172.16.0.5
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ export =~ ^(console|o)$ ]]
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local search_pattern
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
++ which awk
  "version": "9.12(4)",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "global.dmz.example.net",
+ local 'message=                .cache/resources/misc/switch3.conf'
++ grep -v '^\s*$'
  "hostname": "dmz-fw2-backup"
 description Internet firewall handoff ]]
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ echo
+ alias parse-cisco=main
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ local search_pattern
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z x ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ echo
+ echo -e '                .cache/resources/misc/switch3.conf'
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ export logs_location=logs
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ logs_location=logs
+ result=0
+ (( i < count ))
+ mkdir -p logs/console
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ read -r key value
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
  "vendor": "cisco",
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "model": "ASA",
  "version": "9.12(4)",
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -z cisco ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
}
+ [[ true == true ]]
+ newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ local count=1
++ grep -v '^#'
+ (( i = 0 ))
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ [[ search == \d\e\b\u\g ]]
+ echo
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
 network-object host 198.51.100.75'

+ result=0
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ output_dir=reports/10.0.0.1/misc
+ [[ 7 -eq 0 ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.d181t1wb3o/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ result=0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ 0 -ne 0 ]]
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ true == true ]]
object network Sentinel-NAT
 host 203.0.113.25
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console --export --verbose
 description Corporate NAT edge ]]
+ [[ -n {
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "model": "",
  "domain": "",
+ (( i < count ))
  "version": "",
++ echo reports/172.31.255.254/misc/switch1.conf
+ oIFS=' 	
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
object network Edge-Terminal
+ case "${target_platform}" in
 host 172.16.0.5
 description Internet firewall handoff'
+ awk -v divisor=--MTc0ODk0MjE4ODMzNzQyMDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ case "${target_platform}" in
'
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "hostname": "branch-isr-02"
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
                    blk = $0;
                    next;
+ IFS==
                  }
+ read -r key value
                  {
                    blk = blk divisor " " $0;
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
                  }
                  END {
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ awk -v divisor=--MTc0ODk0MjE4ODI4OTUwOTAwMAo-- '
                  }
                ' reports/10.0.1.2/misc/switch1.conf
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
++ cut -d/ -f2
                    if (in_json_header == 1) {
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                      in_json_header = 0;
                      next;
                    }
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ newline
                    blk = $0;
+ local count=1
+ echo
+ (( i = 0 ))
                    next;
+ (( i < count ))
+ (( i++ ))
+ echo
                  }
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
+ (( i < count ))
+ (( i < count ))
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ print '{
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
  "vendor": "cisco",
  "model": "ASA",
+ [[ cfg == \c\f\g ]]
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
  "version": "9.12(4)",
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ case "${target_file}" in
+ script_filename=network-extract.shell
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ cut -d/ -f2
  "domain": "global.dmz.example.net",
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ conf == \c\o\n\f ]]
  "hostname": "dmz-fw2-backup"
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
}

+ final_output=reports/10.0.0.1/misc/switch3.conf
+ script_filename=network-extract
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ export network_extract__console=logs/console/network-extract.console
object network Sentinel-NAT
 host 203.0.113.25
+ network_extract__console=logs/console/network-extract.console
 description Corporate NAT edge'
+ local first_search_entry=10.10.10.10
+ touch logs/console/network-extract.console
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
++ echo -e --verbose
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ [[ true == true ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ command -v -- ./scripts/network-extract.shell
+ grep -F 10.0.1.2
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ grep -F 10.0.2.3
++ IFS=,
++ echo 192.168.0.1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ dirname reports/10.0.0.1/misc/switch3.conf
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local search_pattern
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=172.31.255.254
+ print '{
  "vendor": "cisco",
  "model": "",
+ mkdir -p reports/172.31.255.254/misc/.objects
  "version": "16.9",
  "domain": "",
+ newline 2
  "hostname": "branch-isr-02"
+ cat -n
}
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'

+ sed '1{/^[[:space:]]*$/d;}'
+ newline
version 16.9
hostname branch-isr-02
+ local count=1

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ search_pattern=192.0.2.50
+ (( i = 0 ))
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local 'extracted_configuration={
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
+ [[ -n {
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "vendor": "cisco",
+ case "${target_platform}" in
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "dmz-fw2-backup"
  "hostname": "branch-isr-02"
}

}
ASA Version 9.12(4)

+ awk -v divisor=--MTc0ODk0MjE4ODI4OTMwMzAwMAo-- '
hostname dmz-fw2-backup
+ output_dir=reports/203.0.113.25/cisco
version 16.9
domain-name global.dmz.example.net
hostname branch-isr-02
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ 7 -eq 0 ]]
                  BEGIN {
+ local 'extracted_configuration={

+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
                    in_json_header = 0;
interface GigabitEthernet0/0/1
                    blk = "";
+ local 'extracted_configuration={
                  }
 ip address 192.168.2.12 255.255.255.0
                  /^[[:space:]]*$/ { next }
+ local count=2
 description Workstation LAN
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console --export --verbose
                  /^{$/ { in_json_header = 1; next }
+ local 'extracted_configuration={

+ [[ verbose =~ ^(config|c)$ ]]
                  /^}$/ {
object-group network Hydra-Edge
  "vendor": "cisco",
 description Remote site uplink
 network-object host 192.168.2.12
                    if (in_json_header == 1) {
 network-object host 198.51.100.75 ]]
                      in_json_header = 0;
+ output_dir=reports/10.0.0.1/misc
                      next;
+ echo -en '{
                    }
+ [[ ! -d reports/10.0.0.1/misc ]]
+ (( i = 0 ))
                  }
  "vendor": "cisco",

  "vendor": "cisco",
  "model": "",
+ echo
  "model": "",
  "version": "16.9",
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
  "vendor": "fortinet",
  "domain": "",
+ local 'prompt_message=Enter configuration file to be parsed: '
  "hostname": "branch-isr-02"
}
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list

                  (in_json_header == 1) { next }
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
                  /^[^[:space:]]/ {
'
version 16.9
                    if (blk != "" && !seen[blk]++) print blk "\n";
hostname branch-isr-02
                    blk = $0;
+ for xitem in "${@}"

+ (( i < count ))
  "model": "",
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
interface GigabitEthernet0/0/1
++ which awk
interface GigabitEthernet0/1
+ echo
  "version": "12.2",
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
  "version": "",
+ sed '/^[[:space:]]*$/d'
                    next;
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
                  }
  "model": "FortiGate-60F",
+ [[ verbose =~ ^(console|o)$ ]]
 ip address 192.168.2.12 255.255.255.0
                  {
 description Workstation LAN
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ read -r key value

                    blk = blk divisor " " $0;
object-group network Hydra-Edge
+ [[ search =~ ^(config|c)$ ]]
 description Remote site uplink
                  }
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ case "${target_file}" in
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
  "domain": "",

+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ grep -F 10.10.10.10
+ (( i++ ))
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ search =~ ^(logger|l)$ ]]
  "version": "v7.2.5.F",
+ (( i < count ))
}
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
object network Titan-WLAN-Host
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
 host 192.168.100.100
  "domain": "",
  "hostname": ""
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
 description Backup inside NAT IP
  "hostname": "fg-branch-vpn-01"
+ local count=1

+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
}
+ IFS==
+ read -r key value


+ [[ config =~ ^(console|o)$ ]]
interface Vlan2
object-group network Sector-Wireless
 ip address 172.16.1.6 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ cat -n
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 172.16.1.6
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(extract|x)$ ]]
+ (( i = 0 ))
}
 description Staff WiFi clients
+ (( i < count ))
+ (( i < count ))
 network-object host 192.168.100.100
version 12.2

 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
+ [[ verbose == \h\e\l\p ]]
  "vendor": "cisco",
++ cut -d/ -f2
+ [[ config =~ ^(logger|l)$ ]]
  "model": "",
+ newline
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ local verbose=true
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS=' 	
'
+ [[ -z '' ]]
hostname campus-sw-access01
+ debug=false

+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
object-group network Floor-Networks
+ export console_output=false
 description End-user and service devices
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
 network-object host 192.168.0.1
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  "version": "",
  "domain": "",
  set alias "User LAN"
 next
  "hostname": ""
end

+ result=0
+ [[ config == \h\e\l\p ]]
+ newline 2
+ [[ config == \d\e\b\u\g ]]
+ [[ -n {
+ [[ config == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ config == \v\e\r\b\o\s\e ]]
  "model": "ASA",
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
  "version": "9.12(4)",
 network-object host 192.168.0.100
+ read -r key value
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
config firewall address
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 10.10.10.10'
+ console_output=false
+ [[ 0 -ne 0 ]]
+ local awk_bin=/usr/bin/awk
+ newline 2
  "domain": "global.dmz.example.net",
+ result=0
  "hostname": "dmz-fw2-backup"
}
}
+ return 0
+ local SCRIPT_DIR=./scripts
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Branch-Gateway"
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ -z true ]]

+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console ]]
+ newline
+ [[ true == true ]]

ASA Version 9.12(4)
interface Vlan2
+ newline
+ [[ -n {
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
 ip address 172.16.1.6 255.255.255.0 ]]
  "vendor": "cisco",
  set subnet 192.168.2.12 255.255.255.255
+ [[ 0 -ne 0 ]]
  "model": "",
hostname dmz-fw2-backup
+ [[ -z '' ]]
  "version": "12.2",
+ local count=1
+ script_helper=false
  "domain": "",
domain-name global.dmz.example.net
+ [[ true == true ]]
+ local count=2
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ false == true ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
  set comment "Primary LAN gateway"
+ (( i < count ))
  "hostname": "campus-sw-access01"
+ echo
+ local count=2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
}
 next
+ local script_filename=cisco-configs.awk

+ (( i++ ))
end'
+ (( i < count ))
interface GigabitEthernet0/1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console ]]

+ search_pattern=192.168.1.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ echo
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
version 12.2
+ echo
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ (( i < count ))
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ search_terms=()
hostname campus-sw-access01
+ result=0

+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console ]]
object-group network Floor-Networks
+ cat -n reports/172.16.0.5/misc/fw3.cfg
 nameif inside
+ grep -F 172.16.0.5
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ declare -a search_terms
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ [[ -n {
+ echo
+ newline
  "vendor": "fortinet",
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list != *,* ]]
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
 ip address 192.168.100.100 255.255.255.0
  "model": "FortiGate-60F",
+ case "${target_file}" in
+ (( i < count ))
 description End-user and service devices
+ local count=1
+ (( i++ ))
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ (( i < count ))
+ echo
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ (( i++ ))
+ mapfile -t search_terms
+ newline
 description Inside LAN segment
  "version": "v7.2.5.F",
+ [[ true == true ]]

+ [[ true == true ]]
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 192.168.0.1
object network Titan-WLAN-Host
 network-object host 192.168.0.100
 host 192.168.100.100
+ case "${target_platform}" in
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
+ echo
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ awk -v divisor=--MTc0ODk0MjE4ODMzOTU4ODAwMAo-- '
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console ]]
                  BEGIN {
 edit "internal"
                    in_json_header = 0;
                    blk = "";
  set ip 192.168.2.12 255.255.255.0
                  }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
 description Backup inside NAT IP
                  /^[[:space:]]*$/ { next }
  set alias "User LAN"

+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
 next
                  /^{$/ { in_json_header = 1; next }
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console ]]
 network-object host 10.10.10.10 ]]
object-group network Sector-Wireless
+ result=0
                  /^}$/ {
+ print '{
 description Staff WiFi clients
                    if (in_json_header == 1) {
+ case "${target_file}" in
end
  "vendor": "cisco",
+ case "${target_platform}" in
  "model": "",
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]

+ local SCRIPT_DIR=./scripts
config firewall address
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
  "version": "",
+ (( i < count ))
 network-object host 192.168.100.100
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
                      in_json_header = 0;
++ printf '%*s' 12 ''
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
  "domain": "",
                      next;
  "hostname": ""
}
+ [[ cfg == \c\f\g ]]
+ local script_filename=cisco-configs.awk

                    }
interface Vlan2
                  }
                  (in_json_header == 1) { next }
+ [[ 0 -ne 0 ]]
 edit "Branch-Gateway"
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
 network-object host 10.10.10.10 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
                  /^[^[:space:]]/ {
 ip address 172.16.1.6 255.255.255.0'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ awk -v divisor=--MTc0ODk0MjE4ODM0MzgzOTAwMAo-- '
                    next;
+ local SCRIPT_DIR=./scripts
                  BEGIN {
                    in_json_header = 0;
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
                  }
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ -n {
                  /^{$/ { in_json_header = 1; next }
  "vendor": "cisco",
+ local script_filename=cisco-configs.awk
                  /^}$/ {
  "model": "",
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
                  {
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
  "version": "",
                    if (in_json_header == 1) {
+ local script_filepath=./scripts/extract/cisco-configs.awk
  set subnet 192.168.2.12 255.255.255.255
+ local 'indent=            '
+ [[ true == true ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
                      in_json_header = 0;
  set comment "Primary LAN gateway"
  "domain": "",
+ grep -F 172.31.255.254
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
                      next;
  "hostname": ""
                    blk = blk divisor " " $0;
                    }
}
                  }
                  END {
                  }

                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
interface Vlan2
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
 ip address 172.16.1.6 255.255.255.0 ]]
                    blk = $0;
                ' reports/172.31.255.254/misc/switch1.conf
+ echo -en '{
                    next;
                  }
  "vendor": "cisco",
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
  "model": "",
  "version": "",
                  {
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
  "domain": "",
                    blk = blk divisor " " $0;
  "hostname": ""
                  }
}
                  END {

                    if (blk != "" && !seen[blk]++) print blk "\n";
interface Vlan2
                  }
 ip address 172.16.1.6 255.255.255.0'
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
++ which awk
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
 next
end ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local target_config=.cache/resources/misc/fw1.cfg
+ echo
+ [[ config =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ grep -F 192.0.2.50
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ [[ config == \d\r\y\-\r\u\n ]]

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 10.10.10.10 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ echo -en '{
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ read -r key value
  "vendor": "cisco",
+ [[ search == \h\e\l\p ]]
  "model": "",
  "version": "12.2",
+ [[ search == \d\e\b\u\g ]]
  "domain": "",
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
  "hostname": "campus-sw-access01"
+ [[ search == \d\r\y\-\r\u\n ]]
++ which awk
}
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]

+ for xitem in "${@}"
version 12.2
hostname campus-sw-access01
++ tr -d '\r'
+ IFS==
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'

+ read -r key value
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
++ grep -v '^\s*$'

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ grep -v '^#'
+ print '{
  "vendor": "fortinet",
+ sed '/^[[:space:]]*$/d'
  "model": "FortiGate-60F",
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
+ sed '1{/^[[:space:]]*$/d;}'
  set ip 192.168.2.12 255.255.255.0
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
  set alias "User LAN"
 next
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
end
++ echo -e --config=.cache/resources/misc/fw3.cfg

+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
config firewall address
 edit "Branch-Gateway"
+ case "${target_file}" in
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ cat reports/10.0.1.2/misc/.objects/switch1.list
 next
end'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-60F",
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
  "version": "v7.2.5.F",
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ true == true ]]

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ newline 2
  set comment "Primary LAN gateway"
+ [[ extract =~ ^(config|c)$ ]]
 next
end ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo -en '{
  "vendor": "fortinet",
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ result=0
  "model": "FortiGate-60F",
+ [[ extract =~ ^(extract|x)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ cat -n

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local count=1
config firewall address
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ (( i = 0 ))
 edit "Branch-Gateway"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
+ echo
  set comment "Primary LAN gateway"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
end'
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ (( i++ ))
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ newline
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local count=1
++ IFS=,
+ (( i = 0 ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo
+ local count=2
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
++ echo 203.0.113.25
+ [[ true == true ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
++ IFS=,
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ extract =~ ^(platform|p)$ ]]
++ echo 10.0.0.1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console ]]
+ declare -a execute
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ cat -n
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ [[ extract == \h\e\l\p ]]
++ which awk
+ [[ extract == \d\e\b\u\g ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ local first_search_entry=192.168.1.10
+ (( i = 0 ))
+ (( i < count ))
+ local last_search_entry=192.168.1.10
+ echo
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i++ ))
+ [[ true == true ]]
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ awk -v divisor=--MTc0ODk0MjE4ODM0MTI3ODAwMAo-- '
+ newline
                    BEGIN {
                      blk = "";
+ local target_config=.cache/resources/misc/fw3.cfg
+ newline 2
                      in_json_header = 0;
+ result=0
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
                    }
+ [[ extract == \v\e\r\b\o\s\e ]]
+ output_dir=reports/192.168.0.100/cisco
+ cat -n

+ [[ ! -d reports/192.168.0.100/cisco ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
                    # Skip blank lines
+ newline
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ config =~ ^(extract|x)$ ]]

+ [[ true == true ]]
                    # Skip platform metadata
+ [[ config =~ ^(logger|l)$ ]]
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ [[ config =~ ^(platform|p)$ ]]
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ [[ config =~ ^(search|s)$ ]]
                      next;
                    }
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ config == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'

+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ] ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
                    # Add edit line to current block
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
                    /^ edit / {
+ [[ config == \d\r\y\-\r\u\n ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ 0 -ne 0 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
                      blk = blk divisor " " $0;
+ local count=1
+ read -r key value
++ IFS=,
+ local count=2
                      next;
+ for xitem in "${@}"
                    }
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'

++ echo 10.0.0.1
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ newline 2
                    # Add next to block
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ IFS==
                    /^ next$/ {
+ local count=1
                      blk = blk divisor " " $0;
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ read -r key value
+ [[ true == true ]]
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
                      next;
+ (( i < count ))
                    }

+ echo
+ [[ extract =~ ^(extract|x)$ ]]
                    # Finalize block at end
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
                    /^end$/ {
+ (( i < count ))
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ echo
+ newline
                      blk = blk divisor " " $0;
+ [[ extract =~ ^(logger|l)$ ]]
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ serialize_objects
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
                      next;
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
                    }
+ return 0
+ local count=1
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ declare -a execute

+ local count=1
                    # Accumulate middle lines
+ [[ extract == \d\r\y\-\r\u\n ]]
                    {
+ local count=1
+ (( i = 0 ))
                      blk = blk divisor " " $0;
+ (( i = 0 ))
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
                    }
+ ((  count == 0  ))

+ (( i < count ))
                    END {
                      # No need for final print — all blocks end with end
+ for xitem in "${@}"
+ echo
                    }
+ (( i < count ))
+ echo
+ echo
+ local count=2
+ [[ true == true ]]
+ IFS==
+ echo
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo
+ grep -F 192.168.1.10
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ (( i++ ))
+ newline
+ (( i++ ))
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ (( i < count ))
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ (( i < count ))
+ (( i++ ))
+ [[ false == true ]]
+ [[ false == true ]]
+ (( i < count ))
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ true == true ]]
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ (( i < count ))
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console ]]
+ newline
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ case "${target_file}" in
+ echo
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ [[ true == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z cisco ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline 2
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ newline
+ newline
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ local count=1
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local count=2
+ (( i < count ))
+ newline
+ echo
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ serialize_objects
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ cat -n
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
++ echo -e --platform=fortinet
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ local count=1
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ serialize_objects
+ (( i < count ))
++ which awk
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ local 'indent=            '
+ [[ true == true ]]
+ output_dir=reports/10.10.10.10/cisco
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ (( i++ ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ newline
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vi4kC272Jc ]]
+ local count=1
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ result=0
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
++ dirname -- ./scripts/network-extract.shell
+ exit 0
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/misc/switch3.conf'
+ (( i++ ))
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ return 0
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vi4kC272Jc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yP23LXmHdR ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yP23LXmHdR
+ case "${target_file}" in
+ local 'extracted_configuration={
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ local parent_dir=reports/172.16.0.5/misc

version 12.2
+ result=0
hostname campus-sw-access01

+ [[ 0 -ne 0 ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ [[ true == true ]]
 description Switch Mgmt
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console ]]

object-group network Floor-Networks
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
 description End-user and service devices
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console ]]
+ newline
+ case "${target_file}" in
+ newline
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ true == true ]]
+ local count=1
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
 network-object host 10.10.10.10'
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ result=0
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ local count=1
  "domain": "",
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
  "hostname": "campus-sw-access01"
}

version 12.2
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ cat -n
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ return 0
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
 description Switch Mgmt
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]

+ [[ extract == \h\e\l\p ]]
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ case "${target_file}" in
++ basename reports/172.16.0.5/misc/fw3
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
object-group network Floor-Networks
 description End-user and service devices
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 192.168.0.1
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local parent_dir=reports/192.168.2.12/cisco
+ newline
+ serialize_objects
+ local SCRIPT_DIR=./scripts
 network-object host 192.168.0.100
+ local count=1
+ local target_platform=fortinet
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
 network-object host 10.10.10.10 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ newline
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
++ echo -e --platform=cisco
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ local count=1
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ serialize_objects
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ echo
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ IFS==
+ read -r key value
++ dirname reports/172.16.1.6/misc/switch3.conf
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FRMuatbFyV/network-extract--switch1.conf.console
++ basename reports/192.168.2.12/cisco/branch-isr-02
++ printf '%*s' 12 ''
++ which awk
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ true == true ]]
+ local search_pattern
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--branch-isr-02.cfg.console
+ local 'indent=            '
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
  "model": "",
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
  "version": "",
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console ]]
+ local count=1
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
  "hostname": ""
+ (( i < count ))
+ case "${target_file}" in
+ echo
}
+ newline
+ echo

interface Vlan1
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ local count=1
+ local 'extracted_configuration={
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ (( i = 0 ))
 ip address 10.0.0.1 255.255.255.0
+ print '{
  "vendor": "cisco",
+ (( i++ ))

+ (( i < count ))
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--access-sw1-west.cfg.console
object-group network Spider-Net
  "model": "",
  "version": "12.2",
  "model": "ASA",
 description Web access switches
  "domain": "",
+ [[ false == true ]]
  "version": "9.14(3)",
 network-object host 10.0.0.1
  "domain": "edge.dc.example.com",
  "hostname": "campus-sw-access01"
 network-object 192.168.12.0 255.255.255.0'
  "hostname": "perimeter-fw1"
}
}


version 12.2
ASA Version 9.14(3)
hostname campus-sw-access01
+ result=0

hostname perimeter-fw1
+ echo
interface Vlan1
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ (( i < count ))

domain-name edge.dc.example.com
  "model": "",
  "version": "",
object-group network Floor-Networks

++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
interface GigabitEthernet0/0
  "hostname": ""
}
 description End-user and service devices
+ (( i++ ))
 nameif outside
+ (( i < count ))

++ dirname reports/192.168.1.10/misc/fw3.cfg
 network-object host 192.168.0.1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
interface Vlan1
 security-level 0
+ [[ false == true ]]
 network-object host 192.168.0.100
 ip address 10.0.0.1 255.255.255.0
 ip address 203.0.113.25 255.255.255.0
 network-object host 10.10.10.10'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]

 description External Internet-facing Interface
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

object-group network Spider-Net
object network NAT-Edge
 description Web access switches
 host 203.0.113.25
 network-object host 10.0.0.1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Internet-bound IP NAT
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ -n {
  "vendor": "cisco",

  "model": "",
object-group network Avengers-DMZ
  "version": "12.2",
+ [[ true == true ]]
 description Public access layer
  "domain": "",
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
 network-object host 192.0.2.50
  "hostname": "campus-sw-access01"
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
}
 description Internet-facing proxy systems

 network-object host 203.0.113.25
version 12.2
 network-object host 172.16.0.5'
hostname campus-sw-access01
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ result=0
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n {
+ echo -en '{
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
  "vendor": "cisco",
  "model": "",
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
  "version": "12.2",
  "domain": "",
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
  "hostname": "campus-sw-access01"
}

version 12.2
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
  "vendor": "cisco",
hostname campus-sw-access01
  "model": "ASA",
+ serialize_objects

  "version": "9.14(3)",
interface Vlan1
  "domain": "edge.dc.example.com",
 ip address 192.168.0.1 255.255.255.0
  "hostname": "perimeter-fw1"
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.10.10.10'
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ print '{
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "vendor": "cisco",
  "model": "",
  "version": "",
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "domain": "",
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
++ echo reports/172.16.0.5/misc/fw3.cfg
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
}
+ message '             -f ./scripts/extract/cisco-configs.awk \'

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'

object-group network Spider-Net
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ message '                .cache/resources/misc/switch1.conf'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ echo -en '{
+ local 'message=                .cache/resources/misc/switch1.conf'
  "vendor": "cisco",
+ [[ platform =~ ^(config|c)$ ]]
  "model": "",
+ echo -e '                .cache/resources/misc/switch1.conf'
  "version": "",
  "domain": "",
  "hostname": ""
}

+ newline
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ cut -d/ -f2
+ IFS==
+ local count=1
+ read -r key value
+ serialize_objects
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
  "version": "9.14(3)",
+ echo
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ local parent_dir=reports/172.16.1.6/misc
+ (( i++ ))
}
+ (( i < count ))
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list

+ newline
ASA Version 9.14(3)
+ return 0
hostname perimeter-fw1
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
domain-name edge.dc.example.com
+ local count=1

interface GigabitEthernet0/0
+ (( i = 0 ))
 nameif outside
+ (( i < count ))
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ sed '1{/^[[:space:]]*$/d;}'
+ output_dir=reports/192.168.1.10/misc
object-group network Avengers-DMZ
+ local search_pattern
+ [[ ! -d reports/192.168.1.10/misc ]]
 description Public access layer
 network-object host 192.0.2.50
+ [[ true == true ]]
 network-object host 203.0.113.25
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
 network-object 192.168.2.0 255.255.255.0

+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(console|o)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object-group network Panther-Edge
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console ]]
 description Internet-facing proxy systems
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 203.0.113.25
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console ]]
+ exit 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ local search_pattern
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5du58emiwk ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console ]]
 network-object host 172.16.0.5'
+ (( i < count ))
+ case "${target_file}" in
+ [[ logger =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8DhIYEPM8r/network-extract--switch1.conf.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local parent_dir=reports/10.10.10.10/cisco
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5du58emiwk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n {
+ declare -a execute
  "vendor": "cisco",
+ [[ logger =~ ^(search|s)$ ]]
  "model": "ASA",
+ [[ logger == \h\e\l\p ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ logger == \d\e\b\u\g ]]
}
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/0
+ for xitem in "${@}"
 nameif outside
+ local SCRIPT_DIR=./scripts
 security-level 0
+ IFS==
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ read -r key value
 description Internet-bound IP NAT
+ sed '1{/^[[:space:]]*$/d;}'

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ result=0
+ exit 0

interface GigabitEthernet0/0
 nameif outside
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZcEULDOF05 ]]
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZcEULDOF05

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ [[ true == true ]]

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ basename reports/172.16.1.6/misc/switch3
+ newline 2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console ]]
++ IFS=,
+ case "${target_file}" in
++ echo 192.168.0.100
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ local count=2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline 2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local count=2
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ result=0
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
+ echo
++ echo -e --export
+ [[ logger =~ ^(platform|p)$ ]]
+ exit 0
+ search_pattern=172.16.0.5
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ true == true ]]
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ cut -d/ -f2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline 2
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local parent_dir=reports/192.168.100.100/cisco
+ echo
+ echo
+ mkdir -p reports/172.16.0.5/misc/.objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eTCatpHlAv ]]
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local parent_dir=reports/192.168.2.12/fortinet
+ [[ logger == \v\e\r\b\o\s\e ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eTCatpHlAv
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ for xitem in "${@}"
+ local search_pattern
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ IFS==
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
++ which awk
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FdMHsj3W5y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FdMHsj3W5y
+ read -r key value
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ [[ logger =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local search_pattern
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ search_pattern=192.168.2.12
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/cisco/.objects
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ [[ export =~ ^(config|c)$ ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
+ IFS==
+ mkdir -p logs/console
+ read -r key value
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
++ echo -e --export
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
++ echo reports/172.16.1.6/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ tr -d '\r'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ cut -d/ -f2
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ grep -v '^\s*$'
+ sed '/^[[:space:]]*$/d'
++ echo -e --export
++ grep -v '^#'
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ local SCRIPT_DIR=./scripts
+ local awk_bin=/usr/bin/awk
+ local script_filename=cisco-configs.awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ 7 -eq 0 ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kpneuhsklv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console --export --verbose
+ oIFS=' 	
'
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ IFS==
+ local script_filename=cisco-configs.awk
+ read -r key value
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ true == true ]]
+ newline
+ local count=1
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ] ]]
+ return 0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ result=0
+ [[ true == true ]]
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ ((  count == 0  ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ result=0
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
++ which awk
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local first_search_entry=10.0.2.3
+ [[ export =~ ^(config|c)$ ]]
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ local 'indent=            '
+ [[ export =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ which awk
+ [[ export =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
++ echo 198.51.100.75
+ local count=1
+ exit 0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ] ]]
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-configs--ips.list ]'
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ newline
+ IFS==
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ echo
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ platform =~ ^(console|o)$ ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ newline
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ case "${target_file}" in
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ echo
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(export|r)$ ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.THrNmwJsGC ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ return 0
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ newline
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ cat -n
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
+ read -r key value
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.THrNmwJsGC
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ cat -n
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console ]]
+ [[ logger == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ logger == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ 7 -eq 0 ]]
++ echo reports/172.18.1.20/misc/fw1.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4xxgouqksf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ case "${target_platform}" in
++ echo -e --verbose
+ awk -v divisor=--MTc0ODk0MjE4ODQxMzI4NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
++ IFS=,
++ echo 192.168.0.1
+ output_dir=reports/192.168.1.11/fortinet
+ [[ ! -d reports/192.168.1.11/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
+ newline
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ echo -e --platform=fortinet
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ newline
++ IFS=,
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list
++ echo 198.51.100.75
+ cat -n
++ IFS=,
++ echo 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--perimeter-fw1.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console ]]
++ printf '%*s' 12 ''
+ case "${target_file}" in
+ [[ verbose =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ which awk
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ local 'indent=            '
+ [[ -z true ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ echo
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list != *,* ]]
+ echo
+ mapfile -t search_terms
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ extract =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ which awk
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
}
+ newline
+ (( i++ ))
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))

+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
#hostname="fg-campus-core"
+ (( i < count ))
+ search_pattern=172.18.1.20
+ [[ logger =~ ^(extract|x)$ ]]
#model="FortiGate-200F"
+ return 0
+ [[ logger =~ ^(logger|l)$ ]]
+ echo

+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ mkdir -p reports/172.18.1.20/misc/.objects
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
config firewall address
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ local target_platform=fortinet
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
 edit "Hawkeye-Nest"
+ IFS==
  set subnet 172.16.1.6 255.255.255.255
+ read -r key value
  set comment "Remote sniper node"
 next
++ dirname -- ./scripts/network-extract.shell
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ logger == \h\e\l\p ]]
+ [[ -n {
+ [[ logger == \d\e\b\u\g ]]
  "vendor": "fortinet",
+ [[ logger == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-200F",
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
  "version": "",
  "domain": "",
+ for xitem in "${@}"
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "hostname": "fg-campus-core"
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
}

+ read -r key value
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
 edit "Hawkeye-Nest"
+ final_output=reports/10.0.2.3/misc/fw3.cfg
  set subnet 172.16.1.6 255.255.255.255
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(search|s)$ ]]
  set comment "Remote sniper node"
 next
+ [[ platform =~ ^(config|c)$ ]]
end ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ [[ extract == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ local target_platform=fortinet
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 10.0.2.3
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local awk_bin=/usr/bin/awk
+ IFS==
+ read -r key value
++ echo -e --export
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--perimeter-fw1.cfg.console
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
+ print '{
  "vendor": "fortinet",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
++ dirname reports/10.0.2.3/misc/fw3.cfg

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ grep -v '^\s*$'
+ result=0
++ echo -e --export
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O6LWrUzHaf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.O6LWrUzHaf
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ printf '%*s' 12 ''
+ [[ search =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^#'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ newline
+ [[ search =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list
+ echo
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ return 0
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ IFS==
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ [[ config == \h\e\l\p ]]
+ local count=1
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ output_dir=reports/10.0.2.3/misc
+ echo
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ exit 0
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zNiQZmpU6y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zNiQZmpU6y
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
+ local first_search_entry=192.168.0.1
+ local last_search_entry=192.168.0.1
+ local 'extracted_configuration={
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
  "vendor": "cisco",
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local count=2
  "model": "",
  "version": "16.9",
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
+ local 'indent=            '
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
  "hostname": "branch-isr-02"
+ echo
}
+ [[ export =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'

+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ] ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
+ local export_objects=true
version 16.9
+ [[ export =~ ^(extract|x)$ ]]
+ echo
+ [[ true == true ]]
+ [[ true == true ]]
hostname branch-isr-02
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]

+ (( i < count ))
object network Hydra-Link
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-configs--ips.list ]'
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ export == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ result=0
+ for xitem in "${@}"
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n {
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ IFS==
+ local count=1
  "vendor": "cisco",
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
  "model": "",
  "version": "16.9",
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
}
+ [[ logger =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
+ read -r key value
+ (( i = 0 ))

+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
version 16.9
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
hostname branch-isr-02
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ local count=1

+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
object network Hydra-Link
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
 host 198.51.100.75
+ [[ export =~ ^(export|r)$ ]]
 description Branch NAT egress
+ (( i < count ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ local export_objects=true
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console ]]

+ [[ logger == \h\e\l\p ]]
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
object-group network Hydra-Edge
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 description Remote site uplink
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
 network-object host 192.168.2.12
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
 network-object host 198.51.100.75 ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ echo
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ IFS==
++ dirname -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ (( i++ ))
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ case "${target_file}" in
+ [[ -z fortinet ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ newline
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw1.cfg.console
+ [[ export == \h\e\l\p ]]
+ local count=1
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ case "${target_platform}" in
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ declare -a execute
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ IFS=,
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ awk -v divisor=--MTc0ODk0MjE4ODQ0NTAxNjAwMAo-- '
                  BEGIN {
++ echo 192.168.1.11
                    in_json_header = 0;
+ [[ export == \v\e\r\b\o\s\e ]]
                    blk = "";
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ for xitem in "${@}"
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ IFS==
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ read -r key value
                    blk = $0;
                    next;
                  }
                  {
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
                    blk = blk divisor " " $0;
                  }
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ newline
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ set -euo pipefail
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --verbose
++ echo -e --platform=cisco
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ [[ config =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(search|s)$ ]]
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ [[ config == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config == \d\e\b\u\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "12.4",
+ for xitem in "${@}"
  "domain": "",
  "hostname": "access-sw1-west"
}
+ IFS==
+ read -r key value

version 12.4
hostname access-sw1-west
+ export LC_ALL=C

+ LC_ALL=C
interface Vlan1
+ [[ extract =~ ^(config|c)$ ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ extract =~ ^(console|o)$ ]]
 description Management Interface

+ [[ extract =~ ^(export|r)$ ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 192.168.0.100
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
 network-object host 10.10.10.10'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ result=0
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
  "version": "12.4",
+ [[ extract == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ true == true ]]
  "hostname": "access-sw1-west"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ for xitem in "${@}"
}

+ IFS==
+ [[ cfg == \c\f\g ]]
version 12.4
+ read -r key value
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
+ newline
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ grep -F 172.18.1.20
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ result=0
+ exit 0
+ serialize_objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BUh0hm9YGO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BUh0hm9YGO
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LSf3uNnD3d ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LSf3uNnD3d
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ newline 2
++ mktemp -d
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw1.list
++ echo -e --verbose
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=2
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
  "hostname": "access-sw1-west"
+ (( i = 0 ))
}
+ [[ verbose =~ ^(extract|x)$ ]]

version 12.4
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
hostname access-sw1-west

+ [[ verbose =~ ^(platform|p)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ [[ verbose =~ ^(search|s)$ ]]
object-group network MGMT-ACCESS
+ echo
 description Management objects
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
+ echo
 network-object host 10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ verbose == \d\e\b\u\g ]]
  "hostname": "access-sw1-west"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
}
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg

version 12.4
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
+ [[ export =~ ^(config|c)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ export =~ ^(console|o)$ ]]
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local verbose=true
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ IFS=' 	
+ [[ export =~ ^(logger|l)$ ]]
'
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --platform=fortinet
+ debug=false
+ [[ export =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ dry_run=false
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ cfg == \c\f\g ]]
+ [[ -z '' ]]
+ IFS==
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ export console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ local 'indent=            '
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ local count=1
+ local export_objects=true
+ console_output=false
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ echo
+ [[ -z true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ -z '' ]]
+ newline
+ script_helper=false
+ [[ export == \h\e\l\p ]]
+ local count=1
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ false == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ sed '/^[[:space:]]*$/d'
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ for xitem in "${@}"
+ search_terms=()
+ IFS==
+ declare -a search_terms
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]]
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list != *,* ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ mapfile -t search_terms
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--branch-isr-02.cfg.console
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local parent_dir=reports/172.16.1.6/fortinet
++ IFS=,
++ echo 10.0.2.3
+ local 'extracted_configuration={
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.P0dBcB5ZFH/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ platform =~ ^(export|r)$ ]]
  "domain": "global.dmz.example.net",
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ echo -e --verbose
+ declare -a execute
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ platform =~ ^(extract|x)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ local target_platform=cisco
  "model": "ASA",
  "version": "9.12(4)",
+ [[ platform =~ ^(search|s)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ platform == \h\e\l\p ]]
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
+ [[ platform == \d\e\b\u\g ]]
 nameif outside
+ [[ platform == \d\r\y\-\r\u\n ]]
 ip address 198.51.100.75 255.255.255.0
+ [[ platform == \v\e\r\b\o\s\e ]]
+ cat -n
+ for xitem in "${@}"
+ output_dir=reports/192.168.100.100/fortinet
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
 description Outbound Internet NAT interface ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ newline 2
+ [[ verbose =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ tr -d '\r'
+ [[ verbose == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R06LePlrgk
+ [[ extract == \d\e\b\u\g ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R06LePlrgk
+ [[ verbose == \d\e\b\u\g ]]
+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ result=0
+ echo
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ local verbose=true
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ (( i < count ))
+ IFS=' 	
'
+ read -r key value
+ [[ -z '' ]]
+ debug=false
++ echo -e --verbose
+ echo
+ [[ -z '' ]]
+ export 'nl=\n'
+ (( i++ ))
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ true == true ]]
++ which awk
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
++ grep -v '^\s*$'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ -z true ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ output_dir=reports/192.168.0.1/fortinet
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local search_pattern
++ command -v -- ./scripts/network-extract.shell
+ serialize_objects
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list != *,* ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ verbose =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
++ [[ 5 -lt 4 ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ newline
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -z '' ]]
+ export console_output=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ echo -e --platform=fortinet
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ result=0
+ exit 0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lkaiREMDS8 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lkaiREMDS8
+ [[ verbose =~ ^(logger|l)$ ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ exit 0
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ local 'extracted_configuration={
+ [[ -z '' ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ dry_run=false
  "version": "",
+ [[ -z true ]]
++ alias detect-vendor=detect_vendor
+ [[ -z '' ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t2O1Nlhh6E ]]
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
+ export console_output=false
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t2O1Nlhh6E
++ alias exit-error=exit_error
  "hostname": "fg-campus-core"
+ echo
}
+ console_output=false

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -z true ]]
  set subnet 192.168.1.11 255.255.255.255
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console ]]
  set comment "Captain America’s secure endpoint"
+ [[ -z '' ]]
 next
+ script_helper=false
end'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=192.168.1.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ result=0
+ search_terms=()
+ local last_search_entry=192.168.1.10
+ declare -a search_terms
++ printf '%*s' 12 ''
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ [[ -n {
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i++ ))
  "version": "",
+ (( i < count ))
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ return 0
#model="FortiGate-200F"

config firewall address
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
 edit "Cap-HQ"
+ local count=1
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ [[ true == true ]]
+ ((  count == 0  ))
+ local 'indent=            '
+ [[ true == true ]]
 next
end ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
++ alias list-file=list_file
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
++ alias log-error=log_error
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
++ alias log-info=log_info
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ alias log-warn=log_warn
+ (( i < count ))
+ (( i++ ))
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ (( i < count ))
++ alias print-message=message
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console ]]
++ alias print-newline=newline
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ exit 0
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
++ alias pause=pause
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ tr -d '\r'
+ (( i++ ))
+ echo
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-line=print
+ newline 2
++ cut -d/ -f2
+ (( i++ ))
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
++ tr -d '\r'
++ alias print-file=print_file
+ [[ true == true ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
++ alias relative-configpath=relative_configpath
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ (( i < count ))
++ alias system-metrics=system_metrics
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local count=2
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ echo
+ print '{
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-200F",
+ (( i < count ))
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ newline

#hostname="fg-campus-core"
+ local count=1
#model="FortiGate-200F"

+ (( i = 0 ))
config firewall address
 edit "Cap-HQ"
+ (( i < count ))
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ echo
 next
end'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
++ grep -v '^\s*$'
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
++ grep -v '^\s*$'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local parent_dir=reports/198.51.100.75/cisco
++ dirname -- ./scripts/network-extract.shell
  "hostname": "fg-campus-core"
}

+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'

+ local SCRIPT_DIR=./scripts
config firewall address
+ local script_filename=fortinet-configs.awk
 edit "Cap-HQ"
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ tr -d '\r'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ grep -v '^#'
+ local target_platform=fortinet
++ grep -v '^#'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ IFS==
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
+ read -r key value
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
++ which awk
+ search_pattern=172.16.1.6
+ echo
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ logger =~ ^(logger|l)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ case "${target_file}" in
+ [[ logger =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ logger =~ ^(search|s)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ logger == \h\e\l\p ]]
++ export logs_location=logs
+ [[ logger == \d\e\b\u\g ]]
++ logs_location=logs
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ mkdir -p logs/console logs/jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ newline 2
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local count=2
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.0.1/cisco
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ ((  count == 0  ))
+ local SCRIPT_DIR=./scripts
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local first_search_entry=198.51.100.75
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ logger =~ ^(console|o)$ ]]
+ local last_search_entry=198.51.100.75
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ local count=1
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ local script_filename=fortinet-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ cat -n
+ (( i < count ))
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ] ]]
+ (( i++ ))
+ [[ -z fortinet ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ newline
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ IFS==
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RJ0VrxeotO ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ local count=1
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local first_search_entry=192.168.2.12
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RJ0VrxeotO
+ echo
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--MTc0ODk0MjE4ODQyMDMxODAwMAo-- '
+ local count=1
+ ((  count == 0  ))
++ echo -e --export
                  BEGIN {
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ local 'extracted_configuration={
                    if (in_json_header == 1) {
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
                      in_json_header = 0;
                      next;
  "vendor": "cisco",
                    }
  "model": "",
                  }
  "version": "",
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
  "domain": "",
  "hostname": ""
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
}
                    blk = $0;
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
                    next;

                  }
object-group network Wakanda-Core
 description National Core Routing Zone
                  {
 network-object host 192.168.1.10
+ newline
 network-object host 10.0.2.3
                    blk = blk divisor " " $0;
 network-object 10.0.0.0 255.255.255.0
+ (( i < count ))

object network Panther-Gateway
+ local count=1
 host 10.0.2.3
                  }
 description Secure outbound concentrator'
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
+ result=0
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ echo
  "model": "",
+ (( i++ ))
  "version": "",
+ (( i < count ))
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ local 'prompt_message=Enter configuration file to be parsed: '
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
++ IFS=,
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]

object network Panther-Gateway
 host 10.0.2.3
++ echo 192.168.0.1
 description Secure outbound concentrator ]]
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ export actions_logfile=./logs/console/run.console
+ declare -a execute
+ (( i < count ))
+ local 'indent=            '
+ newline
++ actions_logfile=./logs/console/run.console
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ newline
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ false == true ]]
+ local count=1
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
++ touch ./logs/console/run.console
+ local count=1
+ (( i < count ))
+ serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
  "model": "",
++ which awk
+ (( i = 0 ))
++ dirname reports/192.168.1.10/misc/switch1.conf
+ (( i < count ))
++ echo -e --export
+ echo
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
+ return 0
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ case "${target_platform}" in
+ local search_pattern
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ awk -v divisor=--MTc0ODk0MjE4ODQ0MjAwMjAwMAo-- '
                    BEGIN {
                      blk = "";
+ [[ logger =~ ^(extract|x)$ ]]
                      in_json_header = 0;
                    }
++ which awk

+ [[ logger =~ ^(logger|l)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
  "hostname": ""

}
                    # Skip JSON preamble

                    /^{$/            { in_json_header = 1; next }
object-group network Wakanda-Core
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
 description National Core Routing Zone
                    (in_json_header == 1) { next }
 network-object host 192.168.1.10

 network-object host 10.0.2.3
                    # Skip platform metadata
 network-object 10.0.0.0 255.255.255.0
                    /^#(hostname|model|config-version)=/ { next }


object network Panther-Gateway
                    # Start of a new block
 host 10.0.2.3
                    /^config / {
 description Secure outbound concentrator'
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ [[ -n {
  "vendor": "cisco",
  "model": "",
                      next;
  "version": "",
  "domain": "",
  "hostname": ""
                    }

}
                    # Finalize block at end

                    /^end$/ {
object-group network Wakanda-Core
                      blk = blk divisor " " $0;
 description National Core Routing Zone
++ sed -e '1s|^\(-\)\{1,\}||'
                      if (blk != "" && !seen[blk]++) print blk;
 network-object host 192.168.1.10
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                      blk = "";
 network-object host 10.0.2.3
                      next;
 network-object 10.0.0.0 255.255.255.0
                    }


object network Panther-Gateway
                    # Accumulate middle lines
 host 10.0.2.3
                    {
 description Secure outbound concentrator ]]
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ grep -F 172.16.1.6
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ local export_objects=true
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ serialize_objects
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ sed '/^[[:space:]]*$/d'
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console ]]
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console ]]
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ cfg == \c\f\g ]]
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/198.51.100.75/cisco
+ (( i < count ))
+ echo
+ (( i++ ))
+ grep -F 172.16.0.5
+ (( i < count ))
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo -e --export
++ cut -d/ -f2
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(config|c)$ ]]
++ IFS=,
+ [[ export =~ ^(console|o)$ ]]
++ echo 192.168.100.100
+ [[ export =~ ^(export|r)$ ]]
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ local count=2
+ local 'indent=            '
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
++ echo -e --verbose
+ result=0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
++ dirname -- ./scripts/network-extract.shell
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ newline
+ local parent_dir=reports/192.168.1.11/fortinet
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local count=1
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ local export_objects=true
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ (( i++ ))
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ search_pattern=192.168.0.1
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ declare -a execute
++ export targets_location=targets
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ export =~ ^(logger|l)$ ]]
++ targets_location=targets
+ newline
+ local count=1
+ [[ export =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ echo
++ export targets_logfile=logs/jobs/targets.jobs
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ targets_logfile=logs/jobs/targets.jobs
+ [[ export == \h\e\l\p ]]
+ result=0
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ serialize_objects
+ exit 0
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uJCnEM81Uf ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ IFS==
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uJCnEM81Uf
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ search_pattern=10.10.10.10
+ [[ export =~ ^(logger|l)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ export == \h\e\l\p ]]
+ output_dir=reports/203.0.113.25/fortinet
+ [[ export == \d\e\b\u\g ]]
+ local search_pattern
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ case "${target_file}" in
+ [[ export =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cQByb25RGw/network-extract--fw1.cfg.console
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ local export_objects=true
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ for xitem in "${@}"
+ case "${target_platform}" in
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ IFS==
+ read -r key value
++ which awk
+ awk -v divisor=--MTc0ODk0MjE4ODQyODk2NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
                      next;
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
                    }
                  }
                  (in_json_header == 1) { next }
+ [[ cfg == \c\f\g ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ final_output=reports/198.51.100.75/misc/fw1.cfg
                    blk = $0;
                    next;
                  }
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
                  {
                    blk = blk divisor " " $0;
                  }
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local count=1
                  }
+ (( i = 0 ))
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
++ printf '%*s' 12 ''
+ cat -n
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ grep -F 198.51.100.75
++ command -v -- ./scripts/network-extract.shell
+++ date +%s%N
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ echo -e --verbose
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
+ echo
+ local search_pattern
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ newline
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
++ which awk
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ serialize_objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ return 0
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ -z '' ]]
++ command -v -- ./scripts/network-extract.shell
+ export console_output=false
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ case "${target_platform}" in
+ console_output=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ awk -v divisor=--MTc0ODk0MjE4ODQzMjMzMzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ local SCRIPT_PATH=./scripts/network-extract.shell
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -z '' ]]
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ script_helper=false
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ (( i++ ))
+ local parent_dir=reports/192.168.0.1/cisco
+ (( i < count ))
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ local 'extracted_configuration={
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
  "vendor": "fortinet",
+ mapfile -t search_terms
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ exit 0
++ dirname reports/10.0.2.3/misc/fw3.cfg
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bSCmEpnqlA ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bSCmEpnqlA
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ grep -F 192.168.0.1
 next
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
end ]]
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ export divisor=--MTc0ODk0MjE4OTIwNjI2MTAwMAo--
++ divisor=--MTc0ODk0MjE4OTIwNjI2MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ local script_filename=fortinet-configs.awk
+ echo
++ [[ -n '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i++ ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'indent=            '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local verbose=true
+ print '{
  "vendor": "fortinet",
+ IFS=' 	
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
}
+ debug=false

+ output_dir=reports/198.51.100.75/misc
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ newline
+ [[ ! -d reports/198.51.100.75/misc ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ dry_run=false
++ __DEVOPS_HELPERS_SOURCED=1
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -z true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]

+ export console_output=false
config firewall address
+ console_output=false
 edit "Guardians-Relay"
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z true ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console ]]
end'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ -n {
+ [[ verbose =~ ^(search|s)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
+ local parent_dir=reports/10.0.2.3/misc
  "hostname": "fg-branch-vpn-01"
+ search_terms=()
}
+ declare -a search_terms

#hostname="fg-branch-vpn-01"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]]
#model="FortiGate-60F"
++ alias parse-listings--helper=parse_listings__helper
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list != *,* ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ mapfile -t search_terms

+ [[ verbose == \d\e\b\u\g ]]
config firewall address
 edit "Guardians-Relay"
+ [[ verbose == \d\r\y\-\r\u\n ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ [[ verbose == \v\e\r\b\o\s\e ]]
 next
+ local verbose=true
end ]]
+ echo
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ echo -en '{
+ [[ true == true ]]
+ [[ -z '' ]]
  "vendor": "fortinet",
+ (( i++ ))
+ dry_run=false
  "model": "FortiGate-60F",
++ alias network-configs--helper=network_configs__helper
  "version": "v7.2.5.F",
+ [[ -z true ]]
  "domain": "",
+ [[ -z '' ]]
  "hostname": "fg-branch-vpn-01"
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ export console_output=false

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console ]]
config firewall address
+ console_output=false
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
 next
++ IFS=,
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console ]]
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_file}" in
+ (( i < count ))
++ echo 192.168.1.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--fg-campus-core.cfg.console
++ alias network-extract--helper=network_extract__helper
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ tr -d '\r'
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ which awk
+ [[ -z true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ case "${target_file}" in
+ declare -a execute
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console ]]
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local 'indent=            '
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ [[ true == true ]]
+ script_helper=false
+ [[ false == true ]]
+ local script_filename=fortinet-configs.awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ search_terms=()
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list != *,* ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ mapfile -t search_terms
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ alias serialize-object=serialize_objects
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ search_pattern=192.168.1.11
+ (( i++ ))
++ basename reports/10.0.2.3/misc/fw3
+ (( i < count ))
+ mkdir -p reports/192.168.1.11/fortinet/.objects
++ grep -v '^\s*$'
+ result=0
+ cat -n
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ alias parse-cisco=main
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ which awk
+ mkdir -p logs/console
++ grep -v '^#'
++ which awk
++ tr -d '\r'
++ basename reports/192.168.0.1/cisco/campus-sw-access01
++ grep -v '^\s*$'
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ tr -d '\r'
+ newline 2
++ grep -v '^#'
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ local search_pattern
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ (( i < count ))
+ result=0
+ newline
+ exit 0
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6DyLEsVvKX ]]
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6DyLEsVvKX
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ return 0
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
+ newline
+ case "${target_platform}" in
+ local count=1
+ (( i = 0 ))
+ local first_search_entry=10.10.10.10
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console ]]
+ local last_search_entry=10.10.10.10
+ awk -v divisor=--MTc0ODk0MjE4ODY1NjI3OTAwMAo-- '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
                  BEGIN {
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console ]]
                    in_json_header = 0;
+ (( i < count ))
+ case "${target_file}" in
                    blk = "";
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ [[ true == true ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
++ grep -v '^#'
+ local count=1
++ IFS=,
+ ((  count == 0  ))
++ echo 203.0.113.25
++ dirname -- ./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ printf '%*s' 12 ''
+ declare -a execute
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4ODU4MDk2MDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }
+ grep -F 198.51.100.75

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local count=1
++ IFS=,
++ echo reports/10.0.2.3/misc/fw3.cfg
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo 192.168.2.12
+ local search_pattern
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ cut -d/ -f2
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
  "version": "",
+ [[ export =~ ^(export|r)$ ]]
  "domain": "",
+ search_pattern=172.16.1.6
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ mkdir -p reports/172.16.1.6/misc/.objects
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ result=0
+ local export_objects=true
+ exit 0
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ newline
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))

+ echo
+ case "${target_platform}" in
+ case "${target_platform}" in
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -n {
+ local search_pattern
+ awk -v divisor=--MTc0ODk0MjE4ODQ0MTA0MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
  "vendor": "cisco",
+ awk -v divisor=--MTc0ODk0MjE4ODQxMzAxNDAwMAo-- '
                    blk = "";
                  BEGIN {
                    in_json_header = 0;
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.saPO8S7G7W ]]
                  }
+ (( i++ ))
object-group network Floor-Networks
                  /^[[:space:]]*$/ { next }
                    blk = "";
+ (( i < count ))
+ (( i++ ))
                  }
+ (( i < count ))
 description End-user and service devices
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  /^}$/ {
                    if (in_json_header == 1) {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      in_json_header = 0;
                      next;
                      next;
                    }
                    }
                  }
                  }
                  (in_json_header == 1) { next }
                  (in_json_header == 1) { next }
+ [[ false == true ]]
 network-object host 192.168.0.1
                  /^[^[:space:]]/ {
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ false == true ]]
  "model": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.saPO8S7G7W
  "version": "",
+ local 'indent=            '
                    blk = $0;
  "domain": "",
                    next;
                    blk = $0;
                  }
+ [[ true == true ]]
                  {
  "hostname": ""
+ [[ true == true ]]
                    blk = blk divisor " " $0;
 network-object host 192.168.0.100
                  }
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
                    next;
}
                  END {
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  }

 network-object host 10.10.10.10 ]]
                  {
                    if (blk != "" && !seen[blk]++) print blk "\n";
object-group network Avengers-Office
                    blk = blk divisor " " $0;
++ which awk
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
                  }
 description VLAN access layer
                  END {
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ serialize_objects
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ serialize_objects
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ grep -F 192.168.2.12
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local first_search_entry=198.51.100.75
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local last_search_entry=198.51.100.75
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ case "${target_file}" in
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ grep -F 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --export
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
++ echo -e --verbose
+ sed '/^[[:space:]]*$/d'
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
}

object-group network Avengers-Office
++ dirname reports/10.0.0.1/misc/switch3.conf
 description VLAN access layer
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ cat -n
 network-object host 10.10.10.10'
+ sed '/^[[:space:]]*$/d'
+ [[ -n {
++ cut -d/ -f2
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ cut -d/ -f2
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local parent_dir=reports/203.0.113.25/cisco
+ result=0
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ 0 -ne 0 ]]
+ local parent_dir=reports/10.0.0.1/misc
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ search_pattern=192.168.2.12
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export == \h\e\l\p ]]
+ grep -F 192.168.1.11
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ newline
+ (( i < count ))
+ IFS==
+ (( i < count ))
+ case "${target_platform}" in
+ local 'extracted_configuration={
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local first_search_entry=192.168.2.12
+ result=0
+ [[ verbose =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ echo
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ return 0
+ awk -v divisor=--MTc0ODk0MjE4ODQxMzE0MDAwMAo-- '
                  BEGIN {
+ (( i++ ))
+ [[ true == true ]]
                    in_json_header = 0;
+ [[ verbose =~ ^(search|s)$ ]]
                    blk = "";
                  }
+ search_pattern=192.168.0.1
+ [[ verbose =~ ^(search|s)$ ]]
                  /^[[:space:]]*$/ { next }
++ IFS=,
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ (( i < count ))
                    if (in_json_header == 1) {
+ [[ true == true ]]
                      in_json_header = 0;
++ echo 192.168.1.10
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ case "${target_platform}" in
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ verbose == \h\e\l\p ]]
                    next;
+ mkdir -p reports/192.168.0.1/cisco/.objects
                  }
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ verbose == \d\e\b\u\g ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
+ [[ verbose == \h\e\l\p ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ awk -v divisor=--MTc0ODk0MjE4ODUxMjk0MzAwMAo-- '
                  }
                  BEGIN {
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
                    in_json_header = 0;
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ verbose == \d\e\b\u\g ]]
                    blk = "";
+ [[ verbose == \d\r\y\-\r\u\n ]]
                  }
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
                  /^[[:space:]]*$/ { next }
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
                  /^{$/ { in_json_header = 1; next }
+ local verbose=true
                  /^}$/ {
                    if (in_json_header == 1) {
+ local verbose=true
                      in_json_header = 0;
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console ]]
                      next;
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ IFS=' 	
+ search_pattern=192.168.100.100
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
+ declare -a execute
                    }
'
++ basename reports/10.0.0.1/misc/switch3
+ newline
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ IFS=' 	
'
                  }
                  {
+ [[ -z '' ]]
                    blk = blk divisor " " $0;
                  }
                  END {
+ debug=false
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -z '' ]]
                  }
+ dry_run=false
                ' reports/172.16.1.6/misc/switch3.conf
+ [[ -z true ]]
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ case "${target_file}" in
+ search_terms=()
+ grep -F 10.10.10.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
+ [[ -z '' ]]
+ declare -a search_terms
+ local count=1
+ debug=false
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ dry_run=false
+ [[ -z true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ (( i++ ))
+ [[ -z '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ mapfile -t search_terms
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ search_terms=()
+ declare -a search_terms
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ grep -F 172.16.1.6
+ sed '/^[[:space:]]*$/d'
++ echo -e --verbose
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ cat -n
  "domain": "global.dmz.example.net",
++ which awk
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
 description Guest NAT
+ newline 2

object-group network Sector-Wireless
+ local count=2
+ local search_pattern
 description Staff WiFi clients
+ (( i = 0 ))
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n {
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ local search_pattern
  "vendor": "cisco",
  "model": "ASA",
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ true == true ]]
  "hostname": "dmz-fw2-backup"
+ (( i++ ))
}

+ (( i < count ))
ASA Version 9.12(4)
+ result=0
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ 0 -ne 0 ]]
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ [[ true == true ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ true == true ]]
+ cat -n
interface GigabitEthernet0/0
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
 nameif guest
+ declare -a execute
 ip address 10.10.10.10 255.255.255.0
+ [[ true == true ]]
 description Guest access interface

object network Shield-WiFi-Alias
+ result=0
+ newline
 host 10.10.10.10
+ [[ 0 -ne 0 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
 description Guest NAT
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ script_filename=network-extract
+ local count=1
+ local count=1
+ export network_extract__console=logs/console/network-extract.console
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
++ tr -d '\r'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ newline
+ newline
+ local count=1
+ case "${target_platform}" in
+ local count=1
object-group network Sector-Wireless
+ (( i = 0 ))
+ cat -n reports/10.0.0.1/misc/switch1.conf
 description Staff WiFi clients
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ awk -v divisor=--MTc0ODk0MjE4ODUzMDYxODAwMAo-- '
                    BEGIN {
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console ]]
                      blk = "";
+ (( i < count ))
                      in_json_header = 0;
+ case "${target_file}" in
                    }
+ awk -v divisor=--MTc0ODk0MjE4ODQ4NTc2NDAwMAo-- '
+ echo
 network-object host 192.168.100.100
                  BEGIN {

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9Z5DQT6K4P/network-extract--fw3.cfg.console
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
                    in_json_header = 0;
+ (( i++ ))
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
                  /^{$/ { in_json_header = 1; next }
 network-object host 10.10.10.10 ]]
                  /^}$/ {
                    if (in_json_header == 1) {
++ tr -d '\r'
                    # Skip JSON preamble
                      in_json_header = 0;
                    /^{$/            { in_json_header = 1; next }
                      next;
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    }
                    (in_json_header == 1) { next }
                  }
                  (in_json_header == 1) { next }

                    # Skip platform metadata
                  /^[^[:space:]]/ {
                    /^#(hostname|model|config-version)=/ { next }

                    if (blk != "" && !seen[blk]++) print blk "\n";
                    # Start of a new block
                    blk = $0;
                    /^config / {
                    next;
                      if (blk != "") print blk;
                  }
                      blk = $0;
+ (( i < count ))
                  {
                      next;
                    blk = blk divisor " " $0;
+ case "${target_platform}" in
                  }
                    }

                    # Add edit line to current block
                  END {
                    /^ edit / {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = blk divisor " " $0;
                      next;
++ grep -v '^\s*$'
                  }
                    }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ awk -v divisor=--MTc0ODk0MjE4ODQ2ODgyODAwMAo-- '
                  BEGIN {
                    /^end$/ {
                      blk = blk divisor " " $0;
                    in_json_header = 0;
                    blk = "";
                  }
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                  /^[[:space:]]*$/ { next }
                      next;
                  /^{$/ { in_json_header = 1; next }
                    }
                  /^}$/ {

                    if (in_json_header == 1) {
                    # Accumulate middle lines
                      in_json_header = 0;
                    {
                      next;
                      blk = blk divisor " " $0;
                    }
                    }
                  }

                  (in_json_header == 1) { next }
                    END {
                  /^[^[:space:]]/ {
                      # No need for final print — all blocks end with end
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    }
                    blk = $0;
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ grep -F 192.168.2.12
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
+ [[ verbose =~ ^(config|c)$ ]]
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ grep -v '^#'
+ (( i++ ))
++ echo reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ grep -F 192.168.0.1
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ grep -F 192.168.100.100
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ cut -d/ -f2
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
++ grep -v '^#'
 network-object host 10.10.10.10 ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ echo -en '{
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "domain": "global.dmz.example.net",
+ local verbose=true
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ IFS=' 	
++ cut -d/ -f2

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
'
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ result=0
+ export console_output=false
+ console_output=false
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kklwvkDMai ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kklwvkDMai
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -z '' ]]
+ script_helper=false
+ newline
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ [[ false == true ]]
+ local count=1
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ sed '/^[[:space:]]*$/d'
+ local first_search_entry=10.10.10.10
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local last_search_entry=10.10.10.10
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ search_pattern=203.0.113.25
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ search_terms=()
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ declare -a search_terms
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ echo
+ mapfile -t search_terms
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
+ local first_search_entry=203.0.113.25
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ (( i++ ))
+ local last_search_entry=203.0.113.25
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ newline
+ (( i < count ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ search_pattern=10.0.0.1
+ network_extract__console=logs/console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ false == true ]]
+ mkdir -p reports/10.0.0.1/misc/.objects
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ touch logs/console/network-extract.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local count=1
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ newline
+ newline
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ local count=1
+ cat -n
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ local count=1
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ serialize_objects
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ local 'indent=            '
+ [[ true == true ]]
+ (( i < count ))
+ local last_search_entry=192.168.2.12
+ newline
+ [[ true == true ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ echo
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ] ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ local count=1
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-configs--ips.list ]'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ ((  count == 0  ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ dirname reports/10.0.0.1/misc/switch1.conf
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ 0 -ne 0 ]]
+ result=0
+ result=0
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ newline 2
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ cat -n
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local count=2
+ newline
+ newline
+ case "${target_file}" in
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ local count=1
+ newline
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ local count=1
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
++ grep -v '^\s*$'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ return 0
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ echo
+ (( i < count ))
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console ]]
++ grep -v '^#'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ local script_filename=cisco-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--dmz-fw2-backup.cfg.console
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_platform}" in
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ awk -v divisor=--MTc0ODk0MjE4ODY0ODMwNTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
                  /^}$/ {
+ case "${target_file}" in
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local parent_dir=reports/10.0.0.1/misc
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4ODY0MjUyODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ newline
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ local count=1
                    }
                  }
+ (( i = 0 ))
                  (in_json_header == 1) { next }
+ (( i < count ))
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
                  }
                ' reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
+ local parent_dir=reports/192.168.0.100/cisco
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ grep -F 203.0.113.25
+ case "${target_file}" in
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ cat -n
++ basename reports/10.0.0.1/misc/switch1
+ cat -n
+ local first_search_entry=10.10.10.10
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ] ]]
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ cfg == \c\f\g ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.amPVdkg5qO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.amPVdkg5qO
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-configs--ips.list ]'
+ local count=1
+ grep -F 10.0.0.1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ cat -n
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ sed '/^[[:space:]]*$/d'
  "domain": "",
+ local count=1
  "hostname": ""
}

+ (( i = 0 ))
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
object-group network Wakanda-Core
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ newline
+ local count=1
+ (( i++ ))
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
 description National Core Routing Zone
 network-object host 192.168.1.10
+ local count=1
+ (( i = 0 ))
 network-object host 10.0.2.3
+ (( i < count ))
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ echo
+ result=0
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
 network-object 10.0.0.0 255.255.255.0'
+ return 0
+ exit 0
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qfBaZLWwJ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local search_pattern
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qfBaZLWwJ
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console ]]
}
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ case "${target_file}" in

object-group network Wakanda-Core
 description National Core Routing Zone
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--campus-sw-access01.cfg.console
 network-object host 192.168.1.10
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ serialize_objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ return 0
  "model": "FortiGate-200F",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
  "version": "",
+ newline
+ (( i < count ))
+ local count=1
+ local awk_bin=/usr/bin/awk
+ local count=1
+ (( i = 0 ))
+ newline
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
  "domain": "",
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ echo
+ ((  count == 0  ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ local count=1
  "hostname": "fg-campus-core"
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
}
+ (( i < count ))

+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WsMwtiqCPH/network-extract--switch3.conf.console
++ which awk
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
+ print '{
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
  "vendor": "cisco",
+ case "${target_file}" in
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
  "model": "",
+ local search_pattern
+ echo
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -z fortinet ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "",
#hostname="fg-campus-core"
  "domain": "",
  "hostname": ""
+ (( i < count ))
}

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ echo reports/10.0.0.1/misc/switch1.conf
+ (( i++ ))
+ result=0
+ (( i < count ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ output_dir=reports/203.0.113.25/misc
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
++ cut -d/ -f2
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ echo
+ [[ true == true ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ (( i++ ))
+ result=0
+ (( i < count ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LW9eVSKCkh ]]
+ [[ 7 -eq 0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LW9eVSKCkh
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.d181t1wb3o/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console ]]
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console --export --verbose
+ case "${target_file}" in
+ case "${target_file}" in
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--campus-sw-access01.cfg.console
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local count=1
+ (( i = 0 ))
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ (( i < count ))
++ cut -d/ -f2
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ oIFS=' 	
+ echo
'
+ (( i++ ))
+ (( i < count ))
#model="FortiGate-200F"
+ for xitem in "${@}"

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ result=0
config system interface
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ogCyOOviCK ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ogCyOOviCK
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
++ printf '%*s' 12 ''
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ cat -n
+ case "${target_file}" in
+ newline 2
+ cat reports/10.0.0.1/misc/.objects/switch3.list
++ dirname -- ./scripts/network-extract.shell
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ dirname -- ./scripts/network-extract.shell
+ search_pattern=10.0.0.1
+ local count=2
+ newline
+ (( i = 0 ))
+ mkdir -p reports/10.0.0.1/misc/.objects
+ IFS==
 edit "wifi"
+ read -r key value
+ local awk_bin=/usr/bin/awk
  set ip 192.168.100.100 255.255.255.0
+ local count=1
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ echo
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ newline
+ newline
+ (( i < count ))
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'indent=            '
+ cat -n
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
  set alias "Wireless VLAN"
 next
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ (( i < count ))
end
+ local count=1
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ newline

config firewall address
+ local count=1
+ (( i++ ))
 edit "Titan-WLAN-Host"
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ newline
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
++ IFS=,
++ echo 198.51.100.75
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ search_pattern=192.168.0.100
+ local SCRIPT_DIR=./scripts
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ local script_filename=fortinet-configs.awk
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ result=0
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELVxOydz54 ]]
+ return 0
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELVxOydz54
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t74Xp1YGyo ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t74Xp1YGyo
+ (( i < count ))
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ exit 0
+ newline
+ (( i < count ))
+ case "${target_file}" in
+ (( i < count ))
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MLhHu76H1F ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MLhHu76H1F
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i++ ))
+ (( i < count ))
+ return 0
config firewall address
 edit "Wanda-Field"
+ local count=1
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ [[ true == true ]]
 next
end'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ declare -a execute
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ -n {
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-200F",
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
  "version": "",
+ (( i++ ))
++ which awk
+ (( i < count ))
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat -n
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ printf '%*s' 12 ''
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
  "hostname": "fg-campus-core"
}
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console ]]
end

config firewall address
+ case "${target_file}" in
 edit "Titan-WLAN-Host"
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--access-sw1-west.cfg.console
+ local 'indent=            '
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ true == true ]]
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
 next
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ search_pattern=10.0.2.3
+ [[ true == true ]]
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
end

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
config firewall address
 edit "Wanda-Field"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console ]]
  set subnet 192.168.100.100 255.255.255.255
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ case "${target_file}" in
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ case "${target_platform}" in
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ awk -v divisor=--MTc0ODk0MjE4ODU5MDg5NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
++ which awk
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
+ output_dir=reports/10.10.10.10/misc
+ newline
+ [[ ! -d reports/10.10.10.10/misc ]]
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ grep -F 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ cut -d/ -f2
  set comment "Wanda’s chaos relay"
 next
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
end ]]
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ serialize_objects
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ case "${target_platform}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ awk -v divisor=--MTc0ODk0MjE4ODU3MjQ0MTAwMAo-- '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch3.conf.console
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ grep -F 192.168.0.100
++ IFS=,
+ echo
+ search_pattern=10.10.10.10
++ echo 203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ newline
+ mkdir -p reports/10.10.10.10/cisco/.objects
++ IFS=,
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo
+ local awk_bin=/usr/bin/awk
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo 10.10.10.10
+ (( i++ ))
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ declare -a execute
+ local count=1
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ return 0
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ declare -a execute
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ echo
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ search =~ ^(export|r)$ ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ search =~ ^(extract|x)$ ]]
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ [[ search == \h\e\l\p ]]
+ newline
+ (( i++ ))
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ print '{
+ [[ search == \v\e\r\b\o\s\e ]]
  "vendor": "fortinet",
+ for xitem in "${@}"
  "model": "FortiGate-200F",
+ IFS==
  "version": "",
+ echo
+ mkdir -p reports/10.0.2.3/misc/.objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ return 0
+ read -r key value
  "hostname": "fg-campus-core"
+ sed '/^[[:space:]]*$/d'
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
+ result=0
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
end
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console

config firewall address
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console ]]
 edit "Titan-WLAN-Host"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
  set subnet 192.168.100.100 255.255.255.255
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console ]]
  set comment "Guest WiFi node"
 next
+ case "${target_file}" in
end

+ newline
config firewall address
+ local count=1
+ (( i = 0 ))
 edit "Wanda-Field"
+ (( i < count ))
  set subnet 192.168.100.100 255.255.255.255
++ which awk
  set comment "Wanda’s chaos relay"
+ echo
 next
end ]]
+ (( i++ ))
+ echo -en '{
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
  set ip 192.168.100.100 255.255.255.0
++ which awk
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ printf '%*s' 12 ''
+ local parent_dir=reports/192.168.1.10/misc
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ exit 0
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5gedxK6m3h ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5gedxK6m3h
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ result=0
+ local 'indent=            '
+ exit 0
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6IAFhv2xiK ]]
+ [[ true == true ]]
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6IAFhv2xiK
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dUcUsUSIX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dUcUsUSIX
+ result=0
+ [[ 0 -ne 0 ]]
+ cat -n
+ [[ true == true ]]
++ basename reports/192.168.1.10/misc/fw3
++ which awk
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
}
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'

interface Vlan20
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
 ip address 192.168.1.10 255.255.255.0'
+ newline
+ newline
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ local count=1
  "model": "FortiGate-60F",
+ local count=1
+ (( i = 0 ))
  "version": "v7.2.5.F",
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ local awk_bin=/usr/bin/awk
+ echo
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ case "${target_platform}" in
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ awk -v divisor=--MTc0ODk0MjE4ODY1MDMyNjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ printf '%*s' 12 ''
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ grep -F 10.10.10.10
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ local search_pattern
+ local 'indent=            '
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
}
+ (( i < count ))
+ (( i = 0 ))
+ echo

+ [[ -n {
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ output_dir=reports/10.10.10.10/fortinet
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ output_dir=reports/192.168.2.12/misc
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ newline 2
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ local count=1
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i = 0 ))
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i++ ))
+ [[ true == true ]]
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
++ IFS=,
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
+ sed '/^[[:space:]]*$/d'
#model="FortiGate-200F"
#hostname="fg-branch-vpn-01"
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console ]]
++ echo 10.10.10.10
#model="FortiGate-60F"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "",
+ output_dir=reports/198.51.100.75/fortinet
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ ! -d reports/198.51.100.75/fortinet ]]

+ [[ ! -d reports/192.168.2.12/misc ]]
interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ case "${target_file}" in
+ [[ config =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=2
+ [[ config =~ ^(logger|l)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')

+ [[ config =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
config firewall address
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ declare -a execute

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console ]]
config firewall address
 edit "Vision-Link"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ config == \d\e\b\u\g ]]
 edit "Public-Test"
+ [[ config == \d\r\y\-\r\u\n ]]
  set subnet 192.168.2.12 255.255.255.255
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ case "${target_file}" in
+ [[ config == \v\e\r\b\o\s\e ]]
  set comment "Vision’s quantum channel"
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bxQuU4yN8M/network-extract--fg-campus-core.cfg.console
+ for xitem in "${@}"
  set subnet 203.0.113.25 255.255.255.255
+ local count=1
+ case "${target_file}" in
+ (( i++ ))
 next
+ (( i < count ))
  set comment "Public NAT exposure for Red Skull trap"
+ IFS==
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
 next
end'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo
end'
+ read -r key value
+ result=0
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
}

#model="FortiGate-200F"
#hostname="fg-branch-vpn-01"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ message '                .cache/resources/misc/fw1.cfg'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ echo
++ echo reports/192.168.1.10/misc/fw3.cfg
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg

+ (( i < count ))
config firewall address
+ echo -e '                .cache/resources/misc/fw1.cfg'
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
#model="FortiGate-60F"
end ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ which awk
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ newline
  "domain": "",
  "hostname": ""
}

++ command -v -- ./scripts/network-extract.shell
interface Vlan20
+ local count=1
 ip address 192.168.1.10 255.255.255.0'
++ cut -d/ -f2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LI3u2MEb2A/network-extract--switch1.conf.console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
}
  "vendor": "fortinet",

  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
#hostname="fg-campus-core"
  "domain": "",
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
#model="FortiGate-200F"

  "hostname": "fg-branch-vpn-01"
}
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
config firewall address

+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
#hostname="fg-branch-vpn-01"
 edit "Vision-Link"
#model="FortiGate-60F"
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
  set subnet 192.168.2.12 255.255.255.255
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  set comment "Vision’s quantum channel"
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'

 next
config firewall address
end'
 edit "Public-Test"
+ newline
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ [[ -n {
  "vendor": "fortinet",
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

  "domain": "",
#hostname="fg-campus-core"
  "hostname": "fg-branch-vpn-01"
#model="FortiGate-200F"
}


config firewall address
#hostname="fg-branch-vpn-01"
++ dirname -- ./scripts/network-extract.shell
 edit "Vision-Link"
++ dirname -- ./scripts/network-extract.shell
#model="FortiGate-60F"
+ local count=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i = 0 ))
config firewall address
 edit "Public-Test"
+ (( i < count ))
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ echo
 next
end ]]
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "model": "FortiGate-60F",
  "version": "",
  "version": "v7.2.5.F",
  "domain": "",
  "domain": "",
  "hostname": ""
  "hostname": "fg-branch-vpn-01"
}

}

object-group network Krypton-Cloud
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
 description Cloud-facing external nodes
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 network-object host 198.51.100.75
 network-object host 203.0.113.25
 next

end'
+ local SCRIPT_DIR=./scripts
object network Krypton-Gateway
 host 203.0.113.25
+ result=0
 description Secure NAT boundary for cloud access'
+ local script_filename=fortinet-configs.awk
+ [[ -n {
  "vendor": "fortinet",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "model": "FortiGate-60F",
+ cat -n
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ result=0
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "",
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
  "version": "",
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ newline 2
  "domain": "",
+ local count=1
  "hostname": ""
+ (( i = 0 ))
 edit 13
+ (( i < count ))
++ printf '%*s' 12 ''
}
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ echo
  set name "Remote NAT"
+ result=0
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0

  set srcintf "dmz"
object-group network Krypton-Cloud
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
+ local script_filename=cisco-configs.awk
+ exit 0
+ exit 0
+ local script_filename=fortinet-configs.awk
+ (( i++ ))
  set dstaddr "203.0.113.10"
 description Cloud-facing external nodes
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.klA8s2G1wM ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rAMYC9GAkl ]]
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.klA8s2G1wM

object network Krypton-Gateway
 host 203.0.113.25
  set action accept
 description Secure NAT boundary for cloud access ]]
  set logtraffic all
+ local 'indent=            '
+ local script_filepath=./scripts/extract/fortinet-configs.awk
 next
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ newline
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ result=0
+ echo
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rAMYC9GAkl
+ exit 0
+ [[ true == true ]]
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9W3HsHg6u ]]
+ (( i < count ))
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d9W3HsHg6u
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ echo
+ [[ false == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hnC3XRB0c9/network-extract--campus-sw-access01.cfg.console
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ serialize_objects
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
++ which awk
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ serialize_objects
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
++ which awk
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ print '{
+ echo -en '{
  "vendor": "fortinet",
  "vendor": "cisco",
  "model": "FortiGate-60F",
  "model": "",
  "version": "v7.2.5.F",
  "version": "",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
  "domain": "",
 edit 13
  "hostname": ""
  set name "Remote NAT"
}
  set srcintf "dmz"

  set dstintf "wan1"
object-group network Krypton-Cloud
  set srcaddr "10.10.10.10"
 description Cloud-facing external nodes
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 network-object host 198.51.100.75
 next
end'
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
+ sed '1{/^[[:space:]]*$/d;}'
 next
end'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ return 0
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline 2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ echo
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ awk -v divisor=--MTc0ODk0MjE4ODY5NzU5NzAwMAo-- '
                  BEGIN {
+ local count=2
                    in_json_header = 0;
                    blk = "";
+ (( i = 0 ))
                  }
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ echo
                    if (in_json_header == 1) {
+ local count=2
                      in_json_header = 0;
+ (( i++ ))
                      next;
                    }
                  }
+ (( i = 0 ))
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ (( i < count ))
                    blk = blk divisor " " $0;
+ (( i < count ))
                  }
+ echo
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ echo
                ' reports/192.168.1.10/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ case "${target_platform}" in
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ awk -v divisor=--MTc0ODk0MjE4ODczNTUwMjAwMAo-- '
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
                  BEGIN {
+ local count=1
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
                    in_json_header = 0;
                    blk = "";
+ result=0
                  }
+ exit 0
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.psYxOgFiYg ]]
                      in_json_header = 0;
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.psYxOgFiYg
                      next;
                    }
+ newline
+ local 'extracted_configuration={
                  }
+ local count=1
  "vendor": "cisco",
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
                    blk = $0;
+ (( i < count ))
                    next;
                  }
+ echo
                  {
                    blk = blk divisor " " $0;
                  }
+ (( i++ ))
                  END {
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ grep -F 192.168.1.10
                  }
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
                ' reports/10.0.2.3/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
  "model": "",
+ (( i < count ))
  "version": "",
  "domain": "",
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
  "hostname": ""
}
++ IFS=,

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
++ echo 10.10.10.10

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ result=0
+ newline 2
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fw1hto06zq ]]

++ IFS=,
object-group network Krypton-Cloud
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fw1hto06zq
 description Cloud-facing external nodes
+ local count=2
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ echo 198.51.100.75
 network-object host 198.51.100.75
+ (( i = 0 ))
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ declare -a execute
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
 network-object host 203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ echo
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i++ ))
+ declare -a execute
+ (( i < count ))
++ echo -e --platform=cisco
+ [[ true == true ]]
+ newline 2

+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
object network External-Failover
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ newline
+ local count=2
+ local parent_dir=reports/192.168.100.100/fortinet
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
 description Guest NAT'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
++ IFS=,
+ result=0
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console ]]
  "vendor": "cisco",
  "model": "",
++ echo 192.168.2.12
  "version": "",
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
  "domain": "",
  "hostname": ""
+ case "${target_file}" in

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ echo -en '{
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--dmz-fw2-backup.cfg.console
  "vendor": "cisco",
 network-object host 10.10.10.10
  "model": "",
 network-object 192.168.100.0 255.255.255.0
  "version": "",

+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  "domain": "",
object-group network Shield-WiFi
+ result=0
 description Shield-controlled wireless network
  "hostname": ""
}
 network-object host 10.10.10.10

 network-object 192.168.100.0 255.255.255.0
object-group network Krypton-Cloud

 description Cloud-facing external nodes
object-group network Shield-WiFi
 network-object host 198.51.100.75
 description Shield-controlled wireless network
 network-object host 203.0.113.25
 network-object host 10.10.10.10

 network-object 192.168.100.0 255.255.255.0
object network External-Failover

 host 198.51.100.75
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Secondary outbound route for edge'
 description Guest NAT ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ declare -a execute
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ [[ false == true ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ echo
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i < count ))
+ serialize_objects
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local parent_dir=reports/192.168.0.1/fortinet
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.0.2.3
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ false == true ]]
+ serialize_objects
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
++ which awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.1.10/misc/switch1.conf
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ serialize_objects
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ newline
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=1
+ newline
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ newline 2
  "domain": "",
  "hostname": ""
}

+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local count=1
object-group network Shield-WiFi
+ local awk_bin=/usr/bin/awk
 description Shield-controlled wireless network
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
 network-object host 10.10.10.10
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
 network-object 192.168.100.0 255.255.255.0

+ case "${target_file}" in
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
 network-object host 10.10.10.10
+ cat reports/192.168.1.10/misc/.objects/fw3.list
 network-object 192.168.100.0 255.255.255.0

+ local count=2
++ printf '%*s' 12 ''
object-group network Shield-WiFi
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
 description Shield-controlled wireless network
+ (( i < count ))
 network-object host 10.10.10.10
+ result=0
 network-object 192.168.100.0 255.255.255.0
+ echo

object network Shield-WiFi-Alias
 host 10.10.10.10
+ (( i++ ))
 description Guest NAT ]]
+ (( i < count ))
+ exit 0
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f2mpsRHXyX ]]
+ (( i++ ))
+ echo -en '{
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.f2mpsRHXyX
  "vendor": "cisco",
+ (( i < count ))
+ (( i = 0 ))
+ local 'indent=            '
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ true == true ]]
+ echo
}
+ (( i < count ))

object-group network Shield-WiFi
+ (( i++ ))
+ [[ true == true ]]
+ echo
+ (( i < count ))
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ (( i++ ))
 network-object host 10.10.10.10
+ (( i < count ))
 network-object 192.168.100.0 255.255.255.0

+ newline
object-group network Shield-WiFi
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ local count=1
+ [[ false == true ]]
 description Shield-controlled wireless network
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
 network-object host 10.10.10.10
+ (( i < count ))
 network-object 192.168.100.0 255.255.255.0
+ [[ false == true ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'

object network Shield-WiFi-Alias
+ echo
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
 host 10.10.10.10
+ (( i++ ))
 description Guest NAT'
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat -n
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ local 'indent=            '
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local search_pattern
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ newline
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ result=0
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ serialize_objects
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ (( i++ ))
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ printf '%*s' 12 ''
+ newline
+ newline
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ serialize_objects
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/192.168.1.10/misc/switch1
+ echo
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ local parent_dir=reports/203.0.113.25/fortinet
+ cat reports/10.0.2.3/misc/.objects/fw3.list
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ cat -n
++ basename reports/192.168.2.12/fortinet/fg-campus-core
++ cut -d/ -f2
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline 2
+ [[ logger == \h\e\l\p ]]
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ logger == \d\e\b\u\g ]]
+ local search_pattern
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ newline
+ search_pattern=192.168.100.100
+ local count=1
+ local count=1
+ local count=2
+ (( i = 0 ))
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ return 0
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ serialize_objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console ]]
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ search_pattern=192.168.0.1
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
++ echo reports/192.168.1.10/misc/switch1.conf
+ local parent_dir=reports/203.0.113.25/misc
++ echo -e --export
++ cut -d/ -f2
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
++ basename reports/203.0.113.25/misc/fw1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
+ local 'extracted_configuration={
  "vendor": "fortinet",
 description Core internal LAN for application clusters
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
}
 network-object host 10.0.2.3
+ local search_pattern

 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
#hostname="fg-campus-core"
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end
+ local parent_dir=reports/198.51.100.75/misc

++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ false == true ]]

+ [[ true == true ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
++ cut -d/ -f2
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
++ cut -d/ -f2
 next
+ case "${target_platform}" in
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ awk -v divisor=--MTc0ODk0MjE4ODcyMjQzOTAwMAo-- '
                    BEGIN {
#hostname="fg-branch-vpn-01"
                      blk = "";
#model="FortiGate-60F"
                      in_json_header = 0;
                    }
#config-version=FGT_60F-v7.2.5.F-build1517-230421


                    # Skip blank lines
config system interface
+ print '{
 edit "wan1"
                    /^[[:space:]]*$/ { next }
  "vendor": "cisco",
  set ip 198.51.100.75 255.255.255.0

  "model": "",
                    # Skip JSON preamble
  set alias "Branch ISP"
  "version": "",
+ [[ true == true ]]
 next
                    /^{$/            { in_json_header = 1; next }
end
  "domain": "",
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console

}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console ]]
config firewall address
                    (in_json_header == 1) { next }
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
 edit "Branch-Public"
+ search_pattern=192.168.1.10

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console ]]
  set subnet 198.51.100.75 255.255.255.255
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ mkdir -p reports/192.168.1.10/misc/.objects

++ basename reports/198.51.100.75/misc/fw1
object-group network Metropolis-Internal
+ case "${target_file}" in
                    # Skip platform metadata
 description Core internal LAN for application clusters
  set comment "Branch NAT"
                    /^#(hostname|model|config-version)=/ { next }
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gqrQfgr0Ko/network-extract--fw3.cfg.console
                    # Start of a new block
 network-object host 10.0.2.3
                    /^config / {
                      if (blk != "") print blk;
 next
+ [[ export =~ ^(config|c)$ ]]
 network-object 192.168.2.0 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "fortinet",
end'
                      blk = $0;
  "model": "FortiGate-200F",
 network-object host 192.168.2.12'
                      next;
                    }
  "version": "",
  "domain": "",

+ [[ export =~ ^(console|o)$ ]]
  "hostname": "fg-campus-core"
                    # Add edit line to current block
}
                    /^ edit / {

+ [[ export =~ ^(export|r)$ ]]
#hostname="fg-campus-core"
                      blk = blk divisor " " $0;
#model="FortiGate-200F"
                      next;

                    }

config system interface
+ [[ -n {
+ local export_objects=true
  "vendor": "cisco",
                    # Add next to block
 edit "core"
+ [[ export =~ ^(extract|x)$ ]]
  "model": "",
                    /^ next$/ {
  set ip 10.10.10.10 255.255.255.0
                      blk = blk divisor " " $0;
+ [[ export =~ ^(logger|l)$ ]]
  "version": "",
  set alias "Campus Core Transit"
+ [[ true == true ]]
  "domain": "",
                      next;
 next
                    }
+ [[ export =~ ^(platform|p)$ ]]
  "hostname": ""
end

+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console

}
                    # Finalize block at end
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console ]]
                    /^end$/ {
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
                      blk = blk divisor " " $0;
+ [[ export =~ ^(search|s)$ ]]
                      if (blk != "" && !seen[blk]++) print blk;
config firewall address

                      blk = "";
+ case "${target_platform}" in
+ local search_pattern
+ [[ export == \h\e\l\p ]]
 edit "Shield-WiFi"
+ [[ export == \d\e\b\u\g ]]
object-group network Metropolis-Internal
+ grep -F 192.168.100.100
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
  set subnet 10.10.10.10 255.255.255.255
+ sed '1{/^[[:space:]]*$/d;}'
                      next;
  set comment "Wireless AP Gateway"
 next
 description Core internal LAN for application clusters
                    }
 network-object host 10.0.2.3

 network-object 192.168.2.0 255.255.255.0
+ awk -v divisor=--MTc0ODk0MjE4ODc2NjQ4MTAwMAo-- '
                    # Accumulate middle lines
end'
+ [[ export == \v\e\r\b\o\s\e ]]
                    BEGIN {
                    {
 network-object host 192.168.2.12 ]]
                      blk = blk divisor " " $0;
                    }

                    END {
                      blk = "";
                      # No need for final print — all blocks end with end
                      in_json_header = 0;
                    }
                    }

+ echo -en '{
+ [[ -n {
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
                    # Skip blank lines
  "vendor": "cisco",
  "vendor": "fortinet",
                    /^[[:space:]]*$/ { next }
  "model": "FortiGate-200F",

  "model": "",
  "version": "",
                    # Skip JSON preamble
  "domain": "",
                    /^{$/            { in_json_header = 1; next }
  "hostname": "fg-campus-core"
  "version": "",
}
  "domain": "",

  "hostname": ""
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
}
                    (in_json_header == 1) { next }


object-group network Metropolis-Internal
                    # Skip platform metadata
 description Core internal LAN for application clusters
                    /^#(hostname|model|config-version)=/ { next }
 network-object host 10.0.2.3

 network-object 192.168.2.0 255.255.255.0
                    # Start of a new block
 network-object host 192.168.2.12'
+ sed '1{/^[[:space:]]*$/d;}'
                    /^config / {
#hostname="fg-campus-core"
                      if (blk != "") print blk;
#model="FortiGate-200F"
                      blk = $0;

                      next;
config system interface
                    }
 edit "core"

  set ip 10.10.10.10 255.255.255.0
                    # Add edit line to current block
  set alias "Campus Core Transit"
                    /^ edit / {
 next
                      blk = blk divisor " " $0;
end
                      next;

                    }
config firewall address

 edit "Shield-WiFi"
                    # Add next to block
  set subnet 10.10.10.10 255.255.255.255
                    /^ next$/ {
  set comment "Wireless AP Gateway"
                      blk = blk divisor " " $0;
 next
                      next;
end ]]
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
+ echo -en '{
++ cut -d/ -f2

  "vendor": "fortinet",
                    # Accumulate middle lines
  "model": "FortiGate-200F",
                    {
  "version": "",
                      blk = blk divisor " " $0;
  "domain": "",
                    }
  "hostname": "fg-campus-core"

}
                    END {

                      # No need for final print — all blocks end with end
+ for xitem in "${@}"
+ sed '/^[[:space:]]*$/d'
                    }
#hostname="fg-campus-core"
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ IFS==
+ read -r key value
+ grep -F 192.168.0.1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console ]]
+ serialize_objects
+ search_pattern=192.168.2.12
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--fw3.cfg.console
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ local search_pattern
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ result=0
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CqO3fCSqHG ]]
+ local count=1
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CqO3fCSqHG
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline 2
++ echo -e --verbose
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
++ echo reports/203.0.113.25/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ case "${target_platform}" in
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ echo reports/198.51.100.75/misc/fw1.cfg
+ (( i < count ))
+ awk -v divisor=--MTc0ODk0MjE4ODc3MTk0NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
                      in_json_header = 0;
+ result=0
                      next;
                    }
                  }
+ [[ 0 -ne 0 ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
++ sed -e '1s|^\(-\)\{1,\}||'
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ cat -n reports/192.168.2.12/misc/fw1.cfg
                    blk = $0;
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
++ cut -d/ -f2
                    next;
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ search_pattern=10.10.10.10
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ echo
+ newline
+ (( i++ ))
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ (( i < count ))
+ result=0
+ local count=1
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.168.1.10
++ cut -d/ -f2
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4ODc5MjA1NjAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ grep -F 192.168.2.12
+ cat -n
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ result=0
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ local parent_dir=reports/10.10.10.10/misc
+ search_pattern=203.0.113.25
+ search_pattern=198.51.100.75
+ exit 0
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ mkdir -p reports/203.0.113.25/misc/.objects
+ [[ verbose == \h\e\l\p ]]
+ serialize_objects
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ case "${target_platform}" in
+ local verbose=true
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Fmr59VuMX ]]
+ IFS=' 	
'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1Fmr59VuMX
+ [[ -z '' ]]
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--MTc0ODk0MjE4ODgxMTU5NDAwMAo-- '
                    BEGIN {
                      blk = "";
+ debug=false
                      in_json_header = 0;
+ [[ -z '' ]]
+ dry_run=false
                    }

+ [[ -z true ]]
+ [[ -z '' ]]
                    # Skip blank lines
+ export console_output=false
                    /^[[:space:]]*$/ { next }
+ console_output=false

+ newline
                    # Skip JSON preamble
+ [[ -z true ]]
                    /^{$/            { in_json_header = 1; next }
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ -z '' ]]

+ script_helper=false
                    # Skip platform metadata
+ local count=1
                    /^#(hostname|model|config-version)=/ { next }
+ [[ false == true ]]
+ (( i = 0 ))

+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
                    # Start of a new block
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
+ (( i++ ))
+ (( i < count ))
+ search_terms=()
                    /^config / {
+ declare -a search_terms
                      if (blk != "") print blk;
                      blk = $0;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]]
                      next;
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list != *,* ]]
+ [[ false == true ]]
+ mapfile -t search_terms
                    }
+ [[ true == true ]]

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
                    /^end$/ {
                      blk = blk divisor " " $0;
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
                      if (blk != "" && !seen[blk]++) print blk;
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
                      blk = "";
                      next;
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ serialize_objects
+ newline
                    }

+ result=0
                    END {
                      # No need for final print — all blocks end with end
+ [[ 0 -ne 0 ]]
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ grep -F 203.0.113.25
+ local count=1
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ echo
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ serialize_objects
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ basename reports/10.10.10.10/misc/fw3
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ (( i < count ))
+ return 0
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console ]]
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console ]]
+ result=0
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ tr -d '\r'
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--MTc0ODk0MjE4ODg0NjQzNTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
                      next;
                    }
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'

                    # Add edit line to current block
                    /^ edit / {
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
+ newline
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ local count=1
                      next;
+ (( i = 0 ))
                    }

                    # Finalize block at end
+ cat -n
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local parent_dir=reports/198.51.100.75/fortinet
+ case "${target_platform}" in
++ grep -v '^#'
+ awk -v divisor=--MTc0ODk0MjE4ODg4OTgzMzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local parent_dir=reports/192.168.2.12/misc
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ local search_pattern
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local parent_dir=reports/10.10.10.10/fortinet
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.10.10.10
+ grep -F 198.51.100.75
+ cat -n
++ basename reports/192.168.2.12/misc/fw1
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4OTAwMzExMzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ true == true ]]
                  /^{$/ { in_json_header = 1; next }
+ sed '/^[[:space:]]*$/d'
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console ]]
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pLT3Plztya/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ return 0
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nfQ3AorPqN/network-extract--fg-campus-core.cfg.console
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ cat -n
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ (( i < count ))
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo reports/10.10.10.10/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ grep -F 203.0.113.25
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
++ cut -d/ -f2
+ [[ true == true ]]
+ local search_pattern
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ result=0
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qrD5sqvRbZ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qrD5sqvRbZ
+ newline
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ local count=1
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ (( i < count ))
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ (( i < count ))
+ (( i < count ))
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console ]]
+ return 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
++ echo reports/192.168.2.12/misc/fw1.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8uDfGNV7h/network-extract--switch1.conf.console
+ (( i++ ))
+ [[ true == true ]]
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ (( i < count ))
+ result=0
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ exit 0
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgVz76rH6x ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgVz76rH6x
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
++ cut -d/ -f2
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
+ search_pattern=10.10.10.10
+ cat -n
+ mkdir -p reports/10.10.10.10/misc/.objects
+ result=0
+ [[ 0 -ne 0 ]]
++ cut -d/ -f2
+ [[ true == true ]]
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fg-campus-core.cfg.console
+ cat -n
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ search_pattern=198.51.100.75
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
+ newline
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ search_pattern=10.10.10.10
+ exit 0
+ return 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zfGGrMqLMN ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zfGGrMqLMN
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4OTAxNTc0MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfMNXuTvo2 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UfMNXuTvo2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ newline
+ grep -F 10.10.10.10
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ result=0
+ case "${target_platform}" in
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4jrCW9tSBY ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4jrCW9tSBY
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console ]]
+ awk -v divisor=--MTc0ODk0MjE4ODk0ODcyMDAwMAo-- '
                    BEGIN {
                      blk = "";
+ case "${target_file}" in
                      in_json_header = 0;
                    }
+ awk -v divisor=--MTc0ODk0MjE4ODkzMDQ3NzAwMAo-- '

                  BEGIN {
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fw1.cfg.console
                  /^{$/ { in_json_header = 1; next }
                    # Skip JSON preamble
                  /^}$/ {
                    if (in_json_header == 1) {
                    /^{$/            { in_json_header = 1; next }
                      in_json_header = 0;
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                      next;
                    (in_json_header == 1) { next }
                    }

                  }
                    # Skip platform metadata
                  (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                  /^[^[:space:]]/ {

                    if (blk != "" && !seen[blk]++) print blk "\n";
                    # Start of a new block
                    blk = $0;
                    /^config / {
                    next;
                      if (blk != "") print blk;
                  }
                      blk = $0;
                  {
                      next;
                    }

                    blk = blk divisor " " $0;
                  }
                  END {
                    # Add edit line to current block
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    /^ edit / {
                  }
                      blk = blk divisor " " $0;
                      next;
                ' reports/192.168.2.12/misc/fw1.cfg
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ grep -F 198.51.100.75
+ grep -F 192.168.2.12
+ awk -v divisor=--MTc0ODk0MjE4ODkyNDMzNjAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ grep -F 10.10.10.10
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-testing-config.cfg.console
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hyvlGfTb8z ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hyvlGfTb8z
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ cat -n
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ exit 0
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OtBeYlSYLA ]]
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OtBeYlSYLA
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQJeTfp6tQ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQJeTfp6tQ
+ cat -n
++ which awk
+ cat -n
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ cat -n
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ declare -a execute
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RayAHqXSN9/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4XXGOUqKSF/network-extract--fg-branch-vpn-01.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KPnEuhSKlV/network-extract--fg-campus-core.cfg.console
+ exit 0
+ newline
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6xpktlkz0l ]]
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6xpktlkz0l
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SvsCrdCCy1 ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SvsCrdCCy1
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZkEKYhuiO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dZkEKYhuiO
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zTXfNU1drP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zTXfNU1drP
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODk0MjE4OTIwNjI2MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ grep -F 203.0.113.25
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D181T1wb3o/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R06LePlrgk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R06LePlrgk
