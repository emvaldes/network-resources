+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcnGHR26DF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcnGHR26DF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ mktemp -d
++ export divisor=--MTc0OTAzMjEyNzc3MDY2NzAwMAo--
++ divisor=--MTc0OTAzMjEyNzc3MDY2NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQ5AynN4GT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQ5AynN4GT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias network-configs--helper=network_configs__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias warning-message=warning
+ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
+ script_filename=network-extract.shell
++ jobs_location=jobs
+ script_filename=network-extract
++ mkdir -p jobs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAzMjEyNzc4OTA0MTAwMAo--
++ divisor=--MTc0OTAzMjEyNzc4OTA0MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FkEYRSEWXs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FkEYRSEWXs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ -z x ]]
++ LC_ALL=C
+ export logs_location=logs
+ logs_location=logs
++ export 'nl=\n'
+ mkdir -p logs
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ export jobs_location=jobs
+ export network_extract__console=console/network-extract.console
++ jobs_location=jobs
+ network_extract__console=console/network-extract.console
++ mkdir -p jobs
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console --verbose
++ console_location=console
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0OTAzMjEyNzgwNjMwMTAwMAo--
++ divisor=--MTc0OTAzMjEyNzgwNjMwMTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WVQSPhUPDH
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WVQSPhUPDH
++ alias network-extract--helper=network_extract__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ alias serialize-object=serialize_objects
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ tr -d '\r'
++ alias exit-error=exit_error
++ alias list-file=list_file
++ grep -v '^\s*$'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ alias parse-cisco=main
++ grep -v '^#'
++ alias pause=pause
++ alias print-line=print
+ [[ -z x ]]
+ export logs_location=logs
++ alias print-file=print_file
+ logs_location=logs
+ mkdir -p logs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ script_filename=network-extract.shell
+ local last_search_entry=203.0.113.25
+ script_filename=network-extract
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ export network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ export jobs_location=jobs
+ newline
++ jobs_location=jobs
+ local count=1
+ (( i = 0 ))
++ mkdir -p jobs
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
++ echo -e --platform=cisco
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+++ base64
++ mktemp -d
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ export divisor=--MTc0OTAzMjEyNzgyNTEzMjAwMAo--
+ IFS=' 	
++ divisor=--MTc0OTAzMjEyNzgyNTEzMjAwMAo--
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ source ./scripts/devops-helpers.shell
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
++ [[ -n '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ script_helper=false
+ [[ false == true ]]
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ local SCRIPT_DIR=./scripts
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ local script_filename=cisco-configs.awk
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IM3TQ8Owrr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IM3TQ8Owrr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ alias serialize-object=serialize_objects
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ which awk
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
++ alias system-metrics=system_metrics
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ tr -d '\r'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ IFS=,
+ script_filename=network-extract.shell
++ mkdir -p jobs
+ script_filename=network-extract
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
+ [[ 6 -eq 0 ]]
++ console_location=console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p console
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export actions_logfile=console/run.console
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ actions_logfile=console/run.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ touch console/run.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PHxDkOUfaj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PHxDkOUfaj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+++ base64
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
+++ tr -dc a-zA-Z0-9
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
++ alias system-metrics=system_metrics
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
+ [[ verbose =~ ^(config|c)$ ]]
 network-object host 10.10.10.10'
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ [[ verbose =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ -n {
  "vendor": "cisco",
+ [[ verbose =~ ^(export|r)$ ]]
++ alias warning-message=warning
  "model": "",
++ export LC_ALL=C
  "version": "12.4",
++ LC_ALL=C
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ verbose =~ ^(extract|x)$ ]]
++ export 'nl=\n'
}
++ nl='\n'

+ [[ verbose =~ ^(logger|l)$ ]]
version 12.4
++ export cache_location=.cache
hostname access-sw1-west
++ cache_location=.cache

+ [[ verbose =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ verbose =~ ^(search|s)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ [[ verbose == \h\e\l\p ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ [[ verbose == \d\e\b\u\g ]]

object-group network MGMT-ACCESS
 description Management objects
+ [[ verbose == \d\r\y\-\r\u\n ]]
 network-object host 192.168.0.1
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.100
+ local verbose=true
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ IFS=' 	
 description Controlled guest devices
'
 network-object host 10.10.10.10 ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ dry_run=false
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ -z true ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ config =~ ^(export|r)$ ]]
+ console_output=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z .cache/ips.list ]]
+ [[ config == \h\e\l\p ]]
+ search_terms=()
+ [[ config == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f .cache/ips.list ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ .cache/ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
++ export divisor=--MTc0OTAzMjEyNzg0NjU3NjAwMAo--

++ divisor=--MTc0OTAzMjEyNzg0NjU3NjAwMAo--
version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ source ./scripts/devops-helpers.shell

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ [[ -n '' ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -en '{
++ [[ 5 -lt 4 ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias network-extract--helper=network_extract__helper
++ grep -v '^\s*$'
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ alias serialize-object=serialize_objects
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ which awk
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ echo
+ local last_search_entry=203.0.113.25
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local count=17
+ [[ extract == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ IFS==
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ export console_location=console
+ (( i < count ))
++ console_location=console
++ mkdir -p console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ IFS=,
+ script_filename=network-extract.shell
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ printf '%*s' 12 ''
++ echo -e --search=.cache/ips.list
+ local 'indent=            '
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ true == true ]]
++ export targets_location=targets
+ [[ cfg == \c\f\g ]]
++ targets_location=targets
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console ]]
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--access-sw1-west.cfg.console
+++ date +%s%N
+++ base64
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(export|r)$ ]]
+ output_dir=.cache/resources/cisco
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GGAQp4zvTN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GGAQp4zvTN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ result=0
++ alias relative-configpath=relative_configpath
+ exit 0
++ command -v -- ./scripts/network-extract.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcnGHR26DF ]]
++ export divisor=--MTc0OTAzMjEyNzg2NzQyNTAwMAo--
++ divisor=--MTc0OTAzMjEyNzg2NzQyNTAwMAo--
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcnGHR26DF
+ source ./scripts/devops-helpers.shell
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ alias validate-address=validate_address
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ alias parse-cisco=main
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ -z x ]]
version 16.9
+ export logs_location=logs
hostname branch-isr-02
+ logs_location=logs

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ mkdir -p logs
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]

version 16.9
+ local target_config=configs/cisco/perimeter-fw1.cfg
hostname branch-isr-02

+ [[ verbose =~ ^(console|o)$ ]]
interface GigabitEthernet0/0/0
+ [[ config =~ ^(console|o)$ ]]
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ [[ config =~ ^(export|r)$ ]]
 description Workstation LAN
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]

interface GigabitEthernet0/0/2
+ [[ config =~ ^(logger|l)$ ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ verbose =~ ^(extract|x)$ ]]

+ [[ config =~ ^(platform|p)$ ]]
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

+ [[ verbose =~ ^(logger|l)$ ]]
object network Hydra-Link
+ [[ config =~ ^(search|s)$ ]]
 host 198.51.100.75
+ [[ verbose =~ ^(platform|p)$ ]]
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75
+ local SCRIPT_DIR=./scripts
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config == \h\e\l\p ]]

+ [[ verbose == \h\e\l\p ]]
object network Panther-Gateway
+ local script_filename=cisco-configs.awk
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
 host 10.0.2.3
+ local script_filepath=./scripts/extract/cisco-configs.awk
 description Secure outbound concentrator

+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
object-group network Lantern-DMZ
+ for xitem in "${@}"
+ local verbose=true
 description Protected but public-facing zone
+ IFS==
 network-object host 172.18.1.20
+ IFS=' 	
 network-object host 192.168.1.11'
+ read -r key value
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ -n {
+ console_output=false
  "vendor": "cisco",
  "model": "",
+ [[ -z '' ]]
  "version": "16.9",
+ local export_objects=false
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console ]]
}

+ [[ -z '' ]]
version 16.9
+ script_helper=false
hostname branch-isr-02

+ [[ false == true ]]
interface GigabitEthernet0/0/0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

+ [[ -z .cache/ips.list ]]
interface GigabitEthernet0/0/1
+ search_terms=()
 ip address 192.168.2.12 255.255.255.0
+ declare -a search_terms
 description Workstation LAN

+ [[ -f .cache/ips.list ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ .cache/ips.list != *,* ]]
 description Dev VLAN
+ mapfile -t search_terms

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

++ which awk
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console --verbose
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
+ local first_search_entry=10.0.0.1
+ IFS==
+ read -r key value
++ actions_logfile=console/run.console
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ touch console/run.console
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo -e --search=.cache/ips.list
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ platform == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ local 'indent=            '
+ read -r key value
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+++ date +%s%N
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+++ base64
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcl6Q8FAKp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcl6Q8FAKp
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0OTAzMjEyNzg5MDc0MTAwMAo--
++ divisor=--MTc0OTAzMjEyNzg5MDc0MTAwMAo--
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-helpers.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias network-extract--helper=network_extract__helper
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
++ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
++ export 'nl=\n'
+ [[ config =~ ^(console|o)$ ]]
++ nl='\n'
+ [[ logger =~ ^(console|o)$ ]]
++ export cache_location=.cache
+ [[ config =~ ^(export|r)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
++ logs_location=logs
+ [[ logger =~ ^(export|r)$ ]]
++ mkdir -p logs
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ exit 0
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQ5AynN4GT ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FQ5AynN4GT
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

++ command -v -- ./scripts/network-extract.shell
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
++ export jobs_location=jobs
  "vendor": "cisco",
++ jobs_location=jobs
  "model": "",
  "version": "12.2",
  "domain": "",
++ mkdir -p jobs
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
++ dirname -- ./scripts/network-extract.shell
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS=' 	
+ [[ extract =~ ^(logger|l)$ ]]
'
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ export console_output=false
+ [[ extract == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_DIR=./scripts
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ local script_filename=cisco-configs.awk
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
++ export console_location=console
+ (( i < count ))
+ echo
++ console_location=console
+ (( i++ ))
+ (( i < count ))
++ mkdir -p console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ which awk
++ echo -e --platform=fortinet
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=.cache/ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ platform =~ ^(platform|p)$ ]]
+ local first_search_entry=10.0.0.1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ local last_search_entry=203.0.113.25
+ local target_platform=fortinet
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console ]]
+ [[ platform == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ platform == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ local count=17
+ declare -a execute__netwowrk_extract
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ [[ true == true ]]
+++ base64
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console ]]
++ mktemp -d
+ case "${target_file}" in
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--campus-sw-access01.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0OTAzMjEyNzkxMzQ0NDAwMAo--
++ divisor=--MTc0OTAzMjEyNzkxMzQ0NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ cfg == \c\f\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ 5 -lt 4 ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ result=0
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i6cIyFnrpG
+ [[ config =~ ^(console|o)$ ]]
+ exit 0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i6cIyFnrpG
+ [[ config =~ ^(export|r)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FkEYRSEWXs ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FkEYRSEWXs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ [[ config =~ ^(platform|p)$ ]]
+ nl='\n'
+ [[ config =~ ^(search|s)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ alias serialize-object=serialize_objects
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ grep -v '^\s*$'
++ mkdir -p jobs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
+ [[ extract =~ ^(config|c)$ ]]
++ grep -v '^#'
 host 10.10.10.10
 description Guest NAT

+ [[ extract =~ ^(console|o)$ ]]
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge
+ [[ extract =~ ^(export|r)$ ]]

object-group network Sector-Wireless
 description Staff WiFi clients
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 192.168.100.100
 network-object host 10.10.10.10

+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
object-group network Watchtower-DMZ
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
 description Global secure relay
+ script_filename=network-extract
 network-object host 192.0.2.50'
+ [[ extract =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ result=0
+ [[ extract =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ extract == \h\e\l\p ]]
  "domain": "global.dmz.example.net",
+ [[ extract == \d\e\b\u\g ]]
  "hostname": "dmz-fw2-backup"
+ [[ extract == \d\r\y\-\r\u\n ]]
}

+ [[ extract == \v\e\r\b\o\s\e ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ for xitem in "${@}"

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ IFS==

+ read -r key value
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
++ dirname -- ./scripts/network-extract.shell
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.0.2.50'
++ echo -e --platform=fortinet
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
++ sed -e '1s|^\(-\)\{1,\}||'
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
++ export console_location=console
 nameif outside
++ console_location=console
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
++ mkdir -p console

+ local first_search_entry=10.0.0.1
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ local last_search_entry=203.0.113.25

object network Sentinel-NAT
 host 203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
+ [[ true == true ]]
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
+ local SCRIPT_DIR=./scripts
 network-object host 192.0.2.50'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local script_filename=cisco-configs.awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console --verbose
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ oIFS=' 	
'
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ IFS==
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ echo -e --search=.cache/ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ newline 2
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=2
+ local target_platform=fortinet
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ echo
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ export actions_logfile=console/run.console
+ (( i < count ))
++ actions_logfile=console/run.console
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ touch console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ IFS=,
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ which awk
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ printf '%*s' 12 ''
+ read -r key value
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ mktemp -d
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--dmz-fw2-backup.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export divisor=--MTc0OTAzMjEyNzkzNjYxNTAwMAo--
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ divisor=--MTc0OTAzMjEyNzkzNjYxNTAwMAo--
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ source ./scripts/devops-helpers.shell
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
++ [[ -n '' ]]
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ command -v -- ./scripts/network-extract.shell
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ alias parse-cisco=main
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.530c3fjsQn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.530c3fjsQn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ result=0
+ source ./scripts/devops-resources.shell
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WVQSPhUPDH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WVQSPhUPDH
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ alias log-info=log_info
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(platform|p)$ ]]
++ alias print-message=message
+ [[ extract =~ ^(search|s)$ ]]
++ alias print-newline=newline
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ tr -d '\r'
++ alias pause=pause
+ IFS==
+ read -r key value
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
++ alias system-metrics=system_metrics
++ grep -v '^\s*$'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ grep -v '^#'
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ local first_search_entry=10.0.0.1
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ local last_search_entry=203.0.113.25
 description Internal Network Interface

object network NAT-Edge
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 host 203.0.113.25
 description Internet-bound IP NAT

+ [[ true == true ]]
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
++ export jobs_location=jobs
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
++ jobs_location=jobs
+ message 'Search Pattern: [ .cache/ips.list ]'
 host 172.16.0.5
++ mkdir -p jobs
 description WAN firewall entry point ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ 6 -eq 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ IFS=,
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console --verbose
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform =~ ^(console|o)$ ]]
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(export|r)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ platform =~ ^(extract|x)$ ]]
+ oIFS=' 	
  "domain": "edge.dc.example.com",
'
  "hostname": "perimeter-fw1"
+ [[ platform =~ ^(logger|l)$ ]]
}

+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ IFS==
domain-name edge.dc.example.com
+ local target_platform=fortinet

+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ [[ platform == \h\e\l\p ]]
 ip address 203.0.113.25 255.255.255.0
+ [[ platform == \d\e\b\u\g ]]
 description External Internet-facing Interface

interface GigabitEthernet0/1
+ [[ platform == \d\r\y\-\r\u\n ]]
 nameif inside
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \v\e\r\b\o\s\e ]]
 security-level 100
+ for xitem in "${@}"
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ IFS==

+ read -r key value
object network NAT-Edge
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
+ declare -a execute__netwowrk_extract
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
++ echo -e --search=.cache/ips.list
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
 description Internet-bound IP NAT
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'

++ console_location=console
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway
++ mkdir -p console

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=configs/misc/fw1.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ output_dir=.cache/resources/fortinet
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d .cache/resources/fortinet ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
+ [[ false == true ]]
++ targets_location=targets
+ [[ false == true ]]
+ [[ true == true ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+++ date +%s%N
++ mktemp -d
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ local verbose=true
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--perimeter-fw1.cfg.console
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^\s*$'
++ export divisor=--MTc0OTAzMjEyNzk2NDcxNjAwMAo--
++ divisor=--MTc0OTAzMjEyNzk2NDcxNjAwMAo--
++ grep -v '^#'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dT9lIdoBAM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dT9lIdoBAM
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ local 'extracted_configuration={
+ nl='\n'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ which awk
+ source ./scripts/devops-resources.shell
  "hostname": "fg-branch-vpn-01"
++ alias parse-listings--helper=parse_listings__helper
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
++ [[ -n '' ]]
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
++ [[ 5 -lt 4 ]]
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
++ alias detect-vendor=detect_vendor
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
++ alias network-configs--helper=network_configs__helper
++ alias exit-error=exit_error
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ alias list-file=list_file
+ result=0
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
+ [[ -n {
++ alias log-info=log_info
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ alias log-warn=log_warn
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
++ alias print-message=message
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ alias serialize-object=serialize_objects
++ alias print-newline=newline
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
++ alias pause=pause
 next
 edit "Panther-Vault"
++ alias print-line=print
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
++ alias print-file=print_file
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(config|c)$ ]]
+ result=0
+ exit 0
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IM3TQ8Owrr ]]
+ [[ extract =~ ^(export|r)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IM3TQ8Owrr
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export logs_location=logs
++ export 'nl=\n'
+ logs_location=logs
++ nl='\n'
+ mkdir -p logs
++ export cache_location=.cache
+ [[ extract == \h\e\l\p ]]
++ cache_location=.cache
+ [[ extract == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mkdir -p logs
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

+ sed '1{/^[[:space:]]*$/d;}'
config firewall address
 edit "IronMan-HQ"
+ local first_search_entry=10.0.0.1
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local last_search_entry=203.0.113.25
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ [[ true == true ]]
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ -n {
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ local count=17
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ ((  count == 0  ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
config system interface
 edit "wan1"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ newline
 next
+ local count=1
end
+ (( i = 0 ))

config firewall address
+ (( i < count ))
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
+ echo
 edit "IronMan-HQ"
+ (( i++ ))
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ (( i < count ))
++ IFS=,
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
+ local 'prompt_message=Enter configuration file to be parsed: '
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 next
 edit "Guardians-Relay"
+ [[ -z fortinet ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ [[ true == true ]]
 next
end ]]
++ echo -e --platform=cisco
+ newline
+ echo -en '{
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
  "hostname": "fg-branch-vpn-01"
}

+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'

config system interface
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ declare -a execute__netwowrk_extract
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ which awk
++ export jobs_location=jobs
++ jobs_location=jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ mkdir -p jobs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ printf '%*s' 12 ''
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
++ export actions_logfile=console/run.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console ]]
++ echo -e --config=configs/misc/fw3.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ mktemp -d
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "fortinet",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "model": "FortiGate-200F",
+ local verbose=true
  "version": "",
  "domain": "",
+ IFS=' 	
+ sed '1{/^[[:space:]]*$/d;}'
'
  "hostname": "fg-campus-core"
}
+ [[ -z '' ]]
+ local SCRIPT_DIR=./scripts

+ debug=false
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -z '' ]]

+ dry_run=false
config system interface
+ local script_filename=fortinet-configs.awk
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ [[ -z true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z '' ]]
  set alias "Campus Core Transit"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 next
+ export console_output=false
 edit "wifi"
+ console_output=false
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ [[ -z '' ]]
 next
+ local export_objects=false
end
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console ]]

config firewall address
+ [[ -z '' ]]
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ script_helper=false
 edit "Titan-WLAN-Host"
+ [[ false == true ]]
  set subnet 192.168.100.100 255.255.255.255
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  set comment "Guest WiFi node"
 next
end
+ [[ -z .cache/ips.list ]]
+ [[ config =~ ^(config|c)$ ]]

config firewall address
+ search_terms=()
+ local target_config=configs/misc/fw3.cfg
 edit "Cap-HQ"
+ declare -a search_terms
+ [[ config =~ ^(console|o)$ ]]
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
++ which awk
+ [[ -f .cache/ips.list ]]
 next
+ [[ config =~ ^(export|r)$ ]]
 edit "Vision-Link"
+ [[ .cache/ips.list != *,* ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ mapfile -t search_terms
+ [[ config =~ ^(extract|x)$ ]]
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ [[ config =~ ^(logger|l)$ ]]
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ [[ config =~ ^(platform|p)$ ]]
  set comment "Wanda’s chaos relay"
+ result=0
 next
+ exit 0
end'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PHxDkOUfaj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PHxDkOUfaj
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ IFS==
  "version": "",
+ read -r key value
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
++ export divisor=--MTc0OTAzMjEyNzk5MDk0ODAwMAo--
 edit "Cap-HQ"
++ divisor=--MTc0OTAzMjEyNzk5MDk0ODAwMAo--
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ source ./scripts/devops-helpers.shell
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -en '{
  "vendor": "fortinet",
++ [[ 5 -lt 4 ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
++ alias parse-listings--helper=parse_listings__helper
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ tr -d '\r'
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CCwJ9kVvvp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CCwJ9kVvvp
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ grep -v '^#'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ newline 2
++ alias list-file=list_file
++ alias log-error=log_error
+ local count=2
++ alias log-info=log_info
+ (( i = 0 ))
+ (( i < count ))
++ alias log-warn=log_warn
+ echo
++ alias print-message=message
+ (( i++ ))
+ (( i < count ))
++ alias print-newline=newline
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias pause=pause
+ [[ true == true ]]
++ alias print-line=print
+ alias parse-cisco=main
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
++ alias print-file=print_file
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ newline
+ export logs_location=logs
+ logs_location=logs
+ local count=1
+ mkdir -p logs
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
++ IFS=,
++ alias validate-address=validate_address
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ local extract_location=.cache/resources/misc/fw3.cfg
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Search Pattern: [ .cache/ips.list ]'
+ IFS==
+ read -r key value
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ echo -e --platform=cisco
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ local awk_bin=/usr/bin/awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ export console_location=console
+ message '                configs/fortinet/fg-testing-config.cfg'
++ console_location=console
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
++ mkdir -p console
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ [[ 6 -eq 0 ]]
+ newline
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console --verbose
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ oIFS=' 	
+ [[ platform == \h\e\l\p ]]
'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-campus-core.cfg.console
++ echo -e --search=.cache/ips.list
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ dirname .cache/resources/misc/fw1.cfg
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ result=0
+ [[ search =~ ^(search|s)$ ]]
+ exit 0
+ [[ logger =~ ^(config|c)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GGAQp4zvTN ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GGAQp4zvTN
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=configs/misc/switch1.conf
+ print '{
  "vendor": "fortinet",
++ echo -e --verbose
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "hostname": "fg-branch-vpn-01"
}
++ sed -e '1s|^\(-\)\{1,\}||'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ sed -e '1s|^\(-\)\{1,\}||'
config firewall policy
+ sed '1{/^[[:space:]]*$/d;}'
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
+++ date +%s%N
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+++ base64
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ newline 2
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=2
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ echo
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -z '' ]]
+ script_helper=false
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline
+ [[ -z .cache/ips.list ]]
+ local count=1
+ (( i = 0 ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ echo
+ [[ -f .cache/ips.list ]]
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ local script_filename=cisco-configs.awk
++ export divisor=--MTc0OTAzMjEyODAxNDAwMzAwMAo--
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ divisor=--MTc0OTAzMjEyODAxNDAwMzAwMAo--
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ which awk
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ alias parse-cisco=main
++ grep -v '^\s*$'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console ]]
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ script_filename=network-extract.shell
+ local first_search_entry=10.0.0.1
+ script_filename=network-extract
+ local last_search_entry=203.0.113.25
+ export network_extract__console=console/network-extract.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
++ which awk
+ ls -al --color=auto configs/misc/fw3.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fg-testing-config.cfg.console
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcl6Q8FAKp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qcl6Q8FAKp
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
++ echo -e --config=configs/misc/switch3.conf
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ dirname -- ./scripts/network-extract.shell

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ config =~ ^(config|c)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
+ local target_config=configs/misc/switch3.conf
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ config =~ ^(console|o)$ ]]
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ [[ config =~ ^(export|r)$ ]]
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ [[ config =~ ^(extract|x)$ ]]
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
+ [[ config =~ ^(logger|l)$ ]]

object network Kent-Server
 host 10.0.2.3
+ [[ config =~ ^(platform|p)$ ]]
 description Internal mail & identity services

object network Krypton-Gateway
+ [[ config =~ ^(search|s)$ ]]
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
 host 198.51.100.75
+ [[ config == \v\e\r\b\o\s\e ]]
 description Secondary outbound route for edge'
+ for xitem in "${@}"
+ IFS==
+ sed '1{/^[[:space:]]*$/d;}'
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ [[ verbose =~ ^(config|c)$ ]]

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ [[ verbose =~ ^(console|o)$ ]]
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
+ [[ verbose =~ ^(export|r)$ ]]

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
+ [[ verbose =~ ^(extract|x)$ ]]

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
+ [[ verbose =~ ^(logger|l)$ ]]

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local SCRIPT_DIR=./scripts
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ dry_run=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
++ echo -e --platform=cisco
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/switch1.conf ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ result=0
+ read -r key value
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i6cIyFnrpG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i6cIyFnrpG
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

++ echo -e --verbose
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
+ sed '1{/^[[:space:]]*$/d;}'
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ local last_search_entry=203.0.113.25
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ result=0
++ dirname .cache/resources/misc/switch3.conf
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.530c3fjsQn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.530c3fjsQn
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
+ sed '1{/^[[:space:]]*$/d;}'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
++ which awk
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ [[ false == true ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dT9lIdoBAM ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dT9lIdoBAM
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ sed '1{/^[[:space:]]*$/d;}'

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VOv5BaFADB/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CCwJ9kVvvp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CCwJ9kVvvp
+ set -euo pipefail
+ export LC_ALL=C
+ set -euo pipefail
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DqhfvuYY2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DqhfvuYY2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QWopinBAMH
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bha70fyWkG
+ nl='\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QWopinBAMH
+ source ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bha70fyWkG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ export 'nl=\n'
++ [[ -n '' ]]
+ nl='\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ mktemp -d
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias list-file=list_file
++ alias list-file=list_file
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias log-error=log_error
++ alias relative-configpath=relative_configpath
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias system-metrics=system_metrics
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ alias system-metrics=system_metrics
++ logs_location=logs
++ mkdir -p logs
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias validate-address=validate_address
++ mkdir -p logs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g6C3Rd48lx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g6C3Rd48lx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias validate-address=validate_address
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias warning-message=warning
++ mkdir -p jobs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
++ export console_location=console
+ export LC_ALL=C
++ console_location=console
+ LC_ALL=C
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p console
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
++ mktemp -d
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dPUD1FvKoW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dPUD1FvKoW
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ actions_logfile=console/run.console
+ export 'nl=\n'
+ nl='\n'
++ export console_location=console
+ source ./scripts/devops-resources.shell
++ console_location=console
++ actions_logfile=console/run.console
++ mkdir -p console
++ touch console/run.console
++ touch console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lWfSEoWqU2
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9JrmC0JxsZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lWfSEoWqU2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9JrmC0JxsZ
++ alias pause=pause
++ alias print-line=print
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
++ alias print-file=print_file
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ alias relative-configpath=relative_configpath
++ mktemp -d
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias validate-address=validate_address
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias warning-message=warning
++ alias log-info=log_info
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias log-warn=log_warn
++ export cache_location=.cache
++ cache_location=.cache
++ alias log-error=log_error
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias print-message=message
++ alias print-newline=newline
++ alias log-info=log_info
++ alias pause=pause
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ nl='\n'
++ cache_location=.cache
++ export cache_location=.cache
++ export logs_location=logs
++ cache_location=.cache
++ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p logs
++ export targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_location=targets
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mo1yCBE6HX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mo1yCBE6HX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias list-file=list_file
+++ base64
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ export jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ date +%s%N
++ mkdir -p jobs
+++ base64
+++ base64
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export divisor=--MTc0OTAzMjEyOTAxMjkzODAwMAo--
++ divisor=--MTc0OTAzMjEyOTAxMjkzODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ targets_location=targets
+ set -euo pipefail
+ export LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
+ LC_ALL=C
++ targets_logfile=.cache/targets.jobs
++ export divisor=--MTc0OTAzMjEyOTAxNjQyMjAwMAo--
++ divisor=--MTc0OTAzMjEyOTAxNjQyMjAwMAo--
++ mktemp -d
+ source ./scripts/devops-helpers.shell
+ alias parse-cisco=main
+ set -euo pipefail
++ [[ -n '' ]]
++ export console_location=console
+ export LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ console_location=console
+ LC_ALL=C
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
++ mkdir -p console
+ export logs_location=logs
++ export console_location=console
++ [[ 5 -lt 4 ]]
+ logs_location=logs
++ console_location=console
+ mkdir -p logs
++ mkdir -p console
++ export divisor=--MTc0OTAzMjEyOTAxNzQxMjAwMAo--
++ alias parse-listings--helper=parse_listings__helper
++ divisor=--MTc0OTAzMjEyOTAxNzQxMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
+ alias serialize-object=serialize_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ date +%s%N
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7X3reK1fIW
++ export actions_logfile=console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7X3reK1fIW
++ actions_logfile=console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ touch console/run.console
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract.shell
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias detect-vendor=detect_vendor
++ export actions_logfile=console/run.console
+ network_extract__console=console/network-extract.console
++ alias exit-error=exit_error
+ touch console/network-extract.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZCi3SRjzly
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZCi3SRjzly
++ alias print-newline=newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias pause=pause
+ source ./scripts/devops-resources.shell
++ alias print-line=print
++ alias print-file=print_file
++ [[ -n '' ]]
+ set -euo pipefail
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
+ export LC_ALL=C
+ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ alias system-metrics=system_metrics
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias log-error=log_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlgqxW817W
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlgqxW817W
++ alias log-info=log_info
++ alias warning-message=warning
++ export LC_ALL=C
++ alias log-warn=log_warn
++ LC_ALL=C
++ alias print-message=message
++ export 'nl=\n'
++ nl='\n'
++ alias print-newline=newline
++ export cache_location=.cache
++ alias pause=pause
++ alias print-line=print
++ cache_location=.cache
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export logs_location=logs
++ logs_location=logs
+ export 'nl=\n'
++ mkdir -p logs
+ nl='\n'
++ alias print-file=print_file
+ source ./scripts/devops-resources.shell
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_location=targets
++ [[ 5 -lt 4 ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ alias system-metrics=system_metrics
++ targets_logfile=.cache/targets.jobs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias log-error=log_error
++ alias warning-message=warning
++ alias log-info=log_info
++ export LC_ALL=C
++ LC_ALL=C
++ alias log-warn=log_warn
++ alias print-message=message
++ export 'nl=\n'
++ nl='\n'
++ alias print-newline=newline
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ mktemp -d
+ export network_extract__console=console/network-extract.console
++ alias print-file=print_file
+ network_extract__console=console/network-extract.console
++ alias relative-configpath=relative_configpath
++ export divisor=--MTc0OTAzMjEyOTAyODA3NzAwMAo--
++ divisor=--MTc0OTAzMjEyOTAyODA3NzAwMAo--
+ source ./scripts/devops-helpers.shell
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias validate-address=validate_address
++ touch console/run.console
+ touch console/network-extract.console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zwd8jdkoxs/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias network-extract--helper=network_extract__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias serialize-object=serialize_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ base64
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+++ tr -dc a-zA-Z0-9
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.caWR6HwP4i
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.caWR6HwP4i
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list
++ alias log-info=log_info
++ alias log-warn=log_warn
+++ date +%s%N
+++ date +%s%N
++ mktemp -d
++ alias print-message=message
++ export targets_location=targets
+ set -euo pipefail
++ targets_location=targets
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-newline=newline
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ag2uop57ma/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias pause=pause
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console --export --verbose
++ alias print-line=print
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzzhhl4q3k/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export jobs_location=jobs
+++ base64
++ jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ read -r key value
+++ base64
+ oIFS=' 	
'
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
++ mkdir -p jobs
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0OTAzMjEyOTAzODcwMDAwMAo--
++ mktemp -d
++ divisor=--MTc0OTAzMjEyOTAzODcwMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ export console_location=console
++ console_location=console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ mkdir -p console
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias validate-address=validate_address
+ touch console/network-extract.console
++ alias warning-message=warning
++ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ LC_ALL=C
++ export 'nl=\n'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ nl='\n'
+++ date +%s%N
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ [[ search =~ ^(config|c)$ ]]
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+++ base64
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bg25w97XVy
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bg25w97XVy
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
++ alias detect-vendor=detect_vendor
++ export divisor=--MTc0OTAzMjEyOTA0MzMyNDAwMAo--
++ alias exit-error=exit_error
++ divisor=--MTc0OTAzMjEyOTA0MzMyNDAwMAo--
++ export divisor=--MTc0OTAzMjEyOTA0MzQ3OTAwMAo--
++ divisor=--MTc0OTAzMjEyOTA0MzQ3OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
++ alias list-file=list_file
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export console_location=console
++ alias print-newline=newline
++ console_location=console
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vly7uRFcBd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vly7uRFcBd
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias pause=pause
+ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
++ alias print-line=print
++ [[ -n '' ]]
++ alias print-file=print_file
++ alias network-configs--helper=network_configs__helper
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias system-metrics=system_metrics
+ [[ 7 -eq 0 ]]
++ touch console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console --export --verbose
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ alias serialize-object=serialize_objects
++ alias validate-address=validate_address
++ alias print-message=message
+ oIFS=' 	
'
++ alias print-newline=newline
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
++ alias pause=pause
+ alias serialize-object=serialize_objects
++ alias print-line=print
++ alias print-file=print_file
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export 'nl=\n'
++ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export cache_location=.cache
+ alias parse-cisco=main
++ cache_location=.cache
+ mkdir -p logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ -z x ]]
+ touch console/network-extract.console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export divisor=--MTc0OTAzMjEyOTA0ODM4NzAwMAo--
++ divisor=--MTc0OTAzMjEyOTA0ODM4NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ search =~ ^(console|o)$ ]]
++ touch console/run.console
+ [[ search =~ ^(export|r)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ export jobs_location=jobs
+ [[ search =~ ^(extract|x)$ ]]
++ jobs_location=jobs
++ jobs_location=jobs
+ [[ search =~ ^(logger|l)$ ]]
++ mkdir -p jobs
+ [[ search =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzdimaynbm/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
+ script_filename=network-extract.shell
+ [[ search == \h\e\l\p ]]
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search == \d\e\b\u\g ]]
++ mkdir -p console
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export network_extract__console=console/network-extract.console
+ IFS==
+ network_extract__console=console/network-extract.console
+ read -r key value
+ oIFS=' 	
'
+ touch console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+++ date +%s%N
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ base64
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_location=targets
++ export actions_logfile=console/run.console
+ [[ search =~ ^(search|s)$ ]]
+ set -euo pipefail
++ export console_location=console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ [[ 7 -eq 0 ]]
++ actions_logfile=console/run.console
++ targets_location=targets
+ export LC_ALL=C
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.aaeb4b1juj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
++ touch console/run.console
++ targets_logfile=.cache/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0v6k9tfdan/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ console_location=console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console --export --verbose
+ for xitem in "${@}"
++ mkdir -p console
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ oIFS=' 	
'
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ export divisor=--MTc0OTAzMjEyOTA2Mzg2MDAwMAo--
++ divisor=--MTc0OTAzMjEyOTA2Mzg2MDAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ export divisor=--MTc0OTAzMjEyOTA2NDI1NTAwMAo--
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ divisor=--MTc0OTAzMjEyOTA2NDI1NTAwMAo--
+ [[ extract =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ipcvt3tkxi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+++ date +%s%N
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export actions_logfile=console/run.console
+ [[ -z x ]]
+ mkdir -p logs
++ actions_logfile=console/run.console
+ export logs_location=logs
+ logs_location=logs
++ touch console/run.console
+ mkdir -p logs
+++ base64
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=fortinet
++ export actions_logfile=console/run.console
++ export targets_location=targets
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ actions_logfile=console/run.console
+ [[ config =~ ^(console|o)$ ]]
++ targets_location=targets
++ touch console/run.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nb2vpF3LDg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nb2vpF3LDg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ set -euo pipefail
+ export LC_ALL=C
++ [[ 5 -lt 4 ]]
+ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ config =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ extract =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export divisor=--MTc0OTAzMjEyOTA3NDI2NzAwMAo--
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ targets_location=targets
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ divisor=--MTc0OTAzMjEyOTA3NDI2NzAwMAo--
+ [[ config =~ ^(platform|p)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(logger|l)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ targets_logfile=.cache/targets.jobs
+ touch console/network-extract.console
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
++ alias warning-message=warning
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+++ date +%s%N
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
+ IFS==
+ [[ search == \h\e\l\p ]]
++ LC_ALL=C
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ IFS==
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ search == \v\e\r\b\o\s\e ]]
+++ base64
++ export targets_location=targets
+ read -r key value
+ for xitem in "${@}"
++ cache_location=.cache
+ [[ search =~ ^(config|c)$ ]]
++ targets_location=targets
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
++ export logs_location=logs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
++ logs_location=logs
++ mkdir -p logs
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+ alias serialize-object=serialize_objects
+++ base64
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.swL536F6Ry
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.swL536F6Ry
+++ tr -dc a-zA-Z0-9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ mktemp -d
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0OTAzMjEyOTA4NDA1OTAwMAo--
++ divisor=--MTc0OTAzMjEyOTA4NDA1OTAwMAo--
++ alias detect-vendor=detect_vendor
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --platform=cisco
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ base64
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ export jobs_location=jobs
++ nl='\n'
++ jobs_location=jobs
++ export cache_location=.cache
++ cache_location=.cache
++ mkdir -p jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ export divisor=--MTc0OTAzMjEyOTA4NzcwMDAwMAo--
++ divisor=--MTc0OTAzMjEyOTA4NzcwMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mfy48oIh4w
+ [[ -z x ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mfy48oIh4w
+ alias serialize-object=serialize_objects
+ export logs_location=logs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ logs_location=logs
+ export 'nl=\n'
+ mkdir -p logs
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zwd8jdkoxs/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ extract =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ alias print-message=message
+ alias parse-cisco=main
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console --export --verbose
++ alias print-newline=newline
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ -z x ]]
++ alias print-line=print
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export divisor=--MTc0OTAzMjEyOTA5MTU2NzAwMAo--
++ alias print-file=print_file
++ divisor=--MTc0OTAzMjEyOTA5MTU2NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
++ alias warning-message=warning
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.duju3locwa/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias serialize-object=serialize_objects
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ag2uop57ma/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ alias parse-cisco=main
+ export network_extract__console=console/network-extract.console
+ oIFS=' 	
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ oIFS=' 	
'
+ oIFS=' 	
'
+ mkdir -p logs
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzzhhl4q3k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ oIFS=' 	
+ export network_extract__console=console/network-extract.console
'
'
+ network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ touch console/network-extract.console
+ IFS==
+ read -r key value
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/misc/switch1.conf
++ export console_location=console
++ console_location=console
+ [[ config =~ ^(console|o)$ ]]
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ touch console/run.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eccjxlkejp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console --export --verbose
++ echo -e --platform=cisco
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list
++ export divisor=--MTc0OTAzMjEyOTEyMDk5NDAwMAo--
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ divisor=--MTc0OTAzMjEyOTEyMDk5NDAwMAo--
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZaBTQtuQW
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZaBTQtuQW
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+++ date +%s%N
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+ [[ config =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0OTAzMjEyOTEyNjExMjAwMAo--
+ [[ config == \h\e\l\p ]]
++ divisor=--MTc0OTAzMjEyOTEyNjExMjAwMAo--
+++ tr -dc a-zA-Z0-9
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
+ set -euo pipefail
+ [[ search == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\e\b\u\g ]]
+ export LC_ALL=C
+ [[ search == \d\r\y\-\r\u\n ]]
+ LC_ALL=C
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7P0DeGqKQA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7P0DeGqKQA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zrniiZHft5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zrniiZHft5
++ alias log-error=log_error
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
+ export 'nl=\n'
+ nl='\n'
++ alias log-warn=log_warn
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
++ alias print-message=message
++ alias network-extract--helper=network_extract__helper
++ alias print-newline=newline
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ config =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config == \h\e\l\p ]]
++ alias exit-error=exit_error
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias relative-configpath=relative_configpath
+ [[ config == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias system-metrics=system_metrics
++ alias log-info=log_info
++ alias log-warn=log_warn
++ mktemp -d
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
++ alias print-message=message
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias print-newline=newline
+ [[ config =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
++ alias pause=pause
++ alias warning-message=warning
+ [[ config =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ alias print-line=print
++ LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(logger|l)$ ]]
++ export cache_location=.cache
++ alias print-file=print_file
++ cache_location=.cache
++ export logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
++ logs_location=logs
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(search|s)$ ]]
++ mkdir -p logs
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
+ [[ -z x ]]
+ read -r key value
+ export logs_location=logs
+ logs_location=logs
+ alias parse-cisco=main
+ [[ extract =~ ^(config|c)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
++ alias warning-message=warning
+ logs_location=logs
++ export LC_ALL=C
+ mkdir -p logs
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ export divisor=--MTc0OTAzMjEyOTEzMjU1NzAwMAo--
++ divisor=--MTc0OTAzMjEyOTEzMjU1NzAwMAo--
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ logger =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rsZminnWrn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rsZminnWrn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ -z x ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ export logs_location=logs
+ logs_location=logs
+ [[ export =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
+ mkdir -p logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ jobs_location=jobs
++ mkdir -p jobs
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
+ [[ logger =~ ^(platform|p)$ ]]
++ alias exit-error=exit_error
+ script_filename=network-extract
+ [[ export =~ ^(console|o)$ ]]
++ export console_location=console
+ export network_extract__console=console/network-extract.console
++ console_location=console
++ mkdir -p console
+ network_extract__console=console/network-extract.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ touch console/network-extract.console
++ alias print-message=message
++ alias print-newline=newline
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias pause=pause
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qjdadx1mbj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ export console_location=console
++ console_location=console
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ mkdir -p console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ touch console/run.console
+ oIFS=' 	
'
++ mktemp -d
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(platform|p)$ ]]
+ touch console/network-extract.console
++ echo -e --platform=fortinet
++ mktemp -d
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzdimaynbm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
++ export jobs_location=jobs
+ read -r key value
++ jobs_location=jobs
++ mkdir -p jobs
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AMnGGHyaP4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AMnGGHyaP4
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0AY34RKj0
+ [[ 7 -eq 0 ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0AY34RKj0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bve7ope5rf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ oIFS=' 	
++ export console_location=console
'
++ console_location=console
++ mkdir -p console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
+ export 'nl=\n'
+ nl='\n'
++ alias log-error=log_error
+ source ./scripts/devops-resources.shell
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
++ alias pause=pause
++ alias detect-vendor=detect_vendor
++ alias print-line=print
+ [[ platform =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(export|r)$ ]]
++ alias print-file=print_file
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ local target_platform=fortinet
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias log-info=log_info
++ alias system-metrics=system_metrics
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias print-message=message
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
++ alias pause=pause
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-line=print
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+++ date +%s%N
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ export LC_ALL=C
+ IFS==
++ LC_ALL=C
+ local target_platform=cisco
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
++ mkdir -p logs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
++ export targets_location=targets
+ [[ search =~ ^(console|o)$ ]]
+++ base64
++ targets_location=targets
+ [[ search =~ ^(export|r)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ search =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
+ [[ platform == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ export jobs_location=jobs
+++ date +%s%N
++ jobs_location=jobs
+++ date +%s%N
++ mkdir -p jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0OTAzMjEyOTE2MzY0NDAwMAo--
++ divisor=--MTc0OTAzMjEyOTE2MzY0NDAwMAo--
+ source ./scripts/devops-helpers.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ jobs_location=jobs
++ mktemp -d
++ mkdir -p jobs
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZZFvXE8SW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZZFvXE8SW
+ alias serialize-object=serialize_objects
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ export targets_location=targets
+ source ./scripts/devops-resources.shell
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ search == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
++ alias pause=pause
+ export logs_location=logs
+ [[ platform =~ ^(console|o)$ ]]
+ logs_location=logs
++ alias print-line=print
+ mkdir -p logs
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
++ export console_location=console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
++ console_location=console
+ [[ logger =~ ^(config|c)$ ]]
++ mkdir -p console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(extract|x)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ cache_location=.cache
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
++ export logs_location=logs
++ logs_location=logs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
++ mkdir -p logs
+ [[ config =~ ^(export|r)$ ]]
++ export divisor=--MTc0OTAzMjEyOTE2OTk0ODAwMAo--
++ divisor=--MTc0OTAzMjEyOTE2OTk0ODAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
++ export divisor=--MTc0OTAzMjEyOTE2OTk4MTAwMAo--
+ read -r key value
++ divisor=--MTc0OTAzMjEyOTE2OTk4MTAwMAo--
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8c0ecoH303
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8c0ecoH303
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
+ alias parse-cisco=main
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ -z x ]]
+ export logs_location=logs
++ alias exit-error=exit_error
+ logs_location=logs
+ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
+++ base64
++ alias log-info=log_info
++ alias log-warn=log_warn
+ alias parse-cisco=main
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ [[ -z x ]]
+ export logs_location=logs
++ alias print-line=print
+ logs_location=logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
+ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --export
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ export 'nl=\n'
+ script_filename=network-extract.shell
++ nl='\n'
+ script_filename=network-extract
++ export cache_location=.cache
++ cache_location=.cache
+ export network_extract__console=console/network-extract.console
++ export logs_location=logs
+ network_extract__console=console/network-extract.console
++ logs_location=logs
++ mkdir -p logs
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
++ touch console/run.console
+ [[ config =~ ^(export|r)$ ]]
++ export jobs_location=jobs
+ [[ config =~ ^(extract|x)$ ]]
++ jobs_location=jobs
+ [[ config =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
++ mkdir -p jobs
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --platform=cisco
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export divisor=--MTc0OTAzMjEyOTE3OTAxOTAwMAo--
++ divisor=--MTc0OTAzMjEyOTE3OTAxOTAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(search|s)$ ]]
++ export actions_logfile=console/run.console
+ [[ config == \h\e\l\p ]]
++ actions_logfile=console/run.console
++ export jobs_location=jobs
+ [[ 7 -eq 0 ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
++ touch console/run.console
++ jobs_location=jobs
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.aaeb4b1juj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console --export --verbose
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
'
+ [[ extract =~ ^(logger|l)$ ]]
++ export console_location=console
++ console_location=console
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ export targets_location=targets
++ mkdir -p console
++ targets_location=targets
+ [[ extract =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ extract == \h\e\l\p ]]
++ targets_logfile=.cache/targets.jobs
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ logger =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ IFS==
+ read -r key value
+ mkdir -p logs
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ mktemp -d
++ echo -e --platform=cisco
++ echo -e --export
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kmyla3hheb/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console --export --verbose
+++ date +%s%N
+ [[ export =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ 7 -eq 0 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ipcvt3tkxi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ echo -e --platform=cisco
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+++ base64
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lZTAXQ9f4v
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lZTAXQ9f4v
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ alias print-file=print_file
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list
++ alias validate-address=validate_address
+ [[ extract == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias warning-message=warning
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ export LC_ALL=C
+ IFS==
++ LC_ALL=C
+ local target_platform=cisco
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
++ export divisor=--MTc0OTAzMjEyOTE5NDY0NTAwMAo--
++ export actions_logfile=console/run.console
+ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
++ divisor=--MTc0OTAzMjEyOTE5NDY0NTAwMAo--
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
++ actions_logfile=console/run.console
++ targets_location=targets
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ touch console/run.console
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local export_objects=true
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ 7 -eq 0 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ag2uop57ma/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console --export --verbose
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ oIFS=' 	
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ debug=false
+ alias serialize-object=serialize_objects
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ mktemp -d
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+++ date +%s%N
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ [[ search =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ mkdir -p logs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ echo -e --platform=fortinet
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
++ mkdir -p jobs
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1fh8Xe7WS3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1fh8Xe7WS3
+ [[ search =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
++ tr -d '\r'
+ export 'nl=\n'
+ IFS==
+ nl='\n'
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list
+ source ./scripts/devops-resources.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ [[ -n '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ IFS==
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ export console_location=console
++ console_location=console
++ alias list-file=list_file
+ [[ export =~ ^(logger|l)$ ]]
++ alias log-error=log_error
++ mkdir -p console
+ [[ export =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ [[ export =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ alias print-message=message
+ [[ export == \d\r\y\-\r\u\n ]]
+++ base64
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ grep -v '^\s*$'
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ export divisor=--MTc0OTAzMjEyOTIwODE0ODAwMAo--
++ divisor=--MTc0OTAzMjEyOTIwODE0ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias validate-address=validate_address
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias warning-message=warning
+++ tr -dc a-zA-Z0-9
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ grep -v '^#'
++ mkdir -p logs
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ alias parse-cisco=main
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ export divisor=--MTc0OTAzMjEyOTIxNTMyODAwMAo--
++ divisor=--MTc0OTAzMjEyOTIxNTMyODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y3bYvRImXl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y3bYvRImXl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ source ./scripts/devops-resources.shell
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
++ echo -e --export
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export LC_ALL=C
+ [[ platform =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ local target_platform=cisco
++ export 'nl=\n'
++ nl='\n'
+ [[ platform =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
++ cache_location=.cache
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ export logs_location=logs
+ [[ -z '' ]]
++ logs_location=logs
++ mkdir -p logs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ set -euo pipefail
+ read -r key value
+ export LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform =~ ^(config|c)$ ]]
+ LC_ALL=C
+ mkdir -p logs
+ debug=false
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export console_output=false
+ console_output=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ search_terms=()
+ [[ platform =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ for xitem in "${@}"
++ export console_location=console
+ script_filename=network-extract
+ IFS==
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ console_location=console
++ mkdir -p console
+ touch console/network-extract.console
++ echo -e --verbose
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ IFS==
+++ date +%s%N
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6QCrst0HwU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6QCrst0HwU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ set -euo pipefail
+ [[ extract =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ grep -v '^\s*$'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ script_filename=network-extract.shell
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
++ alias exit-error=exit_error
+ script_filename=network-extract
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ grep -v '^#'
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
+ [[ 7 -eq 0 ]]
++ export divisor=--MTc0OTAzMjEyOTIzNDUzNTAwMAo--
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bwwus3uyc1/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias warning-message=warning
++ divisor=--MTc0OTAzMjEyOTIzNDUzNTAwMAo--
+ export network_extract__console=console/network-extract.console
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ [[ -n '' ]]
++ cache_location=.cache
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export logs_location=logs
++ logs_location=logs
++ __DEVOPS_HELPERS_SOURCED=1
++ mktemp -d
++ mkdir -p logs
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ network_extract__console=console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ [[ logger =~ ^(logger|l)$ ]]
'
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ for xitem in "${@}"
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export console_location=console
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \d\r\y\-\r\u\n ]]
++ console_location=console
++ mkdir -p console
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
++ echo -e --verbose
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ logger == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ alias parse-cisco=main
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
++ echo -e --export
+ export logs_location=logs
+ read -r key value
+ logs_location=logs
+ mkdir -p logs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWfK23vjcM
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
++ echo -e --platform=cisco
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWfK23vjcM
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias detect-vendor=detect_vendor
+ local count=1
+ ((  count == 0  ))
+++ date +%s%N
++ alias exit-error=exit_error
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ alias log-error=log_error
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
++ alias log-info=log_info
+ (( i = 0 ))
+ (( i < count ))
++ alias log-warn=log_warn
++ alias print-message=message
++ echo -e --export
++ alias print-newline=newline
++ echo -e --export
+ [[ platform =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ echo
++ alias pause=pause
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.duju3locwa/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+++ base64
++ alias print-file=print_file
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ set -euo pipefail
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
++ echo -e --export
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ local export_objects=true
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ export =~ ^(logger|l)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ export =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
++ mkdir -p logs
+ [[ export == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ export == \v\e\r\b\o\s\e ]]
++ export console_location=console
++ mktemp -d
++ console_location=console
++ mkdir -p console
+ for xitem in "${@}"
+ oIFS=' 	
+ [[ export =~ ^(config|c)$ ]]
'
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ export =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ export =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
++ export targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(extract|x)$ ]]
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ set -euo pipefail
+ [[ platform =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ search =~ ^(console|o)$ ]]
+ local export_objects=true
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ export divisor=--MTc0OTAzMjEyOTI1MDg1MTAwMAo--
+ [[ verbose == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
++ divisor=--MTc0OTAzMjEyOTI1MDg1MTAwMAo--
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local verbose=true
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local export_objects=true
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ -z '' ]]
+ [[ 7 -eq 0 ]]
+ [[ export == \h\e\l\p ]]
+ debug=false
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bybjpfzkmp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \d\r\y\-\r\u\n ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias network-extract--helper=network_extract__helper
+ [[ export == \v\e\r\b\o\s\e ]]
++ export jobs_location=jobs
+ IFS==
+ for xitem in "${@}"
+ read -r key value
++ jobs_location=jobs
+ [[ -z '' ]]
++ mkdir -p jobs
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ mktemp -d
+ dry_run=false
++ export actions_logfile=console/run.console
+++ date +%s%N
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DXl8IgxsK
++ echo -e --verbose
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DXl8IgxsK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+++ base64
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias print-newline=newline
++ echo -e --verbose
++ alias pause=pause
+ alias parse-cisco=main
++ alias print-line=print
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias system-metrics=system_metrics
+ mkdir -p logs
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rQEUgK5ngK
+ IFS==
+ read -r key value
++ export console_location=console
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
++ export targets_location=targets
++ console_location=console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rQEUgK5ngK
++ targets_location=targets
++ mkdir -p console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ script_helper=false
++ export divisor=--MTc0OTAzMjEyOTI2MTQ0NjAwMAo--
++ alias log-error=log_error
++ divisor=--MTc0OTAzMjEyOTI2MTQ0NjAwMAo--
++ alias log-info=log_info
+ source ./scripts/devops-helpers.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FcnkMEGyzT
++ alias log-warn=log_warn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FcnkMEGyzT
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-message=message
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ search_terms=()
++ [[ 5 -lt 4 ]]
+ declare -a search_terms
+ script_filename=network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias pause=pause
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ script_filename=network-extract
+ export 'nl=\n'
++ alias print-line=print
+ [[ cfg == \c\f\g ]]
+ nl='\n'
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ network_extract__console=console/network-extract.console
++ alias print-file=print_file
+ [[ search =~ ^(export|r)$ ]]
+ touch console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list != *,* ]]
++ alias parse-listings--helper=parse_listings__helper
+ mapfile -t search_terms
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(search|s)$ ]]
++ jobs_location=jobs
+ [[ verbose == \h\e\l\p ]]
++ mkdir -p jobs
+ [[ verbose == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias warning-message=warning
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ export LC_ALL=C
+ [[ search =~ ^(logger|l)$ ]]
++ LC_ALL=C
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ set -euo pipefail
++ export 'nl=\n'
+ local verbose=true
+ local verbose=true
++ nl='\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS=' 	
++ export cache_location=.cache
+ [[ search =~ ^(search|s)$ ]]
++ cache_location=.cache
++ echo -e --verbose
++ export logs_location=logs
++ logs_location=logs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list
++ echo -e --verbose
++ mkdir -p logs
+ alias serialize-object=serialize_objects
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --export
+ IFS=' 	
'
+ [[ -z '' ]]
'
++ [[ 5 -lt 4 ]]
+ debug=false
+ alias parse-cisco=main
+ [[ -z '' ]]
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ debug=false
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ [[ -z true ]]
++ alias exit-error=exit_error
+ dry_run=false
+ [[ -z true ]]
+ [[ -z x ]]
+ [[ -z '' ]]
+ export logs_location=logs
+ export console_output=false
+ logs_location=logs
+ console_output=false
+ [[ -z true ]]
+ mkdir -p logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ -z '' ]]
+ console_output=false
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console ]]
+++ base64
+ [[ -z '' ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
++ mktemp -d
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias list-file=list_file
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
++ alias log-error=log_error
+ [[ config =~ ^(config|c)$ ]]
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]]
++ alias log-info=log_info
+++ tr -dc a-zA-Z0-9
+ search_terms=()
+ declare -a search_terms
++ alias log-warn=log_warn
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]]
++ export actions_logfile=console/run.console
++ alias print-message=message
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list != *,* ]]
++ actions_logfile=console/run.console
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias print-newline=newline
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ touch console/run.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ tr -d '\r'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.prgrvfdxna/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ oIFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ mapfile -t search_terms
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ export jobs_location=jobs
+ [[ -z true ]]
++ jobs_location=jobs
+ [[ logger =~ ^(config|c)$ ]]
++ mkdir -p jobs
++ grep -v '^#'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias pause=pause
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ output_dir=reports/10.0.0.1/cisco
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(export|r)$ ]]
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ [[ export =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ network_extract__console=console/network-extract.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ touch console/network-extract.console
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAzMjEyOTI3MjM0NzAwMAo--
++ divisor=--MTc0OTAzMjEyOTI3MjM0NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(export|r)$ ]]
+ search_terms=()
+ declare -a search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iJkokQgG2G
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iJkokQgG2G
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ alias serialize-object=serialize_objects
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
++ alias list-file=list_file
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias print-file=print_file
+ [[ config =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
+ [[ verbose =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ alias relative-configpath=relative_configpath
++ alias print-message=message
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
++ targets_location=targets
++ alias print-newline=newline
+ [[ verbose =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias pause=pause
++ alias system-metrics=system_metrics
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z x ]]
++ alias print-line=print
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(logger|l)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ touch console/run.console
+ [[ config =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ grep -v '^\s*$'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ verbose =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ verbose == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ verbose == \d\e\b\u\g ]]
++ export LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
+ local verbose=true
++ command -v -- ./scripts/network-extract.shell
+ IFS=' 	
++ export 'nl=\n'
++ alias warning-message=warning
+ [[ verbose =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t09SyFTZwr
++ nl='\n'
'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t09SyFTZwr
++ export LC_ALL=C
+ [[ verbose == \h\e\l\p ]]
++ echo -e --verbose
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ grep -v '^#'
++ export console_location=console
+ [[ -z '' ]]
++ console_location=console
+ debug=false
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ local first_search_entry=10.0.2.3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ tr -d '\r'
++ LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console ]]
+ local verbose=true
+ [[ -z '' ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ script_helper=false
+ [[ config =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ search_terms=()
+ [[ config =~ ^(logger|l)$ ]]
+ IFS=' 	
+ declare -a search_terms
+ [[ config =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ echo -e --export
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ 7 -eq 0 ]]
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzzhhl4q3k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console --export --verbose
++ alias detect-vendor=detect_vendor
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+++ base64
++ tr -d '\r'
+ IFS==
++ grep -v '^#'
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ] ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ export 'nl=\n'
+ [[ search =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
++ mkdir -p logs
+ touch console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
+ [[ search =~ ^(search|s)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ]]
+ debug=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ grep -v '^#'
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ touch console/run.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ script_helper=false
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ search_terms=()
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ declare -a search_terms
++ alias exit-error=exit_error
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list != *,* ]]
+ ((  count == 0  ))
+ mapfile -t search_terms
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local first_search_entry=10.10.10.10
+ newline
+ local last_search_entry=10.10.10.10
+ local count=1
+ (( i = 0 ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i < count ))
+ [[ true == true ]]
+ dry_run=false
+ [[ -z true ]]
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+++ date +%s%N
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ console_output=false
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ local last_search_entry=172.18.1.20
+ [[ extract =~ ^(export|r)$ ]]
+ script_helper=false
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
++ export divisor=--MTc0OTAzMjEyOTI4NzczMTAwMAo--
+ [[ true == true ]]
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ divisor=--MTc0OTAzMjEyOTI4NzczMTAwMAo--
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z cisco ]]
++ alias list-file=list_file
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ extract =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ extract == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-warn=log_warn
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
++ alias print-message=message
+ read -r key value
+ (( i < count ))
+++ base64
++ alias parse-listings--helper=parse_listings__helper
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ [[ export =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ ((  count == 0  ))
+ local export_objects=true
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bwwus3uyc1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ newline
++ alias print-newline=newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console --export --verbose
+ echo
+ (( i++ ))
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ oIFS=' 	
+ newline
'
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ [[ -z cisco ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ search_terms=()
+ echo
+ declare -a search_terms
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]]
+ (( i < count ))
++ export console_location=console
++ alias pause=pause
+++ tr -dc a-zA-Z0-9
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list != *,* ]]
++ console_location=console
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias print-line=print
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ mkdir -p console
+ local SCRIPT_DIR=./scripts
+ [[ -z cisco ]]
+ local first_search_entry=172.16.1.6
+ local script_filename=cisco-configs.awk
+ [[ export =~ ^(search|s)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
++ alias print-file=print_file
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
++ alias relative-configpath=relative_configpath
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ mapfile -t search_terms
++ tr -d '\r'
+ local count=1
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i = 0 ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ alias warning-message=warning
+ alias parse-cisco=main
++ export LC_ALL=C
++ LC_ALL=C
+ newline
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local count=1
++ export targets_location=targets
++ targets_location=targets
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ export targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
++ export 'nl=\n'
++ grep -v '^\s*$'
++ targets_logfile=.cache/targets.jobs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ((  count == 0  ))
+ [[ search =~ ^(platform|p)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
++ echo -e --platform=fortinet
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ echo
+ (( i < count ))
++ nl='\n'
+ (( i++ ))
++ grep -v '^#'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ echo
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ for xitem in "${@}"
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export divisor=--MTc0OTAzMjEyOTI5NDU4NTAwMAo--
++ divisor=--MTc0OTAzMjEyOTI5NDU4NTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ export jobs_location=jobs
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ export cache_location=.cache
+ (( i < count ))
++ cache_location=.cache
+ [[ config =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+++ date +%s%N
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ grep -v '^\s*$'
++ actions_logfile=console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ touch console/run.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=192.0.2.50
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+ local last_search_entry=192.0.2.50
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
+ [[ platform =~ ^(config|c)$ ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ config =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ script_filename=network-extract
+ [[ config == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0OTAzMjEyOTMwNDYwNzAwMAo--
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
++ jobs_location=jobs
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ echo
++ divisor=--MTc0OTAzMjEyOTMwNDYwNzAwMAo--
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i++ ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ IFS==
+ for xitem in "${@}"
+ touch console/network-extract.console
++ mkdir -p jobs
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.91PbLixbFq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.91PbLixbFq
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z cisco ]]
+ [[ true == true ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ newline
++ [[ -n '' ]]
+ local count=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ 7 -eq 0 ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.en7bzrpkdj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias detect-vendor=detect_vendor
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
++ alias exit-error=exit_error
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console --export --verbose
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ local first_search_entry=172.31.255.254
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
++ alias list-file=list_file
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo
++ alias log-error=log_error
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ oIFS=' 	
'
++ alias log-info=log_info
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias network-extract--helper=network_extract__helper
+ local first_search_entry=172.16.0.5
+ [[ extract =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ local last_search_entry=172.31.255.254
+ [[ extract =~ ^(export|r)$ ]]
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ alias pause=pause
+ [[ extract =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ extract =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ alias serialize-object=serialize_objects
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ]'
++ IFS=,
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo 10.0.0.1
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ]'
+ (( i++ ))
++ alias validate-address=validate_address
+++ date +%s%N
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias warning-message=warning
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ export LC_ALL=C
+ [[ extract == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
++ export 'nl=\n'
++ nl='\n'
+ read -r key value
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ alias parse-cisco=main
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-configs--ips.list ]'
+ newline
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+++ base64
+ ((  count == 0  ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ echo
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z cisco ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(export|r)$ ]]
+ IFS=' 	
'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ dry_run=false
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ export console_output=false
+ console_output=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qjdadx1mbj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
+ [[ config =~ ^(platform|p)$ ]]
++ jobs_location=jobs
+ [[ config =~ ^(search|s)$ ]]
++ mkdir -p jobs
+ echo
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ set -euo pipefail
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export LC_ALL=C
+ (( i = 0 ))
+ LC_ALL=C
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ jobs_location=jobs
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ mkdir -p jobs
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ script_helper=false
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]]
+ [[ -z cisco ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ search_terms=()
+ declare -a search_terms
+ [[ cfg == \c\f\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list != *,* ]]
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ mapfile -t search_terms
++ export console_location=console
+ [[ true == true ]]
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --platform=cisco
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export divisor=--MTc0OTAzMjEyOTMxNTE0NDAwMAo--
++ divisor=--MTc0OTAzMjEyOTMxNTE0NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list
++ alias network-extract--helper=network_extract__helper
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ which awk
+ [[ logger =~ ^(console|o)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
++ echo -e --platform=cisco
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ extract == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ logger =~ ^(logger|l)$ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract == \d\r\y\-\r\u\n ]]
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ tr -d '\r'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ grep -v '^\s*$'
++ echo -e --platform=cisco
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ [[ platform =~ ^(export|r)$ ]]
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^#'
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ local awk_bin=/usr/bin/awk
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local count=1
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i = 0 ))
++ touch console/run.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export console_location=console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
++ console_location=console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ntWOAIhuQC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ntWOAIhuQC
+ [[ extract =~ ^(extract|x)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ output_dir=reports/10.0.2.3/cisco
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ (( i < count ))
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ echo
+ output_dir=reports/172.18.1.20/cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ export 'nl=\n'
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ nl='\n'
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ mkdir -p console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-resources.shell
+ IFS==
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ IFS==
+ read -r key value
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ [[ -n '' ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --export
++ [[ 5 -lt 4 ]]
+ output_dir=reports/192.0.2.50/cisco
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ cfg == \c\f\g ]]
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias list-file=list_file
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ platform == \h\e\l\p ]]
++ alias print-message=message
+ [[ platform == \d\e\b\u\g ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ local 'indent=            '
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0OTAzMjEyOTIwNTgwNDAwMAo--
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ divisor=--MTc0OTAzMjEyOTIwNTgwNDAwMAo--
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ source ./scripts/devops-helpers.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ network_extract__console=console/network-extract.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console ]]
+ touch console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
+ alias parse-cisco=main
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z x ]]
++ mkdir -p jobs
+ [[ search == \d\e\b\u\g ]]
+ local verbose=true
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ export logs_location=logs
++ actions_logfile=console/run.console
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ logs_location=logs
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ config =~ ^(console|o)$ ]]
+ mkdir -p logs
'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ debug=false
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local verbose=true
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ IFS=' 	
+ local target_platform=fortinet
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local first_search_entry=10.0.0.1
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ local last_search_entry=10.0.0.1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
++ tr -d '\r'
+ read -r key value
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ [[ config == \d\e\b\u\g ]]
+ export console_output=false
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ console_output=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ [[ -z true ]]
+ IFS==
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ false == true ]]
+ debug=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list != *,* ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ read -r key value
+ dry_run=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z true ]]
+ [[ -z '' ]]
++ grep -v '^\s*$'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list != *,* ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ mapfile -t search_terms
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.prgrvfdxna/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console --export --verbose
++ grep -v '^#'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --export
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
++ tr -d '\r'
++ grep -v '^#'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
++ grep -v '^#'
++ grep -v '^#'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ export =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bybjpfzkmp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local first_search_entry=10.0.2.3
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ local last_search_entry=10.0.2.3
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ export targets_location=targets
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ oIFS=' 	
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
++ export actions_logfile=console/run.console
+ [[ logger == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
++ actions_logfile=console/run.console
++ targets_location=targets
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ output_dir=reports/172.16.1.6/cisco
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ] ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ for xitem in "${@}"
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ IFS==
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
++ touch console/run.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ ((  count == 0  ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ local count=1
+ read -r key value
+ (( i < count ))
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ ((  count == 0  ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ local first_search_entry=192.168.0.1
+ local first_search_entry=10.0.1.2
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local last_search_entry=192.168.0.1
+ local last_search_entry=10.0.1.2
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ true == true ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ echo
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ (( i < count ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ newline
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -z cisco ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ echo -e --platform=cisco
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ export targets_location=targets
+ (( i++ ))
++ targets_location=targets
+++ date +%s%N
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
++ mktemp -d
+ (( i < count ))
++ export targets_location=targets
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-configs--ips.list ]'
+ [[ export == \d\e\b\u\g ]]
++ targets_location=targets
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local export_objects=true
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qF2ecNI8ai
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qF2ecNI8ai
+ local target_platform=cisco
+ [[ verbose == \d\e\b\u\g ]]
+++ date +%s%N
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ cfg == \c\f\g ]]
+ source ./scripts/devops-resources.shell
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ IFS=' 	
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
'
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_logfile=.cache/targets.jobs
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ debug=false
+ read -r key value
+ IFS==
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ [[ -z '' ]]
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ export divisor=--MTc0OTAzMjEyOTM2NzEwNjAwMAo--
+ export console_output=false
+ console_output=false
++ targets_logfile=.cache/targets.jobs
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console ]]
++ divisor=--MTc0OTAzMjEyOTM2NzEwNjAwMAo--
+ [[ -z '' ]]
++ alias list-file=list_file
++ export targets_location=targets
++ targets_location=targets
++ alias log-error=log_error
+ (( i < count ))
+ script_helper=false
+++ base64
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias pause=pause
+ [[ false == true ]]
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias print-line=print
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias print-file=print_file
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]]
+ search_terms=()
++ alias relative-configpath=relative_configpath
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]]
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ output_dir=reports/10.0.1.2/fortinet
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ ! -d reports/10.0.1.2/fortinet ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ [[ extract == \h\e\l\p ]]
++ export divisor=--MTc0OTAzMjEyOTM3NTA2MTAwMAo--
+ [[ extract == \d\e\b\u\g ]]
++ divisor=--MTc0OTAzMjEyOTM3NTA2MTAwMAo--
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ output_dir=reports/10.10.10.10/cisco
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ output_dir=reports/10.0.2.3/misc
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export jobs_location=jobs
+ output_dir=reports/192.168.0.1/cisco
++ jobs_location=jobs
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ mkdir -p jobs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
+ IFS=' 	
'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ logger == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ alias serialize-object=serialize_objects
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ platform =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ search_terms=()
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ alias parse-cisco=main
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ read -r key value
+ export logs_location=logs
+ logs_location=logs
+ [[ logger =~ ^(search|s)$ ]]
+ mkdir -p logs
+ local verbose=true
+ [[ logger == \h\e\l\p ]]
+ IFS=' 	
'
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local first_search_entry=192.168.0.100
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ local last_search_entry=192.168.0.100
+ console_output=false
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
++ export console_location=console
+ local SCRIPT_DIR=./scripts
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ] ]]
++ console_location=console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
++ mkdir -p console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
+ local script_filename=fortinet-configs.awk
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ source ./scripts/devops-helpers.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ which awk
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --export
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ local target_platform=cisco
+ [[ extract =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ tr -d '\r'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ set -euo pipefail
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ export LC_ALL=C
++ export actions_logfile=console/run.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ script_filename=network-extract.shell
++ grep -v '^#'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ LC_ALL=C
+ touch console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ grep -v '^\s*$'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ [[ 5 -lt 4 ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ IFS=,
++ mktemp -d
++ echo 10.0.1.2
+ [[ export =~ ^(config|c)$ ]]
++ which awk
++ which awk
+ [[ export =~ ^(console|o)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ export =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+++ date +%s%N
+ local export_objects=true
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
++ mktemp -d
++ which awk
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+++ base64
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
+ IFS==
+ read -r key value
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=192.168.1.10
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ [[ export == \d\e\b\u\g ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ export == \h\e\l\p ]]
+ newline
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ local first_search_entry=172.16.1.6
+ IFS==
+ read -r key value
+ local last_search_entry=172.16.1.6
+ [[ 7 -eq 0 ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eccjxlkejp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ IFS==
+ read -r key value
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ echo -e --export
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ygUgR0WhWm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ygUgR0WhWm
+ (( i < count ))
+ echo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+++ date +%s%N
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ export 'nl=\n'
+ (( i < count ))
+ nl='\n'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/devops-resources.shell
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2vxqmIuE3y
+ [[ true == true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2vxqmIuE3y
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
+ export 'nl=\n'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local awk_bin=/usr/bin/awk
+ nl='\n'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ source ./scripts/devops-resources.shell
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
++ [[ -n '' ]]
+ (( i = 0 ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias list-file=list_file
++ alias exit-error=exit_error
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+++ base64
++ IFS=,
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ platform =~ ^(extract|x)$ ]]
++ IFS=,
++ echo 10.10.10.10
++ alias print-newline=newline
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo 10.0.2.3
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
++ alias pause=pause
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ logger == \d\e\b\u\g ]]
++ alias print-line=print
+ local target_platform=cisco
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ alias log-info=log_info
+ for xitem in "${@}"
++ alias print-file=print_file
+ [[ platform == \h\e\l\p ]]
++ alias log-warn=log_warn
++ echo -e --verbose
+ [[ platform == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ alias print-message=message
++ alias relative-configpath=relative_configpath
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ IFS==
++ alias print-newline=newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ IFS=,
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
++ echo 192.168.0.1
+ read -r key value
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias validate-address=validate_address
++ alias print-line=print
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias print-file=print_file
++ echo -e --verbose
++ export 'nl=\n'
+++ tr -dc a-zA-Z0-9
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias relative-configpath=relative_configpath
++ printf '%*s' 12 ''
+ declare -a execute__netwowrk_extract
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ local 'indent=            '
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
++ alias validate-address=validate_address
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
++ which awk
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ export LC_ALL=C
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ LC_ALL=C
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ export 'nl=\n'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ nl='\n'
++ export cache_location=.cache
+ declare -a execute__netwowrk_extract
++ cache_location=.cache
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ export logs_location=logs
++ logs_location=logs
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ mkdir -p logs
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ export divisor=--MTc0OTAzMjEyOTQwMDgxMjAwMAo--
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ export divisor=--MTc0OTAzMjEyOTQwODA5NDAwMAo--
++ divisor=--MTc0OTAzMjEyOTQwODA5NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
++ export jobs_location=jobs
+ output_dir=reports/192.168.0.100/cisco
++ jobs_location=jobs
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ mkdir -p jobs
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(console|o)$ ]]
++ which awk
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ alias parse-cisco=main
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
+ export console_output=false
+ [[ -z x ]]
+ console_output=false
+ [[ search =~ ^(console|o)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ IFS==
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
'
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console ]]
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ [[ -z '' ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ debug=false
+ IFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ false == true ]]
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ dry_run=false
+ for xitem in "${@}"
'
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list != *,* ]]
++ command -v -- ./scripts/network-extract.shell
+ mapfile -t search_terms
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ logger =~ ^(console|o)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ script_helper=false
+ [[ export =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]]
+ debug=false
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ search_terms=()
+ declare -a search_terms
+ [[ logger == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ [[ export == \h\e\l\p ]]
+ export console_output=false
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ console_output=false
+ [[ -z true ]]
++ printf '%*s' 12 ''
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ -z '' ]]
+ local 'indent=            '
+ script_helper=false
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ printf '%*s' 12 ''
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
+ local 'indent=            '
end'
++ echo -e --verbose
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set comment "QA node in Peter's Lab"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 next
end ]]
++ tr -d '\r'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ divisor=--MTc0OTAzMjEyOTQwMDgxMjAwMAo--
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ source ./scripts/devops-helpers.shell
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ export network_extract__console=console/network-extract.console
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
+ network_extract__console=console/network-extract.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ touch console/network-extract.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ -n '' ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ printf '%*s' 12 ''
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
++ grep -v '^\s*$'
++ echo -e --export
+ newline
++ tr -d '\r'
++ echo -e --verbose
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ tr -d '\r'
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
end ]]
++ grep -v '^#'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ grep -v '^#'
++ touch console/run.console
+ local 'indent=            '
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ output_dir=reports/192.168.1.10/fortinet
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qzdimaynbm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console --export --verbose
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ oIFS=' 	
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filename=cisco-configs.awk
+ output_dir=reports/172.16.1.6/fortinet
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS=' 	
+ [[ verbose =~ ^(export|r)$ ]]
'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ debug=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ local last_search_entry=172.18.1.20
+ dry_run=false
+ [[ export =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ -z true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ] ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ [[ export == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-configs--ips.list ]'
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS=' 	
+ [[ config =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
'
+ [[ -z '' ]]
+ debug=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ local count=1
+ dry_run=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
+ for xitem in "${@}"
+ [[ -z true ]]
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ IFS==
+ read -r key value
+ newline
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z '' ]]
+ local count=1
+ script_helper=false
+ [[ false == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ config =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ search_terms=()
+ [[ config =~ ^(search|s)$ ]]
+ declare -a search_terms
+ search_terms=()
+ local first_search_entry=192.168.1.11
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ declare -a search_terms
+ local last_search_entry=192.168.1.11
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list != *,* ]]
+ [[ config == \h\e\l\p ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ echo
+ mapfile -t search_terms
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
+ [[ config == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list != *,* ]]
++ command -v -- ./scripts/network-extract.shell
+ mapfile -t search_terms
+ newline
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ which awk
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ set -euo pipefail
+ IFS==
+ newline
+ local first_search_entry=172.16.0.5
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local last_search_entry=172.16.0.5
+ export LC_ALL=C
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ export targets_location=targets
+ (( i < count ))
+ LC_ALL=C
+ read -r key value
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ targets_location=targets
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
++ export targets_logfile=.cache/targets.jobs
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
++ targets_logfile=.cache/targets.jobs
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ newline 2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ local count=2
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ set -euo pipefail
+ export LC_ALL=C
+ (( i++ ))
+ LC_ALL=C
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i++ ))
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -z cisco ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ mktemp -d
+ (( i < count ))
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
+ newline
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local count=1
++ touch console/run.console
+ (( i = 0 ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
}
++ mktemp -d
+ echo
+++ date +%s%N
++ grep -v '^\s*$'
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^\s*$'
+++ base64
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value

+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
version 12.2
+ echo
hostname campus-sw-access01
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local script_filename=fortinet-configs.awk
+ local verbose=true
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local script_filename=fortinet-configs.awk
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ IFS=' 	
'
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ serialize_objects
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q2otX9uwVP
  "model": "",
+ export console_output=false

+ (( i < count ))
object-group network Floor-Networks
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q2otX9uwVP
+ console_output=false
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
  "version": "12.4",
+ [[ -z true ]]
  "domain": "",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z '' ]]
 description End-user and service devices
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ export 'nl=\n'
++ IFS=,
+ nl='\n'
+ [[ extract =~ ^(config|c)$ ]]
+ local first_search_entry=198.51.100.75
+ script_helper=false
  "hostname": ""
+ [[ extract =~ ^(console|o)$ ]]
  "domain": "",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.10amCvc4jq
 network-object host 192.168.0.1
++ alias network-configs--helper=network_configs__helper
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.10amCvc4jq
}
+ source ./scripts/devops-resources.shell
+ [[ cfg == \c\f\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "hostname": "access-sw1-west"
++ echo 192.168.0.100
 network-object host 192.168.0.100
}
+ [[ false == true ]]
++ alias network-extract--helper=network_extract__helper
+ export 'nl=\n'

+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ echo -e --config=.cache/resources/misc/switch3.conf
 network-object host 10.10.10.10'
+ local last_search_entry=198.51.100.75
++ [[ -n '' ]]
++ export divisor=--MTc0OTAzMjEyOTQ0MTgxNDAwMAo--

+ [[ extract =~ ^(export|r)$ ]]
+ nl='\n'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ divisor=--MTc0OTAzMjEyOTQ0MTgxNDAwMAo--
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ source ./scripts/devops-resources.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]]
object-group network Metropolis-Internal
+ result=0
+ search_terms=()
+ source ./scripts/devops-helpers.shell
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
 description Core internal LAN for application clusters
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 network-object host 10.0.2.3
+ declare -a search_terms
+ local first_search_entry=10.0.0.1
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -n {
 network-object 192.168.2.0 255.255.255.0
++ [[ -n '' ]]
version 12.4
+ [[ true == true ]]
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
hostname access-sw1-west
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ [[ 5 -lt 4 ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=10.0.0.1
 network-object host 192.168.2.12
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
  "vendor": "cisco",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'

object network Kent-Server
 host 10.0.2.3
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ] ]]
 description Internal mail & identity services'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'

++ alias parse-listings--helper=parse_listings__helper
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
 description Management Interface
  "model": "",
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
++ alias detect-vendor=detect_vendor
  "version": "12.2",
  "domain": "",
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
  "hostname": "campus-sw-access01"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ ((  count == 0  ))

+ [[ extract =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ] ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
}
++ alias exit-error=exit_error
object-group network MGMT-ACCESS
++ which awk
 description Management objects
+ [[ cfg == \c\f\g ]]
+ result=0
 network-object host 192.168.0.1

++ [[ 5 -lt 4 ]]
+ [[ extract == \h\e\l\p ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
 network-object host 192.168.0.100
version 12.2
+ [[ -n {
++ alias network-extract--helper=network_extract__helper
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
 network-object host 10.10.10.10'
hostname campus-sw-access01
++ alias list-file=list_file
++ alias network-extract--helper=network_extract__helper
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ alias detect-vendor=detect_vendor
+ [[ extract == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
++ export targets_logfile=.cache/targets.jobs
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'

+ local count=1
+ [[ cfg == \c\f\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ local count=1
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ result=0
++ alias log-error=log_error
object-group network Floor-Networks
 description End-user and service devices
+ alias serialize-object=serialize_objects
  "model": "",
++ which awk
+ (( i < count ))
+ [[ -n {
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
 network-object host 192.168.0.1
++ alias log-info=log_info
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ echo
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "version": "",
+ [[ true == true ]]
  "domain": "",
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
  "hostname": ""
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "vendor": "cisco",
+ alias parse-cisco=main
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "model": "",
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ IFS==
+ [[ -z x ]]
+ read -r key value
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias log-error=log_error
}

++ alias print-message=message
++ alias log-info=log_info
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
++ alias log-warn=log_warn
+ newline
  "version": "12.4",
+ local count=1
  "domain": "",
+ (( i = 0 ))
  "hostname": "access-sw1-west"
}
 network-object host 10.0.2.3

 network-object 192.168.2.0 255.255.255.0
version 12.4
 network-object host 192.168.2.12
++ alias print-newline=newline

+ (( i < count ))
hostname access-sw1-west
++ alias print-message=message

interface Vlan1
++ export targets_location=targets
++ targets_location=targets
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
++ alias pause=pause
++ alias print-line=print
++ tr -d '\r'
++ which awk
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ export targets_logfile=.cache/targets.jobs
++ alias print-file=print_file
++ targets_logfile=.cache/targets.jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
 ip address 192.168.0.1 255.255.255.0
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias print-line=print
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local parent_dir=reports/10.0.1.2/fortinet
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
++ grep -v '^\s*$'
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
++ alias validate-address=validate_address
 description End-user and service devices
++ alias system-metrics=system_metrics
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ -n {
++ logs_location=logs
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
++ mkdir -p logs

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ config =~ ^(config|c)$ ]]
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ local target_config=.cache/resources/misc/switch3.conf
version 12.2
+ [[ config =~ ^(console|o)$ ]]
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
+ [[ config =~ ^(export|r)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 10.10.10.10'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ alias warning-message=warning
++ echo -e --platform=fortinet
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
++ export LC_ALL=C
+ print '{
++ LC_ALL=C
  "domain": "",
  "vendor": "cisco",
  "model": "",
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "access-sw1-west"
  "domain": "",
}

  "hostname": ""
+ script_filename=network-extract.shell
version 12.4
+ output_dir=reports/172.18.1.20/misc
+ script_filename=network-extract
}
+ [[ ! -d reports/172.18.1.20/misc ]]
+ export network_extract__console=console/network-extract.console
hostname access-sw1-west
+ network_extract__console=console/network-extract.console
+ local awk_bin=/usr/bin/awk

interface Vlan1

+ touch console/network-extract.console
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
 ip address 192.168.0.1 255.255.255.0
++ export 'nl=\n'
 description Management Interface
object-group network Metropolis-Internal

 description Core internal LAN for application clusters
object-group network MGMT-ACCESS
 network-object host 10.0.2.3
 description Management objects
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.0.1
 network-object host 192.168.2.12
 network-object host 192.168.0.100

 network-object host 10.10.10.10'
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
++ nl='\n'
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
++ export cache_location=.cache
++ IFS=,
+ echo -en '{
++ cache_location=.cache
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ echo 172.16.1.6
}
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+++ date +%s%N
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
+ output_dir=reports/192.168.1.11/cisco
++ export logs_location=logs
++ logs_location=logs
++ echo 192.168.1.10
+ [[ ! -d reports/192.168.1.11/cisco ]]
++ mkdir -p logs
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+++ base64
+ local first_search_entry=192.168.100.100
+ sed '1{/^[[:space:]]*$/d;}'
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ targets_logfile=.cache/targets.jobs
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local count=1
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+++ tr -dc a-zA-Z0-9
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ alias parse-cisco=main
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z x ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ command -v -- ./scripts/network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bve7ope5rf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console --export --verbose
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ oIFS=' 	
'
+ [[ search =~ ^(search|s)$ ]]
+++ date +%s%N
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local script_filename=cisco-configs.awk
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(export|r)$ ]]
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ base64
+ alias parse-cisco=main
++ dirname -- ./scripts/network-extract.shell
+ [[ -z x ]]
++ dirname -- ./scripts/network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(logger|l)$ ]]
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ output_dir=reports/172.16.0.5/cisco
+ IFS==
+ read -r key value
+ local target_platform=cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ logger =~ ^(extract|x)$ ]]
+ output_dir=reports/172.31.255.254/misc
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ ! -d reports/172.31.255.254/misc ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ export =~ ^(search|s)$ ]]
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
++ command -v -- ./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAzMjEyOTQ2NzYwNzAwMAo--
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
++ divisor=--MTc0OTAzMjEyOTQ2NzYwNzAwMAo--
+ [[ conf == \c\o\n\f ]]
+ source ./scripts/devops-helpers.shell
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ extract_location=reports/10.0.1.2/misc/switch1.conf
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
++ alias network-configs--helper=network_configs__helper
++ dirname -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ [[ logger == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local script_filename=cisco-configs.awk
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
++ export jobs_location=jobs
++ dirname reports/10.0.1.2/misc/switch1.conf
++ IFS=,
++ echo 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ alias parse-cisco=main
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
++ IFS=,
++ echo 172.18.1.20
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ IFS=,
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
++ echo 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
++ jobs_location=jobs
+ local script_filename=cisco-configs.awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ output_dir=reports/10.0.1.2/misc
++ mkdir -p jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -d reports/10.0.1.2/misc ]]
+ declare -a execute__netwowrk_extract
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ output_dir=reports/10.0.0.1/fortinet
+ [[ ! -d reports/10.0.0.1/fortinet ]]
++ which awk
++ IFS=,
++ echo 172.16.1.6
++ which awk
++ which awk
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(export|r)$ ]]
++ which awk
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ which awk
+ [[ extract == \d\e\b\u\g ]]
++ which awk
+ [[ config =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
++ echo -e --export
+ LC_ALL=C
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local awk_bin=/usr/bin/awk
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ mktemp -d
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ printf '%*s' 12 ''
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ IFS=,
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo 172.16.0.5
+ [[ extract == \v\e\r\b\o\s\e ]]
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local awk_bin=/usr/bin/awk
+ local count=1
+ newline
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'indent=            '
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ (( i < count ))
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ echo
+ for xitem in "${@}"
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local script_filename=cisco-configs.awk
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ IFS=,
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
++ echo 172.31.255.254
+ [[ logger =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ 7 -eq 0 ]]
  "model": "ASA",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.en7bzrpkdj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ declare -a execute__netwowrk_extract
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
++ export console_location=console
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
+ oIFS=' 	
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ set -euo pipefail
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ export LC_ALL=C
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ LC_ALL=C
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eccjxlkejp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console --export --verbose
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
++ printf '%*s' 12 ''
+ read -r key value
++ which awk
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
  "version": "9.14(3)",
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
+ local 'indent=            '
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
  "domain": "edge.dc.example.com",
+ [[ logger == \h\e\l\p ]]
  "hostname": "perimeter-fw1"
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ echo
'
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ [[ search == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ IFS==
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo -e --export
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ console_location=console
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ mkdir -p console
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ivMSX89s3u
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ivMSX89s3u
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
}

++ alias print-file=print_file
ASA Version 9.14(3)
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ set -euo pipefail
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ IFS=,
++ echo 192.0.2.50
+ [[ export =~ ^(search|s)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
+ [[ export == \h\e\l\p ]]
 description Core services gateway'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ result=0
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ read -r key value
++ IFS=,
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ printf '%*s' 12 ''
++ echo 10.0.1.2
++ mktemp -d
+ local 'indent=            '
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --platform=cisco
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ declare -a execute__netwowrk_extract
++ dirname -- ./scripts/network-extract.shell
+ newline
+ newline
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local count=1
}
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
+ local 'extracted_configuration={

+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i < count ))
+ local export_objects=true
  "vendor": "cisco",
+ (( i++ ))
+ echo
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
version 16.9
+ declare -a execute__netwowrk_extract
  "model": "",
hostname branch-isr-02
  "version": "16.9",

  "domain": "",
object-group network Lantern-DMZ
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Protected but public-facing zone
+ [[ -n {
  "hostname": "branch-isr-02"
  "vendor": "cisco",
  "model": "ASA",
+ [[ 7 -eq 0 ]]
+ local 'extracted_configuration={
 network-object host 172.18.1.20
+ IFS==
  "vendor": "cisco",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
}
+ (( i++ ))
  "version": "9.14(3)",
+ [[ export =~ ^(config|c)$ ]]
  "model": "",
 network-object host 192.168.1.11'
  "version": "12.4",
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
  "vendor": "cisco",
  "domain": "",
+ (( i < count ))

  "model": "",
  "hostname": "access-sw1-west"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "16.9",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
version 16.9
}
  "domain": "",
hostname branch-isr-02
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'


+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
interface GigabitEthernet0/0/2
+ [[ search =~ ^(config|c)$ ]]
  "hostname": "branch-isr-02"
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
version 12.4
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
 ip address 10.0.2.3 255.255.255.0
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
hostname access-sw1-west
}
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(console|o)$ ]]
 description Dev VLAN
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

object network Panther-Gateway
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'


object-group network MGMT-ACCESS
version 16.9
 description Management objects
 host 10.0.2.3
 network-object host 192.168.0.1
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
hostname branch-isr-02
 network-object host 192.168.0.100
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 10.10.10.10
+ [[ search =~ ^(extract|x)$ ]]

+ message '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Mutant-WiFi

++ which awk
+ IFS==
 description Secure outbound concentrator'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
 description Controlled guest devices
++ export jobs_location=jobs
 network-object host 10.10.10.10'
+ [[ search =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ mkdir -p jobs
+ [[ search =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ echo -e --platform=cisco
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list
+ newline
+ result=0
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ -n {
object-group network Lantern-DMZ
  "vendor": "cisco",
  "model": "",
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "12.4",
 description Protected but public-facing zone
+ result=0
  "domain": "",
+ (( i = 0 ))
+ message '                .cache/resources/misc/switch1.conf'
 network-object host 172.18.1.20
+ [[ search == \d\e\b\u\g ]]
 network-object host 192.168.1.11 ]]
+ (( i < count ))
  "hostname": "access-sw1-west"
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
}
+ [[ -n {
  "vendor": "cisco",

  "model": "",
  "version": "16.9",
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo
  "domain": "",
version 12.4
+ (( i++ ))
hostname access-sw1-west
+ echo -e '                .cache/resources/misc/switch1.conf'
  "hostname": "branch-isr-02"
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
}
+ newline
+ local verbose=true

+ [[ search == \v\e\r\b\o\s\e ]]
object-group network MGMT-ACCESS
+ for xitem in "${@}"
 description Management objects
+ local count=1

 network-object host 192.168.0.1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kmyla3hheb/network-configs--ips.list =~ ^-*(h|help)$ ]]
 network-object host 192.168.0.100
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
 network-object host 10.10.10.10
version 16.9
+ (( i = 0 ))
+ read -r key value

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ (( i < count ))
 description Dev VLAN
+ echo

object network Panther-Gateway
+ (( i++ ))
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'extracted_configuration={
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ IFS==

+ read -r key value
version 16.9
+ read -r key value
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ read -r key value
hostname branch-isr-02
}

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
+ [[ export =~ ^(console|o)$ ]]
 description Branch router uplink NAT'
+ [[ export =~ ^(export|r)$ ]]
+ result=0
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ [[ export =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console --export --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
++ export actions_logfile=console/run.console
 description Protected but public-facing zone
++ actions_logfile=console/run.console
 network-object host 172.18.1.20
+ oIFS=' 	
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Rfi7JfYXaI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Rfi7JfYXaI
+ echo -en '{
  "vendor": "cisco",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ export 'nl=\n'
}
+ nl='\n'

version 16.9
hostname branch-isr-02
+ source ./scripts/devops-resources.shell

object-group network Lantern-DMZ
+ print '{
  "vendor": "cisco",
  "model": "",
 description Protected but public-facing zone
  "version": "12.4",
 network-object host 172.18.1.20
  "domain": "",
++ echo -e --export
  "hostname": "access-sw1-west"
 network-object host 192.168.1.11'
++ [[ -n '' ]]
}

version 12.4
hostname access-sw1-west
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1

object-group network MGMT-ACCESS
 description Management objects
+ print '{
  "vendor": "cisco",
 network-object host 192.168.0.1
  "model": "",
++ [[ 5 -lt 4 ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
++ alias detect-vendor=detect_vendor
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object network Panther-Gateway
++ alias exit-error=exit_error
 host 10.0.2.3

 description Secure outbound concentrator'
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ touch console/run.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ alias list-file=list_file
  "version": "16.9",
+ [[ -n {
  "domain": "",
  "vendor": "cisco",
  "hostname": "branch-isr-02"
  "model": "",
}
  "version": "12.4",

++ alias log-error=log_error
  "domain": "",
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
  "hostname": "access-sw1-west"
version 16.9
}
hostname branch-isr-02

+ sed '1{/^[[:space:]]*$/d;}'

version 12.4
++ alias log-info=log_info
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
 description Dev VLAN
++ alias log-warn=log_warn

hostname access-sw1-west
object network Panther-Gateway

 host 10.0.2.3
object-group network MGMT-ACCESS
++ alias print-message=message
 description Management objects
 description Secure outbound concentrator ]]
 network-object host 192.168.0.1
++ alias print-newline=newline
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ echo -en '{

  "vendor": "cisco",
object-group network Mutant-WiFi
 description Controlled guest devices
  "model": "",
+ local awk_bin=/usr/bin/awk
 network-object host 10.10.10.10 ]]
  "version": "16.9",
++ alias pause=pause
+ print '{
  "vendor": "cisco",
  "domain": "",
++ alias print-line=print
  "model": "",
+ echo -en '{
  "hostname": "branch-isr-02"
  "vendor": "cisco",
}
  "version": "16.9",
  "domain": "",

+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
  "model": "",
+ [[ -z '' ]]
++ alias print-file=print_file
  "hostname": "branch-isr-02"
version 16.9
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
  "version": "12.4",
hostname branch-isr-02
  "domain": "",
  "hostname": "access-sw1-west"

}
++ echo -e --verbose
}
interface GigabitEthernet0/0/2
++ alias relative-configpath=relative_configpath

 ip address 10.0.2.3 255.255.255.0

 description Dev VLAN
++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9

version 12.4
hostname access-sw1-west
hostname branch-isr-02
object network Panther-Gateway


 host 10.0.2.3
interface GigabitEthernet0/0/0
 description Secure outbound concentrator'
++ alias system-metrics=system_metrics
+ [[ export =~ ^(platform|p)$ ]]
object-group network MGMT-ACCESS
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
 description Management objects
 network-object host 192.168.0.1

 network-object host 192.168.0.100
object network BlackWidow-Core
 network-object host 10.10.10.10
 host 172.16.1.6

 description Branch router uplink NAT'
object-group network Mutant-WiFi
 description Controlled guest devices
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ alias validate-address=validate_address

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

++ alias warning-message=warning
++ export LC_ALL=C
object network BlackWidow-Core
++ LC_ALL=C
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ export 'nl=\n'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ nl='\n'
+ echo -en '{
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(search|s)$ ]]

++ export cache_location=.cache
  "vendor": "cisco",
+ local script_filename=fortinet-configs.awk
  "model": "",
+ [[ export == \h\e\l\p ]]
ASA Version 9.14(3)
hostname perimeter-fw1
++ cache_location=.cache
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
'
++ export logs_location=logs
+ [[ export == \d\e\b\u\g ]]
domain-name edge.dc.example.com
  "version": "16.9",
++ logs_location=logs
++ export console_location=console
  "domain": "",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oG6RJCsIa1
  "hostname": "branch-isr-02"
+ debug=false
++ mkdir -p logs
++ console_location=console
}
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oG6RJCsIa1
+ [[ config =~ ^(config|c)$ ]]

++ mkdir -p console
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
+ [[ platform =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ [[ platform =~ ^(config|c)$ ]]

+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ platform =~ ^(console|o)$ ]]
object network BlackWidow-Core
+ [[ platform =~ ^(console|o)$ ]]
 host 172.16.1.6

 description Branch router uplink NAT'
+ [[ platform =~ ^(export|r)$ ]]
interface GigabitEthernet0/1
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ echo -e --verbose
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline 2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline 2
+ local count=2
+ dry_run=false
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i = 0 ))
+ local count=2
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local count=2
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -z true ]]
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local count=2
 nameif inside
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ console_output=false
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ (( i++ ))
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ echo
+ echo
+ local 'extracted_configuration={
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
  "vendor": "cisco",
+ local 'extracted_configuration={
+ (( i++ ))
+ message '                .cache/resources/misc/switch1.conf'
+ (( i < count ))
+ echo
+ echo
  "model": "",
+ [[ true == true ]]
  "version": "",
  "vendor": "cisco",
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
 security-level 100
  "domain": "",
 ip address 10.0.0.1 255.255.255.0
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
 description Internal Network Interface
+ (( i++ ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
++ export jobs_location=jobs
  "hostname": ""
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -z true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
}
+ (( i < count ))
+ (( i < count ))
+ export 'nl=\n'
  "model": "ASA",
+ local awk_bin=/usr/bin/awk
++ export actions_logfile=console/run.console
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ actions_logfile=console/run.console
  "version": "9.14(3)",
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ jobs_location=jobs
  "domain": "edge.dc.example.com",
+ echo -e '                .cache/resources/misc/switch1.conf'
  "hostname": "perimeter-fw1"
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console ]]
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ newline
+ [[ config =~ ^(extract|x)$ ]]

}
+ local count=1
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]

++ mkdir -p jobs
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]

+ [[ platform =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ (( i = 0 ))
interface Vlan1
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
domain-name edge.dc.example.com

+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
 ip address 172.31.255.254 255.255.255.0'
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
object-group network Panther-Edge
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ [[ config =~ ^(search|s)$ ]]
+ result=0
+ read -r key value
+ newline
 description Internet-facing proxy systems
+ newline
+ [[ config == \h\e\l\p ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ config == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n {
+ (( i++ ))
+ local count=1
 network-object host 203.0.113.25
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
 network-object host 172.16.0.5
+ [[ verbose =~ ^(console|o)$ ]]

object network Stark-Tower
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
object network Magneto-Core
  "vendor": "cisco",
+ nl='\n'
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ (( i = 0 ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
  "model": "",
 host 10.0.0.1
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ echo
+ newline
  "version": "",
 description Core services gateway ]]
 host 172.16.0.5
+ for xitem in "${@}"
  "domain": "",
+ script_helper=false
+ IFS==
 description WAN firewall entry point'
+ (( i++ ))
+ local count=1
  "hostname": ""
+ newline
+ read -r key value
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
}
+ (( i < count ))
+ (( i < count ))

+ (( i++ ))
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
interface Vlan1
+ (( i < count ))
+ (( i < count ))
+ result=0
++ which awk
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i++ ))
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo
+ [[ -n {
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
  "vendor": "cisco",
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
  "model": "ASA",
++ echo -e --verbose
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ verbose =~ ^(export|r)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ verbose =~ ^(extract|x)$ ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ verbose =~ ^(logger|l)$ ]]
 network-object host 172.16.0.5

object network Magneto-Core
+ [[ verbose =~ ^(platform|p)$ ]]
 host 172.16.0.5
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(search|s)$ ]]
 description WAN firewall entry point ]]
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local verbose=true
++ [[ 5 -lt 4 ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ dry_run=false
+ [[ -z true ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ read -r key value
++ alias exit-error=exit_error
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias list-file=list_file
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
++ alias log-error=log_error
+ search_terms=()
+ declare -a search_terms
++ alias log-info=log_info
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list != *,* ]]
++ alias log-warn=log_warn
+ mapfile -t search_terms
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ for xitem in "${@}"
+ [[ -n {
++ alias print-file=print_file
+ print '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "ASA",
  "model": "",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "version": "",
  "hostname": "perimeter-fw1"
  "domain": "",
}
+ [[ verbose =~ ^(config|c)$ ]]
  "hostname": ""

}
+ IFS==

ASA Version 9.14(3)
hostname perimeter-fw1
interface Vlan1
domain-name edge.dc.example.com
+ [[ extract =~ ^(config|c)$ ]]
 ip address 172.31.255.254 255.255.255.0 ]]
++ export targets_location=targets

+ echo -en '{
  "vendor": "cisco",
object-group network Panther-Edge
  "model": "",
 description Internet-facing proxy systems
  "version": "",
 network-object host 203.0.113.25
  "domain": "",
 network-object host 172.16.0.5
  "hostname": ""

}
object network Magneto-Core

 host 172.16.0.5
interface Vlan1
 description WAN firewall entry point'
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
ASA Version 9.14(3)
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export =~ ^(config|c)$ ]]
hostname perimeter-fw1
++ export targets_location=targets
domain-name edge.dc.example.com
++ targets_location=targets

++ export targets_logfile=.cache/targets.jobs
object-group network Panther-Edge
 description Internet-facing proxy systems
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ console_location=console

object network Magneto-Core
 host 172.16.0.5
++ mkdir -p console
 description WAN firewall entry point'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ read -r key value
+ local export_objects=true
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ newline
+ [[ extract =~ ^(console|o)$ ]]
++ targets_location=targets
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
++ targets_logfile=.cache/targets.jobs
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ echo
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ newline
+ serialize_objects
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ serialize_objects
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ export == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ false == true ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ serialize_objects
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ local 'indent=            '
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
++ alias warning-message=warning
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ serialize_objects
+ [[ verbose =~ ^(console|o)$ ]]
++ export 'nl=\n'
+++ date +%s%N
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ print '{
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(export|r)$ ]]
  "vendor": "cisco",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
  "model": "ASA",
+ local 'extracted_configuration={
  "version": "9.14(3)",
  "vendor": "cisco",
  "domain": "edge.dc.example.com",
  "model": "",
  "hostname": "perimeter-fw1"
+ newline 2
  "version": "",
}

++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
  "domain": "",
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

  "hostname": ""
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
 description Core services gateway ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+++ base64

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ tr -d '\r'
+ local count=2
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i = 0 ))
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ [[ -n {
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
  "version": "",
++ actions_logfile=console/run.console
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ newline 2
  "domain": "",
++ touch console/run.console
+ echo
  "hostname": ""
++ grep -v '^\s*$'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
}
++ echo -e --verbose

+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
interface Vlan10
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
 ip address 10.0.1.2 255.255.255.0 ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local count=2
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ (( i++ ))
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ cat -n reports/172.31.255.254/misc/switch1.conf
++ tr -d '\r'
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/172.16.1.6/cisco
+ (( i < count ))
+ echo
+ local parent_dir=reports/172.18.1.20/cisco
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ verbose =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export divisor=--MTc0OTAzMjEyOTUzMzk3NzAwMAo--
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
++ divisor=--MTc0OTAzMjEyOTUzMzk3NzAwMAo--
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ local count=1
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ search =~ ^(export|r)$ ]]
'
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
++ [[ -n '' ]]
+ echo
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ grep -v '^#'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias network-configs--helper=network_configs__helper
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias network-extract--helper=network_extract__helper
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
+ alias serialize-object=serialize_objects
++ targets_location=targets
+ [[ extract =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ basename reports/10.10.10.10/cisco/access-sw1-west
+++ date +%s%N
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ IFS=,
++ echo 10.0.0.1
+ [[ extract =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ export logs_location=logs
++ echo -e --platform=cisco
+ IFS==
+ logs_location=logs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ mkdir -p logs
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ local first_search_entry=198.51.100.75
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ local last_search_entry=198.51.100.75
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ local count=1
+++ date +%s%N
+ local search_pattern
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ local search_pattern
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ logger =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ false == true ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ read -r key value
+ [[ true == true ]]
+ serialize_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ newline 2
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local search_pattern
+++ base64
+ local search_pattern
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
++ export jobs_location=jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ script_helper=false
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local first_search_entry=192.168.100.100
+ (( i < count ))
+ local last_search_entry=192.168.100.100
+ cat -n reports/10.0.1.2/misc/switch1.conf
+++ tr -dc a-zA-Z0-9
++ dirname reports/172.31.255.254/misc/switch1.conf
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
+ script_filename=network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ] ]]
+ script_filename=network-extract
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS=' 	
+ [[ platform =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ export network_extract__console=console/network-extract.console
+ newline 2
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ touch console/network-extract.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS=' 	
+ IFS==
'
+ read -r key value
+ [[ -z '' ]]
+ ((  count == 0  ))
+ debug=false
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
++ echo -e --platform=cisco
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
++ mkdir -p jobs
+ [[ logger =~ ^(platform|p)$ ]]
++ which awk
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
++ cut -d/ -f2
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ read -r key value
++ export divisor=--MTc0OTAzMjEyOTU0NDAxNTAwMAo--
++ divisor=--MTc0OTAzMjEyOTU0NDAxNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ cut -d/ -f2
++ cut -d/ -f2
+ local parent_dir=reports/172.31.255.254/misc
++ alias parse-listings--helper=parse_listings__helper
+ local parent_dir=reports/172.16.0.5/cisco
++ export divisor=--MTc0OTAzMjEyOTU0NzI3MzAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--MTc0OTAzMjEyOTU0NzI3MzAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ -z '' ]]
++ [[ -n '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
++ alias network-extract--helper=network_extract__helper
++ basename reports/172.31.255.254/misc/switch1
+ alias serialize-object=serialize_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bve7ope5rf/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ search_pattern=172.16.1.6
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ search_pattern=172.18.1.20
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ (( i < count ))
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ debug=false
+ echo
+ [[ -z '' ]]
+ local count=2
+ dry_run=false
+ (( i++ ))
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ (( i < count ))
+ alias parse-cisco=main
+ [[ false == true ]]
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ debug=false
+ [[ -z x ]]
+ search_terms=()
+ [[ -z '' ]]
+ declare -a search_terms
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ export logs_location=logs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ logs_location=logs
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list != *,* ]]
+ mkdir -p logs
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ mapfile -t search_terms
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ serialize_objects
+ [[ config =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ search_pattern=10.10.10.10
+ search_pattern=10.0.2.3
+ [[ config =~ ^(export|r)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ platform =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
+ mkdir -p logs
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -z '' ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ dry_run=false
+ [[ -z '' ]]
+ echo
+ export console_output=false
+ console_output=false
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ (( i++ ))
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ local search_pattern
+ local 'prompt_message=Enter configuration file to be parsed: '
+ dry_run=false
+ local search_pattern
+ [[ -z true ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z '' ]]
+ [[ -z true ]]
+ (( i++ ))
+ export console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ echo -e --export
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ script_helper=false
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ console_output=false
+ export console_output=false
+ (( i++ ))
++ export console_location=console
+ console_output=false
++ console_location=console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
++ mkdir -p console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/10.0.1.2/misc
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo reports/172.31.255.254/misc/switch1.conf
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTAzODcwMDAwMAo-- '
                  BEGIN {
+ case "${target_platform}" in
                    in_json_header = 0;
                    blk = "";
                  }
++ grep -v '^\s*$'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ awk -v divisor=--MTc0OTAzMjEyOTA0ODM4NzAwMAo-- '
                  BEGIN {
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ cut -d/ -f2
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
++ basename reports/10.0.1.2/misc/switch1
+ case "${target_platform}" in
++ cut -d/ -f2
+ awk -v divisor=--MTc0OTAzMjEyOTAxNzQxMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
++ grep -v '^#'
                  }
++ echo -e --export
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ case "${target_platform}" in
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ grep -F 172.16.1.6
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ grep -F 172.18.1.20
+ awk -v divisor=--MTc0OTAzMjEyOTAyODA3NzAwMAo-- '
                  BEGIN {
+ [[ search == \h\e\l\p ]]
                    in_json_header = 0;
                    blk = "";
+ [[ search == \d\e\b\u\g ]]
                  }
                  /^[[:space:]]*$/ { next }
+ [[ search == \d\r\y\-\r\u\n ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ search == \v\e\r\b\o\s\e ]]
                    if (in_json_header == 1) {
+ for xitem in "${@}"
                      in_json_header = 0;
                      next;
                    }
+ IFS==
                  }
+ read -r key value
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.en7bzrpkdj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ search_pattern=172.16.0.5
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ search_pattern=172.31.255.254
+ mkdir -p reports/172.31.255.254/misc/.objects
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ local search_pattern
+ grep -F 10.0.2.3
+ local 'indent=            '
+ grep -F 10.10.10.10
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ search_terms=()
+ [[ export =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ export =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]]
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ [[ export =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ [[ export =~ ^(platform|p)$ ]]
  "model": "ASA",
  "version": "9.12(4)",
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
  "domain": "global.dmz.example.net",
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ newline
+ [[ export == \h\e\l\p ]]
+ local first_search_entry=203.0.113.25
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ local last_search_entry=203.0.113.25
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ local export_objects=true
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ result=0
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ 0 -ne 0 ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
++ echo reports/10.0.1.2/misc/switch1.conf
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
++ echo -e --platform=fortinet
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z fortinet ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
  "hostname": "dmz-fw2-backup"
+ [[ config =~ ^(extract|x)$ ]]
}
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
++ cut -d/ -f2
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"

+ IFS==
+ read -r key value
+ read -r key value
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ for xitem in "${@}"
+ echo
+ IFS==
+ [[ true == true ]]
+ (( i++ ))
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ] ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --verbose
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ result=0
+ newline
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ true == true ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ [[ search =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat -n
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0OTAzMjEyOTA0MzMyNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ case "${target_platform}" in
                  /^[[:space:]]*$/ { next }
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ awk -v divisor=--MTc0OTAzMjEyOTA0MzQ3OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
++ tr -d '\r'
                  END {
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
                ' reports/172.31.255.254/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --verbose
+ cat -n
+ grep -F 172.16.0.5
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ grep -v '^#'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i++ ))
ASA Version 9.12(4)
+ (( i < count ))
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ export divisor=--MTc0OTAzMjEyOTQ2MDczMjAwMAo--
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg

++ divisor=--MTc0OTAzMjEyOTQ2MDczMjAwMAo--
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo
+ source ./scripts/devops-helpers.shell
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ [[ -n '' ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ cfg == \c\f\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ declare -a execute__netwowrk_extract
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ set -euo pipefail
+ local search_pattern
+ export LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ newline 2
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ 7 -eq 0 ]]
++ printf '%*s' 12 ''
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-configs--helper=network_configs__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ oIFS=' 	
+ [[ platform =~ ^(export|r)$ ]]
'
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ newline 2
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ conf == \c\o\n\f ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ platform == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ newline 2
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ mktemp -d
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ mktemp -d
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --export
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ alias parse-cisco=main
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ extract =~ ^(platform|p)$ ]]
+ local first_search_entry=10.0.2.3
+ newline
+ newline
+ local count=2
+ local count=1
+ local 'indent=            '
+ [[ -z x ]]
+ local count=1
+ (( i = 0 ))
+ export logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ logs_location=logs
+ [[ true == true ]]
+ local count=2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ mkdir -p logs
+ (( i = 0 ))
++ export console_location=console
+ (( i < count ))
++ console_location=console
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ echo
++ mkdir -p console
++ tr -d '\r'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ local last_search_entry=10.0.2.3
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ which awk
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
++ tr -d '\r'
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
++ grep -v '^\s*$'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^#'
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vc9a0iScIk
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ] ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vc9a0iScIk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mVDSOfTt6y
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mVDSOfTt6y
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-configs--ips.list ]'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ source ./scripts/devops-resources.shell
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ export actions_logfile=console/run.console
+ newline
++ [[ -n '' ]]
++ [[ -n '' ]]
++ actions_logfile=console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local count=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ touch console/run.console
+ script_filename=network-extract.shell
+ output_dir=reports/198.51.100.75/cisco
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
+ network_extract__console=console/network-extract.console
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ touch console/network-extract.console
++ alias list-file=list_file
+ sed '1{/^[[:space:]]*$/d;}'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ alias log-info=log_info
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias print-newline=newline
+ newline
+ [[ export =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
++ alias print-message=message
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
++ alias pause=pause
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
++ alias print-newline=newline
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i = 0 ))
+ local count=1
++ alias print-line=print
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo
+ local awk_bin=/usr/bin/awk
++ alias pause=pause
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
++ alias print-line=print
+ [[ logger =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
++ alias print-file=print_file
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ logger =~ ^(console|o)$ ]]
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ alias print-file=print_file
+ local count=1
++ alias relative-configpath=relative_configpath
+ local first_search_entry=203.0.113.25
++ alias relative-configpath=relative_configpath
+ local last_search_entry=203.0.113.25
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ logger =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ local count=1
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
+ ((  count == 0  ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ (( i < count ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ logger == \h\e\l\p ]]
++ alias warning-message=warning
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
++ export LC_ALL=C
+ [[ export =~ ^(console|o)$ ]]
++ LC_ALL=C
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ export 'nl=\n'
+ newline
++ nl='\n'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ export cache_location=.cache
+ local count=1
++ alias validate-address=validate_address
+ local export_objects=true
+ ((  count == 0  ))
+ (( i = 0 ))
++ cache_location=.cache
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias warning-message=warning
+ (( i++ ))
+ local first_search_entry=192.0.2.50
++ export logs_location=logs
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local last_search_entry=192.0.2.50
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
++ export LC_ALL=C
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
++ logs_location=logs
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ echo
++ mkdir -p logs
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ (( i++ ))
++ export cache_location=.cache
+ (( i < count ))
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname -- ./scripts/network-extract.shell
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z cisco ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ for xitem in "${@}"
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ set -euo pipefail
+ (( i++ ))
++ echo -e --platform=fortinet
+ (( i < count ))
+ export LC_ALL=C
+ newline
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -z cisco ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ true == true ]]
+ search_pattern=10.0.1.2
+ (( i = 0 ))
+ output_dir=reports/172.16.0.5/misc
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ [[ ! -d reports/172.16.0.5/misc ]]
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ LC_ALL=C
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
+ echo
+ (( i++ ))
+ (( i < count ))
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_logfile=.cache/targets.jobs
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ 7 -eq 0 ]]
+ newline 2
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ag2uop57ma/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ echo
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console --export --verbose
+ local count=1
+ newline
+ ((  count == 0  ))
+ oIFS=' 	
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local count=1
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
'
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ for xitem in "${@}"
+ newline
+ output_dir=reports/10.0.0.1/misc
+ local count=1
+ IFS==
+ (( i = 0 ))
+ [[ ! -d reports/10.0.0.1/misc ]]
+ (( i < count ))
+ read -r key value
+ newline
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ echo
+ echo
+ read -r key value
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ export jobs_location=jobs
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ jobs_location=jobs
+ [[ search =~ ^(config|c)$ ]]
++ mkdir -p jobs
+ serialize_objects
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ local 'indent=            '
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'indent=            '
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ local script_filename=cisco-configs.awk
  "model": "FortiGate-60F",
+ [[ platform =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ mktemp -d
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo
++ echo -e --export
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+++ date +%s%N
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
  "version": "v7.2.5.F",
  "domain": "",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ newline
  "hostname": "fg-branch-vpn-01"
}
+ local count=1
+ local count=1
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n {
  "vendor": "fortinet",
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
  "model": "FortiGate-60F",
+ [[ logger =~ ^(extract|x)$ ]]
+++ base64
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_platform=fortinet
+ [[ search == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ [[ false == true ]]
++ echo -e --verbose
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
  "version": "v7.2.5.F",
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ which awk
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local script_filename=cisco-configs.awk
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ search =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ platform == \h\e\l\p ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
}
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ export divisor=--MTc0OTAzMjEyOTYxNDQ0NzAwMAo--
+ [[ search =~ ^(export|r)$ ]]
++ divisor=--MTc0OTAzMjEyOTYxNDQ0NzAwMAo--
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local export_objects=true
++ [[ 5 -lt 4 ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Kh3JFLKbq
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local parent_dir=reports/10.0.0.1/cisco
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ search == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ for xitem in "${@}"
+ local script_filename=cisco-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk

+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ IFS==
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Kh3JFLKbq
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ serialize_objects
+ export 'nl=\n'
+ for xitem in "${@}"
+ nl='\n'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-resources.shell
#hostname="fg-branch-vpn-01"
+ IFS==
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i = 0 ))
config firewall address
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ command -v -- ./scripts/network-extract.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ read -r key value
++ echo -e --export
+ (( i = 0 ))
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias list-file=list_file
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ alias log-error=log_error
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ false == true ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ alias log-info=log_info
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ alias log-warn=log_warn
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
 edit "IronMan-HQ"
+ read -r key value
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local 'extracted_configuration={
  "vendor": "cisco",
 next
  "model": "",
  "version": "12.4",
+ [[ verbose =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
++ touch console/run.console
+ (( i < count ))
+ [[ -z x ]]
+ export logs_location=logs
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ logs_location=logs
+ [[ false == true ]]
++ alias print-message=message
+ mkdir -p logs
+ [[ true == true ]]
++ alias print-newline=newline
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ alias pause=pause
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
++ alias print-line=print
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
end ]]
++ alias print-file=print_file
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
  "domain": "",
  "hostname": "access-sw1-west"
}
++ alias relative-configpath=relative_configpath

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ [[ verbose =~ ^(extract|x)$ ]]
 description Guest VLAN Gateway
+ output_dir=reports/203.0.113.25/cisco
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ serialize_objects
+ local count=1
++ alias validate-address=validate_address
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo

object-group network MGMT-ACCESS
+ (( i++ ))
 description Management objects
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--MTc0OTAzMjEyOTAxMjkzODAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
++ alias warning-message=warning
                    }

                    # Finalize block at end
                    /^end$/ {
++ export LC_ALL=C
++ LC_ALL=C
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
                      blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
                      if (blk != "" && !seen[blk]++) print blk;
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ export 'nl=\n'
                      blk = "";
                      next;
++ nl='\n'
                    }
+ [[ verbose =~ ^(platform|p)$ ]]
++ export cache_location=.cache

++ cache_location=.cache
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
++ export logs_location=logs
+ local SCRIPT_DIR=./scripts
                    }
+ [[ verbose =~ ^(search|s)$ ]]

                    END {
 network-object host 192.168.0.1
+ [[ verbose == \h\e\l\p ]]
                      # No need for final print — all blocks end with end
                    }
+ [[ verbose == \d\e\b\u\g ]]
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ IFS=' 	
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
'
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -z '' ]]
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 192.168.1.11
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -z true ]]
+ [[ -z '' ]]
+ result=0
+ export console_output=false
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ [[ cfg == \c\f\g ]]
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
version 12.4
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ cfg == \c\f\g ]]
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ logs_location=logs
++ mkdir -p logs
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ newline
+ [[ export =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ export =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
++ export targets_location=targets
  "version": "v7.2.5.F",
+ grep -F 10.0.1.2
+ script_filename=network-extract
+ local count=1
  "domain": "",
+ (( i = 0 ))
  "hostname": "fg-branch-vpn-01"
++ targets_location=targets
+ export network_extract__console=console/network-extract.console
+ (( i < count ))
}
+ network_extract__console=console/network-extract.console
++ export targets_logfile=.cache/targets.jobs
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ console_output=false

++ targets_logfile=.cache/targets.jobs
hostname access-sw1-west
+ local search_pattern
+ touch console/network-extract.console
+ [[ export =~ ^(export|r)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ IFS=,
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ echo
+ [[ config =~ ^(config|c)$ ]]
#hostname="fg-branch-vpn-01"
+ (( i++ ))
++ echo 172.18.1.20
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ dirname reports/10.0.2.3/misc/fw1.cfg

config firewall address
 edit "IronMan-HQ"
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z true ]]

interface Vlan100
+ IFS==
 ip address 192.168.0.100 255.255.255.0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console ]]
 description Guest VLAN Gateway
+ read -r key value

+ [[ -z '' ]]
object-group network MGMT-ACCESS
+ script_helper=false
 description Management objects
 network-object host 192.168.0.1
+ [[ false == true ]]
++ which awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local export_objects=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ date +%s%N
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ sed '/^[[:space:]]*$/d'
+++ date +%s%N
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+++ base64
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+++ base64
 network-object host 192.168.0.100
+ local script_filename=fortinet-configs.awk
+ [[ export =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+++ tr -dc a-zA-Z0-9
  "vendor": "fortinet",
+ output_dir=reports/192.0.2.50/cisco
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console --export --verbose
++ IFS=,
++ echo 172.16.0.5
+++ tr -dc a-zA-Z0-9
++ which awk
+ declare -a execute__netwowrk_extract
+ oIFS=' 	
'
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ local parent_dir=reports/10.0.2.3/misc
+ local parent_dir=reports/192.168.0.1/cisco
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
 network-object host 10.10.10.10 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ config =~ ^(platform|p)$ ]]
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
  "model": "FortiGate-60F",
+ [[ ! -d reports/192.0.2.50/cisco ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ export jobs_location=jobs
+ [[ verbose =~ ^(config|c)$ ]]
++ jobs_location=jobs
+ [[ logger =~ ^(extract|x)$ ]]
+ newline 2
++ mkdir -p jobs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
++ export divisor=--MTc0OTAzMjEyOTYzNjE3OTAwMAo--
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
++ divisor=--MTc0OTAzMjEyOTYzNjE3OTAwMAo--
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
config firewall address
+ output_dir=reports/192.168.100.100/cisco
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
 edit "Panther-Vault"
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ source ./scripts/devops-helpers.shell
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
++ [[ -n '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=2
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ cut -d/ -f2
  set subnet 192.168.1.10 255.255.255.255
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
++ export divisor=--MTc0OTAzMjEyOTYzNzY0MDAwMAo--
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
++ divisor=--MTc0OTAzMjEyOTYzNzY0MDAwMAo--
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
++ which awk
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ logger == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
  set comment "Wakandan data store"
  "domain": "",
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ serialize_objects
+ local verbose=true
+ IFS=' 	
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
++ IFS=,
'
+ print '{
  "vendor": "cisco",
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
  "model": "",
+ read -r key value
+ local count=1
  "version": "12.4",
  "domain": "",
++ echo 198.51.100.75
  "hostname": "access-sw1-west"
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
}

version 12.4
++ basename reports/192.168.0.1/cisco/access-sw1-west
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
++ alias network-configs--helper=network_configs__helper

object-group network MGMT-ACCESS
 description Management objects
+ local awk_bin=/usr/bin/awk
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
 next
end'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ alias serialize-object=serialize_objects
  "hostname": "fg-campus-core"
+ [[ -n {
+ [[ -n {
+ debug=false
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
}
+ [[ -z '' ]]
+ for xitem in "${@}"
+ (( i < count ))
  "vendor": "fortinet",
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
++ IFS=,
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ echo 10.0.0.1
 network-object host 10.10.10.10 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ echo -en '{
  "vendor": "cisco",
++ which awk
+ [[ extract =~ ^(console|o)$ ]]
++ basename reports/10.0.2.3/misc/fw1
  "model": "",
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
  "version": "12.4",
  "domain": "",
+ [[ extract =~ ^(extract|x)$ ]]
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
 network-object host 192.168.0.100
++ command -v -- ./scripts/network-extract.shell
 network-object host 10.10.10.10'
++ IFS=,
+ [[ extract =~ ^(logger|l)$ ]]
++ which awk

+ [[ extract =~ ^(platform|p)$ ]]
#hostname="fg-campus-core"
+ alias parse-cisco=main
++ echo 203.0.113.25
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
#model="FortiGate-200F"
+ for xitem in "${@}"
++ tr -d '\r'
+ IFS==
+ [[ -z x ]]
+ read -r key value
+ dry_run=false
+ IFS==
++ basename reports/10.10.10.10/cisco/campus-sw-access01
+ export logs_location=logs
+ [[ -z true ]]
+ logs_location=logs
+ read -r key value
+ mkdir -p logs
+ echo
+ (( i++ ))
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ alias parse-cisco=main
  "domain": "",
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ [[ -z x ]]
+ (( i++ ))
+ export logs_location=logs
+ logs_location=logs
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ mkdir -p logs
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')

config firewall address
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ declare -a execute__netwowrk_extract
+ [[ -z '' ]]
 edit "Hawkeye-Nest"
+ export console_output=false
  set subnet 172.16.1.6 255.255.255.255
+ console_output=false
  set comment "Remote sniper node"
 next
+ [[ -z true ]]
end'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ result=0
+ echo
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ false == true ]]
  "domain": "",
  "hostname": "fg-campus-core"
}

+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(config|c)$ ]]
+ search_pattern=10.0.0.1
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ [[ search =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ which awk
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ local 'indent=            '
+ (( i++ ))
+ print '{
++ echo -e --platform=cisco
+ (( i < count ))
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-60F",
++ export console_location=console
  "version": "v7.2.5.F",
++ console_location=console
#hostname="fg-campus-core"
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ mkdir -p console
}
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local search_pattern
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ search_terms=()
+ declare -a search_terms
  set comment "Wakandan data store"
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local awk_bin=/usr/bin/awk
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
  "version": "v7.2.5.F",
++ mktemp -d
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ local search_pattern
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end'
+ script_filename=network-extract.shell
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ local search_pattern
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ script_filename=network-extract.shell
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ script_filename=network-extract
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local awk_bin=/usr/bin/awk
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
++ echo -e --verbose
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ printf '%*s' 12 ''
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/192.0.2.50/cisco
+ newline 2
+ local 'indent=            '
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'indent=            '
+ newline
+ [[ true == true ]]
+ local count=1
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i++ ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ platform =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ echo reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(export|r)$ ]]
++ tr -d '\r'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local target_platform=cisco
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \h\e\l\p ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ 7 -eq 0 ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bwwus3uyc1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

++ cut -d/ -f2
config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ IFS==
+ [[ -n {
++ grep -v '^\s*$'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ read -r key value
+ newline
+ oIFS=' 	
}
+ [[ 7 -eq 0 ]]
'

+ local count=1
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bve7ope5rf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"

+ (( i < count ))
+ local count=2
config firewall address
+ IFS==
+ (( i = 0 ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console --export --verbose
 edit "Hawkeye-Nest"
+ read -r key value
  set subnet 172.16.1.6 255.255.255.255
++ cut -d/ -f2
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
  set comment "Remote sniper node"
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ newline
 next
+ oIFS=' 	
+ local first_search_entry=10.10.10.10
'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
end ]]
+ IFS==
+ read -r key value
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

++ IFS=,
config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ echo 192.168.100.100
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ grep -v '^#'
++ printf '%*s' 12 ''
++ export actions_logfile=console/run.console
+ [[ export =~ ^(console|o)$ ]]
++ actions_logfile=console/run.console
+ [[ export =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ echo
++ printf '%*s' 12 ''
+ [[ export =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local last_search_entry=10.10.10.10
+ echo
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i = 0 ))
+ [[ true == true ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local count=1
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ local 'indent=            '
+ local count=1
++ touch console/run.console
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ [[ true == true ]]
+ local 'indent=            '
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ newline
+ [[ export == \h\e\l\p ]]
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EqH9BMAAXX
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EqH9BMAAXX
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ verbose =~ ^(export|r)$ ]]
+ newline 2
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local verbose=true
+ IFS=' 	
'
+ echo
+ [[ -z '' ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ case "${target_platform}" in
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
++ which awk
+ (( i++ ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ (( i < count ))
+ awk -v divisor=--MTc0OTAzMjEyOTAxNjQyMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
                  }
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ export 'nl=\n'
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ read -r key value
+ local count=1
+ local count=1
+ nl='\n'
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=2
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ search_pattern=10.0.2.3
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ search_pattern=10.10.10.10
+ newline
+ (( i < count ))
+ debug=false
+ mkdir -p reports/10.0.2.3/misc/.objects
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ -z '' ]]
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ -z true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z cisco ]]
+ echo
+ source ./scripts/devops-resources.shell
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
++ which awk
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ local first_search_entry=192.168.1.10
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -z '' ]]
+ local last_search_entry=192.168.1.10
+ export console_output=false
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ console_output=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ search_pattern=192.168.0.1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local search_pattern
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
++ alias detect-vendor=detect_vendor
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ search =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ search =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ [[ search == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console ]]
  "version": "9.12(4)",
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
}
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]

+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list
+ [[ logger =~ ^(platform|p)$ ]]
ASA Version 9.12(4)
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ grep -F 10.0.0.1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"

+ [[ logger == \v\e\r\b\o\s\e ]]
object network Sentinel-NAT
 host 203.0.113.25
+ for xitem in "${@}"
 description Corporate NAT edge'
+ IFS==
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ read -r key value
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ IFS==
+ [[ -n {
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
+ read -r key value
++ export targets_location=targets
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "model": "ASA",
+ newline 2
  "version": "9.12(4)",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "global.dmz.example.net",
++ alias exit-error=exit_error
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "dmz-fw2-backup"
+ serialize_objects
}

+ message '                .cache/resources/misc/fw3.cfg'
ASA Version 9.12(4)
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ -z '' ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ echo -e '                .cache/resources/misc/fw3.cfg'

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
object network Sentinel-NAT
++ alias list-file=list_file
+ local awk_bin=/usr/bin/awk
 host 203.0.113.25
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 description Corporate NAT edge ]]
+ local count=1
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
++ alias log-error=log_error
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i++ ))
+ local count=1
+ local count=2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_location=targets
+ (( i = 0 ))
+ script_helper=false
+ (( i < count ))
+ newline
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
++ alias log-info=log_info
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i < count ))
++ alias log-warn=log_warn
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ newline
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ IFS=,
+ newline
++ echo 192.0.2.50
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
++ export targets_logfile=.cache/targets.jobs
+ [[ false == true ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ message '                .cache/resources/misc/switch1.conf'
+ (( i < count ))
+ declare -a search_terms
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i++ ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ echo
+ (( i < count ))
+ local count=1
++ alias print-message=message
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ echo
+ sed '/^[[:space:]]*$/d'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
++ targets_logfile=.cache/targets.jobs
++ echo -e --platform=fortinet
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --export
+ echo -e '                .cache/resources/misc/switch1.conf'
++ cut -d/ -f2
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-newline=newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ return 0
+ local count=1
+ newline
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
++ alias pause=pause
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ alias print-line=print
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
++ IFS=,
+ newline
++ alias print-file=print_file
+ (( i = 0 ))
++ echo 10.0.2.3
++ alias relative-configpath=relative_configpath
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ printf '%*s' 12 ''
++ alias system-metrics=system_metrics
+ (( i < count ))
++ echo -e --platform=fortinet
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTA4NDA1OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ (( i = 0 ))
                  }
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ (( i < count ))
                ' reports/10.0.2.3/misc/fw1.cfg
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
++ IFS=,
++ echo 192.168.100.100
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ newline 2
++ alias validate-address=validate_address
+ [[ config =~ ^(config|c)$ ]]
+ result=0
+ local count=2
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ case "${target_platform}" in
++ alias warning-message=warning
+ [[ config =~ ^(console|o)$ ]]
+++ date +%s%N
+ case "${target_platform}" in
+ [[ config =~ ^(export|r)$ ]]
+ awk -v divisor=--MTc0OTAzMjEyOTA5MTU2NzAwMAo-- '
+ echo
+ local target_config=.cache/resources/misc/switch1.conf
++ export LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
                  BEGIN {
+ [[ config =~ ^(console|o)$ ]]
+ (( i++ ))
++ LC_ALL=C
+ [[ export =~ ^(config|c)$ ]]
+ awk -v divisor=--MTc0OTAzMjEyOTA4NzcwMDAwMAo-- '
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
                  BEGIN {
+ [[ config =~ ^(export|r)$ ]]
                    in_json_header = 0;
+ [[ export =~ ^(console|o)$ ]]
                    blk = "";
                    in_json_header = 0;
+ [[ config =~ ^(platform|p)$ ]]
                    blk = "";
+ [[ config =~ ^(extract|x)$ ]]
                  }
                  }
+ echo
+ [[ config =~ ^(logger|l)$ ]]
                  /^[[:space:]]*$/ { next }
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
                  /^[[:space:]]*$/ { next }
+ local 'extracted_configuration={
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
  "vendor": "cisco",
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
+ search_pattern=192.0.2.50
                  /^}$/ {
                  /^{$/ { in_json_header = 1; next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
                    if (in_json_header == 1) {
+ (( i < count ))
                  /^}$/ {
                      in_json_header = 0;
+ [[ config == \h\e\l\p ]]
+ newline
                      next;
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
                    if (in_json_header == 1) {
                    }
+ mkdir -p reports/192.0.2.50/cisco/.objects
                  }
+ local export_objects=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
                  (in_json_header == 1) { next }
                      in_json_header = 0;
+ for xitem in "${@}"
                      next;
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
                    blk = $0;
+ grep -F 10.0.2.3
                    next;
+ [[ true == true ]]
+ IFS==
+ declare -a execute__netwowrk_extract
+ [[ config == \d\r\y\-\r\u\n ]]
                    }
+ [[ export =~ ^(logger|l)$ ]]
                  }
                  }
                  {
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    blk = blk divisor " " $0;
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+++ base64
                  END {
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
                    blk = $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    next;
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
                  }
                  {
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ IFS==
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ read -r key value
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
++ tr -d '\r'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ export == \h\e\l\p ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ export == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
++ nl='\n'
+ for xitem in "${@}"
+ IFS==
+ (( i = 0 ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ read -r key value
+ echo
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ local parent_dir=reports/10.0.0.1/fortinet
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ newline
+ [[ platform =~ ^(config|c)$ ]]
  "model": "",
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ case "${target_file}" in
  "domain": "",
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local target_platform=fortinet
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local awk_bin=/usr/bin/awk
++ grep -v '^#'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ export cache_location=.cache
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
++ echo -e --verbose
++ cache_location=.cache
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ serialize_objects
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ platform =~ ^(config|c)$ ]]
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ platform =~ ^(console|o)$ ]]
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ [[ platform =~ ^(export|r)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ result=0
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'extracted_configuration={
  "vendor": "cisco",
+ IFS==
  "model": "",
+ read -r key value
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ newline
+ [[ -n {
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
+ (( i < count ))
  "version": "",
+ echo
  "domain": "",
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
  "hostname": ""
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ cfg == \c\f\g ]]
++ mkdir -p logs
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ which awk
++ export divisor=--MTc0OTAzMjEyOTY4NTY5MDAwMAo--
+ IFS=' 	
+ (( i < count ))
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ [[ -n {
+ local count=1
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ echo
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ (( i < count ))
+ serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ false == true ]]
object-group network Avengers-Office
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
}
+ (( i < count ))

++ printf '%*s' 12 ''
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ grep -F 192.168.0.1
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
+ local first_search_entry=192.168.0.1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ local last_search_entry=192.168.0.1
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
'
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
++ divisor=--MTc0OTAzMjEyOTY4NTY5MDAwMAo--
+ echo

  "vendor": "cisco",
  "model": "",
+ [[ -z '' ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local 'indent=            '
version 16.9
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
hostname branch-isr-02
+ [[ true == true ]]

+ debug=false
object-group network Lantern-DMZ
+ [[ -z '' ]]
+ dry_run=false
 description VLAN access layer
+ [[ -z true ]]
 network-object host 10.0.0.1
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
object-group network Panther-Edge
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console ]]
 network-object 192.168.12.0 255.255.255.0'
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ which awk
 description Internet-facing proxy systems
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]]
 network-object host 203.0.113.25
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
 network-object host 172.16.0.5

object network Edge-Terminal
+ search_terms=()
+ [[ true == true ]]
 host 172.16.0.5
 description Internet firewall handoff ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ declare -a search_terms
+ [[ extract =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ] ]]
++ [[ 5 -lt 4 ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list != *,* ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ (( i++ ))
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ mapfile -t search_terms
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
object network Hydra-Link
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
 network-object host 192.168.1.11 ]]
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ grep -F 10.10.10.10
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ result=0
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n {
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "model": "",
  "version": "",
+ local verbose=true
  "domain": "",
  "hostname": ""
}
+ IFS=' 	

object-group network Avengers-Office
'
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ -z '' ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ newline
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ script_helper=false
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ search_terms=()
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ -n {
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
+ (( i < count ))
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

++ alias parse-listings--helper=parse_listings__helper
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
version 16.9
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ cfg == \c\f\g ]]
+ result=0
+ local awk_bin=/usr/bin/awk
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ 0 -ne 0 ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ true == true ]]
+ [[ false == true ]]
++ export jobs_location=jobs
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local search_pattern
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/192.168.0.100/cisco
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local parent_dir=reports/203.0.113.25/cisco
+ output_dir=reports/10.10.10.10/cisco
+ ((  count == 0  ))
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
+ print '{
  "vendor": "cisco",
  "model": "",
  "model": "",
  "version": "",
  "version": "",
  "domain": "",
  "domain": "",
  "hostname": ""
  "hostname": ""
}
++ echo -e --platform=cisco
}
++ echo -e --platform=fortinet


object-group network Panther-Edge
object-group network Fortress-Wireless
 description Internet-facing proxy systems
 description Secure wireless access layer
 network-object host 203.0.113.25
 network-object host 172.18.1.20
 network-object host 172.16.0.5
 network-object host 192.168.1.10'

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
+ [[ -n {
  "vendor": "cisco",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
 description Branch NAT egress
  "version": "",

  "domain": "",
  "hostname": ""
+ [[ -n {
object-group network Hydra-Edge
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias network-configs--helper=network_configs__helper
}
  "vendor": "cisco",
++ jobs_location=jobs

  "model": "",
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
  "version": "",
object-group network Fortress-Wireless
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 description Secure wireless access layer
  "domain": "",
 network-object host 172.18.1.20
  "hostname": ""
 network-object host 192.168.1.10 ]]
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ echo -en '{
object network Edge-Terminal
  "vendor": "cisco",
 host 172.16.0.5
  "model": "",
 description Internet firewall handoff ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local parent_dir=reports/192.168.1.10/fortinet
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ alias network-extract--helper=network_extract__helper
  "version": "",
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ alias serialize-object=serialize_objects
+ awk -v divisor=--MTc0OTAzMjEyOTA2Mzg2MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ result=0
                  }
                  {
+ [[ 0 -ne 0 ]]
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
 description Remote site uplink
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ print '{
  "vendor": "cisco",
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ newline
++ echo -e --export
  "model": "",
  "version": "16.9",
+ print '{
  "vendor": "cisco",
  "model": "",
  "domain": "",
++ dirname reports/192.168.1.10/misc/fw1.cfg
  "version": "",
  "hostname": "branch-isr-02"
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
}
++ printf '%*s' 12 ''

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
  "domain": "",
 network-object host 172.18.1.20
  "hostname": ""
 network-object host 192.168.1.11'
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
++ tr -d '\r'
 network-object 192.168.12.0 255.255.255.0'
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n {
  "vendor": "cisco",
  "hostname": "branch-isr-02"
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
  "model": "",
++ mkdir -p jobs
  "version": "",
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
}
  "domain": "",

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
  "hostname": ""
 description Protected but public-facing zone
}

 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ echo -en '{
  "domain": "",
  "vendor": "cisco",
  "hostname": "branch-isr-02"
  "model": "",
}
  "version": "",

  "domain": "",
version 16.9
  "hostname": ""
hostname branch-isr-02
}


object-group network Lantern-DMZ
object-group network Avengers-Office
 description Protected but public-facing zone
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
 network-object host 172.18.1.20
 description VLAN access layer
 network-object host 192.168.1.11'
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 network-object host 10.0.0.1
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 network-object 192.168.12.0 255.255.255.0'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ grep -v '^\s*$'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ grep -F 192.0.2.50
+ cat -n
++ grep -v '^#'
++ grep -v '^\s*$'
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ grep -v '^#'
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
++ export actions_logfile=console/run.console
+ script_filename=network-extract
+ [[ verbose =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
++ actions_logfile=console/run.console
+ echo
+ network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(console|o)$ ]]
++ touch console/run.console
+ touch console/network-extract.console
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local target_platform=fortinet
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ IFS=' 	
+ [[ platform == \h\e\l\p ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
'
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ extract == \h\e\l\p ]]
+ newline
+ [[ -z true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ console_output=false
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ search_terms=()
+ declare -a search_terms
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ search_pattern=10.0.1.2
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list != *,* ]]
+ mkdir -p reports/10.0.1.2/misc/.objects
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ IFS=' 	
'
+ newline
+ [[ -z '' ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local count=1
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ grep -F 172.31.255.254
+ echo
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ debug=false
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ return 0
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ local 'indent=            '
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ echo -e --verbose
+ for xitem in "${@}"
+ [[ -z true ]]
+ (( i < count ))
+ IFS==
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --platform=cisco
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
+ [[ 7 -eq 0 ]]
++ grep -v '^\s*$'
++ export targets_logfile=.cache/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.prgrvfdxna/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ targets_logfile=.cache/targets.jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console ]]
+ echo
+ export console_output=false
+ console_output=false
+ (( i++ ))
+ (( i < count ))
+ [[ -z true ]]
+ return 0
++ grep -v '^#'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ read -r key value
+ case "${target_file}" in
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ search_terms=()
+ [[ verbose =~ ^(console|o)$ ]]
+ declare -a search_terms
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list != *,* ]]
+ [[ verbose == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ result=0
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ newline
+ [[ 0 -ne 0 ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ newline
+ [[ -z '' ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local count=1
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ debug=false
+ serialize_objects
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ [[ -z '' ]]
+ (( i = 0 ))
+ dry_run=false
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -z true ]]
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ newline
+ [[ -z '' ]]
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ (( i < count ))
+ export console_output=false
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo
+ console_output=false
+ echo
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ local count=1
+ [[ -z '' ]]
+ local count=1
+ (( i < count ))
+ script_helper=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ (( i = 0 ))
+ case "${target_file}" in
+ return 0
+ local 'indent=            '
+ [[ false == true ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ search_terms=()
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]]
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ logger =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(logger|l)$ ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ platform =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ local target_platform=cisco
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ platform == \h\e\l\p ]]
+ result=0
+ [[ platform == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ 0 -ne 0 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ local search_pattern
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--fg-branch-vpn-01.cfg.console
+++ base64
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ echo -e --export
+ local first_search_entry=192.168.2.12
+++ tr -dc a-zA-Z0-9
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
++ tr -d '\r'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
++ tr -d '\r'
+ echo
++ grep -v '^\s*$'
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ output_dir=reports/198.51.100.75/cisco
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ output_dir=reports/203.0.113.25/cisco
+ (( i < count ))
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export divisor=--MTc0OTAzMjEyOTcyNjQ1NTAwMAo--
+ [[ search =~ ^(export|r)$ ]]
++ divisor=--MTc0OTAzMjEyOTcyNjQ1NTAwMAo--
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ cat -n
++ alias parse-listings--helper=parse_listings__helper
++ command -v -- ./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console ]]
+ alias serialize-object=serialize_objects
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console ]]
+ local export_objects=true
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ export =~ ^(export|r)$ ]]
+ local first_search_entry=192.168.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--branch-isr-02.cfg.console
+ local last_search_entry=192.168.0.1
+ local export_objects=true
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=192.168.0.100
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ [[ export == \h\e\l\p ]]
+ local last_search_entry=192.168.0.100
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ] ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-configs--ips.list ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ case "${target_platform}" in
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
+ [[ true == true ]]
+ ((  count == 0  ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ] ]]
+ awk -v divisor=--MTc0OTAzMjEyOTA2NDI1NTAwMAo-- '
                  BEGIN {
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
                    in_json_header = 0;
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
                    blk = "";
+ for xitem in "${@}"
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ IFS==
                  /^[[:space:]]*$/ { next }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console ]]
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-configs--ips.list ]'
                  /^{$/ { in_json_header = 1; next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ search_pattern=10.0.0.1
                    }
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ local count=1
+ mkdir -p reports/10.0.0.1/fortinet/.objects
                  }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ export == \h\e\l\p ]]
+ ((  count == 0  ))
+ newline
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ export == \d\e\b\u\g ]]
                    blk = $0;
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ local count=1
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--access-sw1-west.cfg.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ grep -F 10.0.1.2
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ local script_filename=cisco-configs.awk
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
++ echo -e --verbose
++ echo -e --export
++ which awk
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ script_filename=network-extract.shell
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ script_filename=network-extract
+ echo
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ return 0
+ touch console/network-extract.console
+ [[ true == true ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console ]]
+ [[ config =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console ]]
+ [[ config =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ config =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local 'extracted_configuration={
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ exit 0
+ IFS==
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mo1yCBE6HX ]]
+ read -r key value
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mo1yCBE6HX
+ local search_pattern
+ result=0
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bha70fyWkG ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dPUD1FvKoW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bha70fyWkG
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dPUD1FvKoW
+ result=0
++ which awk
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g6C3Rd48lx ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g6C3Rd48lx
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ IFS=' 	
'
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
++ IFS=,
++ echo 198.51.100.75
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ search_terms=()
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ declare -a search_terms
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ output_dir=reports/192.168.2.12/cisco
+ declare -a execute__netwowrk_extract
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list != *,* ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ mapfile -t search_terms
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.iwqcb54cga/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
++ IFS=,
++ echo 203.0.113.25
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--perimeter-fw1.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0V6k9TFdAn/network-extract--switch1.conf.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ [[ -z '' ]]
++ which awk
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ console_output=false
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ cat -n
+ [[ false == true ]]
++ grep -v '^\s*$'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local awk_bin=/usr/bin/awk
+ read -r key value
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ output_dir=reports/192.168.1.10/misc
+ newline 2
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ result=0
+ local count=1
++ grep -v '^#'
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ newline
+ local count=1
+ newline 2
+ newline
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
'
+ [[ -z '' ]]
+ debug=false
++ tr -d '\r'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
++ printf '%*s' 12 ''
+ script_helper=false
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ local script_filename=cisco-configs.awk
+ search_terms=()
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ declare -a search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'indent=            '
++ echo -e --platform=fortinet
+ [[ true == true ]]
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local first_search_entry=192.168.1.11
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ local last_search_entry=192.168.1.11
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ exit 0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ grep -v '^\s*$'
+ [[ search =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9JrmC0JxsZ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname -- ./scripts/network-extract.shell
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9JrmC0JxsZ
+ [[ search =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ search =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(search|s)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ search == \d\e\b\u\g ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ result=0
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ search == \v\e\r\b\o\s\e ]]
+ exit 0
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ for xitem in "${@}"
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "version": "",
+ local first_search_entry=192.168.2.12
+ newline
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ IFS==
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lWfSEoWqU2 ]]
+ local last_search_entry=192.168.2.12
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lWfSEoWqU2
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ local 'indent=            '
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ] ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
++ grep -v '^#'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z fortinet ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
++ cut -d/ -f2
++ tr -d '\r'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/192.168.0.1/cisco
+ newline
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=2
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ (( i++ ))
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ grep -v '^#'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
++ which awk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 192.168.2.12
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ [[ -z fortinet ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZWD8jDkOXs/network-extract--switch1.conf.console
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ result=0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ local count=1

+ [[ config =~ ^(config|c)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ local target_config=.cache/resources/misc/fw3.cfg
 description Outbound Internet NAT interface ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ echo
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ which awk
+ read -r key value
+ (( i++ ))
+ local first_search_entry=172.16.1.6
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local last_search_entry=172.16.1.6
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-configs--ips.list ]'
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ (( i++ ))
+ [[ true == true ]]
  "domain": "",
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
+ export LC_ALL=C
+ local count=1
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ print '{
++ IFS=,
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ (( i = 0 ))
++ echo 192.168.0.100
hostname dmz-fw2-backup
+ (( i < count ))
domain-name global.dmz.example.net
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]

+ echo
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ (( i++ ))
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ local 'extracted_configuration={
 description Outbound Internet NAT interface'
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ case "${target_file}" in
  "hostname": "perimeter-fw1"
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
}
+ [[ -n {

ASA Version 9.14(3)
  "vendor": "cisco",
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ cat reports/10.0.2.3/misc/.objects/fw1.list
  "hostname": "fg-campus-core"
hostname perimeter-fw1
  "model": "ASA",
+ return 0
+ search_pattern=192.168.0.100
domain-name edge.dc.example.com
  "version": "9.12(4)",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ ls -al --color=auto .cache/resources/misc/switch3.conf

+ declare -a execute__netwowrk_extract
}
+ mkdir -p reports/192.168.0.100/cisco/.objects

ASA Version 9.12(4)
interface GigabitEthernet0/0
hostname dmz-fw2-backup
 nameif outside
domain-name global.dmz.example.net
 security-level 0

 ip address 203.0.113.25 255.255.255.0
interface GigabitEthernet0/2
 description External Internet-facing Interface
 nameif outside

 ip address 198.51.100.75 255.255.255.0
object network NAT-Edge
 description Outbound Internet NAT interface ]]
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ echo -en '{
  "vendor": "cisco",
 network-object 192.168.2.0 255.255.255.0
  "model": "ASA",
  "version": "9.12(4)",

  "domain": "global.dmz.example.net",
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ result=0
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
+ [[ -n {
 ip address 198.51.100.75 255.255.255.0
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
 description Outbound Internet NAT interface'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 172.16.0.5 ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ search_pattern=192.168.1.10
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ local script_filename=cisco-configs.awk
+ result=0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ exit 0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DqhfvuYY2 ]]
+ newline
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DqhfvuYY2
+ (( i = 0 ))
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ (( i < count ))
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZCi3SRjzly ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZCi3SRjzly
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline 2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ print '{
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
  "vendor": "cisco",
+ local count=2
+ IFS==
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ] ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ read -r key value
  "model": "ASA",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
+ [[ config =~ ^(search|s)$ ]]
+ LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-configs--ips.list ]'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
++ printf '%*s' 12 ''
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ output_dir=reports/192.168.2.12/fortinet
+ (( i = 0 ))
+ [[ ! -d reports/192.168.2.12/fortinet ]]
++ echo -e --platform=cisco
+ (( i < count ))
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
}
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local awk_bin=/usr/bin/awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ cfg == \c\f\g ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ newline
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
++ echo -e --export
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ set -euo pipefail
+ local parent_dir=reports/172.16.1.6/fortinet
+ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ LC_ALL=C
++ printf '%*s' 12 ''
+ (( i < count ))
+ [[ true == true ]]
+ local 'indent=            '
+ [[ -z fortinet ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ true == true ]]
+ [[ conf == \c\o\n\f ]]
+ newline
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ newline 2
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local count=2
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local count=2
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i++ ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ newline
++ mktemp -d
+ case "${target_platform}" in
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ awk -v divisor=--MTc0OTAzMjEyOTA3NDI2NzAwMAo-- '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                    BEGIN {
++ dirname -- ./scripts/network-extract.shell
                      blk = "";
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
                      in_json_header = 0;
                    }

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ ((  count == 0  ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
                    (in_json_header == 1) { next }
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'

+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
++ export console_location=console
++ echo -e --platform=cisco
++ console_location=console
                    }
+ newline
#hostname="fg-campus-core"

+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console ]]
                    # Add edit line to current block
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
++ mkdir -p console
                    /^ edit / {
++ dirname reports/172.16.1.6/misc/switch3.conf
#model="FortiGate-200F"

                      blk = blk divisor " " $0;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
                      next;
+ cat -n
config system interface
                    }
+ (( i = 0 ))

                    # Add next to block
+ (( i < count ))
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ echo
                      next;
                    }

                    # Finalize block at end
+ (( i++ ))
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ (( i < count ))
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ IFS=,
++ echo 192.168.0.1
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local export_objects=true
+ echo
+ output_dir=reports/10.10.10.10/fortinet
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ false == true ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ newline
+ serialize_objects
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ for xitem in "${@}"
+ echo
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ IFS==
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ read -r key value
+ local script_filename=fortinet-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ [[ true == true ]]
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ case "${target_file}" in
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
 edit "wifi"
+ (( i = 0 ))
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ newline
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
++ which awk
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ newline
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d7Enz0X6iW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d7Enz0X6iW
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ [[ platform =~ ^(config|c)$ ]]
++ which awk
+ (( i < count ))
+ (( i = 0 ))
++ [[ -n '' ]]
+ newline 2
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ local count=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ platform =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ (( i++ ))
+ [[ platform =~ ^(logger|l)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ alias log-error=log_error
+ grep -F 10.0.0.1
  "domain": "",
++ alias log-info=log_info
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
  "hostname": "branch-isr-02"
+ [[ platform =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
}
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]

version 16.9
++ alias pause=pause
+ [[ platform == \d\r\y\-\r\u\n ]]
hostname branch-isr-02
++ alias print-line=print
+ [[ platform == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ IFS==
 description Workstation LAN
++ alias print-file=print_file
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell

+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ newline
object-group network Hydra-Edge
+ local SCRIPT_DIR=./scripts
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ alias relative-configpath=relative_configpath
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
++ alias system-metrics=system_metrics
+ serialize_objects
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
  set ip 192.168.100.100 255.255.255.0
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --verbose
  set alias "Wireless VLAN"
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
  "version": "16.9",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local count=1
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i = 0 ))
  "domain": "",
++ alias validate-address=validate_address
+ (( i < count ))
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ alias warning-message=warning
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
++ export LC_ALL=C

++ LC_ALL=C
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ case "${target_file}" in
++ export 'nl=\n'
 network-object host 198.51.100.75 ]]
++ nl='\n'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ mkdir -p logs
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/misc/fw1.cfg
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local parent_dir=reports/198.51.100.75/cisco
+ local 'extracted_configuration={
  "vendor": "cisco",
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
+ local awk_bin=/usr/bin/awk
  "vendor": "cisco",
+ echo
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
  "model": "",
  "version": "12.2",
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo
+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ echo
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
+ (( i++ ))
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ IFS=,
++ echo 192.168.2.12
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ -n {
+ local SCRIPT_DIR=./scripts
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ local 'indent=            '
+ local script_filename=fortinet-configs.awk

version 12.2
hostname campus-sw-access01
+ local script_filepath=./scripts/extract/fortinet-configs.awk

object-group network Floor-Networks
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
 network-object host 192.168.0.100
+ local SCRIPT_DIR=./scripts
 network-object host 10.10.10.10 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ verbose =~ ^(export|r)$ ]]
  "model": "",
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(extract|x)$ ]]
  "version": "12.2",
+ local parent_dir=reports/203.0.113.25/cisco
  "domain": "",
+ [[ verbose =~ ^(logger|l)$ ]]
  "hostname": "campus-sw-access01"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=2
+ [[ verbose =~ ^(platform|p)$ ]]
}

version 12.2
+ [[ verbose =~ ^(search|s)$ ]]
hostname campus-sw-access01

+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
object-group network Floor-Networks
+ newline
+ (( i < count ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \d\e\b\u\g ]]
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ local verbose=true
++ mkdir -p jobs
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTEyNjExMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ sed '1{/^[[:space:]]*$/d;}'
                    next;
+ [[ -z true ]]
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ which awk
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ (( i < count ))
+ echo
+ search_terms=()
+ declare -a search_terms
++ export actions_logfile=console/run.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
++ actions_logfile=console/run.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
 next
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
end
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ which awk
+ local search_pattern
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ newline 2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ cat -n
+ local count=2
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
++ which awk
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
++ tr -d '\r'
+ echo
++ export console_location=console
++ console_location=console
+ (( i++ ))
++ mkdir -p console
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local count=2
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ (( i = 0 ))
+ (( i < count ))
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local search_pattern
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
++ grep -v '^\s*$'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WrSDnu6oKK
+ (( i++ ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WrSDnu6oKK
+ (( i < count ))
++ touch console/run.console
+ newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local SCRIPT_DIR=./scripts
+ local count=1
+ [[ true == true ]]
+ export 'nl=\n'
+ (( i = 0 ))
++ echo -e --export
++ printf '%*s' 12 ''
++ IFS=,
++ echo 172.16.1.6
++ grep -v '^#'
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
++ IFS=,
++ echo 10.10.10.10
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ declare -a execute__netwowrk_extract
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]

+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ newline
+ declare -a execute__netwowrk_extract
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ return 0
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ message '                .cache/resources/misc/fw3.cfg'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ newline
+ (( i++ ))
+ (( i = 0 ))
+ echo
+ (( i++ ))
+ newline
+ local count=1
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_platform=cisco
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ search_pattern=198.51.100.75
+ [[ platform == \h\e\l\p ]]
++ which awk
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ result=0

++ which awk
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ nl='\n'
+ (( i++ ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ case "${target_platform}" in
+ [[ extract =~ ^(console|o)$ ]]
config firewall address
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ false == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
+ [[ extract =~ ^(extract|x)$ ]]
 edit "Titan-WLAN-Host"
  "version": "12.2",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ local first_search_entry=198.51.100.75
++ [[ -n '' ]]
+ (( i < count ))
+ local last_search_entry=198.51.100.75
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
  "domain": "",
+ newline
  set subnet 192.168.100.100 255.255.255.255
+ [[ true == true ]]
+ (( i < count ))
+ awk -v divisor=--MTc0OTAzMjEyOTEzMjU1NzAwMAo-- '
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
  "hostname": "campus-sw-access01"
                    BEGIN {
+ [[ true == true ]]
}
+ local count=1
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
                      blk = "";
                      in_json_header = 0;
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
+ serialize_objects
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ grep -F 192.168.0.100
                      blk = blk divisor " " $0;
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ] ]]
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
                      next;
                    }

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ newline

+ local count=1
                    END {

+ [[ export =~ ^(config|c)$ ]]
+ ((  count == 0  ))
                      # No need for final print — all blocks end with end
version 12.2
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
                    }
+ (( i < count ))
+ (( i = 0 ))
hostname campus-sw-access01
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ newline
+ newline
object-group network Avengers-DMZ
+ [[ export =~ ^(export|r)$ ]]

 description Public access layer
++ cut -d/ -f2
+ local count=1
+ echo
+ local export_objects=true
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
interface Vlan1
+ [[ false == true ]]
+ [[ export =~ ^(search|s)$ ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ true == true ]]
 description Switch Mgmt
+ [[ export == \h\e\l\p ]]

object-group network Floor-Networks
+ [[ export == \d\e\b\u\g ]]
 description End-user and service devices
+ return 0
+ echo
 network-object host 192.168.0.1
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 192.168.0.100
+ [[ export == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ for xitem in "${@}"
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console ]]
 network-object host 10.10.10.10'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ IFS==
+ [[ -z fortinet ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ true == true ]]
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ serialize_objects
+ newline
+ read -r key value
+ result=0
+ local count=1
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ (( i < count ))
  "hostname": "campus-sw-access01"
}

version 12.2
+ echo
hostname campus-sw-access01
+ (( i++ ))
+ (( i < count ))

interface Vlan1
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
 ip address 192.168.0.1 255.255.255.0
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
 description Switch Mgmt
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'

+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
object-group network Floor-Networks
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local awk_bin=/usr/bin/awk
  set comment "Guest WiFi node"
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/cisco/.objects
 next
end
+ echo

+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ IFS=,
+ grep -F 192.168.1.10
++ echo 192.168.1.10
++ printf '%*s' 12 ''
+ echo
+ print '{
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ echo
}

version 12.2
+ (( i++ ))
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ (( i < count ))

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

++ printf '%*s' 12 ''
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ local 'indent=            '
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ true == true ]]
++ echo -e --verbose
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ newline

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ local count=1

object-group network Floor-Networks
+ (( i = 0 ))
 description End-user and service devices
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
+ echo
 network-object host 10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'indent=            '
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ case "${target_platform}" in
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local parent_dir=reports/192.168.2.12/cisco
+ awk -v divisor=--MTc0OTAzMjEyOTI1MDg1MTAwMAo-- '
                  BEGIN {
+ message '             -f ./scripts/extract/cisco-configs.awk \'
                    in_json_header = 0;
                    blk = "";
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
                  }
                  /^[[:space:]]*$/ { next }
+ local 'extracted_configuration={
  "vendor": "fortinet",
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
  "model": "FortiGate-60F",
                    if (in_json_header == 1) {
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                      in_json_header = 0;
  "version": "v7.2.5.F",
  "domain": "",
+ local count=1
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
  "hostname": "fg-branch-vpn-01"
                      next;
}
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
++ sed -e '1s|^\(-\)\{1,\}||'

+ local count=1
 network-object host 192.0.2.50
                    }
#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ case "${target_file}" in
 network-object host 203.0.113.25
                  }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--perimeter-fw1.cfg.console
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ echo

+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message '                .cache/resources/misc/switch3.conf'
                    blk = $0;
                    next;
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
config system interface
                  }
 edit "internal"
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
  set ip 192.168.2.12 255.255.255.0
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local 'message=                .cache/resources/misc/switch3.conf'
  set alias "User LAN"
+ (( i++ ))
+ echo -e '                .cache/resources/misc/switch3.conf'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+++ date +%s%N
+ newline
 next
+ local count=1
end

+ (( i = 0 ))
config firewall address
+ (( i < count ))
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
  set comment "Primary LAN gateway"
 next
+ echo
end'
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.0.100/cisco
+ result=0
+ grep -F 198.51.100.75
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "version": "v7.2.5.F",
+++ base64
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "domain": "",
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
  "hostname": "fg-branch-vpn-01"
+ local count=1
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
}

+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
#hostname="fg-branch-vpn-01"
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
 edit "internal"
config firewall address
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
  set ip 192.168.2.12 255.255.255.0
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
  set alias "User LAN"
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
++ [[ 5 -lt 4 ]]
 next
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
 network-object 192.168.2.0 255.255.255.0'
+ [[ false == true ]]
end
+ newline

+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
config firewall address
++ export targets_location=targets
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
+ (( i = 0 ))
  set comment "Primary LAN gateway"
 next
end ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ sed '/^[[:space:]]*$/d'
+ declare -a execute__netwowrk_extract
+ sed '/^[[:space:]]*$/d'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
+ sed '/^[[:space:]]*$/d'
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ result=0
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ [[ extract == \d\e\b\u\g ]]

ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ extract == \d\r\y\-\r\u\n ]]
 edit "Wanda-Field"
++ which awk
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ [[ false == true ]]
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ targets_location=targets
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ export targets_logfile=.cache/targets.jobs
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
++ targets_logfile=.cache/targets.jobs
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ cat -n
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
#model="FortiGate-200F"
+ IFS==
+ read -r key value

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ serialize_objects
+ [[ true == true ]]
end
+ search_pattern=172.16.1.6
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
end ]]
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ (( i < count ))
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ echo
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ (( i++ ))
+ result=0
+ (( i < count ))
+ serialize_objects
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QWopinBAMH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QWopinBAMH
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
hostname perimeter-fw1
++ dirname reports/172.18.1.20/misc/fw1.cfg
domain-name edge.dc.example.com
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console ]]

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ echo -e --platform=fortinet
++ echo -e --export
++ IFS=,
++ echo 10.10.10.10
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+++ date +%s%N

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ echo -e --verbose
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "fortinet",
+ case "${target_file}" in
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
  "model": "FortiGate-200F",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--access-sw1-west.cfg.console
  "version": "",
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ local 'extracted_configuration={
  "domain": "",
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
  "hostname": "fg-campus-core"
}
+ case "${target_file}" in

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+++ base64
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ newline
 next
end

config firewall address
+ local count=1
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ (( i = 0 ))
 next
end'
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
  "model": "",
+ return 0
  "version": "",
+ local count=1
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "ASA",
+ output_dir=reports/192.168.0.1/fortinet
++ alias list-file=list_file
  "version": "9.12(4)",
+ local parent_dir=reports/192.168.1.11/cisco
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
  "hostname": "dmz-fw2-backup"
+ newline
+ echo
+ [[ true == true ]]
}
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
  "domain": "",
+ [[ -z x ]]
  "hostname": ""
+ export logs_location=logs
+ local count=1

+ (( i < count ))
+ (( i = 0 ))
ASA Version 9.12(4)
+ (( i < count ))
+ logs_location=logs
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console ]]

object-group network Wakanda-Core
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 description National Core Routing Zone
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ cat -n
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ local parent_dir=reports/172.18.1.20/misc
+ (( i++ ))
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ (( i < count ))
 network-object host 10.10.10.10'
+ serialize_objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console ]]
 network-object 10.0.0.0 255.255.255.0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
+ [[ false == true ]]
+ [[ true == true ]]
++ which awk
+ result=0
+ case "${target_platform}" in
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ awk -v divisor=--MTc0OTAzMjEyOTEyMDk5NDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n {
  "version": "9.12(4)",
  "vendor": "cisco",
  "domain": "global.dmz.example.net",
  "model": "",
  "hostname": "dmz-fw2-backup"
  "version": "",
}
  "domain": "",

  "hostname": ""
ASA Version 9.12(4)
}
hostname dmz-fw2-backup

domain-name global.dmz.example.net
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
 network-object 10.0.0.0 255.255.255.0

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'

object network Panther-Gateway
+ serialize_objects
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]

+ local target_platform=fortinet
object network Titan-WLAN-Host
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
 host 192.168.100.100
+ [[ platform == \h\e\l\p ]]
 description Backup inside NAT IP

+ [[ platform == \d\e\b\u\g ]]
object-group network Sector-Wireless
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
 description Staff WiFi clients
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
++ basename reports/172.18.1.20/misc/fw1
+ local export_objects=true
+ newline 2
++ export divisor=--MTc0OTAzMjEyOTg0Njk3ODAwMAo--
 network-object host 192.168.100.100
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
 network-object host 10.10.10.10 ]]
+ read -r key value
++ divisor=--MTc0OTAzMjEyOTg0Njk3ODAwMAo--
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=2
+ for xitem in "${@}"
+ (( i = 0 ))
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ local verbose=true
+ newline
+ IFS=' 	
'
+ local count=1
+ [[ -z '' ]]
+ echo
+ debug=false
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
++ [[ -n '' ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ dry_run=false
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
+ result=0
+ (( i < count ))
+ newline 2
++ [[ 5 -lt 4 ]]
+ echo
+ echo
++ alias log-error=log_error
+ exit 0
+ local first_search_entry=10.0.0.1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z true ]]
+ local last_search_entry=10.0.0.1
+ (( i++ ))
++ alias log-info=log_info
+ [[ -z '' ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bg25w97XVy ]]
+ local count=2
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ (( i++ ))
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ export console_output=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bg25w97XVy
+ (( i = 0 ))
+ console_output=false
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console ]]
+ return 0
+ [[ -z '' ]]
+ script_helper=false
+ print '{
+ (( i < count ))
+ [[ false == true ]]
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
  "domain": "",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ grep -F 172.16.1.6
  "hostname": ""
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ local awk_bin=/usr/bin/awk
+ search_terms=()
++ dirname reports/10.0.0.1/misc/switch1.conf
+ declare -a search_terms
++ alias network-configs--helper=network_configs__helper
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ local search_pattern
+ (( i++ ))
+ [[ true == true ]]

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
object-group network Wakanda-Core
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
 description National Core Routing Zone
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
 network-object host 192.168.1.10
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
 network-object host 10.0.2.3
+ (( i < count ))
+ echo
+ mapfile -t search_terms
 network-object 10.0.0.0 255.255.255.0
+ (( i++ ))

object network Panther-Gateway
++ which awk
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
 host 10.0.2.3
++ alias network-extract--helper=network_extract__helper
 description Secure outbound concentrator'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console ]]
  "vendor": "cisco",
  "model": "",
+ case "${target_file}" in
  "version": "",
+ print '{
  "vendor": "cisco",
  "domain": "",
  "model": "ASA",
  "hostname": ""
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
}
  "hostname": "dmz-fw2-backup"

}
object-group network Wakanda-Core

 description National Core Routing Zone
ASA Version 9.12(4)
hostname dmz-fw2-backup
 network-object host 192.168.1.10
domain-name global.dmz.example.net
 network-object host 10.0.2.3

 network-object 10.0.0.0 255.255.255.0
interface GigabitEthernet0/1

 nameif inside
+ newline
object network Panther-Gateway
 ip address 192.168.100.100 255.255.255.0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ local count=1
 host 10.0.2.3
+ (( i = 0 ))
 description Inside LAN segment
+ (( i < count ))
 description Secure outbound concentrator ]]

+ sed '1{/^[[:space:]]*$/d;}'
object network Titan-WLAN-Host
 host 192.168.100.100
+ echo -en '{
  "vendor": "cisco",
 description Backup inside NAT IP
  "model": "",

  "version": "",
object-group network Sector-Wireless
  "domain": "",
 description Staff WiFi clients
  "hostname": ""
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ sed '/^[[:space:]]*$/d'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
hostname dmz-fw2-backup
+ alias serialize-object=serialize_objects
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'

object-group network Sector-Wireless
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
 description Staff WiFi clients
 network-object host 192.168.100.100
+ echo
 network-object host 10.10.10.10'
+ newline
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
++ echo -e --verbose
+ [[ true == true ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
+ alias parse-cisco=main
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
+ [[ -z x ]]
+ export logs_location=logs
+ result=0
+ logs_location=logs
+ exit 0
+ mkdir -p logs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console ]]
++ printf '%*s' 12 ''
+ local parent_dir=reports/10.0.0.1/misc
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.caWR6HwP4i ]]
+ case "${target_file}" in
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.caWR6HwP4i
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--campus-sw-access01.cfg.console
++ tr -d '\r'
+ local 'indent=            '
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ (( i < count ))
+ mkdir -p logs
++ alias log-warn=log_warn
++ alias print-message=message
+ echo
++ alias print-newline=newline
+ return 0
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local awk_bin=/usr/bin/awk
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ result=0
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ cut -d/ -f2
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=2
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ basename reports/10.0.0.1/misc/switch1
+ (( i = 0 ))
+ local script_filename=fortinet-configs.awk
+ (( i < count ))
+ echo
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ echo reports/172.18.1.20/misc/fw1.cfg
+ (( i < count ))
+ newline
+ echo
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
++ grep -v '^#'
+ newline 2
+ (( i++ ))
+ (( i = 0 ))
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ newline
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ (( i < count ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ echo
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ newline
+ (( i < count ))
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
++ alias pause=pause
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local count=1
+ newline
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--access-sw1-west.cfg.console
+ local count=1
+ local count=1
++ alias print-line=print
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ echo
+ local verbose=true
+ IFS=' 	
+ echo
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
'
+ script_filename=network-extract.shell
+ (( i++ ))
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ local search_pattern
+ for xitem in "${@}"
+ (( i < count ))
+ (( i++ ))
+ script_filename=network-extract
+ [[ -z '' ]]
+ IFS==
+ export network_extract__console=console/network-extract.console
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ debug=false
+ search_pattern=192.168.1.11
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ network_extract__console=console/network-extract.console
+ read -r key value
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ local search_pattern
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ false == true ]]
+ [[ -z '' ]]
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ touch console/network-extract.console
+ serialize_objects
+ [[ true == true ]]
++ which awk
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local search_pattern
+ dry_run=false
+ [[ -z true ]]
+ result=0
+ [[ -z '' ]]
+ exit 0
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vly7uRFcBd ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -z '' ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vly7uRFcBd
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ search_terms=()
+ serialize_objects
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ declare -a search_terms
+ [[ cfg == \c\f\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list != *,* ]]
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ mapfile -t search_terms
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local first_search_entry=10.10.10.10
+ serialize_objects
+ local last_search_entry=10.10.10.10
+ echo
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ cat -n
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ search_pattern=172.18.1.20
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ mkdir -p reports/172.18.1.20/misc/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-file=print_file
+ newline
+ echo
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ cat -n
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
++ alias system-metrics=system_metrics
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo -e --export
++ echo reports/10.0.0.1/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ cut -d/ -f2
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
+ [[ 7 -eq 0 ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.prgrvfdxna/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local parent_dir=reports/192.0.2.50/cisco
+ local count=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console --export --verbose
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/192.168.100.100/fortinet
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ result=0
+ (( i++ ))
+ oIFS=' 	
+ (( i < count ))
+ (( i < count ))
+ newline
+ exit 0
'
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.swL536F6Ry ]]
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.swL536F6Ry
+ echo
+ echo
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ false == true ]]
+ IFS==
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i++ ))
+ read -r key value
+ [[ true == true ]]
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ return 0
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ local 'extracted_configuration={
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ true == true ]]
  "domain": "global.dmz.example.net",
+ serialize_objects
++ grep -v '^#'
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
  "hostname": "dmz-fw2-backup"
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
}
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ serialize_objects
 description Guest access interface

object network Shield-WiFi-Alias
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ IFS=,
+ result=0
+ case "${target_platform}" in
+ [[ -n {
++ echo 192.168.0.1
  "vendor": "cisco",
++ alias validate-address=validate_address
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ alias warning-message=warning
+ awk -v divisor=--MTc0OTAzMjEyOTE2OTk0ODAwMAo-- '
                  BEGIN {

++ export LC_ALL=C
ASA Version 9.12(4)
                    in_json_header = 0;
hostname dmz-fw2-backup
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
++ basename reports/192.0.2.50/cisco/perimeter-fw1
domain-name global.dmz.example.net
                  (in_json_header == 1) { next }

interface GigabitEthernet0/0
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
++ basename reports/192.168.100.100/fortinet/fg-campus-core
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ search_pattern=198.51.100.75
+ case "${target_platform}" in
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ mkdir -p reports/198.51.100.75/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ awk -v divisor=--MTc0OTAzMjEyOTE2OTk4MTAwMAo-- '

+ [[ export =~ ^(console|o)$ ]]
+ declare -a execute__netwowrk_extract
                  BEGIN {
object-group network Sector-Wireless
                    in_json_header = 0;
 description Staff WiFi clients
                    blk = "";
 network-object host 192.168.100.100
                  }
 network-object host 10.10.10.10 ]]
+ search_pattern=10.0.0.1
                  /^[[:space:]]*$/ { next }
+ [[ export =~ ^(export|r)$ ]]
                  /^{$/ { in_json_header = 1; next }
+ mkdir -p reports/10.0.0.1/misc/.objects
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ local export_objects=true
                    }
                  }
+ [[ export =~ ^(extract|x)$ ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ export =~ ^(logger|l)$ ]]
                    next;
                  }
                  {
+ [[ export =~ ^(platform|p)$ ]]
                    blk = blk divisor " " $0;
+ [[ export =~ ^(search|s)$ ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ export == \h\e\l\p ]]
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ grep -F 192.168.1.11
+ read -r key value
+ output_dir=reports/192.168.1.11/fortinet
+ (( i < count ))
+ script_filename=network-extract.shell
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ echo
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
+ grep -F 172.18.1.20
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ which awk
+ sed '/^[[:space:]]*$/d'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ local parent_dir=reports/10.0.2.3/misc
+ [[ true == true ]]
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local parent_dir=reports/192.168.100.100/cisco
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local first_search_entry=192.168.1.10
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console ]]
+ local last_search_entry=192.168.1.10
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ sed '/^[[:space:]]*$/d'
+ case "${target_file}" in
+ local parent_dir=reports/172.16.0.5/misc
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--fg-campus-core.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ result=0
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ] ]]
+ [[ 0 -ne 0 ]]
++ LC_ALL=C
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
++ export 'nl=\n'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
++ nl='\n'
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ newline
+ (( i++ ))
+ case "${target_file}" in
+ local count=1
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ echo -e --verbose
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/10.0.2.3/misc/fw3
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ case "${target_platform}" in
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ logger =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ awk -v divisor=--MTc0OTAzMjEyOTE5NDY0NTAwMAo-- '
                  BEGIN {
+ [[ logger =~ ^(extract|x)$ ]]
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    in_json_header = 0;
+ [[ -z cisco ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ search =~ ^(console|o)$ ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ awk -v divisor=--MTc0OTAzMjEyOTE3OTAxOTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ search =~ ^(logger|l)$ ]]
                    blk = "";
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ search =~ ^(platform|p)$ ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                  }
+ [[ search =~ ^(search|s)$ ]]
                ' reports/10.0.0.1/misc/switch1.conf
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ grep -F 198.51.100.75
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
++ cut -d/ -f2
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ cut -d/ -f2
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ cut -d/ -f2
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
++ export cache_location=.cache
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ result=0
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ newline 2
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ output_dir=reports/10.10.10.10/fortinet
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
++ cache_location=.cache
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ local count=1
++ export logs_location=logs
+ local search_pattern
++ logs_location=logs
+ local count=2
+ (( i = 0 ))
++ mkdir -p logs
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ exit 0
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nb2vpF3LDg ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ grep -F 10.0.0.1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nb2vpF3LDg
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ search_pattern=192.0.2.50
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ local verbose=true
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
+ IFS=' 	
+ newline
'
+ (( i < count ))
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ echo
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ search_pattern=192.168.100.100
+ debug=false
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i < count ))
+ [[ -z '' ]]
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ dry_run=false
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ echo
+ [[ -z true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ -z '' ]]
+ (( i++ ))
+ export console_output=false
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.en7bzrpkdj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ search_pattern=203.0.113.25
+ console_output=false
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local 'indent=            '
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ return 0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ mkdir -p reports/203.0.113.25/cisco/.objects
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console --export --verbose
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
++ echo reports/10.0.2.3/misc/fw3.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ [[ logger == \h\e\l\p ]]
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ oIFS=' 	
'
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
++ basename reports/172.16.0.5/misc/fw3
+ cat -n
++ dirname -- ./scripts/network-extract.shell
++ cut -d/ -f2
++ cut -d/ -f2
+ read -r key value
+ cat -n
+ result=0
++ tr -d '\r'
+ newline
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ newline
+ local target_config=.cache/resources/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ config =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local count=1
++ grep -v '^\s*$'
+ [[ config =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ newline
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i = 0 ))
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ false == true ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ config == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ search_pattern=192.168.100.100
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ serialize_objects
+ search_pattern=10.0.2.3
+ mkdir -p reports/10.0.2.3/misc/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console ]]
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ case "${target_platform}" in
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
++ export jobs_location=jobs
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ awk -v divisor=--MTc0OTAzMjEyOTIxNTMyODAwMAo-- '
+ [[ logger == \v\e\r\b\o\s\e ]]
                  BEGIN {
                    in_json_header = 0;
+ for xitem in "${@}"
                    blk = "";
+ (( i = 0 ))
++ jobs_location=jobs
                  }
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ echo
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ (( i++ ))
                      next;
+ (( i < count ))
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ return 0
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ case "${target_platform}" in
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ true == true ]]
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console ]]
+ awk -v divisor=--MTc0OTAzMjEyOTIzNDUzNTAwMAo-- '
+ local 'extracted_configuration={
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
  "vendor": "fortinet",
  "model": "FortiGate-60F",
                    BEGIN {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console ]]
                      blk = "";
  "version": "v7.2.5.F",
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ case "${target_file}" in
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
                    # Add edit line to current block
                    /^ edit / {
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
                      blk = blk divisor " " $0;
                      next;
+ case "${target_file}" in
                    }
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
                      blk = "";
                      next;
                    }

  "domain": "",
  "hostname": "fg-branch-vpn-01"
                    # Accumulate middle lines
}
                    {

+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
#hostname="fg-branch-vpn-01"
                      blk = blk divisor " " $0;
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
                    }
#model="FortiGate-60F"
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]

#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ case "${target_file}" in
                    END {
+ grep -F 192.0.2.50
+ cat reports/10.0.0.1/misc/.objects/switch1.list
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ which awk

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ cat -n
+ grep -F 192.168.100.100
+ cat -n
+ sed '/^[[:space:]]*$/d'
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.1.10/misc
+ [[ true == true ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ local parent_dir=reports/10.10.10.10/cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console ]]
+ print '{
  "vendor": "fortinet",
+ sed '/^[[:space:]]*$/d'
+ case "${target_file}" in
  "model": "FortiGate-60F",
+ [[ true == true ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--branch-isr-02.cfg.console
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline

config firewall address
 edit "Guardians-Relay"
+ local count=1
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
  set subnet 192.168.0.1 255.255.255.255
+ local search_pattern
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
  set comment "Backup uplink for Milano crew"
 next
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console ]]
end'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iPcvt3TkxI/network-extract--fw1.cfg.console
+ echo
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
}

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ return 0
#hostname="fg-branch-vpn-01"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
 edit "Guardians-Relay"
+ newline
+ local count=1
  set subnet 192.168.0.1 255.255.255.255
+ local count=1
  set comment "Backup uplink for Milano crew"
+ (( i = 0 ))
 next
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ ((  count == 0  ))
end ]]
+ case "${target_platform}" in
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console ]]
+ echo -en '{
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
  "vendor": "fortinet",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console ]]
+ awk -v divisor=--MTc0OTAzMjEyOTIwNTgwNDAwMAo-- '
+ result=0
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ case "${target_file}" in
+ [[ 0 -ne 0 ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
                  BEGIN {
  "model": "FortiGate-60F",
                    in_json_header = 0;
+ (( i < count ))
                    blk = "";
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
  "version": "v7.2.5.F",
                  }
  "domain": "",
                  /^[[:space:]]*$/ { next }
  "hostname": "fg-branch-vpn-01"
+ return 0
                  /^{$/ { in_json_header = 1; next }
+ newline
+ case "${target_platform}" in
                  /^}$/ {
++ IFS=,
}
+ local count=1
                    if (in_json_header == 1) {
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
                      in_json_header = 0;
                      next;
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]

#hostname="fg-branch-vpn-01"
                    }
#model="FortiGate-60F"
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ echo 10.10.10.10
                  }
 edit "Guardians-Relay"
                  (in_json_header == 1) { next }
  set subnet 192.168.0.1 255.255.255.255
                  /^[^[:space:]]/ {
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
  set comment "Backup uplink for Milano crew"
                    if (blk != "" && !seen[blk]++) print blk "\n";
 next
+ [[ true == true ]]
+ awk -v divisor=--MTc0OTAzMjEyOTI2MTQ0NjAwMAo-- '
                    blk = $0;
end'
                    next;
                  BEGIN {
                  }
                    in_json_header = 0;
                  {
                    blk = "";
                    blk = blk divisor " " $0;
                  }
                  }
                  /^[[:space:]]*$/ { next }
                  END {
                  /^{$/ { in_json_header = 1; next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^}$/ {
                  }
                    if (in_json_header == 1) {
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ (( i = 0 ))
                  {
+ (( i < count ))
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ declare -a execute__netwowrk_extract
+ local count=1
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ [[ -z fortinet ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ (( i++ ))
+ (( i < count ))
+ newline
++ mkdir -p jobs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ echo
+ grep -F 10.0.2.3
+ (( i++ ))
+ local count=1
+ grep -F 192.168.100.100
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ echo -e --export
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ extract =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ sed '/^[[:space:]]*$/d'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ cat -n
+ newline 2
+ result=0
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zrniiZHft5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zrniiZHft5
+ local search_pattern
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ result=0
+ local SCRIPT_DIR=./scripts
+ local count=2
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ exit 0
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local script_filename=cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7P0DeGqKQA ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7P0DeGqKQA
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ result=0
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ [[ conf == \c\o\n\f ]]
+ [[ 0 -ne 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--branch-isr-02.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ echo
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo
+ (( i++ ))
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ search =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ echo -e --platform=cisco
+ [[ search =~ ^(logger|l)$ ]]
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ which awk
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch1.conf.console
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ result=0
+ case "${target_file}" in
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ 0 -ne 0 ]]
++ printf '%*s' 12 ''
+ [[ export == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ extract_location=reports/10.0.0.1/misc/switch3.conf
++ which awk
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ return 0
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo reports/172.16.0.5/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i < count ))
+ echo
+ local 'indent=            '
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ (( i < count ))
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ cat -n
+ newline
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ cut -d/ -f2
+ return 0
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ cut -d/ -f2
+ cat -n
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ true == true ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
+ exit 0
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AMnGGHyaP4 ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AMnGGHyaP4
+ [[ platform == \d\e\b\u\g ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ exit 0
+ read -r key value
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rsZminnWrn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rsZminnWrn
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ cat -n
+ newline
+ return 0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ search_pattern=10.10.10.10
+ [[ true == true ]]
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ result=0
+ [[ true == true ]]
+ exit 0
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7X3reK1fIW ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console ]]
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console ]]
++ IFS=,
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7X3reK1fIW
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search == \h\e\l\p ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
++ echo 192.168.1.10
+ search_pattern=172.16.0.5
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ [[ search == \d\e\b\u\g ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ serialize_objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
++ dirname reports/10.0.0.1/misc/switch3.conf
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ mkdir -p reports/172.16.0.5/misc/.objects
+ declare -a execute__netwowrk_extract
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ case "${target_file}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
++ echo -e --verbose
+ awk -v divisor=--MTc0OTAzMjEyOTIwODE0ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ output_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console ]]
+ return 0
++ IFS=,
+ case "${target_file}" in
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DUJU3lOCWa/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
++ echo 192.168.1.11
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bYbjpFzKMP/network-extract--dmz-fw2-backup.cfg.console
+ local parent_dir=reports/192.168.0.1/fortinet
++ export console_location=console
+ local 'extracted_configuration={
++ console_location=console
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ local awk_bin=/usr/bin/awk
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
++ command -v -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
  set action accept
  set logtraffic all
 next
end'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ case "${target_platform}" in
}

#hostname="fg-branch-vpn-01"
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
+ awk -v divisor=--MTc0OTAzMjEyOTMwNDYwNzAwMAo-- '
                  BEGIN {
  set srcintf "dmz"
                    in_json_header = 0;
+ local SCRIPT_PATH=./scripts/network-extract.shell
  set dstintf "wan1"
                    blk = "";
  set srcaddr "10.10.10.10"
                  }
  set dstaddr "203.0.113.10"
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
  set action accept
  set logtraffic all
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
 next
end ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ grep -F 203.0.113.25
++ which awk
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ IFS=' 	
+ [[ logger =~ ^(config|c)$ ]]
'
+ grep -F 10.10.10.10
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ printf '%*s' 12 ''
+ [[ -z '' ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'indent=            '
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
+ [[ logger == \h\e\l\p ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
++ dirname -- ./scripts/network-extract.shell
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ [[ logger == \d\e\b\u\g ]]
end'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ sed '/^[[:space:]]*$/d'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ newline
+ echo -en '{
  "vendor": "fortinet",
+ local count=1
  "model": "FortiGate-60F",
+ (( i = 0 ))
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ (( i < count ))
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ true == true ]]
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8c0ecoH303 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8c0ecoH303
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console ]]
+ console_output=false
+ [[ -z true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ result=0
+ exit 0
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lZTAXQ9f4v ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lZTAXQ9f4v
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qzZhhl4q3K/network-extract--fw3.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_terms=()
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0AY34RKj0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0AY34RKj0
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTE2MzY0NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ result=0
                  }
+ local search_pattern
+ exit 0
                ' reports/172.16.0.5/misc/fw3.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlgqxW817W ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qlgqxW817W
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local SCRIPT_DIR=./scripts
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --export
+ result=0
+ [[ 0 -ne 0 ]]
object-group network Fortress-Wireless
+ [[ true == true ]]
 description Secure wireless access layer
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local awk_bin=/usr/bin/awk
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ config =~ ^(config|c)$ ]]
++ export actions_logfile=console/run.console
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ actions_logfile=console/run.console
+ [[ config =~ ^(search|s)$ ]]
++ touch console/run.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ newline 2
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local count=2
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 172.16.0.5
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ result=0
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
++ which awk
+ newline
+ local count=1
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y3bYvRImXl ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y3bYvRImXl
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ cut -d/ -f2
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ print '{
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=1
  "domain": "",
  "hostname": ""
+ (( i = 0 ))
}

+ (( i < count ))
object-group network Fortress-Wireless
 description Secure wireless access layer
+ echo
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ cat -n
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ tr -d '\r'
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
++ grep -v '^\s*$'
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mfy48oIh4w ]]
+ [[ logger =~ ^(console|o)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Mfy48oIh4w
++ grep -v '^#'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'indent=            '
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ result=0
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ newline
  "domain": "",
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ case "${target_platform}" in
+ local search_pattern
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ awk -v divisor=--MTc0OTAzMjEyOTI3MjM0NzAwMAo-- '

+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
                  BEGIN {
config system interface
                    in_json_header = 0;
++ export divisor=--MTc0OTAzMjEyOTgzNDkwMDAwMAo--
 edit "internal"
                    blk = "";
  set ip 192.168.2.12 255.255.255.0
++ divisor=--MTc0OTAzMjEyOTgzNDkwMDAwMAo--
+ result=0
                  }
  set alias "User LAN"
 next
+ [[ 0 -ne 0 ]]
end
+ newline
                  /^[[:space:]]*$/ { next }
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(config|c)$ ]]
                  /^{$/ { in_json_header = 1; next }

++ export targets_location=targets
config firewall address
++ targets_location=targets
                  /^}$/ {
 edit "Branch-Gateway"
+ [[ verbose =~ ^(console|o)$ ]]
  set subnet 192.168.2.12 255.255.255.255
                    if (in_json_header == 1) {
  set comment "Primary LAN gateway"
++ export targets_logfile=.cache/targets.jobs
                      in_json_header = 0;
 next
++ [[ -n '' ]]
  "hostname": ""
+ local count=2
+ [[ true == true ]]
end'
+ local count=1
+ local search_pattern
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
++ targets_logfile=.cache/targets.jobs
}
+ echo
                      next;
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]

+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ [[ -n {
                    }
  "vendor": "fortinet",
  "model": "FortiGate-60F",
                  }
++ readonly __DEVOPS_HELPERS_SOURCED=1
  "version": "v7.2.5.F",
                  (in_json_header == 1) { next }
interface Vlan2
  "domain": "",
+ (( i++ ))
                  /^[^[:space:]]/ {
+ [[ verbose =~ ^(extract|x)$ ]]
 ip address 172.16.1.6 255.255.255.0 ]]
  "hostname": "fg-branch-vpn-01"
}
+ (( i < count ))
+ echo

++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
#hostname="fg-branch-vpn-01"
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
                    blk = $0;
#model="FortiGate-60F"
                    next;
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
                  }

                  {
config system interface
                    blk = blk divisor " " $0;
 edit "internal"
                  }
  set ip 192.168.2.12 255.255.255.0
                  END {
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
  set alias "User LAN"
++ [[ 5 -lt 4 ]]
                  }
 next
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 next
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
end ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ verbose == \d\e\b\u\g ]]
+ echo -en '{
+ case "${target_file}" in
  "vendor": "fortinet",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "hostname": "fg-branch-vpn-01"
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
}
++ alias parse-listings--helper=parse_listings__helper

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
  set comment "Primary LAN gateway"
 next
end'
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ local verbose=true
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local count=1
+ IFS=' 	
+ grep -F 203.0.113.25
+ (( i = 0 ))
'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ [[ extract =~ ^(config|c)$ ]]
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -z true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ export console_output=false
+ [[ extract =~ ^(export|r)$ ]]
+ console_output=false
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ search_terms=()
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
++ alias network-extract--helper=network_extract__helper
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=203.0.113.25
+ [[ extract =~ ^(platform|p)$ ]]
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract == \h\e\l\p ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ declare -a search_terms
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ] ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+++ date +%s%N
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ alias serialize-object=serialize_objects
  "version": "",
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
  "domain": "",
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
  "hostname": ""
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
++ cut -d/ -f2
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ newline 2
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ cat -n
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
++ cut -d/ -f2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ output_dir=reports/198.51.100.75/fortinet
+ newline
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ local count=1
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ echo
+++ tr -dc a-zA-Z0-9
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ newline 2
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
  "hostname": "fg-campus-core"
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
}
+ local count=2

+ [[ -z fortinet ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ true == true ]]

+ search_pattern=192.168.0.100
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ echo
+ [[ 0 -ne 0 ]]
config system interface
 edit "core"
+ (( i++ ))
+ [[ true == true ]]
  set ip 10.10.10.10 255.255.255.0
+ (( i < count ))
+ newline
+ newline
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ local count=1
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i++ ))
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
  set alias "Campus Core Transit"
+ echo
 next
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ return 0
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
end
+ echo
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'

+ (( i++ ))
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
end'
+ search_pattern=192.168.2.12
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ result=0
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ newline
config system interface
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
 edit "core"
+ (( i++ ))
  set ip 10.10.10.10 255.255.255.0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
  set alias "Campus Core Transit"
 next
end

++ export divisor=--MTc0OTAzMjEyOTk3MDc4ODAwMAo--
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
config firewall address
++ divisor=--MTc0OTAzMjEyOTk3MDc4ODAwMAo--
+ source ./scripts/devops-helpers.shell
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
++ IFS=,
  set comment "Wireless AP Gateway"
+ [[ export =~ ^(config|c)$ ]]
++ echo 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
++ echo -e --verbose
++ alias parse-listings--helper=parse_listings__helper
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ declare -a execute__netwowrk_extract
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ cat -n
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
++ grep -v '^#'
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ newline 2
end'
+ alias serialize-object=serialize_objects
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ cat -n
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ local 'extracted_configuration={
end'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ newline

config firewall address
 edit "Cap-HQ"
+ local count=1
  set subnet 192.168.1.11 255.255.255.255
+ (( i = 0 ))
  set comment "Captain America’s secure endpoint"
+ (( i < count ))
+ echo
+ local count=2
+ alias parse-cisco=main
+ script_filename=network-extract.shell
+ (( i = 0 ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline
 next
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
end'
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ (( i < count ))
+ echo
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ network_extract__console=console/network-extract.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ touch console/network-extract.console
+ local script_filename=fortinet-configs.awk
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local target_platform=cisco
+ newline
+ [[ -n {
  "vendor": "fortinet",
+ return 0
  "model": "FortiGate-200F",
  "version": "",
+ local count=1
  "domain": "",
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  "hostname": "fg-campus-core"
}
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))

+ [[ true == true ]]
#hostname="fg-campus-core"
+ echo
#model="FortiGate-200F"
+ [[ verbose == \h\e\l\p ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console

+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
config firewall address
+ [[ platform == \d\e\b\u\g ]]
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ false == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ dry_run=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z true ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console ]]
+ export console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
  set comment "Captain America’s secure endpoint"
+ [[ -z true ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console ]]
+ newline
+ case "${target_file}" in
+ [[ -z '' ]]
+ for xitem in "${@}"
+ serialize_objects
+ script_helper=false
+ IFS==
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--dmz-fw2-backup.cfg.console
+ read -r key value
+ newline
 next
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ [[ false == true ]]
+ local count=1
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ case "${target_platform}" in
+ echo
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ local count=1
+ local first_search_entry=10.10.10.10
end ]]
+ search_terms=()
+ newline
+ declare -a search_terms
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]]
+ local count=1
+ (( i++ ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list != *,* ]]
+ awk -v divisor=--MTc0OTAzMjEyOTI5NDU4NTAwMAo-- '
+ serialize_objects
+ mapfile -t search_terms
                  BEGIN {
+ local last_search_entry=10.10.10.10
                    in_json_header = 0;
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
                  {
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
                    blk = blk divisor " " $0;
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ cat -n reports/172.16.1.6/misc/switch3.conf
                  }
+ (( i < count ))
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
                  }
+ newline
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ] ]]
+ return 0
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ (( i++ ))
+ case "${target_platform}" in
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-configs--ips.list ]'
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ return 0
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ ((  count == 0  ))
+ awk -v divisor=--MTc0OTAzMjEyOTI4NzczMTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ true == true ]]
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console ]]
                    blk = $0;
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
                    next;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console ]]
+ echo
                  }
                  END {
+ (( i++ ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ false == true ]]
+ grep -F 192.168.0.100
+ [[ true == true ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ grep -F 192.168.2.12
++ dirname reports/192.168.1.10/misc/fw1.cfg
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
++ tr -d '\r'
+ serialize_objects
+ newline
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^\s*$'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bwwus3uyc1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract.shell
+ newline 2
+ script_filename=network-extract
+ local 'prompt_message=Enter configuration file to be parsed: '
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console --export --verbose
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ oIFS=' 	
++ grep -v '^#'
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZZFvXE8SW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZZFvXE8SW
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console ]]
+ local parent_dir=reports/192.168.1.10/misc
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--dmz-fw2-backup.cfg.console
+ sed '/^[[:space:]]*$/d'
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ output_dir=reports/203.0.113.25/fortinet
+ local count=1
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ result=0
+ (( i < count ))
+ [[ true == true ]]
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ serialize_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
++ IFS=,
+ echo
++ echo 198.51.100.75
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ (( i++ ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local first_search_entry=192.168.1.10
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ basename reports/192.168.1.10/misc/fw1
+ [[ true == true ]]
+ local last_search_entry=192.168.1.10
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ] ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ ((  count == 0  ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ declare -a execute__netwowrk_extract
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ case "${target_file}" in
+ [[ -z cisco ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAeB4B1JuJ/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ dirname reports/172.16.1.6/misc/switch3.conf
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ [[ true == true ]]
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ exit 0
+ echo
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1fh8Xe7WS3 ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1fh8Xe7WS3
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
++ echo -e --export
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
++ which awk
+ [[ 7 -eq 0 ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bwwus3uyc1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console --export --verbose
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
+ local search_pattern
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console ]]
+ local search_pattern
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
+ echo
'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local parent_dir=reports/172.16.1.6/misc
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ read -r key value
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ echo reports/192.168.1.10/misc/fw1.cfg
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ basename reports/172.16.1.6/misc/switch3
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ local search_pattern
++ cut -d/ -f2
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ cut -d/ -f2
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ exit 0
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZaBTQtuQW ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hZaBTQtuQW
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ cat -n
+ [[ true == true ]]
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
++ printf '%*s' 12 ''
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
+ local 'indent=            '
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "cisco",
++ which awk
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ IFS=,
++ echo 192.168.2.12
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.1.10/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ result=0
+ exit 0
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6QCrst0HwU ]]
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local search_pattern
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6QCrst0HwU
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ search_pattern=192.168.1.10
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ echo -e --verbose
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

+ local count=1
object-group network Spider-Net
+ (( i = 0 ))
 description Web access switches
+ (( i < count ))
 network-object host 10.0.0.1
++ cut -d/ -f2
+ echo
 network-object 192.168.12.0 255.255.255.0'
+ local parent_dir=reports/10.10.10.10/fortinet
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ mkdir -p reports/192.168.1.10/misc/.objects
+ search_pattern=192.168.0.1
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ result=0
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))
  "model": "",
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ output_dir=reports/10.10.10.10/misc
+ [[ -n {
+ [[ export =~ ^(export|r)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ ! -d reports/10.10.10.10/misc ]]
  "vendor": "cisco",
+ local export_objects=true
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
  "model": "",
+ [[ false == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ search =~ ^(console|o)$ ]]
+ [[ true == true ]]
  "version": "",
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "domain": "",
+ [[ search =~ ^(logger|l)$ ]]
  "hostname": ""
+ [[ export =~ ^(search|s)$ ]]
}

+ local count=1
interface Vlan1
+ [[ search =~ ^(platform|p)$ ]]
 ip address 10.0.0.1 255.255.255.0
+ (( i = 0 ))

object-group network Spider-Net
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ declare -a execute__netwowrk_extract
 description Web access switches
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ export == \d\e\b\u\g ]]
  "version": "",
+ newline
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
 network-object host 10.0.0.1
  "domain": "",
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "hostname": ""
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=192.168.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ (( i < count ))
+ newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
}
+ echo
+ serialize_objects
+ [[ search == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ (( i < count ))
+ return 0
+ echo
+ for xitem in "${@}"
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ IFS==
+ read -r key value
+ local count=1

+ local count=1
++ command -v -- ./scripts/network-extract.shell
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ which awk
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ output_dir=reports/192.168.1.10/misc
interface Vlan1
++ echo reports/172.16.1.6/misc/switch3.conf
 ip address 10.0.0.1 255.255.255.0
+ [[ ! -d reports/192.168.1.10/misc ]]

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ search_pattern=192.168.2.12
++ IFS=,
++ echo 203.0.113.25
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
+ declare -a execute__netwowrk_extract
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qjDAdX1mBj/network-extract--campus-sw-access01.cfg.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ debug=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ dry_run=false
+ [[ config == \d\e\b\u\g ]]
+ [[ -z true ]]
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ local search_pattern
+ export console_output=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ console_output=false
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ -z true ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]]
+ local parent_dir=reports/192.168.1.11/fortinet
++ which awk
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_platform}" in
+ case "${target_platform}" in
++ dirname -- ./scripts/network-extract.shell
+ awk -v divisor=--MTc0OTAzMjEyOTMxNTE0NDAwMAo-- '
+ awk -v divisor=--MTc0OTAzMjEyOTQ2NzYwNzAwMAo-- '
                  BEGIN {
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                    in_json_header = 0;
                    blk = "";
                  }
                  }
                  /^[[:space:]]*$/ { next }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  /^}$/ {
+ [[ true == true ]]
                    if (in_json_header == 1) {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                      in_json_header = 0;
                      next;
                    }
                    }
                  }
                  }
                  (in_json_header == 1) { next }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    blk = $0;
                    next;
                    next;
                  }
                  }
                  {
                  {
                    blk = blk divisor " " $0;
                    blk = blk divisor " " $0;
                  }
                  }
                  END {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ search_pattern=172.16.1.6
++ echo -e --verbose
++ basename reports/192.168.1.11/fortinet/fg-campus-core
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ mkdir -p reports/172.16.1.6/misc/.objects
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ local script_filename=cisco-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--branch-isr-02.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ local 'extracted_configuration={
++ cut -d/ -f2
+ grep -F 192.168.1.10
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ tr -d '\r'
#hostname="fg-branch-vpn-01"
+ grep -F 192.168.0.1
#model="FortiGate-60F"
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ local count=2
+ [[ config =~ ^(console|o)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ [[ config =~ ^(export|r)$ ]]
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ (( i = 0 ))
  set alias "Branch ISP"
+ [[ config =~ ^(extract|x)$ ]]
 next
end
+ (( i < count ))

+ [[ config =~ ^(logger|l)$ ]]
+ echo
config firewall address
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
 edit "Branch-Public"
+ result=0
+ [[ config == \d\e\b\u\g ]]
  set subnet 198.51.100.75 255.255.255.255
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ exit 0
+ local awk_bin=/usr/bin/awk
  set comment "Branch NAT"
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
 next
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DXl8IgxsK ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
object-group network Wakanda-Core
+ IFS==
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DXl8IgxsK
+ local script_filename=cisco-configs.awk
+ echo
+ read -r key value
end'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ true == true ]]
++ which awk
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTM2NzEwNjAwMAo-- '
+ sed '/^[[:space:]]*$/d'
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
++ grep -v '^#'

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

++ printf '%*s' 12 ''
                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

++ which awk
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local 'indent=            '
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
+ search_pattern=10.10.10.10
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ true == true ]]
 next
end
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline

config firewall address
 edit "Branch-Public"
+ local count=1
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ (( i = 0 ))
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract =~ ^(export|r)$ ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ grep -F 192.168.2.12
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ read -r key value
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_platform}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
+ awk -v divisor=--MTc0OTAzMjEyOTQwODA5NDAwMAo-- '
                  BEGIN {
+ [[ 0 -ne 0 ]]
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ result=0
+ local first_search_entry=192.168.2.12
+ exit 0
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWfK23vjcM ]]
                  {
                    blk = blk divisor " " $0;
                  }
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWfK23vjcM
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ true == true ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
#hostname="fg-branch-vpn-01"
+ local last_search_entry=192.168.2.12
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
+ [[ true == true ]]
end'
+ sed '/^[[:space:]]*$/d'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ grep -F 172.16.1.6
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'

#hostname="fg-branch-vpn-01"
++ IFS=,
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ] ]]
  set alias "Branch ISP"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
++ echo 10.10.10.10
 next
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-configs--ips.list ]'
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ newline
++ cut -d/ -f2
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ local count=1
+ result=0
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i < count ))
++ IFS=,
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ 0 -ne 0 ]]
++ echo 192.168.1.10
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ declare -a execute__netwowrk_extract
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
++ which awk
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
++ echo -e --platform=cisco
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ [[ verbose =~ ^(config|c)$ ]]
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'indent=            '
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTQ0MTgxNDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

++ sed -e '1s|^\(-\)\{1,\}||'
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ search_pattern=192.168.1.11
+ result=0
                    }

+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
                    END {
+ cat -n
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ [[ true == true ]]
+ newline
 description National Core Routing Zone
                      # No need for final print — all blocks end with end
+ local verbose=true
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
                    }
+ (( i < count ))
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ echo
+ local count=1
+ IFS=' 	
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ extract =~ ^(extract|x)$ ]]
'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -z '' ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ debug=false
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -z '' ]]
+ (( i++ ))
+ [[ false == true ]]
+ newline
+ dry_run=false
+ [[ true == true ]]
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
 network-object host 192.168.1.10
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ export console_output=false
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ grep -F 10.10.10.10
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ serialize_objects
+ case "${target_platform}" in
+ cat -n
+ awk -v divisor=--MTc0OTAzMjEyOTM3NTA2MTAwMAo-- '
                    BEGIN {
                      blk = "";
+ [[ extract =~ ^(search|s)$ ]]
                      in_json_header = 0;
                    }

+ [[ extract == \h\e\l\p ]]
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ [[ extract == \d\e\b\u\g ]]
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ sed '/^[[:space:]]*$/d'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ IFS==
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ read -r key value
+ newline 2
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local count=2
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ (( i < count ))
+ newline
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ echo
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ dirname reports/10.0.0.1/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ true == true ]]
  "version": "v7.2.5.F",
  "domain": "",
+ [[ platform =~ ^(export|r)$ ]]
+ console_output=false
  "hostname": "fg-branch-vpn-01"
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(platform|p)$ ]]

config firewall address
+ newline
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
 edit "Public-Test"
+ local target_platform=cisco
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local count=1
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ (( i = 0 ))
 next
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
end'
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ result=0
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n {
+ [[ platform == \v\e\r\b\o\s\e ]]
  "vendor": "fortinet",
+ echo
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
  "model": "FortiGate-60F",
+ read -r key value
+ newline
++ printf '%*s' 12 ''
+ (( i++ ))
+ cat -n
+ (( i < count ))
+ local count=1
  "version": "v7.2.5.F",
+ return 0
+ (( i = 0 ))
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
+ echo
+ [[ true == true ]]
+ [[ -z true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i++ ))
config firewall address
+ (( i < count ))
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ local 'indent=            '
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
  set comment "Public NAT exposure for Red Skull trap"
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console ]]
+ newline
+ [[ -z '' ]]
 next
+ script_helper=false
+ [[ true == true ]]
end ]]
+ [[ false == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ search_terms=()
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ local count=1
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ (( i < count ))
 network-object host 10.0.2.3
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ return 0
 network-object 10.0.0.0 255.255.255.0'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ return 0
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ echo
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ case "${target_file}" in
+ mapfile -t search_terms
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ result=0
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ 0 -ne 0 ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --platform=cisco
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ message '                .cache/resources/misc/switch1.conf'
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ serialize_objects
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ -n {
+ echo
  "vendor": "cisco",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
  "model": "",
+ (( i++ ))
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ (( i < count ))
+ (( i < count ))
  "version": "",
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ print '{
+ (( i++ ))
+ cat -n
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ grep -F 192.168.0.1
  "version": "v7.2.5.F",
+ newline
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "fg-branch-vpn-01"
+ message '                .cache/resources/misc/fw3.cfg'
+ local count=1
}

+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
+ local parent_dir=reports/10.0.0.1/misc
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))
  "domain": "",
+ echo
+ local 'message=                .cache/resources/misc/fw3.cfg'

+ (( i++ ))
config firewall address
  "hostname": ""
}
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
 edit "Public-Test"

  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
object-group network Wakanda-Core
 next
end ]]
+ echo -en '{
++ dirname reports/192.168.2.12/misc/fw1.cfg
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ newline
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ awk -v divisor=--MTc0OTAzMjEyOTQwMDgxMjAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
 description National Core Routing Zone
 network-object host 192.168.1.10
                    }

                    # Add next to block
                    /^ next$/ {
 network-object host 10.0.2.3
                      blk = blk divisor " " $0;
                      next;
                    }
+ newline

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local count=1
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
++ basename reports/10.0.0.1/misc/switch3
+ grep -F 192.168.1.11
++ tr -d '\r'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ grep -v '^\s*$'
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ output_dir=reports/192.168.2.12/misc
+ [[ ! -d reports/192.168.2.12/misc ]]
+ [[ true == true ]]
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ local target_platform=cisco
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ for xitem in "${@}"
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ case "${target_file}" in
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw1.cfg.console
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ local count=2
+ local search_pattern
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--campus-sw-access01.cfg.console
+ serialize_objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ logger =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ result=0
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
 network-object 10.0.0.0 255.255.255.0 ]]
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ return 0
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
+ [[ true == true ]]
 ip address 192.168.1.10 255.255.255.0 ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--dmz-fw2-backup.cfg.console
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
+ result=0
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
++ echo reports/10.0.0.1/misc/switch3.conf
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ [[ 0 -ne 0 ]]
object-group network Shield-WiFi
+ [[ true == true ]]
 description Shield-controlled wireless network
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ] ]]
 network-object host 10.10.10.10
+ print '{
  "vendor": "cisco",
 network-object 192.168.100.0 255.255.255.0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
  "model": "",
  "version": "",

object network Shield-WiFi-Alias
+ local 'extracted_configuration={
  "vendor": "fortinet",
 host 10.10.10.10
  "domain": "",
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
  "hostname": ""
  "model": "FortiGate-200F",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-configs--ips.list ]'
 description Guest NAT'
}
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
++ echo -e --export
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ result=0
+ newline
+ [[ -n {
  "vendor": "cisco",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "model": "",
  "version": "",
  "version": "",
  "domain": "",
  "domain": "",
  "hostname": ""
  "hostname": ""
}
}


interface Vlan20
object-group network Shield-WiFi
 ip address 192.168.1.10 255.255.255.0 ]]
 description Shield-controlled wireless network
+ echo -en '{
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "",
  "domain": "",
  "hostname": ""
}

+ (( i < count ))
interface Vlan20
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
 ip address 192.168.1.10 255.255.255.0'
  "version": "",
  "domain": "",
+ print '{
 network-object host 10.10.10.10
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
  "hostname": "fg-campus-core"
  "version": "",
  "domain": "",
  "hostname": ""
}
 network-object 192.168.100.0 255.255.255.0


object-group network Shield-WiFi
object-group network Wakanda-Core
 description Shield-controlled wireless network
 description National Core Routing Zone
 network-object host 10.10.10.10
 network-object host 192.168.1.10
 network-object 192.168.100.0 255.255.255.0
++ cut -d/ -f2
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ (( i < count ))
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": "",
  "hostname": ""
+ [[ true == true ]]
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ local count=1
 network-object 10.0.0.0 255.255.255.0'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ ((  count == 0  ))
}

+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console ]]

+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ newline
end'
+ local count=1
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qZdImAyNbm/network-extract--switch3.conf.console
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ true == true ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console ]]
  "domain": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
  "hostname": "fg-campus-core"
}
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ result=0

+ result=0
+ local parent_dir=reports/198.51.100.75/fortinet
+ exit 0
+ exit 0
+ case "${target_file}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FcnkMEGyzT ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iJkokQgG2G ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FcnkMEGyzT
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iJkokQgG2G
#hostname="fg-campus-core"
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
#model="FortiGate-200F"
+ [[ true == true ]]

config firewall address
 edit "Vision-Link"
+ newline
  set subnet 192.168.2.12 255.255.255.255
+ newline
  set comment "Vision’s quantum channel"
 next
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
end ]]
+ print '{
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local count=1
  "model": "",
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
  "version": "",
  "domain": "",
+ (( i < count ))
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
  "hostname": ""
}
+ case "${target_file}" in

object-group network Shield-WiFi
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
 description Shield-controlled wireless network
+ local script_filename=cisco-configs.awk
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ echo

object-group network Shield-WiFi
+ (( i++ ))
 description Shield-controlled wireless network
+ (( i < count ))
 network-object host 10.10.10.10
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
 network-object 192.168.100.0 255.255.255.0

+ [[ true == true ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
object-group network Shield-WiFi
+ [[ false == true ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ case "${target_file}" in
 host 10.10.10.10
 description Guest NAT'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-campus-core.cfg.console
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
 host 10.10.10.10
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
 description Guest NAT ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ print '{
+ search_pattern=10.0.0.1
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ logger =~ ^(logger|l)$ ]]
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ mkdir -p reports/10.0.0.1/misc/.objects
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
#model="FortiGate-200F"

config firewall address
+ [[ logger =~ ^(platform|p)$ ]]
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ [[ logger =~ ^(search|s)$ ]]
end'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline 2
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
+ local count=2
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ (( i = 0 ))
 next
end ]]
+ (( i < count ))
+ echo -en '{
  "vendor": "fortinet",
++ which awk
+ echo
  "model": "FortiGate-200F",
+ [[ export =~ ^(config|c)$ ]]
  "version": "",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": "fg-campus-core"
+ echo
}

#hostname="fg-campus-core"
+ (( i++ ))
#model="FortiGate-200F"
+ (( i < count ))

config firewall address
+ [[ export =~ ^(console|o)$ ]]
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ [[ true == true ]]
  set comment "Vision’s quantum channel"
 next
+ [[ export =~ ^(export|r)$ ]]
end'
+ local export_objects=true
+ local search_pattern
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ export =~ ^(platform|p)$ ]]
+ result=0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qF2ecNI8ai ]]
+ result=0
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qF2ecNI8ai
+ exit 0
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.91PbLixbFq ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.91PbLixbFq
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rQEUgK5ngK ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rQEUgK5ngK
+ newline 2
+ newline
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ return 0
+ [[ true == true ]]
+ cat -n
+ local count=2
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ echo
++ echo -e --export
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/203.0.113.25/fortinet
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2vxqmIuE3y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2vxqmIuE3y
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
++ echo -e --verbose
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ local count=2
++ IFS=,
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ cut -d/ -f2
++ echo 192.168.2.12
+ case "${target_platform}" in
+ (( i = 0 ))
+ awk -v divisor=--MTc0OTAzMjEyOTQ2MDczMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ (( i < count ))
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ echo
                    blk = blk divisor " " $0;
+ newline
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ (( i++ ))
+ local count=1
                ' reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ echo
+ echo
++ cut -d/ -f2
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ (( i < count ))
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ (( i++ ))
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ (( i < count ))
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ return 0
+ declare -a execute__netwowrk_extract
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ grep -F 10.0.0.1
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console ]]
+ [[ export == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KMyLa3HhEB/network-extract--fg-campus-core.cfg.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ serialize_objects
++ which awk
+ sed '/^[[:space:]]*$/d'
+ newline
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=198.51.100.75
+ [[ false == true ]]
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ search_pattern=10.10.10.10
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ serialize_objects
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local verbose=true
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ dirname reports/192.168.1.10/misc/switch1.conf
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -z '' ]]
+ dry_run=false
+ serialize_objects
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ output_dir=reports/198.51.100.75/misc
+ [[ ! -d reports/198.51.100.75/misc ]]
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EccJXLKejP/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
++ cut -d/ -f2
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t09SyFTZwr ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t09SyFTZwr
+ local parent_dir=reports/192.168.1.10/misc
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ (( i < count ))
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ grep -v '^\s*$'
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local parent_dir=reports/10.10.10.10/misc
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.168.1.10/misc/switch1
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local parent_dir=reports/192.168.1.10/misc
+ case "${target_platform}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0OTAzMjEyOTU0NDAxNTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

++ dirname -- ./scripts/network-extract.shell
                    # Add next to block
++ grep -v '^#'
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ case "${target_platform}" in
                    /^end$/ {
+ [[ verbose =~ ^(config|c)$ ]]
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ [[ verbose =~ ^(console|o)$ ]]
+ cat -n
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
+ [[ verbose =~ ^(export|r)$ ]]
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ awk -v divisor=--MTc0OTAzMjEyOTYxNDQ0NzAwMAo-- '
+ [[ verbose =~ ^(extract|x)$ ]]
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ [[ verbose =~ ^(logger|l)$ ]]
                    }

+ [[ verbose =~ ^(platform|p)$ ]]
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ [[ verbose =~ ^(search|s)$ ]]
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ [[ verbose == \h\e\l\p ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ [[ verbose == \d\e\b\u\g ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ search_pattern=203.0.113.25
+ [[ verbose == \d\r\y\-\r\u\n ]]
                      if (blk != "") print blk;
+ [[ verbose == \v\e\r\b\o\s\e ]]
                      blk = $0;
+ local verbose=true
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
+ IFS=' 	
                      blk = blk divisor " " $0;
'
                      next;
                    }
+ [[ -z '' ]]

+ debug=false
                    # Add next to block
                    /^ next$/ {
+ [[ -z '' ]]
                      blk = blk divisor " " $0;
+ dry_run=false
                      next;
+ mkdir -p reports/203.0.113.25/fortinet/.objects
                    }

+ [[ -z true ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ grep -F 198.51.100.75
+ grep -F 10.10.10.10
++ basename reports/10.10.10.10/misc/fw3
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ -z '' ]]
++ basename reports/192.168.1.10/misc/fw3
+ local parent_dir=reports/192.168.2.12/fortinet
+ sed '/^[[:space:]]*$/d'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ntWOAIhuQC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ntWOAIhuQC
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console ]]
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ local search_pattern
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local first_search_entry=203.0.113.25
+ local count=1
+ local last_search_entry=203.0.113.25
+ (( i = 0 ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ (( i++ ))
+ local search_pattern
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ] ]]
+ return 0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ local search_pattern
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console ]]
+ local count=1
+ case "${target_file}" in
+ ((  count == 0  ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ tr -d '\r'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
++ echo reports/192.168.1.10/misc/switch1.conf
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ case "${target_platform}" in
  "hostname": ""
}

object-group network Metropolis-Internal
+ awk -v divisor=--MTc0OTAzMjEyOTYzNjE3OTAwMAo-- '
++ grep -v '^\s*$'
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
 network-object 192.168.2.0 255.255.255.0
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
 network-object host 192.168.2.12'

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
++ echo reports/10.10.10.10/misc/fw3.cfg
+ result=0

++ cut -d/ -f2
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ [[ -n {
  "vendor": "cisco",
  "model": "",
                      next;
  "version": "",
                    }

                    # Accumulate middle lines
  "domain": "",
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ echo reports/192.168.1.10/misc/fw3.cfg
  "hostname": ""
++ grep -v '^#'
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ grep -F 203.0.113.25
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ result=0
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ [[ 0 -ne 0 ]]
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ cat -n
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console ]]
 network-object 192.168.2.0 255.255.255.0
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
 network-object host 192.168.2.12'
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
++ cut -d/ -f2
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
++ IFS=,
++ echo 198.51.100.75
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ag2uOp57ma/network-extract--switch3.conf.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ search_pattern=10.10.10.10
+ [[ true == true ]]
+ mkdir -p reports/10.10.10.10/misc/.objects
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-configs--ips.list ]'
+ search_pattern=192.168.1.10
+ local count=1
+ ((  count == 0  ))
+ mkdir -p reports/192.168.1.10/misc/.objects
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ cat -n
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local count=1
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ cfg == \c\f\g ]]
+ echo
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline 2
+ newline
+ local count=1
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
+ (( i++ ))
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ return 0
+ echo
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ result=0
+ (( i++ ))
+ (( i < count ))
+ exit 0
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ygUgR0WhWm ]]
+ local awk_bin=/usr/bin/awk
+ case "${target_file}" in
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ygUgR0WhWm
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ cat -n
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTYzNzY0MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ output_dir=reports/203.0.113.25/misc
+ case "${target_platform}" in
+ [[ ! -d reports/203.0.113.25/misc ]]
+ case "${target_platform}" in
+ newline
+ awk -v divisor=--MTc0OTAzMjEyOTUzMzk3NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ local count=1
                    blk = "";
+ awk -v divisor=--MTc0OTAzMjEyOTcyNjQ1NTAwMAo-- '
+ grep -F 192.168.1.10
+ [[ true == true ]]
                  }
                  BEGIN {
+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }
                    in_json_header = 0;
                  /^{$/ { in_json_header = 1; next }
                    blk = "";
                  /^}$/ {
                  }
                    if (in_json_header == 1) {
                  /^[[:space:]]*$/ { next }
                      in_json_header = 0;
+ (( i < count ))
                      next;
                  /^{$/ { in_json_header = 1; next }
                    }
+ echo
                  }
                  /^}$/ {
                  (in_json_header == 1) { next }
+ (( i++ ))
                    if (in_json_header == 1) {
+ (( i < count ))
                      in_json_header = 0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
                      next;
                    }
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  }
                  /^[^[:space:]]/ {
                  (in_json_header == 1) { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^[^[:space:]]/ {
                    blk = $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console ]]
                    next;
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                    blk = $0;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
                  }
                    next;
                  {
                  }
                  {
                    blk = blk divisor " " $0;
                    blk = blk divisor " " $0;
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  }
                  }
                  END {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console ]]
                ' reports/10.10.10.10/misc/fw3.cfg
                  }
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                ' reports/192.168.1.10/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fg-testing-config.cfg.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.1.10
++ command -v -- ./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTU0NzI3MzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ newline
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
                    /^config / {
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ grep -F 10.10.10.10
+ local count=1
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
                    }

                    # Add edit line to current block
                    /^ edit / {
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
                      blk = blk divisor " " $0;
                      next;
+ [[ cfg == \c\f\g ]]
                    }
+ final_output=reports/203.0.113.25/misc/fw1.cfg

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
                    # Add next to block
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ (( i = 0 ))
+ newline
                    /^ next$/ {
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                      blk = blk divisor " " $0;
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
                      next;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ message '                .cache/resources/misc/fw1.cfg'
                    }
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo
+ (( i = 0 ))

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ return 0
+ (( i < count ))
+ grep -F 192.168.2.12
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ serialize_objects
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ result=0
+ exit 0
+ [[ 0 -ne 0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q2otX9uwVP ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q2otX9uwVP
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ result=0
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ local SCRIPT_DIR=./scripts
+ output_dir=reports/203.0.113.25/misc
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local script_filename=cisco-configs.awk
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ result=0
+ cat -n
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fg-branch-vpn-01.cfg.console
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.10amCvc4jq ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.10amCvc4jq
+ local parent_dir=reports/192.168.2.12/misc
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ cat -n
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ case "${target_file}" in
  "model": "",
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ dirname -- ./scripts/network-extract.shell
+ cat -n
+ newline
++ basename reports/192.168.2.12/misc/fw1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ newline
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "",
  "domain": "",
  "hostname": ""
+ (( i = 0 ))
}
+ (( i < count ))

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ echo
 network-object host 203.0.113.25

+ (( i++ ))
object network External-Failover
+ (( i < count ))
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ return 0
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
 network-object host 203.0.113.25

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console ]]
object network External-Failover
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
++ echo 203.0.113.25
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ return 0
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console ]]
+ return 0
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mVDSOfTt6y ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mVDSOfTt6y
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--switch1.conf.console
++ echo reports/192.168.2.12/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
++ cut -d/ -f2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BVE7Ope5Rf/network-extract--fw3.cfg.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
+ [[ true == true ]]
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ exit 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vc9a0iScIk ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Vc9a0iScIk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IwQCb54CGa/network-extract--fw3.cfg.console
++ IFS=,
++ echo 203.0.113.25
++ printf '%*s' 12 ''
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ search_pattern=192.168.2.12
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ mkdir -p reports/192.168.2.12/misc/.objects
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ivMSX89s3u ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ivMSX89s3u
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ exit 0
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Rfi7JfYXaI ]]
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Rfi7JfYXaI
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ serialize_objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oG6RJCsIa1 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oG6RJCsIa1
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAzMjEyOTY4NTY5MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
++ printf '%*s' 12 ''
+ local 'indent=            '
+ local 'extracted_configuration={
+ grep -F 192.168.2.12
  "vendor": "cisco",
+ sed '/^[[:space:]]*$/d'
+ local parent_dir=reports/198.51.100.75/misc
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ true == true ]]
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ newline
+ result=0
+ [[ -n {
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
  "version": "",
+ (( i < count ))
  "domain": "",
  "hostname": ""
+ echo
}

object-group network Panther-Edge
+ (( i++ ))
 description Internet-facing proxy systems
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/198.51.100.75/misc/fw1
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ result=0
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ 0 -ne 0 ]]
+ local search_pattern
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ echo reports/198.51.100.75/misc/fw1.cfg

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
 network-object host 198.51.100.75
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
 network-object host 203.0.113.25

+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
object network Krypton-Gateway
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ newline
+ local count=1
++ cut -d/ -f2
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
+ cat -n reports/203.0.113.25/misc/fw3.cfg
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ cat -n
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ sed '1{/^[[:space:]]*$/d;}'
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/misc/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ case "${target_platform}" in
+ grep -F 198.51.100.75
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ awk -v divisor=--MTc0OTAzMjEyOTg0Njk3ODAwMAo-- '
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
                  BEGIN {
                    in_json_header = 0;
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
                    blk = "";
                  }
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ true == true ]]
                    if (in_json_header == 1) {
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ serialize_objects
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ newline 2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console ]]
+ local parent_dir=reports/203.0.113.25/misc
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eN7bZRPkDJ/network-extract--fw1.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/203.0.113.25/misc/fw3
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ cat -n
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ serialize_objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Kh3JFLKbq ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Kh3JFLKbq
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ echo reports/203.0.113.25/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ local parent_dir=reports/203.0.113.25/misc
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
++ cut -d/ -f2
++ basename reports/203.0.113.25/misc/fw1
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pRgRVFdXna/network-extract--fw1.cfg.console
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw1.cfg
++ cut -d/ -f2
+ result=0
+ exit 0
+ case "${target_platform}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EqH9BMAAXX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EqH9BMAAXX
+ awk -v divisor=--MTc0OTAzMjEyOTgzNDkwMDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ case "${target_platform}" in
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ awk -v divisor=--MTc0OTAzMjEyOTk3MDc4ODAwMAo-- '
                  BEGIN {
+ cat reports/203.0.113.25/misc/.objects/fw3.list
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ cat -n
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d7Enz0X6iW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d7Enz0X6iW
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Bwwus3UyC1/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WrSDnu6oKK ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WrSDnu6oKK
