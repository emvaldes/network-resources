+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5x6vcPXlq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5x6vcPXlq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2UKESFMNof
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2UKESFMNof
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpIkW3sWWB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpIkW3sWWB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+++ echo -n devops-resources.shell
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
+ script_filename=network-extract.shell
++ mkdir -p console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ 6 -eq 0 ]]
++ touch console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ju9oAtQPJP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ju9oAtQPJP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ config =~ ^(config|c)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ local verbose=true
+ IFS=' 	
+ [[ config == \h\e\l\p ]]
'
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false
+ [[ -z true ]]
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local target_platform=cisco
++ touch console/run.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ 6 -eq 0 ]]
+ for xitem in "${@}"
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ mktemp -d
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hDVKTaimGo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hDVKTaimGo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ IFS==
+ debug=false
+ read -r key value
++ alias warning-message=warning
+ [[ -z '' ]]
+ dry_run=false
++ export LC_ALL=C
+ [[ -z true ]]
++ LC_ALL=C
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ export 'nl=\n'
+ [[ -z '' ]]
++ nl='\n'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local export_objects=false
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console ]]
++ export default_devices=devices.list
+ [[ -z '' ]]
++ default_devices=devices.list
+ script_helper=false
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ false == true ]]
++ export cache_location=.cache
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ cache_location=.cache
+ [[ -z .cache/ips.list ]]
++ export logs_location=logs
++ logs_location=logs
+ search_terms=()
++ mkdir -p logs
+ declare -a search_terms
+++ echo -n devops-resources.shell
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ alias network-configs--helper=network_configs__helper
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ grep -v '^\s*$'
++ alias serialize-object=configs_objects
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ echo
+ touch console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ [[ -n '' ]]
+ read -r key value
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(config|c)$ ]]
++ actions_logfile=console/run.console
+ readonly __NETWORK_EXTRACT__=1
++ touch console/run.console
+ [[ platform =~ ^(console|o)$ ]]
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ platform =~ ^(export|r)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ mktemp -d
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ echo -e --search=.cache/ips.list
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZRYmShwFL
+ [[ search == \h\e\l\p ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZRYmShwFL
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ [[ logger =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ logger == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export targets_location=targets
++ export LC_ALL=C
++ targets_location=targets
++ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ echo -e --verbose
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+++ base64
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+++ tr -dc a-zA-Z0-9
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
++++ basename ./scripts/devops-resources.shell

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

+ sed '1{/^[[:space:]]*$/d;}'
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ [[ config =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_DIR=./scripts
+ [[ -z .cache/ips.list ]]
+ local script_filename=cisco-configs.awk
+ search_terms=()
+ declare -a search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -f .cache/ips.list ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+++ echo -n devops-resources.shell
+ newline 2
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ tr -d '\r'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export console_location=console
++ console_location=console
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ mkdir -p console
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
+ newline
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local first_search_entry=10.0.0.1
+ [[ false == true ]]
+ [[ true == true ]]
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ case "${target_file}" in
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
++ which awk
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export project_status=run.done
++ project_status=run.done
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
++ touch run.done
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ 6 -eq 0 ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console --verbose
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kfj86DFubX
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5x6vcPXlq ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kfj86DFubX
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5x6vcPXlq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --search=.cache/ips.list
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ base64
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+++ tr -dc a-zA-Z0-9
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
++ echo -e --verbose
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ export jobs_location=jobs
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

++ jobs_location=jobs
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
++ mkdir -p jobs
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

++ alias network-extract--helper=network_extract__helper
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ source ./scripts/configs-objects.shell
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
++ alias serialize-object=configs_objects
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
+ local SCRIPT_DIR=./scripts
++ console_location=console
++ mkdir -p console
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(extract|x)$ ]]
+ IFS=' 	
+ [[ config =~ ^(logger|l)$ ]]
'
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
+ export console_output=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local export_objects=false
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ tr -d '\r'
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ grep -v '^\s*$'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^#'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ mktemp -d
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ newline
+ local first_search_entry=10.0.0.1
++ which awk
+ local last_search_entry=203.0.113.25
+ local count=1
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ oIFS=' 	
'
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
+ local count=17
+ ((  count == 0  ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pTxa6NMG3y
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pTxa6NMG3y
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ export targets_location=targets
++ declare -gr __DEVOPS_RESOURCES__=1
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ true == true ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
++ alias print-message=message
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console ]]
++ alias print-newline=newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--branch-isr-02.cfg.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local 'indent=            '
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
++ alias warning-message=warning
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export 'nl=\n'
+ local target_platform=cisco
++ nl='\n'
++ export default_addresses=ips.list
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ default_addresses=ips.list
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ export default_devices=devices.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ default_devices=devices.list
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export default_matrix=matrix.json
+ [[ platform == \h\e\l\p ]]
++ default_matrix=matrix.json
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
++ export cache_location=.cache
+ [[ platform == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ for xitem in "${@}"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ logs_location=logs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
++ mkdir -p logs
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ search =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ result=0
+ exit 0
++ export jobs_location=jobs
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2UKESFMNof ]]
++ jobs_location=jobs
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2UKESFMNof
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
++ alias serialize-object=configs_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias parse-cisco=main
+ print '{
+ [[ -z x ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ export logs_location=logs

version 12.2
+ logs_location=logs
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ mkdir -p logs
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
++ echo -e --verbose
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=console/run.console
+ script_filename=network-extract.shell
++ actions_logfile=console/run.console
+ script_filename=network-extract
++ touch console/run.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ local verbose=true
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ IFS=' 	
'
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -z '' ]]
+ debug=false
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ export console_output=false
+ local count=1
+ console_output=false
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ local export_objects=false
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ [[ false == true ]]
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ local SCRIPT_DIR=./scripts
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ local script_filename=cisco-configs.awk
+ mapfile -t search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ 6 -eq 0 ]]
++ grep -v '^\s*$'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console --verbose
++ grep -v '^#'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export project_status=run.done
+ [[ -n '' ]]
++ project_status=run.done
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ touch run.done
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --search=.cache/ips.list
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
++ IFS=,
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ platform =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
++ which awk
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wD7NSdt0Aw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wD7NSdt0Aw
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ base64
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console ]]
++ alias list-file=list_file
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
++++ basename ./scripts/devops-resources.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console ]]
++ alias log-error=log_error
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--campus-sw-access01.cfg.console
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias pause=pause
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+++ echo -n devops-resources.shell
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ echo -e --verbose
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ result=0
+ exit 0
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpIkW3sWWB ]]
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpIkW3sWWB
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
++ grep -v '^#'
+ local 'extracted_configuration={
+ [[ extract =~ ^(console|o)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ extract =~ ^(export|r)$ ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
+ script_filename=network-extract.shell
 description Inside LAN segment
+ [[ extract =~ ^(extract|x)$ ]]

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

+ script_filename=network-extract
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(logger|l)$ ]]
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
+ network_extract__console=console/network-extract.console
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

+ [[ extract =~ ^(platform|p)$ ]]
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ touch console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ result=0
+ [[ extract == \h\e\l\p ]]
+ [[ -n {
+ [[ extract == \d\e\b\u\g ]]
  "vendor": "cisco",
  "model": "ASA",
+ [[ extract == \d\r\y\-\r\u\n ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ extract == \v\e\r\b\o\s\e ]]
}

+ for xitem in "${@}"
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ IFS==
 nameif guest
+ read -r key value
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ sed '1{/^[[:space:]]*$/d;}'
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
++ export actions_logfile=console/run.console
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

++ actions_logfile=console/run.console
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
++ touch console/run.console

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ echo -e --platform=fortinet
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local SCRIPT_DIR=./scripts
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ read -r key value
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ newline 2
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+++ base64
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TmaAs4Qd9p
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TmaAs4Qd9p
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --verbose
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ local awk_bin=/usr/bin/awk
++ alias print-file=print_file
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ [[ true == true ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+++ echo -n devops-resources.shell
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
++ mkdir -p logs
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console ]]
+ output_dir=.cache/resources/fortinet
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
+ [[ config =~ ^(config|c)$ ]]
+ local 'indent=            '
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(platform|p)$ ]]
+ newline
++ [[ -n '' ]]
+ [[ config =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ local count=1
++ __DEVOPS_HELPERS__=1
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ verbose == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local verbose=true
+ IFS=' 	
+ message '             -f ./scripts/extract/cisco-configs.awk \'
'
+ [[ -z '' ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ debug=false
+ [[ -z '' ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ dry_run=false
+ [[ -z true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ message '                configs/cisco/perimeter-fw1.cfg'
+ local export_objects=false
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z '' ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ script_helper=false
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ -z .cache/ips.list ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ declare -a search_terms
+ (( i < count ))
+ [[ -f .cache/ips.list ]]
+ echo
+ [[ .cache/ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ju9oAtQPJP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ju9oAtQPJP
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export console_location=console
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ console_location=console
+ [[ extract =~ ^(logger|l)$ ]]
++ mkdir -p console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=fortinet
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console --verbose
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ oIFS=' 	

'
interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ for xitem in "${@}"
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ IFS==
 description Internal Network Interface
+ read -r key value

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ platform =~ ^(config|c)$ ]]
++ IFS=,
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ which awk
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline 2
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ (( i < count ))
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
++ export targets_location=targets
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ targets_location=targets
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ printf '%*s' 12 ''
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ echo -e --config=configs/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ (( i < count ))
++++ basename ./scripts/devops-resources.shell
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Z0bihBwEs
+ [[ false == true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Z0bihBwEs
+ [[ false == true ]]
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --verbose
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ command -v -- ./scripts/network-extract.shell
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias network-extract--helper=network_extract__helper
+ IFS=' 	
'
++ echo -e --extract=.cache/resources/misc/fw1.cfg
+ [[ -z '' ]]
+ debug=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
+ [[ -z '' ]]
+ dry_run=false
+ source ./scripts/configs-objects.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console ]]
+ export console_output=false
+ console_output=false
+ case "${target_file}" in
+ [[ -z '' ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--perimeter-fw1.cfg.console
+ local export_objects=false
++ [[ -n '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -z '' ]]
++ __CONFIGS_OBJECTS__=1
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias serialize-object=configs_objects
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ extract =~ ^(config|c)$ ]]

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ [[ extract =~ ^(console|o)$ ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
+ [[ extract =~ ^(export|r)$ ]]
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
+ [[ extract =~ ^(extract|x)$ ]]
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local extract_location=.cache/resources/misc/fw1.cfg
 next
end'
+ [[ extract =~ ^(logger|l)$ ]]
+ result=0
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ extract =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ [[ extract == \h\e\l\p ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ [[ extract == \d\e\b\u\g ]]
end

config firewall address
+ [[ extract == \d\r\y\-\r\u\n ]]
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ [[ extract == \v\e\r\b\o\s\e ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ for xitem in "${@}"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ IFS==
 next
 edit "Spidey-Sandbox"
+ read -r key value
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hDVKTaimGo ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hDVKTaimGo
+ script_filename=network-extract.shell
++ export console_location=console
+ script_filename=network-extract
++ console_location=console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ mkdir -p console
+ touch console/network-extract.console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
++ echo -e --platform=cisco
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 next
end

config firewall address
 edit "IronMan-HQ"
++ sed -e '1s|^\(-\)\{1,\}||'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ local first_search_entry=10.0.0.1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
++ which awk
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ 6 -eq 0 ]]
++ touch console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline 2
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local count=2
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ mktemp -d
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local search_pattern=.cache/ips.list
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --verbose
++ echo -e --config=configs/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZYS0smet0m
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZYS0smet0m
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++++ basename ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ true == true ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console ]]
++ alias system-metrics=system_metrics
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-branch-vpn-01.cfg.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+++ echo -n devops-resources.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
+ source ./scripts/devops-helpers.shell
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ export jobs_location=jobs
++ alias network-configs--helper=network_configs__helper
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ result=0
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ exit 0
  set comment "Guest WiFi node"
++ alias network-extract--helper=network_extract__helper
 next
end

++ tr -d '\r'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZRYmShwFL ]]
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ZRYmShwFL
  set subnet 192.168.2.12 255.255.255.255
+ source ./scripts/configs-objects.shell
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
++ alias serialize-object=configs_objects
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ local SCRIPT_DIR=./scripts
++ grep -v '^#'
+ echo -en '{
+ local script_filename=fortinet-configs.awk
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ local script_filepath=./scripts/extract/fortinet-configs.awk
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
+ newline 2
++ mkdir -p console
+ local count=2
+ local first_search_entry=10.0.0.1
+ (( i = 0 ))
+ (( i < count ))
+ local last_search_entry=203.0.113.25
+ echo
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local count=17
+ ((  count == 0  ))
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ local target_platform=cisco
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
++ export project_status=run.done
++ project_status=run.done
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ touch run.done
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
++ printf '%*s' 12 ''
++ echo -e --search=.cache/ips.list
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname .cache/resources/misc/fw1.cfg
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-campus-core.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ output_dir=.cache/resources/misc
+ [[ search =~ ^(platform|p)$ ]]
+ [[ ! -d .cache/resources/misc ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/misc/switch1.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kfj86DFubX ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kfj86DFubX
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
+++ echo -n devops-resources.shell
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ verbose =~ ^(console|o)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose =~ ^(export|r)$ ]]

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ [[ verbose =~ ^(extract|x)$ ]]
  set srcaddr "10.10.10.10"
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
  set dstaddr "203.0.113.10"
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
  set action accept
+ [[ verbose == \h\e\l\p ]]
  set logtraffic all
 next
+ [[ verbose == \d\e\b\u\g ]]
end'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local verbose=true
+ [[ config =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local target_config=configs/misc/switch1.conf
+ [[ -z '' ]]
+ [[ -n {
+ export console_output=false
+ [[ config =~ ^(console|o)$ ]]
  "vendor": "fortinet",
+ console_output=false
++ alias network-configs--helper=network_configs__helper
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ -z '' ]]
  "domain": "",
+ [[ config =~ ^(export|r)$ ]]
+ local export_objects=false
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console ]]
#model="FortiGate-60F"
+ [[ config =~ ^(extract|x)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -z '' ]]

config firewall policy
+ script_helper=false
 edit 13
  set name "Remote NAT"
+ [[ config =~ ^(logger|l)$ ]]
  set srcintf "dmz"
+ [[ false == true ]]
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  set action accept
+ [[ config =~ ^(platform|p)$ ]]
  set logtraffic all
 next
+ [[ -z .cache/ips.list ]]
end ]]
+ [[ config =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ config == \h\e\l\p ]]
+ declare -a search_terms
+ [[ config == \d\e\b\u\g ]]
+ echo -en '{
+ [[ config == \d\r\y\-\r\u\n ]]
  "vendor": "fortinet",
+ [[ -f .cache/ips.list ]]
  "model": "FortiGate-60F",
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
  "domain": "",
+ for xitem in "${@}"
+ [[ .cache/ips.list != *,* ]]
  "hostname": "fg-branch-vpn-01"
}

+ mapfile -t search_terms
+ IFS==
#hostname="fg-branch-vpn-01"
++ alias network-extract--helper=network_extract__helper
+ read -r key value
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
+ local SCRIPT_DIR=./scripts
+ source ./scripts/configs-objects.shell
  set logtraffic all
 next
end'
+ local script_filename=cisco-configs.awk
++ [[ -n '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ readonly __CONFIGS_OBJECTS__=1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ which awk
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
++ IFS=,
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ printf '%*s' 12 ''
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ message '                configs/misc/fw1.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console ]]
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw3.cfg
++ echo -e --config=configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pTxa6NMG3y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pTxa6NMG3y
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ output_dir=.cache/resources/misc
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ ! -d .cache/resources/misc ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
++ command -v -- ./scripts/network-extract.shell
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
+ print '{
+ [[ config =~ ^(config|c)$ ]]
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ local target_config=configs/misc/switch3.conf
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ config =~ ^(console|o)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
+ [[ config =~ ^(export|r)$ ]]
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config == \d\e\b\u\g ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n {
+ [[ config == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "",
+ for xitem in "${@}"
  "version": "",
  "domain": "",
  "hostname": ""
}

+ IFS==
object-group network Metropolis-Internal
+ read -r key value
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline 2
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ local count=2
+ dry_run=false
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ console_output=false
+ echo
+ [[ -z '' ]]
+ local export_objects=false
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ IFS=,
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw1.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wD7NSdt0Aw ]]
+ [[ conf == \c\o\n\f ]]
+ [[ logger =~ ^(config|c)$ ]]
+ final_output=.cache/resources/misc/switch1.conf
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wD7NSdt0Aw
+ extract_location=.cache/resources/misc/switch1.conf
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/switch1.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local 'extracted_configuration={
+ [[ -f .cache/ips.list ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ .cache/ips.list != *,* ]]
  "hostname": ""
}

+ mapfile -t search_terms
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
++ tr -d '\r'
 description Guest NAT ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ echo
+ (( i++ ))
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ cat -n .cache/resources/misc/fw3.cfg
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
++ which awk
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TmaAs4Qd9p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TmaAs4Qd9p
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ IFS=,
+ newline 2
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch1.conf.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
+ result=0
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ exit 0
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Z0bihBwEs ]]
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Z0bihBwEs
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L3fvLBwuLq/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZYS0smet0m ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZYS0smet0m
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Qz6tit5YxY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Qz6tit5YxY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dNffJERNd
++ mktemp -d
++ jobs_location=jobs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dNffJERNd
++ mkdir -p jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ set -euo pipefail
+ export LC_ALL=C
++ alias pause=pause
++ alias print-line=print
+ LC_ALL=C
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lm3RQNW5zM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lm3RQNW5zM
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ mktemp -d
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YtxY8lfA9I
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YtxY8lfA9I
++ export console_location=console
++ console_location=console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mkdir -p console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mkdir -p jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ mktemp -d
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZHBncHM1BJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZHBncHM1BJ
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ __NETWORK_EXTRACT__=1
+ export 'nl=\n'
+ nl='\n'
+ set -euo pipefail
+ source ./scripts/devops-resources.shell
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias exit-error=exit_error
++ mkdir -p jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ mktemp -d
++ alias relative-configpath=relative_configpath
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UaSYFihSRD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UaSYFihSRD
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GcV2QbmX4i
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GcV2QbmX4i
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
+ set -euo pipefail
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ export LC_ALL=C
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
++ alias exit-error=exit_error
+ __NETWORK_EXTRACT__=1
+ LC_ALL=C
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias list-file=list_file
++ export project_status=run.done
++ project_status=run.done
++ alias log-error=log_error
++ touch run.done
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias system-metrics=system_metrics
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ mktemp -d
++ mktemp -d
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ touch console/run.console
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lGLxgByqeG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lGLxgByqeG
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4A9yP8EzO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4A9yP8EzO
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wz5BUgbgr5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wz5BUgbgr5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export jobs_location=jobs
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ jobs_location=jobs
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ mkdir -p jobs
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias log-error=log_error
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias log-info=log_info
++ alias print-message=message
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-newline=newline
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yHCI2QCtUM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yHCI2QCtUM
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ export 'nl=\n'
+ nl='\n'
++ export default_matrix=matrix.json
++ export default_devices=devices.list
++ default_matrix=matrix.json
++ default_devices=devices.list
++ export cache_location=.cache
++ export default_matrix=matrix.json
++ cache_location=.cache
++ default_matrix=matrix.json
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ mkdir -p logs
++ export logs_location=logs
++ logs_location=logs
++ alias warning-message=warning
++ [[ -n '' ]]
++ mkdir -p logs
++ export LC_ALL=C
++ declare -gr __DEVOPS_RESOURCES__=1
++ LC_ALL=C
++ export 'nl=\n'
++ [[ 5 -lt 4 ]]
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias detect-vendor=detect_vendor
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ alias exit-error=exit_error
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias list-file=list_file
++ touch console/run.console
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ base64
++ alias system-metrics=system_metrics
++++ basename ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export project_status=run.done
++ export actions_logfile=console/run.console
++ project_status=run.done
++ actions_logfile=console/run.console
++ export 'nl=\n'
++ touch run.done
++ nl='\n'
++ touch console/run.console
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ mktemp -d
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+++ base64
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++++ basename ./scripts/devops-resources.shell
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mkdir -p console
++ mkdir -p console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias parse-cisco=main
+++ echo -n devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ base64
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export console_location=console
++ console_location=console
++ mkdir -p console
++++ basename ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8LgVfb5Z9P
++ readonly __DEVOPS_HELPERS__=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8LgVfb5Z9P
++ __DEVOPS_HELPERS__=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ export targets_location=targets
++ alias log-info=log_info
++ targets_location=targets
++ alias log-warn=log_warn
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias print-message=message
++ alias network-configs--helper=network_configs__helper
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ export project_status=run.done
++ project_status=run.done
++ alias relative-configpath=relative_configpath
++ touch run.done
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
+ source ./scripts/configs-objects.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export actions_logfile=console/run.console
++ export 'nl=\n'
++ readonly __CONFIGS_OBJECTS__=1
++ nl='\n'
++ actions_logfile=console/run.console
++ __CONFIGS_OBJECTS__=1
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ touch console/run.console
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ alias serialize-object=configs_objects
+++ echo -n devops-resources.shell
+++ base64
+ alias parse-cisco=main
++++ basename ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ export jobs_location=jobs
++ export targets_location=targets
++ jobs_location=jobs
++ targets_location=targets
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -n '' ]]
++ export project_status=run.done
+ readonly __NETWORK_EXTRACT__=1
++ project_status=run.done
+ __NETWORK_EXTRACT__=1
++ touch run.done
++ export targets_location=targets
+ set -euo pipefail
++ targets_location=targets
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ script_filename=network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ mktemp -d
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias serialize-object=configs_objects
++ alias parse-listings--helper=parse_listings__helper
+++ echo -n devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ alias parse-cisco=main
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias serialize-object=configs_objects
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ base64
++++ basename ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ logs_location=logs
+ touch console/network-extract.console
+ mkdir -p logs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
++ export targets_location=targets
++ alias network-configs--helper=network_configs__helper
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ tr -dc a-zA-Z0-9
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ [[ 7 -eq 0 ]]
++ export project_status=run.done
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fn61sx6qgl/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
++ project_status=run.done
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ touch run.done
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+++ tr -dc a-zA-Z0-9
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L58cPC8Rf1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L58cPC8Rf1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ oIFS=' 	
'
+ export 'nl=\n'
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ alias parse-cisco=main
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ echo -n devops-resources.shell
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+++ base64
+++ base64
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
++++ basename ./scripts/devops-resources.shell
++ actions_logfile=console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ touch console/run.console
+ source ./scripts/devops-helpers.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
+ [[ 7 -eq 0 ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1jtzbgkybi/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console --export --verbose
++++ basename ./scripts/devops-resources.shell
+ script_filename=network-extract
++++ basename ./scripts/devops-resources.shell
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ touch console/network-extract.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ mktemp -d
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ alias network-configs--helper=network_configs__helper
+++ echo -n devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+++ echo -n devops-resources.shell
+ source ./scripts/configs-objects.shell
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ export jobs_location=jobs
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
++ targets_logfile=.cache/targets.jobs
++ alias serialize-object=configs_objects
+ [[ -z x ]]
+ export logs_location=logs
+ script_filename=network-extract.shell
+ logs_location=logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ mkdir -p logs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ touch console/network-extract.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export project_status=run.done
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ project_status=run.done
++ alias parse-listings--helper=parse_listings__helper
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ touch run.done
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ source ./scripts/configs-objects.shell
+ mkdir -p logs
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias serialize-object=configs_objects
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gtJX5NAQYD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gtJX5NAQYD
+ mkdir -p logs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ alias parse-cisco=main
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ search =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ -z x ]]
+ export logs_location=logs
+ [[ search =~ ^(export|r)$ ]]
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs
+ export logs_location=logs
+ [[ search =~ ^(extract|x)$ ]]
+ logs_location=logs
+ mkdir -p logs
++ alias list-file=list_file
+ [[ search =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
+ [[ search =~ ^(search|s)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias pause=pause
+ read -r key value
++ alias print-line=print
+ [[ 7 -eq 0 ]]
++ alias print-file=print_file
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9hce5bwgwy/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias relative-configpath=relative_configpath
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias system-metrics=system_metrics
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
+++ base64
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export console_location=console
++ console_location=console
++ default_addresses=ips.list
++ mkdir -p console
++++ basename ./scripts/devops-resources.shell
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
+ export network_extract__console=console/network-extract.console
++ targets_location=targets
+ network_extract__console=console/network-extract.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ touch console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3e5dvpo7cj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console --export --verbose
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(export|r)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
+ oIFS=' 	
'
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ [[ search =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
+ script_filename=network-extract
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ export network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ [[ search == \h\e\l\p ]]
+ network_extract__console=console/network-extract.console
+ [[ search == \d\e\b\u\g ]]
+ network_extract__console=console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ touch console/network-extract.console
+ for xitem in "${@}"
+ touch console/network-extract.console
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ -n '' ]]
++ export actions_logfile=console/run.console
+ readonly __NETWORK_EXTRACT__=1
++ actions_logfile=console/run.console
+ __NETWORK_EXTRACT__=1
++ [[ -n '' ]]
++ touch console/run.console
++ readonly __DEVOPS_HELPERS__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fn61sx6qgl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e92znb1fho/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.aq1bmgkaua/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1jtzbgkybi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ echo -n devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ oIFS=' 	
'
+ oIFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ [[ 7 -eq 0 ]]
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.u7u9malbly/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ search =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
++ alias serialize-object=configs_objects
+ oIFS=' 	
'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ export project_status=run.done
+ [[ config =~ ^(extract|x)$ ]]
++ project_status=run.done
+ [[ config =~ ^(logger|l)$ ]]
++ touch run.done
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias serialize-object=configs_objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rpcMNa6oZF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rpcMNa6oZF
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list
+ [[ config =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ config =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ alias exit-error=exit_error
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ search =~ ^(logger|l)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ export jobs_location=jobs
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ jobs_location=jobs
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
++ mkdir -p jobs
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+++ base64
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.a3g6sgmr0k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.w8sla7pyh9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console --export --verbose
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
+++ echo -n devops-resources.shell
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console --export --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ oIFS=' 	
'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
++ alias serialize-object=configs_objects
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
++ echo -e --platform=cisco
+ export logs_location=logs
+ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list
+ mkdir -p logs
++ echo -e --platform=fortinet
++ export project_status=run.done
+ [[ config =~ ^(config|c)$ ]]
++ project_status=run.done
+ [[ extract =~ ^(config|c)$ ]]
++ touch run.done
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ actions_logfile=console/run.console
+ [[ config =~ ^(search|s)$ ]]
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ search =~ ^(logger|l)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
+ LC_ALL=C
+ [[ search == \h\e\l\p ]]
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ touch console/network-extract.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
++ export targets_location=targets
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
++ targets_logfile=.cache/targets.jobs
+ read -r key value
++ export project_status=run.done
+ read -r key value
++ project_status=run.done
+ [[ platform == \h\e\l\p ]]
++ touch run.done
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7mm6fwyaX6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7mm6fwyaX6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ echo -n devops-resources.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias validate-address=validate_address
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ export 'nl=\n'
++ __DEVOPS_HELPERS__=1
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ [[ 5 -lt 4 ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ extract =~ ^(config|c)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(console|o)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(export|r)$ ]]
++ mkdir -p logs
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fzmw10eymj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+++ base64
++ alias serialize-object=configs_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnCfyt556m
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnCfyt556m
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++++ basename ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+++ tr -dc a-zA-Z0-9
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ local target_platform=cisco
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
+ read -r key value
+ IFS==
++ __DEVOPS_HELPERS__=1
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
+ [[ logger =~ ^(config|c)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias serialize-object=configs_objects
++ echo -e --platform=fortinet
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ export jobs_location=jobs
++ export console_location=console
++ jobs_location=jobs
++ console_location=console
++ mkdir -p jobs
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ logger =~ ^(logger|l)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ touch console/network-extract.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n '' ]]
+ alias parse-cisco=main
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z x ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ mktemp -d
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.u1u5t9rgpx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console --export --verbose
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pS3WiLQjXD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pS3WiLQjXD
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ [[ -n '' ]]
+ for xitem in "${@}"
+ readonly __NETWORK_EXTRACT__=1
+ IFS==
++ [[ -n '' ]]
+ read -r key value
+ __NETWORK_EXTRACT__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IP0Jvrs96k
+ set -euo pipefail
+ touch console/network-extract.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IP0Jvrs96k
+ export LC_ALL=C
+ LC_ALL=C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias detect-vendor=detect_vendor
+ export 'nl=\n'
+ nl='\n'
++ alias exit-error=exit_error
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
++ alias log-error=log_error
++ alias exit-error=exit_error
+ [[ -n '' ]]
++ alias log-info=log_info
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ platform =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ set -euo pipefail
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-message=message
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(platform|p)$ ]]
++ alias print-newline=newline
++ alias list-file=list_file
+ local target_platform=cisco
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-info=log_info
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-line=print
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ mktemp -d
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias validate-address=validate_address
++ mkdir -p logs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ mktemp -d
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --platform=cisco
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGgOWo3mc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGgOWo3mc
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qlEFf4Kzt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qlEFf4Kzt
++ export jobs_location=jobs
++ [[ -n '' ]]
++ jobs_location=jobs
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ mkdir -p jobs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-warn=log_warn
+ export 'nl=\n'
++ alias print-message=message
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uxrECgaWkT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uxrECgaWkT
++ export jobs_location=jobs
++ [[ -n '' ]]
++ jobs_location=jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias pause=pause
++ mkdir -p jobs
+ export 'nl=\n'
+ nl='\n'
++ alias print-line=print
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias print-file=print_file
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias relative-configpath=relative_configpath
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias system-metrics=system_metrics
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias validate-address=validate_address
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias warning-message=warning
++ alias log-error=log_error
++ export LC_ALL=C
++ alias print-message=message
++ LC_ALL=C
++ alias print-newline=newline
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias log-info=log_info
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ alias log-warn=log_warn
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-message=message
++ alias print-line=print
++ alias print-file=print_file
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ export project_status=run.done
++ targets_location=targets
++ project_status=run.done
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ touch run.done
++ alias pause=pause
++ alias system-metrics=system_metrics
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ 7 -eq 0 ]]
++ alias system-metrics=system_metrics
++ export 'nl=\n'
++ nl='\n'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.t3bljkziyq/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias validate-address=validate_address
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ [[ search =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console --export --verbose
++ export 'nl=\n'
+ [[ search =~ ^(logger|l)$ ]]
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ search =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(search|s)$ ]]
++ mkdir -p logs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ export targets_logfile=.cache/targets.jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ targets_logfile=.cache/targets.jobs
++ mkdir -p jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++++ basename ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
++ export console_location=console
++ console_location=console
+ source ./scripts/configs-objects.shell
++ mkdir -p console
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+++ tr -dc a-zA-Z0-9
++ alias serialize-object=configs_objects
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ alias parse-cisco=main
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SaY4O3x68C
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SaY4O3x68C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z x ]]
+ export 'nl=\n'
+ export logs_location=logs
+ nl='\n'
+ logs_location=logs
+ source ./scripts/devops-resources.shell
+ mkdir -p logs
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ export project_status=run.done
++ [[ 5 -lt 4 ]]
++ project_status=run.done
++ touch run.done
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export project_status=run.done
++ project_status=run.done
++ alias log-warn=log_warn
++ touch run.done
++ alias print-message=message
+ [[ config =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
++ alias validate-address=validate_address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias warning-message=warning
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export LC_ALL=C
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ [[ -n '' ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
++ export actions_logfile=console/run.console
++ alias network-configs--helper=network_configs__helper
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OEHJPvFIR6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OEHJPvFIR6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ export project_status=run.done
++ project_status=run.done
+ script_filename=network-extract.shell
++ alias detect-vendor=detect_vendor
++ touch run.done
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export targets_location=targets
++ export targets_location=targets
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eWKPHrQhPs
++ targets_location=targets
++ targets_location=targets
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eWKPHrQhPs
++ export targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BTzJi9R2oI
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BTzJi9R2oI
++ targets_logfile=.cache/targets.jobs
+ export 'nl=\n'
+ [[ search =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ [[ search =~ ^(console|o)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
++ mktemp -d
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ search == \d\e\b\u\g ]]
++ alias log-error=log_error
++ alias exit-error=exit_error
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
++ alias log-info=log_info
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
++ alias print-message=message
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-newline=newline
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias pause=pause
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-line=print
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-file=print_file
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SqJwM6CzuB
++ mkdir -p jobs
++ export LC_ALL=C
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SqJwM6CzuB
++ LC_ALL=C
++ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ export 'nl=\n'
+ nl='\n'
++ export default_devices=devices.list
++ default_devices=devices.list
+ source ./scripts/devops-resources.shell
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ mkdir -p logs
+ [[ platform =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export project_status=run.done
++ export project_status=run.done
++ project_status=run.done
++ project_status=run.done
++ alias list-file=list_file
++ touch run.done
++ alias log-error=log_error
++ touch run.done
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias print-file=print_file
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zlu7E5hbYV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zlu7E5hbYV
+++ tr -dc a-zA-Z0-9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias system-metrics=system_metrics
++ export console_location=console
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ alias validate-address=validate_address
+++ base64
++ alias warning-message=warning
++++ basename ./scripts/devops-resources.shell
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ 7 -eq 0 ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.otv6yz43ld/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ console_location=console
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ script_filename=network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-helpers.shell
+ oIFS=' 	
'
+ network_extract__console=console/network-extract.console
++ [[ -n '' ]]
+ touch console/network-extract.console
++ readonly __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
++ __DEVOPS_HELPERS__=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias serialize-object=configs_objects
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
+ [[ config =~ ^(export|r)$ ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -z x ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export logs_location=logs
+ source ./scripts/devops-helpers.shell
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
+ [[ extract =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ alias network-configs--helper=network_configs__helper
++ jobs_location=jobs
++ mkdir -p jobs
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ alias serialize-object=configs_objects
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fzmw10eymj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console --export --verbose
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ oIFS=' 	
'
++ touch console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract.shell
++ export project_status=run.done
++ export console_location=console
+ script_filename=network-extract
++ project_status=run.done
++ console_location=console
+ [[ search =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
++ touch run.done
++ mkdir -p console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+++ echo -n devops-resources.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract
++ touch console/run.console
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ touch console/network-extract.console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list
++ export console_location=console
++ console_location=console
+ [[ search == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ search == \d\e\b\u\g ]]
++ mkdir -p console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ local target_platform=fortinet
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ extract =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias parse-listings--helper=parse_listings__helper
++ alias serialize-object=configs_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ alias network-configs--helper=network_configs__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export project_status=run.done
+ source ./scripts/configs-objects.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
++ project_status=run.done
+ for xitem in "${@}"
+ IFS==
++ touch run.done
+ read -r key value
+ alias parse-cisco=main
++ [[ -n '' ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ readonly __CONFIGS_OBJECTS__=1
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9hce5bwgwy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
++ export targets_location=targets
++ __CONFIGS_OBJECTS__=1
++ targets_location=targets
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
+ IFS==
++ targets_logfile=.cache/targets.jobs
+ read -r key value
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q7cq4kdewf/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export project_status=run.done
++ mktemp -d
++ project_status=run.done
++ touch run.done
+ [[ platform =~ ^(config|c)$ ]]
++ export project_status=run.done
+ alias parse-cisco=main
++ project_status=run.done
++ touch run.done
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5fvzopgkv1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
'
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+++ tr -dc a-zA-Z0-9
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ script_filename=network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ script_filename=network-extract
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(export|r)$ ]]
+ export LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nWWnm96WMi
+ LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nWWnm96WMi
+ [[ config =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ [[ config =~ ^(search|s)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
++ targets_location=targets
++ alias detect-vendor=detect_vendor
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A4NGdmmuha
++ alias exit-error=exit_error
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A4NGdmmuha
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ export targets_location=targets
+ source ./scripts/devops-resources.shell
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias list-file=list_file
++ [[ -n '' ]]
++ export project_status=run.done
++ declare -gr __DEVOPS_RESOURCES__=1
++ project_status=run.done
++ alias log-error=log_error
++ touch run.done
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias log-warn=log_warn
++ alias print-message=message
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias list-file=list_file
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ touch console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
++ alias log-info=log_info
+ [[ search =~ ^(console|o)$ ]]
++ alias print-newline=newline
++ alias log-warn=log_warn
+ [[ search =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ search =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ search =~ ^(logger|l)$ ]]
++ alias pause=pause
+ [[ search =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
++ alias pause=pause
+ [[ search == \h\e\l\p ]]
++ alias print-line=print
++ alias print-file=print_file
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+++ echo -n devops-resources.shell
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ alias warning-message=warning
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
++ LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export 'nl=\n'
+ [[ search =~ ^(export|r)$ ]]
++ export default_addresses=ips.list
++ nl='\n'
++ default_addresses=ips.list
+ [[ search =~ ^(extract|x)$ ]]
++ export default_addresses=ips.list
++ export default_devices=devices.list
++ default_addresses=ips.list
++ default_devices=devices.list
+ [[ search =~ ^(logger|l)$ ]]
++ export default_devices=devices.list
++ export default_matrix=matrix.json
++ default_devices=devices.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ default_matrix=matrix.json
++ export default_matrix=matrix.json
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ default_matrix=matrix.json
++ export cache_location=.cache
+ [[ search =~ ^(platform|p)$ ]]
++ cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p logs
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
++ readonly __DEVOPS_HELPERS__=1
+ [[ search == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
+ [[ search == \d\e\b\u\g ]]
++ export actions_logfile=console/run.console
+ [[ search == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ touch console/run.console
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias network-extract--helper=network_extract__helper
+ [[ platform == \h\e\l\p ]]
++++ basename ./scripts/devops-resources.shell
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ for xitem in "${@}"
++ alias serialize-object=configs_objects
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++++ basename ./scripts/devops-resources.shell
+ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+++ echo -n devops-resources.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3iXpoc2j9p
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3iXpoc2j9p
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias log-info=log_info
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-newline=newline
++ alias pause=pause
+ [[ platform =~ ^(export|r)$ ]]
++ alias print-line=print
++ alias print-file=print_file
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --export
++ alias system-metrics=system_metrics
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --export
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ echo -e --export
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export console_location=console
++ export console_location=console
+ for xitem in "${@}"
++ console_location=console
++ console_location=console
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ mkdir -p console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_location=targets
+ IFS==
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
++ targets_location=targets
+ [[ extract =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+ read -r key value
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export project_status=run.done
++ project_status=run.done
++ [[ 5 -lt 4 ]]
++ touch run.done
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ alias serialize-object=configs_objects
+ [[ export =~ ^(console|o)$ ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
+ IFS==
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ export jobs_location=jobs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ jobs_location=jobs
+ [[ config =~ ^(search|s)$ ]]
++ mkdir -p jobs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ actions_logfile=console/run.console
+ [[ extract =~ ^(logger|l)$ ]]
++ touch console/run.console
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++++ basename ./scripts/devops-resources.shell
++ alias serialize-object=configs_objects
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ echo -e --export
++ echo -e --platform=cisco
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch run.done
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ IFS==
+ mkdir -p logs
+ read -r key value
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS=' 	
+ [[ -z '' ]]
'
+ debug=false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ debug=false
+ dry_run=false
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ export console_output=false
+ console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ console_output=false
+ local export_objects=true
+ [[ -z true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ [[ -z '' ]]
+ [[ -z '' ]]
+ read -r key value
+ script_helper=false
+ script_helper=false
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --export
+ search_terms=()
+ [[ platform =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]]
+ local target_platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ search_terms=()
+ read -r key value
+ read -r key value
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list != *,* ]]
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export targets_location=targets
++ touch console/run.console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ echo -e --platform=fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
++ echo -e --verbose
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ tr -d '\r'
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ grep -v '^#'
++++ basename ./scripts/devops-resources.shell
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ set -euo pipefail
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export LC_ALL=C
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ LC_ALL=C
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ search_terms=()
+ [[ logger =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list != *,* ]]
+ local target_platform=fortinet
++ alias network-configs--helper=network_configs__helper
+ mapfile -t search_terms
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ IFS=' 	
'
+ [[ -z '' ]]
+ source ./scripts/configs-objects.shell
+++ base64
+ debug=false
+ [[ -z '' ]]
+ script_filename=network-extract
++ [[ -n '' ]]
+ dry_run=false
++ readonly __CONFIGS_OBJECTS__=1
+ export network_extract__console=console/network-extract.console
++ __CONFIGS_OBJECTS__=1
+ network_extract__console=console/network-extract.console
+ [[ -z true ]]
+ touch console/network-extract.console
+ [[ -z '' ]]
+ export console_output=false
+++ echo -n devops-resources.shell
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ false == true ]]
++ targets_location=targets
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(export|r)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(extract|x)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++++ basename ./scripts/devops-resources.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]]
++ mktemp -d
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local first_search_entry=10.0.0.1
+ local first_search_entry=10.0.1.2
+ script_filename=network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ export =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ [[ export =~ ^(search|s)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ export network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ local export_objects=true
+ IFS==
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ script_filename=network-extract.shell
+ [[ logger =~ ^(export|r)$ ]]
+ local last_search_entry=10.0.1.2
+ [[ export =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ [[ export =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ touch console/network-extract.console
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ export logs_location=logs
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ logs_location=logs
+ [[ logger == \h\e\l\p ]]
+ mkdir -p logs
+ [[ logger == \d\e\b\u\g ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger == \d\r\y\-\r\u\n ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
+ local export_objects=true
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ] ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ [[ -n '' ]]
+ [[ export =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
++ __DEVOPS_HELPERS__=1
+ newline
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
+ local count=1
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ echo
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ local count=1
+ [[ -z fortinet ]]
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ tr -d '\r'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --verbose
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ newline
++ export targets_location=targets
+ local count=1
++ targets_location=targets
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias network-extract--helper=network_extract__helper
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --export
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ source ./scripts/configs-objects.shell
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias serialize-object=configs_objects
+ __NETWORK_EXTRACT__=1
++ tr -d '\r'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
+ alias parse-cisco=main
++ tr -d '\r'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --export
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E66e8HzWTU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E66e8HzWTU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ echo -e --verbose
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
+++ base64
++ alias relative-configpath=relative_configpath
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++++ basename ./scripts/devops-resources.shell
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ local first_search_entry=10.0.2.3
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.2.3
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local first_search_entry=172.16.1.6
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.1.6
+ [[ logger == \d\e\b\u\g ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local last_search_entry=172.16.0.5
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ] ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ] ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ local count=1
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ ((  count == 0  ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ] ]]
+ newline
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ (( i < count ))
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ echo
+ (( i++ ))
+ echo
+ newline
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ source ./scripts/configs-objects.shell
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z cisco ]]
+ [[ true == true ]]
++ [[ -n '' ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ newline
+++ echo -n devops-resources.shell
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+++ echo -n devops-resources.shell
+ (( i = 0 ))
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ newline
+ [[ -z cisco ]]
+ echo
+ [[ true == true ]]
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias serialize-object=configs_objects
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ mktemp -d
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local verbose=true
+ alias parse-cisco=main
+ [[ export =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ export =~ ^(export|r)$ ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ local export_objects=true
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ export logs_location=logs
+ [[ export =~ ^(logger|l)$ ]]
+ logs_location=logs
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --export
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ alias network-extract--helper=network_extract__helper
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ source ./scripts/configs-objects.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
++ [[ -n '' ]]
+ [[ export =~ ^(search|s)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
++ __CONFIGS_OBJECTS__=1
+ mapfile -t search_terms
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
+ source ./scripts/devops-helpers.shell
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias serialize-object=configs_objects
++ [[ -n '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ echo -e --verbose
+ script_filename=network-extract
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ export network_extract__console=console/network-extract.console
+ console_output=false
+ network_extract__console=console/network-extract.console
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
++ echo -e --export
+ script_helper=false
+ [[ false == true ]]
+ touch console/network-extract.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
++ echo -e --verbose
+ output_dir=reports/10.0.0.1/cisco
+ [[ ! -d reports/10.0.0.1/cisco ]]
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ command -v -- ./scripts/network-extract.shell
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ 7 -eq 0 ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9hce5bwgwy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console --export --verbose
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ oIFS=' 	
'
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.e92znb1fho/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ touch console/network-extract.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console --export --verbose
++ alias serialize-object=configs_objects
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.w8sla7pyh9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.COOJeama0Z
+ [[ verbose == \d\e\b\u\g ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.COOJeama0Z
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ local verbose=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ [[ -z '' ]]
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ debug=false
+ read -r key value
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ oIFS=' 	
+ console_output=false
+ [[ verbose =~ ^(export|r)$ ]]
+ oIFS=' 	
+ [[ -z true ]]
'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console ]]
+ export 'nl=\n'
+ [[ -z '' ]]
+ nl='\n'
+ script_helper=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ source ./scripts/devops-resources.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]]
+ [[ verbose == \h\e\l\p ]]
+ search_terms=()
++ [[ -n '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]]
+ local verbose=true
++ [[ 5 -lt 4 ]]
+ IFS=' 	
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list != *,* ]]
'
+ mapfile -t search_terms
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias exit-error=exit_error
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ alias list-file=list_file
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias log-error=log_error
++ alias log-info=log_info
+ alias parse-cisco=main
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ dirname -- ./scripts/network-extract.shell
+ [[ -z x ]]
+ export logs_location=logs
++ alias pause=pause
+ logs_location=logs
+ mkdir -p logs
++ alias print-line=print
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias print-file=print_file
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias relative-configpath=relative_configpath
'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --export
++ tr -d '\r'
++ tr -d '\r'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --verbose
++ echo -e --verbose
++ grep -v '^\s*$'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^\s*$'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=fortinet-configs.awk
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ output_dir=reports/172.16.0.5/cisco
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/172.16.1.6/cisco ]]
++ grep -v '^#'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.u7u9malbly/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ export =~ ^(console|o)$ ]]
++ which awk
+ [[ export =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ which awk
++ export LC_ALL=C
+ local export_objects=true
++ LC_ALL=C
+ [[ export =~ ^(extract|x)$ ]]
++ export project_status=run.done
+ [[ export =~ ^(logger|l)$ ]]
++ project_status=run.done
+ [[ export =~ ^(platform|p)$ ]]
++ touch run.done
+ [[ export =~ ^(search|s)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7zxrewoln0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ oIFS=' 	
'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ for xitem in "${@}"
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ IFS==
++ default_matrix=matrix.json
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ export cache_location=.cache
++ cache_location=.cache
+ [[ verbose =~ ^(search|s)$ ]]
++ export logs_location=logs
+ [[ verbose == \h\e\l\p ]]
++ logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ search_terms=()
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local first_search_entry=10.10.10.10
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local last_search_entry=10.10.10.10
+ [[ 7 -eq 0 ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1jtzbgkybi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ debug=false
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console --export --verbose
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export console_output=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ oIFS=' 	
+ [[ verbose =~ ^(logger|l)$ ]]
'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console ]]
+ ((  count == 0  ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local verbose=true
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local first_search_entry=10.0.1.2
+ IFS=' 	
'
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]]
+ [[ -z '' ]]
+ local count=1
+ debug=false
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local last_search_entry=10.0.1.2
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local first_search_entry=172.18.1.20
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=172.18.1.20
++ dirname -- ./scripts/network-extract.shell
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
+ echo
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
+ newline
+ [[ search == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search == \d\e\b\u\g ]]
+ local count=1
++ IFS=,
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ search == \h\e\l\p ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
++ echo 10.0.0.1
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ IFS=,
+ declare -a execute__netwowrk_extract
++ echo 10.0.1.2
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ config =~ ^(search|s)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ which awk
++ which awk
+++ base64
++++ basename ./scripts/devops-resources.shell
++ which awk
+ [[ -z cisco ]]
++ which awk
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+++ tr -dc a-zA-Z0-9
+ export LC_ALL=C
+ LC_ALL=C
++ tr -d '\r'
+ [[ true == true ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=192.168.1.10
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
++ echo -e --verbose
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ grep -v '^\s*$'
+ local last_search_entry=192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
++ grep -v '^#'
+ local awk_bin=/usr/bin/awk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ] ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z fortinet ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ true == true ]]
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ IFS=,
++ echo 10.0.2.3
++ alias network-configs--helper=network_configs__helper
++ IFS=,
++ echo 172.16.1.6
++ alias network-extract--helper=network_extract__helper
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ source ./scripts/configs-objects.shell
++ echo -e --verbose
++ [[ -n '' ]]
+ newline
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local count=1
++ tr -d '\r'
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias serialize-object=configs_objects
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ IFS=,
+ [[ config =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
++ echo 172.16.0.5
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ config == \d\e\b\u\g ]]
++ grep -v '^\s*$'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'indent=            '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local first_search_entry=10.0.0.1
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ declare -a execute__netwowrk_extract
+ local last_search_entry=10.0.0.1
+ [[ config =~ ^(extract|x)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
++ export jobs_location=jobs
+ ((  count == 0  ))
+ (( i++ ))
+ IFS==
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ read -r key value
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ search =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ jobs_location=jobs
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search =~ ^(console|o)$ ]]
++ mkdir -p jobs
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MYjffvNRkD
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MYjffvNRkD
++ printf '%*s' 12 ''
++ grep -v '^#'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ nl='\n'
++ which awk
+ source ./scripts/devops-resources.shell
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ newline
+ local count=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'indent=            '
+ [[ true == true ]]
++ alias list-file=list_file
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias log-error=log_error
+ newline
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ alias print-message=message
+ (( i < count ))
+ newline
++ alias print-newline=newline
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ echo
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
++ alias pause=pause
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ touch console/network-extract.console
+ (( i < count ))
++ alias print-line=print
+ [[ search =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias print-file=print_file
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ (( i = 0 ))
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ search == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ (( i++ ))
+ [[ search == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
++ which awk
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ alias system-metrics=system_metrics
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ which awk
+ local count=1
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ ((  count == 0  ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ alias validate-address=validate_address
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ newline
+ local count=1
++ alias warning-message=warning
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
++ export LC_ALL=C
+ (( i = 0 ))
+ echo
++ LC_ALL=C
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ echo
++ export cache_location=.cache
++ cache_location=.cache
+ (( i++ ))
++ export logs_location=logs
+ (( i < count ))
++ logs_location=logs
++ mkdir -p logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local first_search_entry=192.0.2.50
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local last_search_entry=192.0.2.50
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ] ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ for xitem in "${@}"
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
+ IFS==
+ ((  count == 0  ))
+ read -r key value
+ [[ -z fortinet ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ true == true ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo
+ IFS=' 	
+ (( i++ ))
'
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export console_output=false
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ console_output=false
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ newline
+ [[ -z '' ]]
+ local count=1
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ]]
+ output_dir=reports/172.18.1.20/cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list != *,* ]]
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local first_search_entry=192.168.1.11
+ local last_search_entry=192.168.1.11
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'indent=            '
+ [[ true == true ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ echo
+ local count=1
+ ((  count == 0  ))
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local 'indent=            '
+ [[ extract =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(export|r)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ (( i++ ))
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ true == true ]]
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ IFS==
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ local count=1
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'extracted_configuration={
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ result=0
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ newline
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
++ dirname -- ./scripts/network-extract.shell
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.t3bljkziyq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console --export --verbose
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ export console_location=console
++ console_location=console

++ mkdir -p console
++ echo -e --platform=cisco
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
config firewall address
domain-name edge.dc.example.com
 edit "Spidey-Sandbox"

  set subnet 10.0.1.2 255.255.255.255
interface GigabitEthernet0/1
  set comment "QA node in Peter's Lab"
 nameif inside
 next
 security-level 100
end ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ set -euo pipefail
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ export LC_ALL=C
ASA Version 9.14(3)
+ LC_ALL=C
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ output_dir=reports/192.168.1.10/fortinet
+ [[ verbose =~ ^(config|c)$ ]]
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ IFS=' 	
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ echo -e --platform=cisco
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
+ [[ -z '' ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ debug=false
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -z '' ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ dry_run=false
config firewall address
+ [[ -z true ]]
+ [[ -z '' ]]
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ export console_output=false
  set comment "QA node in Peter'\''s Lab"
 next
+ console_output=false
end'
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
++ tr -d '\r'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.u7u9malbly/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ [[ config == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
++ touch console/run.console
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ grep -v '^#'
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ project_status=run.done
++ touch run.done
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYc7fKzl8G
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYc7fKzl8G
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ script_filename=network-extract.shell
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ mktemp -d
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
+ local first_search_entry=172.31.255.254
+ local last_search_entry=172.31.255.254
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ true == true ]]
++ echo -e --export
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(extract|x)$ ]]
+ local first_search_entry=192.168.0.1
++ alias log-error=log_error
+ [[ search =~ ^(logger|l)$ ]]
+ local last_search_entry=192.168.0.1
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
++ alias print-message=message
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ] ]]
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
++ alias pause=pause
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-line=print
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ IFS==
+ read -r key value
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local count=1
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local target_config=.cache/resources/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export LC_ALL=C
+ [[ config == \d\r\y\-\r\u\n ]]
++ LC_ALL=C
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xp1RPPKsFl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xp1RPPKsFl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(extract|x)$ ]]
++ targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_platform=cisco
++ alias detect-vendor=detect_vendor
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
++ alias exit-error=exit_error
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --platform=cisco
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ alias print-newline=newline
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(extract|x)$ ]]
+ output_dir=reports/10.0.0.1/fortinet
++ alias system-metrics=system_metrics
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.a3g6sgmr0k/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ [[ export =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console --export --verbose
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+++ echo -n devops-resources.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ echo -e --verbose
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias parse-listings--helper=parse_listings__helper
++ which awk
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b959NonUYO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b959NonUYO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ dirname reports/172.31.255.254/misc/switch1.conf
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ source ./scripts/configs-objects.shell
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export actions_logfile=console/run.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
++ actions_logfile=console/run.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ touch console/run.console
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ output_dir=reports/172.31.255.254/misc
+ [[ -z '' ]]
+ export console_output=false
+ [[ ! -d reports/172.31.255.254/misc ]]
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ [[ -z '' ]]
+ LC_ALL=C
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ output_dir=reports/192.168.0.1/cisco
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list != *,* ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ mapfile -t search_terms
++ IFS=,
++ echo 10.10.10.10
+ [[ logger =~ ^(config|c)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ -n '' ]]
+ [[ logger =~ ^(console|o)$ ]]
++ mkdir -p jobs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
++ which awk
+ [[ logger =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ mktemp -d
+ [[ logger =~ ^(search|s)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ mktemp -d
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ which awk
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ tr -d '\r'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
++ grep -v '^\s*$'
++ echo -e --export
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ echo -e --platform=fortinet
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uPSZfaIJm9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mmJA3c5Fvw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uPSZfaIJm9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mmJA3c5Fvw
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
+ script_filename=network-extract.shell
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ targets_location=targets
++ alias relative-configpath=relative_configpath
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias validate-address=validate_address
+ script_filename=network-extract
++ alias warning-message=warning
++ alias warning-message=warning
+ export network_extract__console=console/network-extract.console
++ export LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
+ network_extract__console=console/network-extract.console
++ LC_ALL=C
+ touch console/network-extract.console
++ export 'nl=\n'
++ export 'nl=\n'
++ nl='\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export cache_location=.cache
++ cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p logs
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local SCRIPT_DIR=./scripts
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OeOBt3b5YH
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OeOBt3b5YH
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ export actions_logfile=console/run.console
+ source ./scripts/devops-resources.shell
++ actions_logfile=console/run.console
++ touch console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias list-file=list_file
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ local first_search_entry=192.168.0.100
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local last_search_entry=192.168.0.100
+ [[ export =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ [[ export =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ local export_objects=true
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
++ alias print-message=message
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export project_status=run.done
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
++ project_status=run.done
+ local export_objects=true
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
++ touch run.done
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ local target_platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=fortinet
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ] ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
++ alias pause=pause
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias print-line=print
+ for xitem in "${@}"
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ ((  count == 0  ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(logger|l)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ local verbose=true
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]]
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ search_terms=()
+ for xitem in "${@}"
+ declare -a search_terms
+ IFS==
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]]
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ alias warning-message=warning
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
++ export LC_ALL=C
+ [[ logger =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ export 'nl=\n'
++ nl='\n'
+ [[ logger =~ ^(search|s)$ ]]
+ local 'indent=            '
++ which awk
+ [[ true == true ]]
+++ base64
+ newline
+ local count=1
++ IFS=,
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
++ export default_addresses=ips.list
+ (( i < count ))
+ (( i < count ))
++ default_addresses=ips.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo 10.0.0.1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++++ basename ./scripts/devops-resources.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export default_devices=devices.list
++ default_devices=devices.list
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ export default_matrix=matrix.json
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ cache_location=.cache
+ [[ logger == \h\e\l\p ]]
++ export logs_location=logs
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ logger == \d\e\b\u\g ]]
++ logs_location=logs
+ [[ logger == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export jobs_location=jobs
++ export jobs_location=jobs
+++ tr -dc a-zA-Z0-9
++ jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mkdir -p jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ echo -e --verbose
+ declare -a execute__netwowrk_extract
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5fvzopgkv1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export project_status=run.done
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ project_status=run.done
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ touch run.done
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ oIFS=' 	
'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
++ which awk
+ IFS==
++ echo -e --verbose
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
++ echo -e --platform=cisco
++ tr -d '\r'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+++ echo -n devops-resources.shell
++ echo -e --verbose
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
++ alias network-configs--helper=network_configs__helper
++ mkdir -p console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ export targets_location=targets
+ [[ -z true ]]
++ targets_location=targets
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ -z '' ]]
++ targets_logfile=.cache/targets.jobs
+ script_helper=false
+ [[ platform =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(search|s)$ ]]
++ jobs_location=jobs
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ mkdir -p jobs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ verbose =~ ^(export|r)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local awk_bin=/usr/bin/awk
+ local verbose=true
+ local 'extracted_configuration={
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
  "vendor": "cisco",
+ IFS=' 	
  "model": "",
'
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ -z '' ]]
}

+ debug=false
version 12.4
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -z '' ]]
+ dry_run=false
+ [[ logger =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
hostname access-sw1-west
+ console_output=false
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ local first_search_entry=192.168.100.100
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ script_helper=false

+ local last_search_entry=192.168.100.100
object-group network MGMT-ACCESS
 description Management objects
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 192.168.0.1
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
 network-object host 192.168.0.100
+ [[ false == true ]]
 network-object host 10.10.10.10

+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
object-group network Mutant-WiFi
 description Controlled guest devices
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
 network-object host 10.10.10.10'
+ search_terms=()
+ declare -a search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ [[ logger == \h\e\l\p ]]
+ result=0
+ [[ logger == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ [[ -n {
+ [[ export =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
+ local export_objects=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ] ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ base64
++ touch console/run.console
++ IFS=,
+ (( i < count ))
++ echo 172.31.255.254
+ for xitem in "${@}"
+ IFS==
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
  "vendor": "cisco",
  "model": "",
+ [[ export == \d\r\y\-\r\u\n ]]
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ export == \v\e\r\b\o\s\e ]]
}

version 12.4
hostname access-sw1-west

+ echo
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ (( i++ ))

+ for xitem in "${@}"
+ (( i < count ))
object-group network Mutant-WiFi
++++ basename ./scripts/devops-resources.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ IFS==
+ read -r key value
+ [[ -z cisco ]]
+ [[ true == true ]]
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+++ tr -dc a-zA-Z0-9
++ tr -d '\r'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
++ echo 192.168.0.1
++ grep -v '^\s*$'
+ newline
+ local count=1
++ tr -d '\r'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+++ base64
+++ echo -n devops-resources.shell
+ print '{
  "vendor": "cisco",
++ tr -d '\r'
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ grep -v '^\s*$'
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
++ echo -e --export
 description Controlled guest devices
 network-object host 10.10.10.10'
++++ basename ./scripts/devops-resources.shell
++ grep -v '^\s*$'
+++ tr -dc a-zA-Z0-9
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export project_status=run.done
++ project_status=run.done
++ [[ -n '' ]]
++ touch run.done
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fzmw10eymj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
+ (( i < count ))
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ alias parse-cisco=main
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ declare -a execute__netwowrk_extract
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+++ echo -n devops-resources.shell
+ [[ cfg == \c\f\g ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(export|r)$ ]]
+ newline
++ export console_location=console
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
++ console_location=console
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ echo
++ mkdir -p console
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ [[ logger =~ ^(config|c)$ ]]
+ local first_search_entry=192.168.1.10
+ [[ logger =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.1.10
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ] ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
++ which awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ export targets_location=targets
++ [[ -n '' ]]
++ targets_location=targets
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ 5 -lt 4 ]]
+ local first_search_entry=10.0.2.3
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ local last_search_entry=10.0.2.3
+ ((  count == 0  ))
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ export targets_location=targets
+ [[ export =~ ^(platform|p)$ ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ local first_search_entry=203.0.113.25
++ alias network-configs--helper=network_configs__helper
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local count=1
+ ((  count == 0  ))
+ [[ true == true ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ newline
+ local count=1
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
++ alias network-extract--helper=network_extract__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ source ./scripts/configs-objects.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ ((  count == 0  ))
++ [[ -n '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
++ __CONFIGS_OBJECTS__=1
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo
+ (( i < count ))
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z cisco ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ alias parse-cisco=main
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --export
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
++++ basename ./scripts/devops-resources.shell
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ IFS==
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ output_dir=reports/192.168.0.100/cisco
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ IFS==
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ tr -d '\r'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q7cq4kdewf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ echo -n devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ source ./scripts/devops-helpers.shell
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

++ [[ -n '' ]]
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
++ readonly __DEVOPS_HELPERS__=1
  set comment "Main node at Stark Tower"
++ __DEVOPS_HELPERS__=1
++ grep -v '^#'
 next
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
end'
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(export|r)$ ]]
+ source ./scripts/configs-objects.shell
++ alias network-configs--helper=network_configs__helper
+ result=0
++ [[ -n '' ]]
+ [[ config =~ ^(extract|x)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -n {
++ __CONFIGS_OBJECTS__=1
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ config =~ ^(logger|l)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end
++ printf '%*s' 12 ''
+ [[ config =~ ^(platform|p)$ ]]

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ config =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
++ alias serialize-object=configs_objects
++ alias network-extract--helper=network_extract__helper
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'indent=            '
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ IFS==
++ alias serialize-object=configs_objects
+ read -r key value
+ [[ -n '' ]]
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ -z x ]]
+ export LC_ALL=C
+ LC_ALL=C
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
  set comment "Main node at Stark Tower"
+ alias parse-cisco=main
 next
end ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ script_filename=network-extract.shell
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
++ mktemp -d
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ output_dir=reports/192.168.100.100/cisco
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ] ]]
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ script_filename=network-extract.shell
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ script_filename=network-extract
+ read -r key value
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
+ local count=1
+ ((  count == 0  ))
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ touch console/network-extract.console
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i++ ))
+ newline
+ echo
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ print '{
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
  "vendor": "fortinet",
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
  "model": "FortiGate-60F",
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \h\e\l\p ]]
  "version": "v7.2.5.F",
+ (( i = 0 ))
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ final_output=reports/10.0.2.3/misc/fw1.cfg
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ true == true ]]
+ [[ -n {
+ [[ verbose =~ ^(extract|x)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ newline
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ verbose =~ ^(logger|l)$ ]]

+ echo
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\e\b\u\g ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ (( i < count ))

+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
config firewall address
+ local verbose=true
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
 edit "IronMan-HQ"
+ [[ conf == \c\o\n\f ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ echo
+ [[ verbose == \h\e\l\p ]]
+ IFS=' 	
 next
+ final_output=reports/10.0.1.2/misc/switch1.conf
end
+ (( i++ ))

+ local 'prompt_message=Enter configuration file to be parsed: '
config firewall address
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ verbose == \d\e\b\u\g ]]
 edit "IronMan-HQ"
'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z '' ]]
+ debug=false
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -en '{
+ [[ -z '' ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ dry_run=false
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
  "version": "v7.2.5.F",
+ [[ -z true ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ -z '' ]]

+ configs_objects
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\r\y\-\r\u\n ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ export console_output=false

+ [[ verbose == \v\e\r\b\o\s\e ]]
config firewall address
+ console_output=false
+ [[ extract =~ ^(config|c)$ ]]
+ local verbose=true
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ IFS=' 	
end
'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]

+ debug=false
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ [[ -z '' ]]
+ [[ -z cisco ]]
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
+ local SCRIPT_DIR=./scripts
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ script_helper=false
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ false == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ sed '1{/^[[:space:]]*$/d;}'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yKs5mriw35
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yKs5mriw35
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias validate-address=validate_address
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1jtzbgkybi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console --export --verbose
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3e5dvpo7cj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console --export --verbose
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ oIFS=' 	
'
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ tr -d '\r'
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ [[ config == \h\e\l\p ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ local script_filename=cisco-configs.awk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
+ newline
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
++ mktemp -d
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ tr -d '\r'
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d08EYpAiax
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d08EYpAiax
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ export project_status=run.done
++ declare -gr __DEVOPS_RESOURCES__=1
++ project_status=run.done
++ touch run.done
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias system-metrics=system_metrics
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias warning-message=warning
+ IFS==
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ local SCRIPT_DIR=./scripts
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ local script_filename=cisco-configs.awk
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ export logs_location=logs
++ logs_location=logs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ mkdir -p logs
++ grep -v '^#'
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ export jobs_location=jobs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
++ dirname -- ./scripts/network-extract.shell
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ jobs_location=jobs
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ [[ extract =~ ^(console|o)$ ]]

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
+ [[ extract =~ ^(export|r)$ ]]
 description Internet-facing proxy systems
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ IFS=,
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo 172.18.1.20
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p jobs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ which awk
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/misc/fw3.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ IFS==
+ read -r key value
+ read -r key value
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ IFS=,
+ result=0
+ [[ -n {
++ echo 192.0.2.50
+++ base64
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n '' ]]
+ [[ logger =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ readonly __NETWORK_EXTRACT__=1
+ [[ logger =~ ^(extract|x)$ ]]
+ __NETWORK_EXTRACT__=1
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ set -euo pipefail
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(logger|l)$ ]]
version 16.9
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ platform =~ ^(export|r)$ ]]

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ newline 2
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ local 'indent=            '
++ export console_location=console
+ [[ true == true ]]
+ local count=2
++ console_location=console

object network BlackWidow-Core
 host 172.16.1.6
+ (( i = 0 ))
++ mkdir -p console
+ (( i < count ))
 description Branch router uplink NAT ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+++ echo -n devops-resources.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ echo -e --export
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.1.2
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract == \h\e\l\p ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ alias serialize-object=configs_objects
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ IFS==
+ read -r key value
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ newline 2
++ which awk
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ local count=2
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ export project_status=run.done
++ project_status=run.done
+ local 'indent=            '
++ touch run.done
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --export
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
++ echo -e --export
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ logger =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --verbose
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --export
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export actions_logfile=console/run.console
+ [[ logger == \v\e\r\b\o\s\e ]]
++ actions_logfile=console/run.console
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
++ touch console/run.console
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ script_filename=network-extract
+ [[ config == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ network_extract__console=console/network-extract.console
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ IFS==
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ read -r key value
+ (( i < count ))
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(config|c)$ ]]
++ IFS=,
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ echo 192.168.1.11
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local 'indent=            '
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
+ newline
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ local count=1
++ targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(export|r)$ ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local export_objects=true
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
'
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ export == \d\e\b\u\g ]]
+ dry_run=false
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ -z true ]]
+ local export_objects=true
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ configs_objects
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.u1u5t9rgpx/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console --export --verbose
++ which awk
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ echo -e --verbose
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ newline
++ echo -e --verbose
+++ base64
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ local count=1
+ (( i = 0 ))
+ result=0
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
+ local awk_bin=/usr/bin/awk
  "model": "ASA",
+ echo
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i++ ))
domain-name global.dmz.example.net

+ (( i < count ))
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
++ grep -v '^\s*$'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ false == true ]]
+ [[ true == true ]]
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
++ grep -v '^#'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ mktemp -d
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ local 'extracted_configuration={
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))

interface Vlan10
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
 ip address 10.0.1.2 255.255.255.0'
+ [[ verbose =~ ^(console|o)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ result=0
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
  "domain": "",
+ [[ verbose =~ ^(search|s)$ ]]
  "hostname": ""
++ [[ -n '' ]]
}

+ newline 2
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
interface Vlan10
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'indent=            '
+ local verbose=true
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ verbose == \h\e\l\p ]]
+ IFS=' 	
'
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
 ip address 10.0.1.2 255.255.255.0 ]]
+ debug=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local verbose=true
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n '' ]]
+ IFS=' 	
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ readonly __NETWORK_EXTRACT__=1
+ newline
+ dry_run=false
'
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ echo
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export console_output=false
+ [[ -z '' ]]
+ console_output=false
+ (( i++ ))
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ [[ -z true ]]
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ script_helper=false
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
++ export project_status=run.done
+ [[ false == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console ]]
+ echo
+ [[ -z '' ]]
++ project_status=run.done
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i++ ))
+ local count=2
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i < count ))
+ search_terms=()
+ echo
+ declare -a search_terms
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list != *,* ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(export|r)$ ]]
+ echo
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ search_terms=()
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ declare -a search_terms
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ __NETWORK_EXTRACT__=1
++ touch run.done
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list != *,* ]]
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ search == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ configs_objects
+ local verbose=true
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=2
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
+ set -euo pipefail
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ IFS=' 	
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ source ./scripts/configs-objects.shell
'
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ dry_run=false
++ [[ -n '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z true ]]
++ readonly __CONFIGS_OBJECTS__=1
+ sed '1{/^[[:space:]]*$/d;}'
++ __CONFIGS_OBJECTS__=1
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ export console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ console_output=false
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local first_search_entry=10.0.0.1
+ local verbose=true
+ local last_search_entry=10.0.0.1
+ IFS=' 	
'
+ [[ -z '' ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ debug=false
+ [[ true == true ]]
+ echo
+ (( i++ ))
++ alias serialize-object=configs_objects
+ (( i < count ))
++ IFS=,
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo 192.168.1.10
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local count=1
interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ ((  count == 0  ))
++ echo -e --export
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ echo -e --export
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ search_terms=()

interface Vlan10
+ declare -a search_terms
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ local count=1
++ echo -e --export
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ extract == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z x ]]
+ export logs_location=logs
+ echo
+ logs_location=logs
+ (( i++ ))
+ mkdir -p logs
+ (( i < count ))
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
++ tr -d '\r'
++ tr -d '\r'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.soeu3HRHPC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.soeu3HRHPC
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ grep -v '^#'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ grep -v '^#'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ grep -v '^\s*$'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ export =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias validate-address=validate_address
+ [[ export =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ newline
+ [[ export =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local export_objects=true
++ export 'nl=\n'
++ nl='\n'
+ [[ export =~ ^(extract|x)$ ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ local count=1
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ export =~ ^(logger|l)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ newline 2
++ export cache_location=.cache
+ [[ export =~ ^(platform|p)$ ]]
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(search|s)$ ]]
++ mkdir -p logs
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ grep -v '^#'
+ for xitem in "${@}"
+ (( i = 0 ))
+ newline 2
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ newline
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ configs_objects
+ export LC_ALL=C
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local count=1
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ LC_ALL=C
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i++ ))
+ newline
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ local count=1
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ local parent_dir=reports/10.0.0.1/cisco
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ local 'extracted_configuration={
+ echo
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ (( i++ ))
  "domain": "",
  "hostname": "branch-isr-02"
+ (( i < count ))
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ export =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ result=0
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ config =~ ^(config|c)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ export =~ ^(export|r)$ ]]
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
+ local export_objects=true
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ search_terms=()
+ [[ config =~ ^(export|r)$ ]]
+ declare -a search_terms
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ export == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(export|r)$ ]]
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local first_search_entry=198.51.100.75
+ [[ export =~ ^(logger|l)$ ]]
+ local last_search_entry=198.51.100.75
+ [[ export =~ ^(platform|p)$ ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=192.168.0.1
+ [[ export == \h\e\l\p ]]
+ local last_search_entry=192.168.0.1
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ] ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ ((  count == 0  ))
+ configs_objects
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ ((  count == 0  ))
+ local count=1
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
++ mktemp -d
++ which awk
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "16.9",
+ newline
  "domain": "",
  "hostname": "branch-isr-02"
+ echo
}
+ local count=1

version 16.9
hostname branch-isr-02
+ (( i++ ))

object-group network Lantern-DMZ
+ (( i < count ))
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --verbose
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ echo
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
  "model": "",
+ (( i++ ))
  "version": "16.9",
  "domain": "",
+ (( i < count ))
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
++ basename reports/10.0.0.1/cisco/perimeter-fw1

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ local first_search_entry=192.0.2.50
+ local last_search_entry=192.0.2.50
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ export jobs_location=jobs
+ newline
++ jobs_location=jobs
+ local count=1
+ (( i = 0 ))
++ mkdir -p jobs
+ (( i < count ))
++ echo -e --platform=fortinet
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q7cq4kdewf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ -z cisco ]]
+ [[ true == true ]]
+ oIFS=' 	
'
+ newline
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local parent_dir=reports/172.18.1.20/cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ tr -d '\r'
++ dirname reports/10.0.0.1/misc/switch1.conf
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
++ grep -v '^\s*$'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ configs_objects
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ local verbose=true
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ IFS=' 	
'
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract == \h\e\l\p ]]
+ dry_run=false
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ configs_objects
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console ]]
+ newline 2
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]]
+ output_dir=reports/10.0.0.1/misc
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ ! -d reports/10.0.0.1/misc ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ targets_location=targets
+ [[ false == true ]]
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
++ export targets_logfile=.cache/targets.jobs
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ targets_logfile=.cache/targets.jobs
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ newline
+ newline
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ echo
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local search_pattern
+ [[ cfg == \c\f\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMGtx4rd2l
+ (( i++ ))
+ local parent_dir=reports/10.0.1.2/fortinet
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMGtx4rd2l
++ dirname reports/10.0.1.2/misc/switch1.conf
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ export 'nl=\n'
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ configs_objects
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ alias exit-error=exit_error
++ alias list-file=list_file
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ false == true ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ true == true ]]
++ alias print-message=message
++ command -v -- ./scripts/network-extract.shell
++ alias print-newline=newline
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ alias pause=pause
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ alias print-line=print
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ configs_objects
++ touch console/run.console
++ alias print-file=print_file
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ local first_search_entry=10.0.2.3
++ export LC_ALL=C
+ [[ verbose =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ local last_search_entry=10.0.2.3
+ [[ verbose =~ ^(search|s)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ verbose == \h\e\l\p ]]
++ export default_addresses=ips.list
++ tr -d '\r'
++ echo -e --platform=cisco
++ echo -e --verbose
++ printf '%*s' 12 ''
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ verbose == \d\e\b\u\g ]]
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ grep -v '^#'
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
++ cut -d/ -f2
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local parent_dir=reports/10.0.1.2/misc
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local search_pattern
+ [[ platform =~ ^(logger|l)$ ]]
+++ echo -n devops-resources.shell
+ local parent_dir=reports/192.0.2.50/cisco
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ output_dir=reports/198.51.100.75/cisco
+ IFS==
+ newline
+ read -r key value
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ output_dir=reports/192.168.0.1/cisco
+ local count=1
+ (( i = 0 ))
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ cfg == \c\f\g ]]
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ] ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-configs--ips.list ]'
+ configs_objects
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(console|o)$ ]]
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ basename reports/10.0.1.2/misc/switch1
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ command -v -- ./scripts/network-extract.shell
+ IFS=' 	
'
++ mktemp -d
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ cut -d/ -f2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ -z true ]]
+ local 'indent=            '
+ [[ -z '' ]]
+ [[ true == true ]]
+ export console_output=false
+ console_output=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console ]]
++ default_addresses=ips.list
+ [[ -z '' ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ local parent_dir=reports/172.16.1.6/cisco
++ logs_location=logs
++ mkdir -p logs
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ local search_pattern
+ [[ logger =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ logger =~ ^(logger|l)$ ]]
+ local search_pattern
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern
+ [[ logger =~ ^(search|s)$ ]]
+ local parent_dir=reports/172.16.0.5/cisco
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ local parent_dir=reports/192.168.1.11/cisco
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ base64
+ search_pattern=172.18.1.20
+ mkdir -p reports/172.18.1.20/cisco/.objects
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
++++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4EVtSHSSfP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4EVtSHSSfP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ script_helper=false
+ nl='\n'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ readonly __DEVOPS_HELPERS__=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
++ __DEVOPS_HELPERS__=1
+ search_terms=()
+ declare -a search_terms
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+++ tr -dc a-zA-Z0-9
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ local verbose=true
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ alias log-error=log_error
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
++ alias log-info=log_info
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias log-warn=log_warn
+ (( i++ ))
++ alias print-message=message
+ (( i < count ))
+ IFS=' 	
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias print-newline=newline
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias pause=pause
++ command -v -- ./scripts/network-extract.shell
++ alias print-line=print
++ alias print-file=print_file
++ basename reports/192.168.1.11/cisco/branch-isr-02
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ echo reports/10.0.1.2/misc/switch1.conf
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ IFS=,
++ echo 10.0.0.1
++ cut -d/ -f2
++ cut -d/ -f2
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+++ echo -n devops-resources.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ LC_ALL=C
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ echo -e --export
++ [[ 5 -lt 4 ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ alias parse-listings--helper=parse_listings__helper
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local search_pattern
++ which awk
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __CONFIGS_OBJECTS__=1
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
'
++ alias serialize-object=configs_objects
+ [[ -z '' ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ debug=false
+ [[ -z '' ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ dirname -- ./scripts/network-extract.shell
++ mktemp -d
+ [[ -z true ]]
++ which awk
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ which awk
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
++ echo -e --platform=fortinet
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.otv6yz43ld/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console --export --verbose
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
+ [[ extract =~ ^(search|s)$ ]]
+ oIFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console ]]
'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ -z '' ]]
++ IFS=,
+ IFS==
++ dirname -- ./scripts/network-extract.shell
+ read -r key value
++ echo 192.168.0.100
+ export LC_ALL=C
+ LC_ALL=C
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ export LC_ALL=C
  "hostname": ""
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ verbose =~ ^(console|o)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ local first_search_entry=10.10.10.10
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ verbose == \h\e\l\p ]]
++ export targets_location=targets
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ local count=2
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ output_dir=reports/203.0.113.25/cisco
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local parent_dir=reports/10.10.10.10/cisco
++ targets_location=targets
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ output_dir=reports/10.0.2.3/misc
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ script_helper=false
+ local 'extracted_configuration={
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
  "vendor": "cisco",
  "model": "",
+ [[ false == true ]]
  "version": "12.4",
+ [[ ! -d reports/10.0.2.3/misc ]]
  "domain": "",
++ cut -d/ -f2
+ newline
}
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "hostname": "access-sw1-west"
+ local count=1

+ (( i = 0 ))
+ (( i < count ))
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ local first_search_entry=172.16.1.6
+ (( i < count ))
+ echo
+ echo
+ local last_search_entry=172.16.1.6
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
+ [[ -z '' ]]
+ (( i++ ))
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ (( i++ ))
+ (( i < count ))
}
+ [[ true == true ]]

+ search_terms=()
version 12.4
hostname access-sw1-west

+ declare -a search_terms
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]]
interface Vlan1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list != *,* ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ mapfile -t search_terms
 ip address 172.31.255.254 255.255.255.0'
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ result=0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]

+ newline
object-group network MGMT-ACCESS
+ [[ -z '' ]]
 description Management objects
 network-object host 192.168.0.1
+ local count=1
+ export console_output=false
 network-object host 192.168.0.100
+ (( i = 0 ))
+ console_output=false
 network-object host 10.10.10.10'
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ result=0
+ script_helper=false
+ [[ false == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]]
hostname access-sw1-west
+ echo

interface Vlan1
+ search_terms=()
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ (( i++ ))
+ declare -a search_terms

+ (( i < count ))
++ mktemp -d
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]]
object-group network MGMT-ACCESS
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local count=1
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
 description Management objects
 network-object host 192.168.0.1
+ newline
 network-object host 192.168.0.100
++ basename reports/10.0.2.3/cisco/branch-isr-02
 network-object host 10.10.10.10 ]]
+ local count=1
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ElIiaNvuoP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ElIiaNvuoP
++ command -v -- ./scripts/network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list
+ source ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
++ alias exit-error=exit_error
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
++ alias list-file=list_file
 ip address 172.31.255.254 255.255.255.0'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ alias print-message=message
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ alias print-newline=newline
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --platform=fortinet
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ alias print-line=print
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ tr -d '\r'
++ which awk
++ grep -v '^\s*$'
++ alias system-metrics=system_metrics
+++ base64
++ dirname -- ./scripts/network-extract.shell
++++ basename ./scripts/devops-resources.shell
++ grep -v '^\s*$'
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7Yx2FJcL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7Yx2FJcL
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias validate-address=validate_address
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias warning-message=warning
++ export LC_ALL=C
++ alias print-newline=newline
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias pause=pause
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias print-line=print
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias print-file=print_file
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local awk_bin=/usr/bin/awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8H1PfCTt3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8H1PfCTt3
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
  "hostname": "fg-branch-vpn-01"
+ local search_pattern
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ export 'nl=\n'
++ alias validate-address=validate_address
 edit "Panther-Vault"
+ [[ search =~ ^(config|c)$ ]]
+ nl='\n'
+ local SCRIPT_DIR=./scripts
++ dirname -- ./scripts/network-extract.shell
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
++ export LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
++ LC_ALL=C
+ output_dir=reports/192.168.2.12/cisco
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ export 'nl=\n'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(console|o)$ ]]
++ nl='\n'
+ [[ search =~ ^(logger|l)$ ]]
  set subnet 192.168.1.10 255.255.255.255
++ export default_addresses=ips.list
  set comment "Wakandan data store"
 next
++ default_addresses=ips.list
+ newline
end'
++ declare -gr __DEVOPS_RESOURCES__=1
++ export default_devices=devices.list
++ default_devices=devices.list
+ local count=1
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ result=0
+ (( i = 0 ))
++ export cache_location=.cache
+ [[ platform =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ -n {
++ cache_location=.cache
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
  "vendor": "fortinet",
++ export logs_location=logs
+ local first_search_entry=172.16.1.6
++ logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
++ mkdir -p logs
+ local last_search_entry=172.16.1.6
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
++ alias exit-error=exit_error
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-60F",
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
++ alias list-file=list_file
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list
  "domain": "",
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ IFS==
++ dirname -- ./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ] ]]
+ [[ search == \h\e\l\p ]]
+ read -r key value
++ alias log-error=log_error
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
+ [[ true == true ]]
  "hostname": "fg-branch-vpn-01"
+ [[ search == \d\r\y\-\r\u\n ]]
}

+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-configs--ips.list ]'
#hostname="fg-branch-vpn-01"
+ for xitem in "${@}"
#model="FortiGate-60F"
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ IFS==
++ alias log-info=log_info
+ read -r key value
config firewall address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
  set comment "Wakandan data store"
 next
end ]]
+ local count=1
++ alias log-warn=log_warn
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ source ./scripts/devops-helpers.shell
++ alias print-message=message
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
++ alias print-newline=newline
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local first_search_entry=172.18.1.20
++ [[ -n '' ]]
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
++ readonly __DEVOPS_HELPERS__=1
+ (( i = 0 ))
+ local last_search_entry=172.18.1.20
++ __DEVOPS_HELPERS__=1
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
++ [[ 5 -lt 4 ]]
++ alias pause=pause
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
++ alias print-line=print
+ configs_objects
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
+ echo
+ print '{
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
++ alias print-file=print_file
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ] ]]
+ (( i < count ))
+ local search_pattern
  "version": "12.4",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'
  "domain": "",
  "hostname": "access-sw1-west"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
}
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-configs--ips.list ]'

++ alias relative-configpath=relative_configpath
version 12.4
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ] ]]
hostname access-sw1-west
+ local 'prompt_message=Enter configuration file to be parsed: '

interface Vlan1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
 ip address 192.168.0.1 255.255.255.0
+ [[ -z .cache/resources/misc/switch3.conf ]]
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
+ [[ -z cisco ]]
 network-object host 192.168.0.1
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
 network-object host 192.168.0.100
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-configs--ips.list ]'
 network-object host 10.10.10.10'
+ ((  count == 0  ))
++ alias system-metrics=system_metrics
+ local count=1
+ ((  count == 0  ))
+ [[ -n {
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ newline
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ local count=1
++ alias validate-address=validate_address
+ (( i++ ))
+ (( i = 0 ))
  "version": "12.4",
  "domain": "",
+ (( i < count ))
  "hostname": "access-sw1-west"
}

++ printf '%*s' 12 ''
version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ alias warning-message=warning
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
++ export LC_ALL=C
 network-object host 192.168.0.1
++ LC_ALL=C
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ IFS=,
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ echo
++ default_addresses=ips.list
++ echo 192.168.100.100
+ (( i++ ))
++ export default_devices=devices.list
+ (( i < count ))
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias network-extract--helper=network_extract__helper
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export logs_location=logs
+ source ./scripts/configs-objects.shell
++ logs_location=logs
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
++ mkdir -p logs
+ [[ -z cisco ]]
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
++ readonly __CONFIGS_OBJECTS__=1
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
++ __CONFIGS_OBJECTS__=1
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ local 'indent=            '
+ [[ true == true ]]
++ alias serialize-object=configs_objects
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ local count=1
+ (( i = 0 ))
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
  "version": "v7.2.5.F",
  "domain": "",
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "hostname": "fg-branch-vpn-01"
}

++ echo -e --export
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ cut -d/ -f2
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ alias parse-cisco=main
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z x ]]
+ echo
+ export logs_location=logs
+ logs_location=logs
+ (( i++ ))
+ mkdir -p logs
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ cut -d/ -f2
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ cut -d/ -f2
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filename=cisco-configs.awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ newline 2
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ local script_filename=cisco-configs.awk
++ which awk
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ output_dir=reports/172.16.1.6/fortinet
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ search_pattern=172.16.0.5
++ which awk
+ mkdir -p reports/172.16.0.5/cisco/.objects
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ case "${target_platform}" in
+ newline 2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
+ search_pattern=10.0.2.3
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ mkdir -p reports/10.0.2.3/cisco/.objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local parent_dir=reports/10.0.0.1/fortinet
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ script_filename=network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ echo
+ script_filename=network-extract
+ (( i++ ))
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ newline 2
+ network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ touch console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ grep -F 10.0.1.2
+ local SCRIPT_DIR=./scripts
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 203.0.113.25
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ local count=2
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ echo
+ for xitem in "${@}"
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ extract_location=reports/172.16.1.6/misc/switch3.conf
++ printf '%*s' 12 ''
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
++ export console_location=console
+ [[ config =~ ^(search|s)$ ]]
++ console_location=console
+ sed '/^[[:space:]]*$/d'
+ newline
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ mkdir -p console
+ for xitem in "${@}"
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ IFS=,
++ echo 10.0.2.3
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ which awk
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ dirname -- ./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ dirname -- ./scripts/network-extract.shell
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a execute__netwowrk_extract
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ newline
+ local 'extracted_configuration={
+ local count=1
++ export actions_logfile=console/run.console
  "vendor": "cisco",
++ actions_logfile=console/run.console
+ (( i = 0 ))
++ touch console/run.console
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ (( i < count ))
+ echo
++ export console_location=console
+ (( i++ ))
++ console_location=console
+ (( i < count ))
++ IFS=,
version 12.4
++ mkdir -p console
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo 192.168.1.10
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/172.16.1.6/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ echo -e --export
+ declare -a execute__netwowrk_extract
+ [[ false == true ]]
+ [[ true == true ]]
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ which awk
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.w8sla7pyh9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
  "domain": "",
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
  "hostname": "access-sw1-west"
                  BEGIN {
}
                    in_json_header = 0;

                    blk = "";
+ local search_pattern
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
version 12.4
                  /^}$/ {
+ local SCRIPT_DIR=./scripts
                    if (in_json_header == 1) {
hostname access-sw1-west
                      in_json_header = 0;

                      next;
interface Vlan100
                    }
 ip address 192.168.0.100 255.255.255.0
                  }
 description Guest VLAN Gateway
                  (in_json_header == 1) { next }

+ local script_filename=cisco-configs.awk
object-group network MGMT-ACCESS
 description Management objects
                  /^[^[:space:]]/ {
 network-object host 192.168.0.1
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object host 192.168.0.100
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local SCRIPT_DIR=./scripts
 network-object host 10.10.10.10'
                    blk = $0;
+ newline
+ local awk_bin=/usr/bin/awk
                    next;
                  }
+ case "${target_platform}" in
                  {
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
                    blk = blk divisor " " $0;
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
                  }
+ local script_filename=fortinet-configs.awk
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '

                  BEGIN {
version 12.4
                    in_json_header = 0;
hostname access-sw1-west
+ output_dir=reports/172.18.1.20/misc
                    blk = "";
                  }

                  /^[[:space:]]*$/ { next }
interface Vlan100
                  /^{$/ { in_json_header = 1; next }
 ip address 192.168.0.100 255.255.255.0
                  /^}$/ {
+ [[ ! -d reports/172.18.1.20/misc ]]
 description Guest VLAN Gateway
                    if (in_json_header == 1) {

                      in_json_header = 0;
object-group network MGMT-ACCESS
                      next;
 description Management objects
                    }
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
 network-object host 192.168.0.1
                  }
 network-object host 192.168.0.100
                  (in_json_header == 1) { next }
 network-object host 10.10.10.10 ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
                    blk = blk divisor " " $0;
                  }
+ local count=1
                  END {
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
                  }
+ echo -en '{
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ echo
  "domain": "",
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
  "hostname": "access-sw1-west"
}

+ local script_filepath=./scripts/extract/fortinet-configs.awk
version 12.4
hostname access-sw1-west

interface Vlan100
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ false == true ]]
++ export actions_logfile=console/run.console
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ actions_logfile=console/run.console
+ [[ true == true ]]
+ configs_objects
+ newline
++ which awk
++ touch console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo
++ export project_status=run.done
++ project_status=run.done
+ (( i++ ))
++ touch run.done
+ (( i = 0 ))
+ (( i < count ))
+ grep -F 10.0.2.3
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ output_dir=reports/172.16.1.6/misc
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ ! -d reports/172.16.1.6/misc ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ configs_objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ (( i < count ))
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ sed '1{/^[[:space:]]*$/d;}'
++ echo 192.168.2.12
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/172.31.255.254/misc/switch1.conf
+ grep -F 172.16.0.5
++ export targets_location=targets
++ targets_location=targets
++ which awk
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
++ touch console/run.console
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ export =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ grep -F 10.10.10.10
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ extract =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(logger|l)$ ]]
+ result=0
+ [[ 0 -ne 0 ]]
++ which awk
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
+ [[ extract == \h\e\l\p ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ extract == \d\e\b\u\g ]]
}

ASA Version 9.12(4)
+ [[ extract == \d\r\y\-\r\u\n ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ extract == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/1
 nameif inside
+ for xitem in "${@}"
 ip address 192.168.100.100 255.255.255.0
+ echo
 description Inside LAN segment

+ IFS==
object network Titan-WLAN-Host
+ read -r key value
 host 192.168.100.100
+ (( i++ ))
 description Backup inside NAT IP

+ (( i < count ))
object-group network Sector-Wireless
 description Staff WiFi clients
+ newline 2
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ result=0
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ configs_objects
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
++ cut -d/ -f2
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local count=2
+ newline
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/172.31.255.254/misc
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+++ base64
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ local parent_dir=reports/192.168.0.1/cisco

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ sed '/^[[:space:]]*$/d'
+ cat -n

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++++ basename ./scripts/devops-resources.shell
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ IFS=,
++ echo 10.10.10.10
++ echo -e --platform=fortinet
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+++ echo -n devops-resources.shell
++ IFS=,
++ echo 172.16.1.6
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local 'indent=            '
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ (( i < count ))
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filename=cisco-configs.awk
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-helpers.shell
++ basename reports/192.168.0.1/cisco/access-sw1-west
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ newline
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local count=1
+ (( i = 0 ))
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
++ export project_status=run.done
+ local script_filename=cisco-configs.awk
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ newline
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local count=1
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ search_pattern=10.0.0.1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ declare -a execute__netwowrk_extract
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local parent_dir=reports/192.168.1.10/fortinet
+ [[ verbose =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ basename reports/172.31.255.254/misc/switch1
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ project_status=run.done
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ touch run.done
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ return 0
+ [[ verbose == \h\e\l\p ]]
+ newline
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ debug=false
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ export console_output=false
+ source ./scripts/configs-objects.shell
+ console_output=false
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ -z true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ newline
  "hostname": "dmz-fw2-backup"
}
++ [[ -n '' ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ readonly __CONFIGS_OBJECTS__=1
+ (( i = 0 ))
++ __CONFIGS_OBJECTS__=1
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ platform =~ ^(export|r)$ ]]
+ [[ false == true ]]
++ alias serialize-object=configs_objects
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ search_terms=()
+ declare -a search_terms
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ local target_platform=fortinet
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list != *,* ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console

ASA Version 9.12(4)
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
++ which awk
++ which awk
+ cat -n
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ local 'indent=            '
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
+ newline 2
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ print '{
  "vendor": "cisco",
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ case "${target_file}" in
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
object network Sentinel-NAT
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
++ which awk
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ config == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ local search_pattern
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ local awk_bin=/usr/bin/awk
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ configs_objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ cat -n
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
++ grep -v '^\s*$'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ cat -n
+ [[ true == true ]]
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ local awk_bin=/usr/bin/awk
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/172.31.255.254/misc/switch1.conf
++ cut -d/ -f2
+++ base64
++++ basename ./scripts/devops-resources.shell
++ cut -d/ -f2
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ local 'indent=            '
+ [[ true == true ]]
+ newline 2
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ 7 -eq 0 ]]
+ result=0
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7zxrewoln0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n {
+ case "${target_platform}" in
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
+ oIFS=' 	
                    /^[[:space:]]*$/ { next }
'

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
  "vendor": "cisco",

+ for xitem in "${@}"
  "model": "",
                    # Start of a new block
  "version": "",
                    /^config / {
  "domain": "",
                      if (blk != "") print blk;
+ IFS==
  "hostname": ""
                      blk = $0;
}
                      next;

                    }
object-group network Fortress-Wireless
+ read -r key value

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }
+ newline

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
+ local count=1
                      blk = blk divisor " " $0;
                    }

+ (( i = 0 ))
                    END {
                      # No need for final print — all blocks end with end
                    }
+ (( i < count ))
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo
++ export targets_location=targets
+ (( i++ ))
++ targets_location=targets
+++ echo -n devops-resources.shell
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ logger =~ ^(config|c)$ ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ return 0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ result=0
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
  "version": "",
+ local first_search_entry=192.168.2.12
+ [[ logger =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": ""
}
+ local last_search_entry=192.168.2.12

object-group network Metropolis-Internal
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local 'extracted_configuration={
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
  "vendor": "cisco",
+ [[ logger =~ ^(platform|p)$ ]]
  "model": "",
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
+ local count=2
 network-object host 192.168.2.12

+ [[ logger =~ ^(search|s)$ ]]
  "version": "16.9",
+ newline
+ [[ extract =~ ^(config|c)$ ]]
  "domain": "",
+ [[ logger == \h\e\l\p ]]
object network Kent-Server
 host 10.0.2.3
+ local count=1
 description Internal mail & identity services ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ ((  count == 0  ))
+ local count=1
+ IFS==
+ read -r key value
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ true == true ]]
+ (( i = 0 ))
 description Secure wireless access layer
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
 network-object host 172.18.1.20
+ (( i < count ))
 network-object host 192.168.1.10 ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo
+ search_pattern=192.168.0.1
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console ]]
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
+ echo
++ cut -d/ -f2
++ IFS=,
++ echo 172.18.1.20
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
++ IFS=,
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local 'indent=            '
+ [[ false == true ]]
++ echo 172.16.1.6
+ local count=1
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ search_pattern=172.31.255.254
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/172.31.255.254/misc/.objects
+ echo
+ (( i++ ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
+ source ./scripts/devops-helpers.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
++ [[ -n '' ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ grep -F 10.0.0.1
++ alias parse-listings--helper=parse_listings__helper
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
++ sed -e '1s|^\(-\)\{1,\}||'
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ result=0
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
++ alias network-configs--helper=network_configs__helper
 network-object host 192.168.2.12
+ [[ -n {

  "vendor": "cisco",
object network Kent-Server
  "model": "",
 host 10.0.2.3
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  "version": "16.9",
 description Internal mail & identity services ]]
  "domain": "",
+ local parent_dir=reports/192.168.0.100/cisco
  "hostname": "branch-isr-02"
}

version 16.9
+ declare -a execute__netwowrk_extract
hostname branch-isr-02
+ echo -en '{

  "vendor": "cisco",
interface GigabitEthernet0/0/1
  "model": "",
 ip address 192.168.2.12 255.255.255.0
  "version": "",
 description Workstation LAN
  "domain": "",

  "hostname": ""
object-group network Hydra-Edge
}
 description Remote site uplink

 network-object host 192.168.2.12
object-group network Metropolis-Internal
 network-object host 198.51.100.75 ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
+ (( i++ ))
 description Internal mail & identity services'
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias network-extract--helper=network_extract__helper
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ (( i = 0 ))
+ source ./scripts/configs-objects.shell
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))
++ [[ -n '' ]]
+ echo
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ configs_objects
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ alias serialize-object=configs_objects
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
 network-object host 192.168.1.10 ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -en '{
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ newline
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
++ echo -e --platform=fortinet
+ alias parse-cisco=main
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ declare -a execute__netwowrk_extract
+ mkdir -p logs
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
++++ basename ./scripts/devops-resources.shell
++ echo -e --export
+ [[ search =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ newline
+ read -r key value
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--branch-isr-02.cfg.console
++ which awk
++ basename reports/192.168.0.100/cisco/access-sw1-west
+++ echo -n devops-resources.shell
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ newline 2
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ true == true ]]
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
++ which awk
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ newline
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ [[ false == true ]]
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ case "${target_file}" in
++ readonly __DEVOPS_HELPERS__=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--access-sw1-west.cfg.console
++ __DEVOPS_HELPERS__=1
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ local export_objects=true
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ result=0
+ [[ true == true ]]
+ IFS==
+ exit 0
+ read -r key value
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Qz6tit5YxY ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ export =~ ^(logger|l)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Qz6tit5YxY
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ alias parse-listings--helper=parse_listings__helper
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
++ alias network-configs--helper=network_configs__helper
+ configs_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ local search_pattern
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias serialize-object=configs_objects
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ local 'indent=            '
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ for xitem in "${@}"
+ local parent_dir=reports/192.168.100.100/cisco
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ result=0
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline 2
+ local 'extracted_configuration={
+ result=0
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ exit 0
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
  "domain": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZHBncHM1BJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZHBncHM1BJ
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
  set comment "Remote sniper node"
 next
end'
+ [[ cfg == \c\f\g ]]
+ grep -F 172.31.255.254
+ result=0
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -n {
  "vendor": "fortinet",
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/misc/fw1.cfg'
+ alias parse-cisco=main
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -z x ]]
  "hostname": "campus-sw-access01"
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ exit 0
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lm3RQNW5zM ]]
+ (( i++ ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lm3RQNW5zM
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
}
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console

version 12.2
hostname campus-sw-access01

+ [[ logger =~ ^(platform|p)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ grep -F 192.168.0.1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ case "${target_platform}" in
+ result=0
+ exit 0
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YtxY8lfA9I ]]
+ local 'indent=            '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YtxY8lfA9I
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
                    (in_json_header == 1) { next }

                    # Skip platform metadata
+ local count=2
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ (( i = 0 ))
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ (( i < count ))
                    }

                    # Add edit line to current block
+ echo
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
+ (( i++ ))
                      next;
                    }
+ (( i < count ))

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ echo
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
+ (( i++ ))
                    }

+ (( i < count ))
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ echo -e --verbose
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ sed '/^[[:space:]]*$/d'
  set comment "Remote sniper node"
 next
end'
+ newline
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -n {
  "vendor": "cisco",
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
  "model": "",
  "version": "12.2",
+ local count=1
  "domain": "",
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
  "hostname": "campus-sw-access01"
}
+ (( i = 0 ))

version 12.2
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ echo -en '{
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ echo
+ (( i++ ))
}

+ (( i++ ))
version 12.2
+ (( i < count ))
+ (( i < count ))
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 10.10.10.10'
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ grep -F 192.168.1.10
++ echo -e --export
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ export jobs_location=jobs
+ local export_objects=true
++ jobs_location=jobs
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ mkdir -p jobs
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ [[ -n '' ]]
++ mkdir -p jobs
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ config =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ config =~ ^(logger|l)$ ]]
++ alias serialize-object=configs_objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ echo
+ read -r key value
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z x ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z cisco ]]
+ [[ true == true ]]
+ mkdir -p logs
+ newline
+ search_pattern=10.0.1.2
+ local count=1
+ search_pattern=192.0.2.50
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ echo
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i++ ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ (( i < count ))
++ tr -d '\r'
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ cut -d/ -f2
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ mkdir -p reports/10.0.1.2/misc/.objects
+ grep -F 10.0.0.1
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^#'
++ echo -e --platform=cisco
+ [[ search =~ ^(console|o)$ ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ search =~ ^(platform|p)$ ]]
++ console_location=console
++ mkdir -p console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ search_pattern=172.16.1.6
+ mkdir -p reports/172.16.1.6/cisco/.objects
++ cut -d/ -f2
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ search =~ ^(console|o)$ ]]
+ IFS=' 	
'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export console_output=false
+ console_output=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ [[ -z '' ]]
+ script_helper=false
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]]
+ IFS==
+ read -r key value
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]]
+ output_dir=reports/172.16.0.5/misc
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ ! -d reports/172.16.0.5/misc ]]
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local export_objects=true
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ export actions_logfile=console/run.console
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ actions_logfile=console/run.console
++ touch console/run.console
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
++ tr -d '\r'
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ IFS=,
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
++ echo 192.168.0.1
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
+ grep -F 172.18.1.20
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ cat -n
++ echo -e --platform=cisco
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ export project_status=run.done
+ [[ config =~ ^(logger|l)$ ]]
++ project_status=run.done
+ [[ config =~ ^(platform|p)$ ]]
++ touch run.done
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ case "${target_platform}" in
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ config =~ ^(extract|x)$ ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ config =~ ^(logger|l)$ ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ config =~ ^(platform|p)$ ]]
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ config =~ ^(search|s)$ ]]
                  END {
+ local awk_bin=/usr/bin/awk
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ config == \h\e\l\p ]]
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export project_status=run.done
+ IFS==
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ read -r key value
++ project_status=run.done
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ touch run.done
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ search_pattern=192.168.1.11
+ (( i < count ))
+ echo
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 198.51.100.75
+ local first_search_entry=192.168.1.11
+ local last_search_entry=192.168.1.11
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-configs--ips.list ]'
+ grep -F 172.16.1.6
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ ((  count == 0  ))
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ (( i < count ))
+ network_extract__console=console/network-extract.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ touch console/network-extract.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ echo
+ (( i++ ))
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ local target_platform=cisco
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform == \h\e\l\p ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
++ sed -e '1s|^\(-\)\{1,\}||'
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
++ printf '%*s' 12 ''
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --export
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local 'indent=            '
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ which awk
+ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
++++ basename ./scripts/devops-resources.shell
+ declare -a execute__netwowrk_extract
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ cat -n
+ [[ export =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 10.0.1.2
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local SCRIPT_DIR=./scripts
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ exit 0
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ command -v -- ./scripts/network-extract.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dNffJERNd ]]
+ [[ logger =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ return 0
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0dNffJERNd
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fzmw10eymj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
+ [[ logger == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS__=1
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console --export --verbose
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ config =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ oIFS=' 	
++ [[ 5 -lt 4 ]]
'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ dirname -- ./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
+ [[ platform =~ ^(config|c)$ ]]
+ source ./scripts/configs-objects.shell
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
+ [[ platform =~ ^(export|r)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ which awk
++ alias serialize-object=configs_objects
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias serialize-object=configs_objects
++ echo -e --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ result=0
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ dirname -- ./scripts/network-extract.shell
+ logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsCGflPLE
+ mkdir -p logs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsCGflPLE
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ logs_location=logs
+ mkdir -p logs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --export
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias pause=pause
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ output_dir=reports/192.168.1.11/fortinet
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local count=1
+ (( i = 0 ))
+ IFS=' 	
+ (( i < count ))
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z '' ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export console_output=false
+ console_output=false
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ search_terms=()
+ grep -F 192.0.2.50
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list != *,* ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ mapfile -t search_terms
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ newline
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
++ which awk
++ printf '%*s' 12 ''
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console ]]
+ local script_filename=cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--branch-isr-02.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ IFS=,
++ echo 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
+ [[ verbose =~ ^(config|c)$ ]]
++ echo 192.0.2.50
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ verbose =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ script_filename=network-extract.shell
+ IFS=' 	
'
+ script_filename=network-extract
+ [[ -z '' ]]
+ debug=false
+ export network_extract__console=console/network-extract.console
+ [[ -z '' ]]
+ dry_run=false
+ network_extract__console=console/network-extract.console
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ touch console/network-extract.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ console_output=false
+ declare -a execute__netwowrk_extract
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console ]]
+ local 'indent=            '
+ [[ -z '' ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ script_filename=network-extract
+ for xitem in "${@}"
+ IFS==
+ export network_extract__console=console/network-extract.console
+ read -r key value
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ which awk
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ which awk
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ IFS==
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ which awk
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ which awk
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
++ tr -d '\r'
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ result=0
+ local count=1
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ logger =~ ^(logger|l)$ ]]
+ grep -F 192.168.1.11
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ echo -e --verbose
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ result=0
+ exit 0
+ local script_filename=fortinet-configs.awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UaSYFihSRD ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UaSYFihSRD
++ grep -v '^#'
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5fvzopgkv1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console --export --verbose
+ local awk_bin=/usr/bin/awk
+ oIFS=' 	
'
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5fvzopgkv1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
++ which awk
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ IFS=,
++ echo 10.10.10.10
++ printf '%*s' 12 ''
++ echo -e --export
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.1.10
+ [[ platform =~ ^(export|r)$ ]]
+ local last_search_entry=192.168.1.10
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ] ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ local 'indent=            '
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local verbose=true
+ newline
+ IFS==
+ read -r key value
+ IFS=' 	
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ [[ search =~ ^(export|r)$ ]]
+ echo
+ [[ -z '' ]]
+ dry_run=false
+ (( i++ ))
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z '' ]]
+ export console_output=false
+ [[ search =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list
+ newline
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ local 'extracted_configuration={
+ (( i = 0 ))
+ IFS==
  "vendor": "cisco",
+ read -r key value
+ (( i < count ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ search_terms=()
  "model": "",
+ declare -a search_terms
+ echo
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ newline
+ local first_search_entry=192.168.0.100
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mapfile -t search_terms
  "version": "",
  "domain": "",
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
  "hostname": ""
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local last_search_entry=192.168.0.100
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z cisco ]]
++ printf '%*s' 12 ''
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ cat -n
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ IFS=,
++ echo 172.16.0.5
+ newline
+ local count=1
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ] ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
}
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))

object-group network Avengers-Office
 description VLAN access layer
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
++ IFS=,
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo 192.168.1.11
++ echo -e --verbose
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local export_objects=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'indent=            '
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local awk_bin=/usr/bin/awk
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ newline
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local count=1
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ (( i++ ))
+ (( i < count ))
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ echo
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
++ grep -v '^\s*$'
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ which awk
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
 network-object 192.168.12.0 255.255.255.0'
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
  "domain": "",
  "hostname": ""
}
+ [[ search =~ ^(config|c)$ ]]

+ case "${target_file}" in
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ search =~ ^(console|o)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
++ grep -v '^#'
  "domain": "",
+ [[ search =~ ^(export|r)$ ]]
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ search =~ ^(extract|x)$ ]]
 network-object 192.168.12.0 255.255.255.0'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list
+ echo
+ [[ search == \h\e\l\p ]]
+ (( i++ ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
++ echo -e --verbose
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ dry_run=false
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ console_output=false
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "hostname": ""
}

object-group network Wakanda-Core
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
 network-object host 10.0.2.3
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ local awk_bin=/usr/bin/awk
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
 network-object 10.0.0.0 255.255.255.0
+ [[ logger == \v\e\r\b\o\s\e ]]

+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
object network Panther-Gateway
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ script_helper=false
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
 host 10.0.2.3
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 description Secure outbound concentrator'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ local first_search_entry=203.0.113.25
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
 host 10.0.2.3
+ local last_search_entry=203.0.113.25
 description Secure outbound concentrator ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ newline
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ] ]]
+ local count=1
+ [[ -z cisco ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ echo
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ (( i++ ))
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ local count=1
+ newline
+ ((  count == 0  ))
+ newline
+ local count=1
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ echo
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "12.2",
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ config =~ ^(config|c)$ ]]
+ local 'indent=            '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ print '{
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "",
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
  "version": "",
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ newline
+ local count=1
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": "campus-sw-access01"
}

+ echo
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ newline
  "version": "",
  "domain": "",
  "hostname": ""
}
 network-object host 192.168.0.100

 network-object host 10.10.10.10'
+ local count=1
object-group network Wakanda-Core
+ (( i = 0 ))
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ (( i < count ))
 network-object 10.0.0.0 255.255.255.0
++ dirname reports/192.168.1.10/misc/fw3.cfg

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ which awk
  "hostname": ""
}

+ sed '1{/^[[:space:]]*$/d;}'
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ [[ config =~ ^(export|r)$ ]]
  "model": "",
  "version": "12.2",
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ config =~ ^(extract|x)$ ]]
}
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'

version 12.2
hostname campus-sw-access01

+ [[ config =~ ^(logger|l)$ ]]
interface Vlan1
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ [[ config =~ ^(platform|p)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
++ echo -e --export
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ result=0
+ [[ verbose =~ ^(platform|p)$ ]]
++ tr -d '\r'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+++ base64
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++++ basename ./scripts/devops-resources.shell
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ! -d reports/192.168.1.10/misc ]]
+ newline 2
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ local count=2
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ result=0
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ config =~ ^(console|o)$ ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ echo
+ case "${target_file}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ [[ config =~ ^(export|r)$ ]]
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ [[ config =~ ^(platform|p)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ [[ config =~ ^(search|s)$ ]]
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ local export_objects=true
+ [[ cfg == \c\f\g ]]
+++ echo -n devops-resources.shell
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ newline
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ echo
+ newline
+ newline
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ (( i < count ))
+ echo
+ [[ export == \h\e\l\p ]]
+ return 0
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ export == \v\e\r\b\o\s\e ]]
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ return 0
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ -n {
+ local awk_bin=/usr/bin/awk
  "vendor": "cisco",
  "model": "ASA",
  "hostname": "dmz-fw2-backup"
  "version": "9.14(3)",
+ local count=2
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
}
+ (( i = 0 ))


+ [[ true == true ]]
ASA Version 9.12(4)
+ (( i < count ))
+ local 'extracted_configuration={
ASA Version 9.14(3)
hostname dmz-fw2-backup
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
+ echo
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ source ./scripts/devops-helpers.shell
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console ]]
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console ]]
object-group network Sector-Wireless
 description Staff WiFi clients
++ [[ -n '' ]]
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ case "${target_file}" in
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
+ echo -en '{
+ local first_search_entry=10.0.0.1
++ [[ 5 -lt 4 ]]
  "vendor": "cisco",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
  "model": "ASA",
+ local last_search_entry=10.0.0.1
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console ]]

+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
ASA Version 9.12(4)
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
hostname dmz-fw2-backup
+ [[ true == true ]]
domain-name global.dmz.example.net
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ case "${target_file}" in
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
++ tr -d '\r'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-configs--ips.list ]'
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
version 16.9
+ newline
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
hostname perimeter-fw1
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ source ./scripts/configs-objects.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ local 'prompt_message=Enter configuration file to be parsed: '
hostname branch-isr-02

object network Hydra-Link
+ [[ -z .cache/resources/misc/switch3.conf ]]
 host 198.51.100.75
 description Branch NAT egress

++ alias serialize-object=configs_objects
+ [[ -z cisco ]]
+ (( i++ ))
object-group network Hydra-Edge
+ [[ true == true ]]
+ (( i < count ))
domain-name edge.dc.example.com

+ echo
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ local 'extracted_configuration={
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--branch-isr-02.cfg.console
+ echo
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ (( i++ ))
  "hostname": "fg-campus-core"
}
+ (( i < count ))

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ result=0
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n {
  "vendor": "fortinet",
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
  "model": "FortiGate-200F",
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
  "version": "",
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
++ dirname -- ./scripts/network-extract.shell
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ alias parse-cisco=main
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ ls -al --color=auto .cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ output_dir=reports/203.0.113.25/cisco
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ newline
+ newline 2
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
 description Remote site uplink
+ (( i = 0 ))
 network-object host 192.168.2.12
+ local SCRIPT_DIR=./scripts
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ local count=2
+ [[ extract =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ IFS==
+ read -r key value
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ configs_objects
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
 network-object host 198.51.100.75'
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
+ [[ -n {
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
}
+ newline

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console ]]
version 16.9
hostname branch-isr-02

object network Hydra-Link
+ local first_search_entry=10.10.10.10
+ local count=1
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
 host 198.51.100.75
+ case "${target_file}" in
+ (( i = 0 ))
+ newline 2
+ local 'indent=            '
+ local last_search_entry=10.10.10.10
+ search_pattern=192.168.0.100
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ true == true ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
 description Branch NAT egress

object-group network Hydra-Edge
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
 description Remote site uplink
+ [[ extract =~ ^(config|c)$ ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FN61Sx6QgL/network-extract--switch1.conf.console
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=2
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ ((  count == 0  ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ 0 -ne 0 ]]
+ return 0
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i < count ))
+ local count=1
+ print '{
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "ASA",
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i < count ))
  "version": "9.14(3)",
+ [[ extract =~ ^(search|s)$ ]]
  "domain": "edge.dc.example.com",
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ extract == \h\e\l\p ]]
object-group network Avengers-DMZ
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 description Public access layer
+ [[ extract == \d\e\b\u\g ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 network-object 192.168.2.0 255.255.255.0'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ true == true ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ which awk
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
  "version": "9.14(3)",
+ local count=1
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console ]]

ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ -z fortinet ]]
domain-name edge.dc.example.com
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console

object-group network Avengers-DMZ
+ [[ true == true ]]
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console ]]
+ echo -en '{
+ newline
+ case "${target_file}" in
  "vendor": "cisco",
  "model": "ASA",
+ script_filename=network-extract.shell
  "version": "9.14(3)",
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ local count=1
  "domain": "edge.dc.example.com",
+ script_filename=network-extract
  "hostname": "perimeter-fw1"
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
}
+ (( i = 0 ))

+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ export network_extract__console=console/network-extract.console
ASA Version 9.14(3)
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
hostname perimeter-fw1
+ echo
+ network_extract__console=console/network-extract.console
domain-name edge.dc.example.com

object-group network Avengers-DMZ
+ (( i++ ))
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ (( i < count ))
+ newline
 description Public access layer
+ touch console/network-extract.console
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local count=1
 network-object 192.168.2.0 255.255.255.0'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ echo
+ echo
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ result=0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ 0 -ne 0 ]]
+ newline
+ print '{
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
  "version": "16.9",
+ local count=1
  "domain": "",
  "hostname": "branch-isr-02"
}

+ (( i = 0 ))
version 16.9
hostname branch-isr-02

+ (( i < count ))
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress
+ echo

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
+ [[ platform =~ ^(config|c)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ [[ platform =~ ^(console|o)$ ]]
object network Hydra-Link
+ [[ false == true ]]
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
++ dirname -- ./scripts/network-extract.shell
 network-object host 198.51.100.75'
++ echo -e --platform=cisco
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --platform=fortinet
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.0.2.3/misc
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
++ tr -d '\r'
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ newline
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ echo
+ local script_filename=cisco-configs.awk
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q7cq4kdewf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console --export --verbose
+ [[ false == true ]]
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ echo
+ (( i++ ))
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
++ grep -v '^\s*$'
+ configs_objects
++ IFS=,
++ echo 192.168.1.10
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ basename reports/10.0.2.3/misc/fw3
+ declare -a execute__netwowrk_extract
++ dirname reports/10.0.0.1/misc/switch3.conf
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ result=0
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ exit 0
++ which awk
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
+ configs_objects
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ output_dir=reports/192.168.2.12/fortinet
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ verbose =~ ^(export|r)$ ]]

+ message '                .cache/resources/misc/switch3.conf'
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
 network-object host 192.168.1.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ IFS==
+ newline
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ read -r key value
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ newline
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i++ ))
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ (( i < count ))
+ echo
+ return 0
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ local search_pattern
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console ]]
+ export console_output=false
+ [[ false == true ]]
+ console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ -z '' ]]
+ script_helper=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ [[ false == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]]
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ search_terms=()
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ configs_objects
+ declare -a search_terms
++ command -v -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yHCI2QCtUM ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yHCI2QCtUM
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wz5BUgbgr5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Wz5BUgbgr5
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ false == true ]]
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ true == true ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ newline 2
+ cat -n
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ cat -n
+ newline 2
+ newline 2
+ local count=2
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ local search_pattern
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ exit 0
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lGLxgByqeG ]]
+ newline
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lGLxgByqeG
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.1.10/misc
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ tr -d '\r'
++ cut -d/ -f2
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ true == true ]]
+ __NETWORK_EXTRACT__=1
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ grep -v '^\s*$'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ set -euo pipefail
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ export LC_ALL=C
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ LC_ALL=C
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console ]]
+ return 0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ script_filename=network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ script_filename=network-extract
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local parent_dir=reports/10.0.2.3/misc
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
++ basename reports/192.168.1.10/misc/fw1
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ return 0
++ grep -v '^#'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ mktemp -d
+ newline 2
+ grep -F 192.168.0.100
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
+ [[ logger =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
+ [[ logger =~ ^(extract|x)$ ]]
 ip address 172.16.1.6 255.255.255.0'
+ local count=2
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ result=0
+ search_pattern=192.168.100.100
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ mkdir -p reports/192.168.100.100/cisco/.objects
  "model": "",
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
+ for xitem in "${@}"
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ which awk
++ basename reports/10.0.2.3/misc/fw1
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ false == true ]]
+ [[ true == true ]]
+ cat -n
+ [[ true == true ]]
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
+ print '{
+ (( i++ ))
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
  "vendor": "cisco",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ] ]]
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
  "hostname": ""
}

+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-configs--ips.list ]'
interface Vlan2
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
 ip address 172.16.1.6 255.255.255.0'
+ [[ false == true ]]
+ [[ true == true ]]
+ configs_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ local count=1
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ configs_objects
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ true == true ]]
+ result=0
+ newline
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4A9yP8EzO ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U4A9yP8EzO
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--access-sw1-west.cfg.console
+ [[ 7 -eq 0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7zxrewoln0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aq1bmGKAUA/network-extract--switch1.conf.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console --export --verbose
+ touch console/network-extract.console
+ sed '1{/^[[:space:]]*$/d;}'
+ oIFS=' 	
'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QIhuZRDe6o
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QIhuZRDe6o
++ echo -e --export
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local search_pattern
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
+ newline 2
++ alias list-file=list_file
+ [[ export =~ ^(console|o)$ ]]
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ export =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ result=0
+ local export_objects=true
+ newline
++ alias log-info=log_info
+ [[ export =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ true == true ]]
++ alias log-warn=log_warn
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
++ alias print-message=message
+ configs_objects
+ (( i < count ))
+ local count=2
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ (( i = 0 ))
+ return 0
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ newline

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ local count=1
++ alias pause=pause
+ (( i = 0 ))
 network-object host 172.16.0.5

+ (( i < count ))
object network Edge-Terminal
+ echo
+ [[ true == true ]]
++ alias print-line=print
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
++ alias relative-configpath=relative_configpath
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
++ IFS=,
+ (( i = 0 ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ echo
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
++ echo 192.168.2.12
+ [[ false == true ]]
+ [[ true == true ]]
++ alias validate-address=validate_address
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
++ alias warning-message=warning
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ export LC_ALL=C
++ LC_ALL=C
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ export 'nl=\n'
+ configs_objects
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ declare -a execute__netwowrk_extract
++ logs_location=logs
++ mkdir -p logs
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ echo reports/10.0.2.3/misc/fw1.cfg
+ newline 2
+ local parent_dir=reports/10.10.10.10/cisco
+ local parent_dir=reports/172.16.1.6/fortinet
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ cut -d/ -f2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.168.100.100
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ result=0
+ [[ export =~ ^(console|o)$ ]]
+ exit 0
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8LgVfb5Z9P ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8LgVfb5Z9P
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GcV2QbmX4i ]]
+ local export_objects=true
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GcV2QbmX4i
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ which awk
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/misc/switch3.conf
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local parent_dir=reports/172.18.1.20/misc
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ search_pattern=10.0.2.3
++ export jobs_location=jobs
+ mkdir -p reports/10.0.2.3/misc/.objects
++ jobs_location=jobs
++ mkdir -p jobs
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ local search_pattern
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--branch-isr-02.cfg.console
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ read -r key value
+ [[ -n '' ]]
++ echo -e --verbose
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ echo
+ __NETWORK_EXTRACT__=1
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ echo
+ export LC_ALL=C
+ (( i++ ))
+ LC_ALL=C
+ (( i < count ))
 host 172.16.0.5
 description Internet firewall handoff'
++ basename reports/172.18.1.20/misc/fw1
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ newline
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ cut -d/ -f2
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local search_pattern
+ [[ true == true ]]
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ result=0
+ newline
+ configs_objects
+ exit 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L58cPC8Rf1 ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.L58cPC8Rf1
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ (( i++ ))
'
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ console_output=false
+ [[ -z true ]]
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ case "${target_file}" in
+ script_helper=false
+ [[ false == true ]]
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                  BEGIN {
                    in_json_header = 0;
                    in_json_header = 0;
                    blk = "";
                    blk = "";
                  }
                  }
                  /^[[:space:]]*$/ { next }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  /^}$/ {
                    if (in_json_header == 1) {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      in_json_header = 0;
                      next;
                      next;
                    }
                    }
                  }
                  }
                  (in_json_header == 1) { next }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    blk = $0;
                    next;
                    next;
                  }
                  }
                  {
                  {
                    blk = blk divisor " " $0;
                    blk = blk divisor " " $0;
                  }
                  }
                  END {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
                ' reports/10.0.2.3/misc/fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ 7 -eq 0 ]]
+ cat -n
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.7zxrewoln0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ dirname reports/172.16.1.6/misc/switch3.conf
+ oIFS=' 	
'
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ IFS==
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ grep -F 10.0.2.3
+ [[ true == true ]]
+ grep -F 192.168.1.10
++ echo -e --verbose
++ echo reports/172.18.1.20/misc/fw1.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ search_pattern=172.16.1.6
+ search_pattern=10.10.10.10
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ mkdir -p reports/10.10.10.10/cisco/.objects
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
++ tr -d '\r'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--access-sw1-west.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ export actions_logfile=console/run.console
++ grep -v '^#'
++ actions_logfile=console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
++ touch console/run.console
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local parent_dir=reports/172.16.1.6/misc
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ local parent_dir=reports/10.0.0.1/misc
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rpcMNa6oZF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rpcMNa6oZF
+ [[ false == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6RI4yQDzTW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6RI4yQDzTW
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ search_pattern=172.18.1.20
+ source ./scripts/devops-resources.shell
+ mkdir -p reports/172.18.1.20/misc/.objects
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ [[ -n '' ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
++ declare -gr __DEVOPS_RESOURCES__=1
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ [[ search =~ ^(config|c)$ ]]
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end
++ [[ 5 -lt 4 ]]

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ [[ search =~ ^(console|o)$ ]]
 next
end'
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ search =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ result=0
+ [[ search =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ alias exit-error=exit_error
+ [[ search =~ ^(logger|l)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
}
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'

#hostname="fg-branch-vpn-01"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ search == \h\e\l\p ]]
config system interface
+ configs_objects
+ [[ search == \d\e\b\u\g ]]
 edit "internal"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ for xitem in "${@}"
+ IFS==
+ read -r key value
  set ip 192.168.2.12 255.255.255.0
++ alias log-error=log_error
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
++ alias log-info=log_info
 next
end ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias system-metrics=system_metrics
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
++ basename reports/172.16.1.6/misc/switch3
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ case "${target_platform}" in
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias validate-address=validate_address
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ alias warning-message=warning
                      in_json_header = 0;
                      next;
                    }
                  }
++ export LC_ALL=C
                  (in_json_header == 1) { next }
++ LC_ALL=C
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ export 'nl=\n'
                  }
++ nl='\n'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
++ export default_addresses=ips.list
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
+ result=0
  set subnet 192.168.2.12 255.255.255.255
+ newline
  set comment "Primary LAN gateway"
 next
+ [[ 0 -ne 0 ]]
end'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
++ basename reports/10.0.0.1/misc/switch1
+ [[ true == true ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ grep -F 203.0.113.25
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ (( i < count ))
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ result=0
  set comment "Primary LAN gateway"
 next
end'
+ exit 0
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ local first_search_entry=203.0.113.25
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gtJX5NAQYD ]]
+ local last_search_entry=203.0.113.25
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gtJX5NAQYD
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
++ echo -e --config=.cache/resources/misc/fw1.cfg

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    /^#(hostname|model|config-version)=/ { next }
                  BEGIN {

                    in_json_header = 0;
                    # Start of a new block
                    blk = "";
                    /^config / {
                  }
                      if (blk != "") print blk;
                  /^[[:space:]]*$/ { next }
                      blk = $0;
                  /^{$/ { in_json_header = 1; next }
                      next;
                  /^}$/ {
                    }
                    if (in_json_header == 1) {

                      in_json_header = 0;
                    # Add edit line to current block
                      next;
                    /^ edit / {
                    }
                      blk = blk divisor " " $0;
                  }
                      next;
                  (in_json_header == 1) { next }
                    }
                  /^[^[:space:]]/ {

                    if (blk != "" && !seen[blk]++) print blk "\n";
                    # Add next to block
                    blk = $0;
                    /^[[:space:]]*next$/ {
                    next;
                      blk = blk divisor " " $0;
                  }
                      next;
                  {
                    }
                    blk = blk divisor " " $0;

                  }
                    # Finalize block at end
                  END {
                    /^[[:space:]]*end$/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = blk divisor $0;
                  }
                      if (blk != "" && !seen[blk]++) print blk;
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw1.list
++ export project_status=run.done
++ project_status=run.done
++ touch run.done
+ [[ true == true ]]
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ newline
+ grep -F 10.10.10.10
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--dmz-fw2-backup.cfg.console
+ newline 2
+ cat -n
+ grep -F 172.16.1.6
+ case "${target_platform}" in
+ local count=2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ (( i = 0 ))
                    in_json_header = 0;
                    blk = "";
+ (( i < count ))
+ echo
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ echo 192.168.100.100
+ newline
++ echo reports/172.16.1.6/misc/switch3.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local target_config=.cache/resources/misc/fw1.cfg
+ declare -a execute__netwowrk_extract
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
+ [[ config == \h\e\l\p ]]
++ cut -d/ -f2
+ return 0
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ grep -F 172.18.1.20
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console ]]
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local search_pattern
+ newline 2
+ [[ search =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
++ tr -d '\r'
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
++ which awk
+ configs_objects
+ local parent_dir=reports/192.168.2.12/cisco
+ configs_objects
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ newline
++ grep -v '^\s*$'
+ local count=1
+ result=0
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ return 0
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7mm6fwyaX6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7mm6fwyaX6
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
++ grep -v '^#'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
+ local count=2
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
+ search_pattern=172.16.1.6
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ newline
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ mkdir -p reports/172.16.1.6/misc/.objects
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ echo
+ [[ search =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+++ base64
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ (( i < count ))
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ false == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++++ basename ./scripts/devops-resources.shell
+ [[ true == true ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+++ tr -dc a-zA-Z0-9
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ configs_objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
++ echo reports/10.0.0.1/misc/switch1.conf
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+++ echo -n devops-resources.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw1.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ cat -n
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ [[ true == true ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ output_dir=reports/203.0.113.25/fortinet
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ newline
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ source ./scripts/devops-helpers.shell
+ case "${target_file}" in
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw1.cfg.console
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
++ __DEVOPS_HELPERS__=1
+ local count=1
++ [[ 5 -lt 4 ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i++ ))
+ search_pattern=10.0.0.1
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ mkdir -p reports/10.0.0.1/misc/.objects
+ return 0
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
++ export jobs_location=jobs
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ jobs_location=jobs
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
++ mkdir -p jobs
+ newline
+ local count=1
+ local search_pattern
+ (( i++ ))
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ [[ 0 -ne 0 ]]
+ local first_search_entry=192.168.0.1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ local last_search_entry=192.168.0.1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(console|o)$ ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-configs--ips.list ]'
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local count=1
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ ((  count == 0  ))
+ [[ extract =~ ^(search|s)$ ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ false == true ]]
+ [[ extract == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ case "${target_platform}" in
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ source ./scripts/configs-objects.shell
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ platform =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
++ readonly __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(export|r)$ ]]
++ __CONFIGS_OBJECTS__=1
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ local count=1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ platform =~ ^(extract|x)$ ]]
                  BEGIN {
                    in_json_header = 0;
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
                    blk = "";
+ (( i = 0 ))
+ newline
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias serialize-object=configs_objects
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ echo
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
+ grep -F 172.16.1.6
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ logs_location=logs
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ mkdir -p logs
+ newline
+ [[ -z fortinet ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local parent_dir=reports/192.168.2.12/fortinet
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ sed '/^[[:space:]]*$/d'
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ result=0
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGgOWo3mc ]]
+ local parent_dir=reports/192.0.2.50/cisco
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dUGgOWo3mc
++ export console_location=console
+ result=0
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ exit 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnCfyt556m ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jnCfyt556m
+ local search_pattern
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
++ console_location=console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console ]]
++ mkdir -p console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ IFS==
+ read -r key value
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ configs_objects
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ script_filename=network-extract.shell
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ script_filename=network-extract
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ export network_extract__console=console/network-extract.console
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ network_extract__console=console/network-extract.console
+ newline
+ touch console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console ]]
+ local search_pattern
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ cat -n
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ case "${target_platform}" in
end ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ which awk
++ basename reports/192.0.2.50/cisco/perimeter-fw1
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
++ cut -d/ -f2
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ exit 0
+ cat -n
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qlEFf4Kzt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qlEFf4Kzt
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ cut -d/ -f2
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ configs_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console ]]
+ local target_platform=cisco
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.a3G6SGMr0k/network-extract--fw1.cfg.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ 7 -eq 0 ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS==
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q7cq4kdewf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console --export --verbose
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local count=1
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ oIFS=' 	
+ grep -F 10.0.0.1
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo
'
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ return 0
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ config == \v\e\r\b\o\s\e ]]
++ touch console/run.console
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local search_pattern
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uxrECgaWkT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uxrECgaWkT
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ IFS=,
+ search_pattern=198.51.100.75
++ echo 203.0.113.25
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ return 0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ search_pattern=192.168.2.12
+ [[ true == true ]]
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ which awk
+ newline 2
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ echo -e --platform=fortinet
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ newline
+ result=0
+ exit 0
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eWKPHrQhPs ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eWKPHrQhPs
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ export project_status=run.done
+ result=0
++ project_status=run.done
+ [[ 0 -ne 0 ]]
++ touch run.done
+ [[ true == true ]]
+ local parent_dir=reports/172.16.0.5/misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ output_dir=reports/192.168.0.1/fortinet
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ [[ logger =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U7U9MAlbLy/network-extract--switch3.conf.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ case "${target_platform}" in
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ search_pattern=192.0.2.50
+ [[ search =~ ^(platform|p)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ search =~ ^(search|s)$ ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ mkdir -p reports/192.0.2.50/cisco/.objects
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ [[ search == \h\e\l\p ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ search == \d\e\b\u\g ]]
                    blk = $0;
                    next;
+ [[ search == \d\r\y\-\r\u\n ]]
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ search == \v\e\r\b\o\s\e ]]
                  }
                  END {
+ for xitem in "${@}"
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ basename reports/172.16.0.5/misc/fw3
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ grep -F 192.168.2.12
++ command -v -- ./scripts/network-extract.shell
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ grep -F 192.168.2.12
++ echo -e --export
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ configs_objects
+ result=0
+ exit 0
+ sed '/^[[:space:]]*$/d'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3iXpoc2j9p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3iXpoc2j9p
++ export targets_location=targets
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ local search_pattern
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IP0Jvrs96k ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IP0Jvrs96k
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ cat -n
+ [[ platform =~ ^(extract|x)$ ]]
+ grep -F 198.51.100.75
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ echo -e --platform=cisco
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
++ echo reports/172.16.0.5/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+++ base64
++ cut -d/ -f2
++++ basename ./scripts/devops-resources.shell
+ local target_platform=fortinet
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local first_search_entry=10.10.10.10
+ [[ platform =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ command -v -- ./scripts/network-extract.shell
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local search_pattern
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ local count=1
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
++ which awk
+ [[ true == true ]]
+ [[ platform == \h\e\l\p ]]
+ local last_search_entry=10.10.10.10
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ newline
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+++ echo -n devops-resources.shell
+ configs_objects
++ IFS=,
+ (( i = 0 ))
++ echo 203.0.113.25
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ echo
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --export
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z fortinet ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ output_dir=reports/10.10.10.10/fortinet
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ printf '%*s' 12 ''
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local 'indent=            '
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(platform|p)$ ]]
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list
+ [[ export == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ search == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS==
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i = 0 ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ result=0
+ echo
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ return 0
+ [[ true == true ]]
++ which awk
++ echo reports/10.0.2.3/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 192.168.0.100
+ cat -n
++ cut -d/ -f2
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_pattern=192.168.0.1
+ mkdir -p reports/192.168.0.1/cisco/.objects
++ echo -e --export
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ 0 -ne 0 ]]
+ local search_pattern
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local export_objects=true
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/192.168.1.11/fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ return 0
+ search_pattern=10.0.2.3
+ [[ true == true ]]
++ which awk
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ logger =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
++ echo -e --verbose
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ cut -d/ -f2
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ for xitem in "${@}"
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console ]]
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console ]]
+ local 'indent=            '
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ local export_objects=true
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ source ./scripts/devops-helpers.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ export == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ [[ -n '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 192.0.2.50
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ printf '%*s' 12 ''
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ local 'indent=            '
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ newline
  "hostname": ""
}

+ grep -F 192.168.0.1
object-group network Wakanda-Core
 description National Core Routing Zone
+ local count=1
 network-object host 192.168.1.10
+ (( i = 0 ))
+ (( i < count ))
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ echo
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "domain": "",
  "hostname": ""
}
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

object-group network Wakanda-Core
 description National Core Routing Zone
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local search_pattern
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ search_pattern=10.10.10.10
+ [[ verbose =~ ^(config|c)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
++ echo -e --export
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ output_dir=reports/10.10.10.10/fortinet
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
+ local verbose=true
  "version": "",
++ echo -e --verbose
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n {
+ case "${target_file}" in
+ IFS=' 	
'
  "vendor": "cisco",
  "model": "",
+ [[ -z '' ]]
  "version": "",
  "domain": "",
+ debug=false
  "hostname": ""
}
+ [[ -z '' ]]

+ dry_run=false
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ [[ -z true ]]
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ echo -en '{
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--branch-isr-02.cfg.console
+ [[ -z true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console ]]
  "hostname": ""
}
+ [[ -z '' ]]

object-group network Wakanda-Core
+ script_helper=false
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ false == true ]]
 network-object 10.0.0.0 255.255.255.0'
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(config|c)$ ]]
++ echo 10.0.0.1
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ search_terms=()
+ [[ export =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list != *,* ]]
+ [[ export == \h\e\l\p ]]
+ case "${target_platform}" in
+ mapfile -t search_terms
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
                  BEGIN {
+ search_pattern=172.16.0.5
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ declare -a execute__netwowrk_extract
                      in_json_header = 0;
                      next;
                    }
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p reports/172.16.0.5/misc/.objects
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ which awk
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ grep -F 10.0.2.3
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
++ [[ 5 -lt 4 ]]
++ cut -d/ -f2
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ IFS=,
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo 10.10.10.10
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ sed '/^[[:space:]]*$/d'
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
++ dirname -- ./scripts/network-extract.shell
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ grep -v '^\s*$'
++ grep -v '^#'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'extracted_configuration={
+ local export_objects=true
+ newline 2
  "vendor": "cisco",
+ result=0
+ local awk_bin=/usr/bin/awk
+ search_pattern=192.168.1.11
  "model": "ASA",
+ print '{
+ [[ export =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "9.14(3)",
  "version": "12.2",
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
  "domain": "edge.dc.example.com",
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local count=2
+ mkdir -p reports/192.168.1.11/fortinet/.objects
  "domain": "",
  "hostname": "perimeter-fw1"
+ [[ export =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
}
  "hostname": "campus-sw-access01"

}
ASA Version 9.14(3)

+ [[ true == true ]]
version 12.2
hostname campus-sw-access01
hostname perimeter-fw1

+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
object-group network Floor-Networks
domain-name edge.dc.example.com
+ (( i = 0 ))
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ (( i < count ))
 network-object host 10.10.10.10'
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ result=0
+ exit 0
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pS3WiLQjXD ]]
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pS3WiLQjXD

+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
interface GigabitEthernet0/0
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n {
 nameif outside
  "vendor": "cisco",
+ [[ verbose =~ ^(search|s)$ ]]
  "model": "",
 security-level 0
+ (( i++ ))
  "version": "12.2",
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
 ip address 203.0.113.25 255.255.255.0
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "",
+ (( i < count ))
+ local target_config=.cache/resources/misc/fw1.cfg
 description External Internet-facing Interface
  "hostname": "campus-sw-access01"
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
}

+ [[ verbose =~ ^(config|c)$ ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
object network NAT-Edge

+ [[ verbose == \d\r\y\-\r\u\n ]]
 host 203.0.113.25
version 12.2
+ newline
hostname campus-sw-access01
+ [[ export == \h\e\l\p ]]

+ [[ true == true ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
 network-object host 10.10.10.10 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo -en '{
+ echo
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ (( i++ ))
  "hostname": "campus-sw-access01"
}
+ (( i < count ))

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
+ sed '/^[[:space:]]*$/d'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
 description Internet-bound IP NAT
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object host 172.16.0.5'
+ local verbose=true
+ [[ export == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ export == \d\r\y\-\r\u\n ]]
'
+ result=0
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ [[ -n {
+ debug=false
  "vendor": "cisco",
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
  "model": "ASA",
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
  "version": "9.14(3)",
+ [[ verbose =~ ^(export|r)$ ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ IFS==
}
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ read -r key value
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]

+ newline
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ dry_run=false
domain-name edge.dc.example.com
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list

+ (( i = 0 ))
+ local script_filename=fortinet-configs.awk
interface GigabitEthernet0/0
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ echo
+ [[ -z true ]]
 nameif outside
+ case "${target_file}" in
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
 description External Internet-facing Interface

object network NAT-Edge
+ cat -n reports/192.168.1.10/misc/fw3.cfg
 host 203.0.113.25
+ [[ verbose =~ ^(search|s)$ ]]
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ verbose == \h\e\l\p ]]

object-group network Panther-Edge
+ [[ verbose == \d\e\b\u\g ]]
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ verbose == \d\r\y\-\r\u\n ]]
 network-object host 172.16.0.5 ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias network-configs--helper=network_configs__helper
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ search_terms=()
+ [[ verbose =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
++ echo -e --verbose
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ local first_search_entry=192.168.1.10
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ grep -F 10.10.10.10
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ newline 2
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ] ]]
+ local count=2
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-configs--ips.list ]'
  "model": "ASA",
+ (( i < count ))
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ echo
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ (( i++ ))
 security-level 0
+ local count=1
+ (( i < count ))
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ ((  count == 0  ))

object network NAT-Edge
+ echo
 host 203.0.113.25
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
 network-object host 192.0.2.50
+ (( i++ ))
 network-object host 203.0.113.25
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ echo -en '{
+ (( i < count ))
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.14(3)",
+ local 'indent=            '
  "domain": "edge.dc.example.com",
+ [[ true == true ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ [[ true == true ]]
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ echo
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ echo
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ local awk_bin=/usr/bin/awk
+ newline
++ tr -d '\r'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ cat -n
++ grep -v '^\s*$'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ grep -v '^\s*$'
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ (( i++ ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ verbose =~ ^(export|r)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ verbose =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ message '                .cache/resources/misc/switch3.conf'
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ [[ verbose == \d\e\b\u\g ]]
+ echo
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ echo -e '                .cache/resources/misc/switch3.conf'
+ local verbose=true
+ (( i < count ))
+ newline
+ IFS=' 	
'
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ [[ -z '' ]]
                      in_json_header = 0;
+ local count=1
++ grep -v '^#'
                    }
+ (( i = 0 ))

                    # Skip blank lines
+ (( i < count ))
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ echo
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
++ grep -v '^#'

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ debug=false

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

+ [[ -z '' ]]
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
+ dry_run=false
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
+ [[ -z true ]]
                      blk = blk divisor " " $0;
                      next;
+ (( i++ ))
                    }

+ (( i < count ))
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ [[ -z '' ]]
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ export console_output=false
                      next;
+ console_output=false
                    }

                    # Accumulate middle lines
                    {
+ [[ -z true ]]
                      blk = blk divisor " " $0;
                    }

                    END {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console ]]
                      # No need for final print — all blocks end with end
                    }
+ [[ -z '' ]]
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ false == true ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ configs_objects
++ printf '%*s' 12 ''
+ sed '/^[[:space:]]*$/d'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ IFS=' 	
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ (( i++ ))
+ local 'indent=            '
+ [[ -z '' ]]
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ result=0
+ export console_output=false
+ console_output=false
+ exit 0
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ false == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zlu7E5hbYV ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zlu7E5hbYV
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list != *,* ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ mapfile -t search_terms
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ configs_objects
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo 10.10.10.10
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
++ alias network-extract--helper=network_extract__helper
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console ]]
+ newline 2
+ local first_search_entry=192.168.2.12
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ source ./scripts/configs-objects.shell
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ local first_search_entry=198.51.100.75
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
+ local last_search_entry=198.51.100.75
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
++ tr -d '\r'
+ grep -F 192.168.1.11
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ result=0
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ [[ 0 -ne 0 ]]
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local count=1
+ ((  count == 0  ))
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i < count ))
++ alias serialize-object=configs_objects
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
++ IFS=,
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ true == true ]]
++ echo 192.168.0.1
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ which awk
+ local count=1
++ tr -d '\r'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ echo
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -z fortinet ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local parent_dir=reports/192.168.1.10/misc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ conf == \c\o\n\f ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console ]]
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch1.conf.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local parent_dir=reports/192.168.0.100/cisco
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
++ grep -v '^#'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ basename reports/192.168.1.10/misc/fw3
+ result=0
+ local awk_bin=/usr/bin/awk
+ [[ 0 -ne 0 ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local verbose=true
+ [[ config =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ IFS=' 	
++ basename reports/192.168.0.100/cisco/campus-sw-access01
'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ debug=false
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ config == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ for xitem in "${@}"
+ dry_run=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console ]]
+ newline
+ IFS==
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ local count=1
++ dirname reports/192.168.1.10/misc/switch1.conf
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9hCe5bWGWy/network-extract--fw3.cfg.console
+ (( i < count ))
+ local first_search_entry=192.168.2.12
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ] ]]

object-group network Spider-Net
 description Web access switches
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-configs--ips.list ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "",
  "domain": "",
  "hostname": ""
+ ((  count == 0  ))
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'

object-group network Spider-Net
 description Web access switches
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ cat -n
 network-object 192.168.12.0 255.255.255.0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ local 'prompt_message=Enter configuration file to be parsed: '
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -z fortinet ]]
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ newline
  "version": "",
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
  "domain": "",
  "hostname": "fg-campus-core"
+ (( i++ ))
}

+ (( i < count ))
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ newline

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
+ local count=1
end

config firewall address
+ (( i = 0 ))
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ (( i < count ))
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local 'indent=            '
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ configs_objects
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ true == true ]]
+ local search_pattern
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ ((  count == 0  ))
+ (( i++ ))
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ newline
+ local count=1
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ output_dir=reports/192.168.1.10/misc
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ echo
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n {
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ [[ -z cisco ]]
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -en '{
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
end'
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat -n
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ alias parse-cisco=main
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
++ command -v -- ./scripts/network-extract.shell
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nWWnm96WMi ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nWWnm96WMi
+ [[ -z true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
++ echo reports/192.168.1.10/misc/fw3.cfg
+ [[ -z '' ]]
+ export console_output=false
+ local count=2
+ console_output=false
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ (( i < count ))
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ cut -d/ -f2
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
++ cut -d/ -f2
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ grep -F 172.16.0.5
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
+ newline 2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console ]]
+ search_pattern=192.168.1.10
+ search_pattern=192.168.0.100
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ output_dir=reports/198.51.100.75/fortinet
+ local count=2
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/192.168.2.12/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -d reports/192.168.2.12/misc ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ cfg == \c\f\g ]]
+ case "${target_file}" in
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--dmz-fw2-backup.cfg.console
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ export network_extract__console=console/network-extract.console
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'extracted_configuration={
+ local count=1
  "vendor": "fortinet",
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
  "model": "FortiGate-60F",
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ false == true ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ [[ true == true ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ result=0
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
  "domain": "",
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ result=0
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
  "hostname": "fg-branch-vpn-01"
+ (( i < count ))
+ exit 0
}
+ echo

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SqJwM6CzuB ]]

+ (( i++ ))
config firewall policy
 edit 13
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SqJwM6CzuB
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ configs_objects
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ return 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat -n
++ printf '%*s' 12 ''
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ newline
+ output_dir=reports/192.168.2.12/fortinet
+ local search_pattern
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A4NGdmmuha ]]
+ local SCRIPT_DIR=./scripts
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A4NGdmmuha
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ case "${target_file}" in
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T3bLJKZiYQ/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ extract =~ ^(search|s)$ ]]
                  BEGIN {
+ [[ extract == \h\e\l\p ]]
  "version": "v7.2.5.F",
+ [[ extract == \d\e\b\u\g ]]
                    in_json_header = 0;
  "domain": "",
                    blk = "";
                  }
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
                  /^[[:space:]]*$/ { next }
+ [[ extract == \d\r\y\-\r\u\n ]]
                  /^{$/ { in_json_header = 1; next }
+ [[ 7 -eq 0 ]]
                  /^}$/ {
+ newline
                    if (in_json_header == 1) {
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6xvzqwyacz/network-configs--ips.list =~ ^-*(h|help)$ ]]
                      in_json_header = 0;
                      next;
++ command -v -- ./scripts/network-extract.shell
                    }
                  }
                  (in_json_header == 1) { next }
+ local parent_dir=reports/192.168.100.100/fortinet
+ local count=1
                  /^[^[:space:]]/ {
+ (( i = 0 ))
+ local 'indent=            '
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
                    blk = $0;
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console --export --verbose
                    next;
+ echo
                  }
+ [[ config =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ [[ true == true ]]
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
                  }
                  END {
+ local target_config=.cache/resources/misc/fw3.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "hostname": "fg-branch-vpn-01"
                  }
+ [[ config =~ ^(console|o)$ ]]
}
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]

+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ oIFS=' 	
'
+ IFS==
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local first_search_entry=198.51.100.75
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ for xitem in "${@}"
+ local count=1
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ local last_search_entry=198.51.100.75
+ (( i = 0 ))
+ return 0
config firewall address
+ (( i < count ))
+ IFS==
+ newline
 edit "Public-Test"
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ echo
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ (( i = 0 ))
+ read -r key value
+ read -r key value
+ (( i < count ))
+ local count=1
  set subnet 203.0.113.25 255.255.255.255
+ echo
+ (( i = 0 ))
  set comment "Public NAT exposure for Red Skull trap"
+ [[ config =~ ^(search|s)$ ]]
 next
+ (( i < count ))
+ (( i++ ))
++ IFS=,
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
+ (( i < count ))
end'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
++ echo 192.168.1.10
+ (( i < count ))
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ result=0
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ [[ -n {
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console ]]
  "hostname": "fg-branch-vpn-01"
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
}

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console ]]

config firewall address
+ local count=1
 edit "Public-Test"
+ case "${target_file}" in
  set subnet 203.0.113.25 255.255.255.255
+ (( i = 0 ))
  set comment "Public NAT exposure for Red Skull trap"
 next
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ IFS==
end ]]
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ declare -a execute__netwowrk_extract
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ] ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ basename reports/192.168.100.100/fortinet/fg-campus-core
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--branch-isr-02.cfg.console
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E66e8HzWTU ]]
+ local SCRIPT_DIR=./scripts
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E66e8HzWTU
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
+ [[ false == true ]]
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local search_pattern
+ local script_filename=cisco-configs.awk
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
++ IFS=,
++ echo 198.51.100.75
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e92ZNB1fHO/network-extract--perimeter-fw1.cfg.console
+ cat -n
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ declare -a execute__netwowrk_extract
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ [[ platform =~ ^(config|c)$ ]]
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
+ local parent_dir=reports/10.0.0.1/misc
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ cut -d/ -f2
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ output_dir=reports/198.51.100.75/cisco
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ result=0
+ exit 0
+ newline 2
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SaY4O3x68C ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SaY4O3x68C
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ local count=1
+ newline 2
+ configs_objects
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ printf '%*s' 12 ''
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
++ basename reports/10.0.0.1/misc/switch3
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local awk_bin=/usr/bin/awk
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ grep -F 192.168.0.100
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ print '{
  "vendor": "fortinet",
+ [[ extract == \h\e\l\p ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ extract == \d\e\b\u\g ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ extract == \d\r\y\-\r\u\n ]]
}

#hostname="fg-branch-vpn-01"
+ [[ extract == \v\e\r\b\o\s\e ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ for xitem in "${@}"
+ result=0
+ IFS==

+ [[ true == true ]]
config firewall address
 edit "Guardians-Relay"
+ exit 0
+ read -r key value
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ search_pattern=192.168.100.100
end'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BTzJi9R2oI ]]
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BTzJi9R2oI
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ IFS=,
++ echo 192.168.2.12
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ search_pattern=203.0.113.25
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3e5DvPO7Cj/network-extract--fw3.cfg.console
+ newline
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ false == true ]]
+ [[ true == true ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ which awk
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ output_dir=reports/198.51.100.75/misc
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ ! -d reports/198.51.100.75/misc ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo
+ configs_objects
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local count=1
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ (( i = 0 ))
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local search_pattern
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ grep -F 192.168.1.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local parent_dir=reports/10.10.10.10/fortinet
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ grep -F 192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ result=0
+ exit 0
+ local parent_dir=reports/203.0.113.25/fortinet
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OEHJPvFIR6 ]]
+ print '{
+ [[ platform =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ platform =~ ^(logger|l)$ ]]

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ platform =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ platform == \h\e\l\p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OEHJPvFIR6
+ [[ platform == \d\e\b\u\g ]]
  "hostname": ""
+ result=0
}

+ exit 0
+ [[ platform == \d\r\y\-\r\u\n ]]
interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MYjffvNRkD ]]
+ echo -en '{
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MYjffvNRkD
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'indent=            '
+ for xitem in "${@}"
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ echo
+ (( i++ ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ 0 -ne 0 ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ newline
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local SCRIPT_DIR=./scripts
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
++ IFS=,
+ sed '1{/^[[:space:]]*$/d;}'
++ echo 192.168.2.12
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ sed '/^[[:space:]]*$/d'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ result=0
+ [[ -n {
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ export =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ which awk
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo reports/10.0.0.1/misc/switch3.conf
+ IFS==
+ read -r key value
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
++ which awk
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline 2
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ local count=2
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ echo
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ false == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ newline
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ local parent_dir=reports/192.168.0.1/fortinet
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat -n
++ IFS=,
++ echo 198.51.100.75
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ result=0
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ logger =~ ^(config|c)$ ]]
+ newline 2
+ [[ -n {
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
  "domain": "",
+ [[ logger =~ ^(console|o)$ ]]
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
+ cat -n
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=2
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ [[ true == true ]]
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/misc/.objects
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
++ cut -d/ -f2
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ cut -d/ -f2
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ newline
  set comment "Vision’s quantum channel"
+ [[ platform =~ ^(config|c)$ ]]
 next
+ [[ verbose =~ ^(config|c)$ ]]
end'
+ local count=1
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
++ which awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ local target_platform=cisco
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ IFS=,
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ search_terms=()
+ declare -a search_terms
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
++ echo 198.51.100.75
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list != *,* ]]
+ configs_objects
+ mapfile -t search_terms
+ grep -F 203.0.113.25
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ printf '%*s' 12 ''
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ local 'indent=            '
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --export
+ [[ true == true ]]
+ return 0
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ return 0
+ [[ true == true ]]
+ search_pattern=203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console ]]
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console ]]
+ cat -n
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.1.10/misc/switch1.conf
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ search_pattern=10.10.10.10
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ mkdir -p reports/10.10.10.10/fortinet/.objects
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
++ tr -d '\r'
+ local parent_dir=reports/10.10.10.10/fortinet
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ newline 2
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
+ local count=2
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ return 0
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch3.conf
++ grep -v '^#'
++ basename reports/10.10.10.10/fortinet/fg-testing-config
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ local parent_dir=reports/192.168.1.10/misc
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ export =~ ^(console|o)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ export =~ ^(export|r)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ local export_objects=true
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console ]]
+ [[ export =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ export =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Otv6YZ43lD/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ export == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ [[ export == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ result=0
+ for xitem in "${@}"
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.U1U5t9rGpX/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/192.168.1.10/misc/switch1
+ case "${target_platform}" in
+ grep -F 10.0.0.1
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ [[ logger =~ ^(extract|x)$ ]]
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ [[ logger =~ ^(logger|l)$ ]]
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ [[ logger =~ ^(platform|p)$ ]]

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

+ [[ logger =~ ^(search|s)$ ]]
                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ [[ logger == \h\e\l\p ]]
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ logger == \d\e\b\u\g ]]
                      blk = "";
                      next;
+ [[ logger == \d\r\y\-\r\u\n ]]
                    }

+ [[ logger == \v\e\r\b\o\s\e ]]
                    # Accumulate middle lines
                    {
+ for xitem in "${@}"
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
+ IFS==
                    }
+ read -r key value
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ search_pattern=192.168.0.1
+ mkdir -p reports/192.168.0.1/fortinet/.objects
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ printf '%*s' 12 ''
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local search_pattern
+ local parent_dir=reports/198.51.100.75/fortinet
+ local 'indent=            '
+ [[ true == true ]]
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ newline
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local count=1
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ echo
+ local first_search_entry=203.0.113.25
+ case "${target_file}" in
+ (( i++ ))
+ local last_search_entry=203.0.113.25
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ grep -F 203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
++ echo -e --verbose
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ ((  count == 0  ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=1
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat -n
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
++ sed -e '1s|^\(-\)\{1,\}||'
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ (( i < count ))
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local search_pattern
+ [[ -z cisco ]]
+ [[ false == true ]]
++ echo -e --export
+ [[ true == true ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ result=0
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ exit 0
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYc7fKzl8G ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYc7fKzl8G
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ newline
+ configs_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
 network-object host 192.168.2.12'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
+ result=0
+ exit 0
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.COOJeama0Z ]]
+ grep -F 10.10.10.10
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.COOJeama0Z
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--fw3.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ local 'extracted_configuration={
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
  "vendor": "cisco",
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
  "model": "",
  "version": "",
  "domain": "",
+ newline
  "hostname": ""
+ local search_pattern
}

+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
object-group network Krypton-Cloud
+ local count=1
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ (( i = 0 ))

object network External-Failover
+ (( i < count ))
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
 host 198.51.100.75
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
 description Secondary outbound route for edge'
+ newline
+ local count=1
+ newline
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
+ local count=1
+ echo
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i = 0 ))
+ (( i++ ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
+ (( i < count ))
}

+ echo
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ (( i++ ))

object network External-Failover
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ verbose =~ ^(console|o)$ ]]
  "hostname": ""
+ return 0
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 10.0.2.3
++ echo reports/192.168.1.10/misc/switch1.conf
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ verbose == \h\e\l\p ]]
  "model": "",
  "version": "",
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "",
  "hostname": ""
+ [[ verbose == \d\r\y\-\r\u\n ]]
}

object-group network Metropolis-Internal
+ [[ verbose == \v\e\r\b\o\s\e ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local verbose=true
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console ]]
+ debug=false
+ echo -en '{
+ [[ -z '' ]]
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ dry_run=false
  "model": "",
  "version": "",
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console ]]
  "hostname": ""
+ [[ -z true ]]
}

object-group network Metropolis-Internal
+ case "${target_file}" in
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ -z '' ]]
 network-object host 192.168.2.12'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]]
+ sed '/^[[:space:]]*$/d'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
++ cut -d/ -f2
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export =~ ^(config|c)$ ]]
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ export =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ grep -F 192.168.0.1
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
  "domain": "",
+ [[ export == \h\e\l\p ]]
+ case "${target_file}" in
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ cat reports/10.0.0.1/misc/.objects/switch3.list
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
+ [[ export == \d\e\b\u\g ]]
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
+ IFS==
 description Secondary outbound route for edge ]]
+ read -r key value
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local parent_dir=reports/192.168.2.12/fortinet
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '/^[[:space:]]*$/d'
+ cat -n
++ cut -d/ -f2
++ tr -d '\r'
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ grep -v '^\s*$'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ result=0
+ newline 2
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
++ echo -e --verbose
+ cat -n
++ grep -v '^#'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local count=2
+ result=0
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ exit 0
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xp1RPPKsFl ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xp1RPPKsFl
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ newline 2
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ return 0
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local count=2
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ true == true ]]
+ echo
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo
+ (( i++ ))
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ (( i++ ))
+ echo
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ search_pattern=198.51.100.75
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ print '{
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ (( i < count ))
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ echo

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ (( i++ ))
 description Outbound Internet NAT interface'
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ cat -n
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ output_dir=reports/203.0.113.25/misc
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/203.0.113.25/misc ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ case "${target_platform}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_platform}" in
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ verbose =~ ^(extract|x)$ ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ newline
                      next;
                    }
                    BEGIN {
+ local count=1
                      blk = "";
+ (( i = 0 ))
                  }
+ (( i < count ))
                      in_json_header = 0;
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
                    }
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
+ (( i++ ))
                    # Skip blank lines
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
                    /^[[:space:]]*$/ { next }
                    blk = $0;
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
                    next;
+ [[ verbose =~ ^(search|s)$ ]]
                  }

                  {
                    # Skip JSON preamble
                    blk = blk divisor " " $0;
                    /^{$/            { in_json_header = 1; next }
                  }
+ [[ verbose == \h\e\l\p ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ verbose == \d\e\b\u\g ]]
                  END {

+ [[ verbose == \d\r\y\-\r\u\n ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                  }
                    # Start of a new block
                ' reports/192.168.1.10/misc/switch1.conf
                    /^config / {
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
                      if (blk != "") print blk;
+ [[ verbose == \v\e\r\b\o\s\e ]]
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ result=0
+ [[ -z '' ]]
+ exit 0
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b959NonUYO ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b959NonUYO
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ grep -F 192.168.1.10
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ configs_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ grep -F 10.10.10.10
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ newline
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ configs_objects
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_platform}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ return 0
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }
+ sed '/^[[:space:]]*$/d'

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ [[ true == true ]]
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/198.51.100.75/misc/fw1.cfg
++ tr -d '\r'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1JtZbgkybI/network-extract--switch3.conf.console
+ grep -F 198.51.100.75
++ grep -v '^\s*$'
+ sed '/^[[:space:]]*$/d'
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ grep -v '^#'
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ exit 0
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d08EYpAiax ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.d08EYpAiax
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local parent_dir=reports/198.51.100.75/misc
+ local parent_dir=reports/192.168.2.12/misc
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ newline
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ configs_objects
+ [[ true == true ]]
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.W8slA7Pyh9/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-campus-core.cfg.console
++ which awk
++ basename reports/198.51.100.75/misc/fw1
++ basename reports/192.168.2.12/misc/fw1
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uPSZfaIJm9 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uPSZfaIJm9
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-configs--ips.list ]'
+ cat -n
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ local search_pattern
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
+ cat -n
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local search_pattern
+ output_dir=reports/203.0.113.25/misc
+ newline
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/198.51.100.75/cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OeOBt3b5YH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OeOBt3b5YH
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ grep -F 192.168.2.12
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console ]]
+ exit 0
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mmJA3c5Fvw ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mmJA3c5Fvw
++ IFS=,
++ echo 203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
++ echo reports/198.51.100.75/misc/fw1.cfg
++ echo reports/192.168.2.12/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ cut -d/ -f2
+ [[ true == true ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FZmw10EymJ/network-extract--switch1.conf.console
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fg-testing-config.cfg.console
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/misc/.objects
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fg-branch-vpn-01.cfg.console
+ cat -n
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
++ which awk
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.soeu3HRHPC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.soeu3HRHPC
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yKs5mriw35 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yKs5mriw35
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ case "${target_platform}" in
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7Yx2FJcL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nv7Yx2FJcL
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ grep -F 192.168.2.12
+ grep -F 198.51.100.75
+ sed '/^[[:space:]]*$/d'
++ IFS=,
++ echo 203.0.113.25
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
++ which awk
 network-object host 198.51.100.75
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ [[ true == true ]]
 network-object host 203.0.113.25
+ local script_filename=cisco-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fg-campus-core.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local count=1
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ print_file reports/192.168.2.12/misc/.objects/fw1.list

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ grep -F 198.51.100.75
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ cat -n
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '/^[[:space:]]*$/d'
+ cat -n
++ printf '%*s' 12 ''
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMGtx4rd2l ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMGtx4rd2l
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ IFS=,
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo 10.10.10.10
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ (( i < count ))
+ result=0
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ case "${target_file}" in
+ (( i < count ))
+ newline
+ echo
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ local count=1
+ (( i++ ))
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo
+ return 0
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
++ which awk
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ cat -n
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console ]]
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ (( i < count ))
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5FVzOPgkv1/network-extract--fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--fw1.cfg.console
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ configs_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ local 'indent=            '
+ [[ true == true ]]
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4EVtSHSSfP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4EVtSHSSfP
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ElIiaNvuoP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ElIiaNvuoP
+ local parent_dir=reports/203.0.113.25/misc
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zXrewOln0/network-extract--dmz-fw2-backup.cfg.console
++ basename reports/203.0.113.25/misc/fw1
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ local search_pattern

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8H1PfCTt3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8H1PfCTt3
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ echo reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ configs_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline 2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ newline
+ case "${target_platform}" in
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ false == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ grep -F 203.0.113.25
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ configs_objects
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ local parent_dir=reports/10.10.10.10/misc
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/10.10.10.10/misc/fw3
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ echo reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ case "${target_platform}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw1.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ case "${target_platform}" in
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsCGflPLE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsCGflPLE
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ grep -F 10.10.10.10
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ cat -n
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Q7cq4KDewF/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QIhuZRDe6o ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QIhuZRDe6o
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6XVZqWYAcZ/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6RI4yQDzTW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6RI4yQDzTW
